Schillix-ON gate README - January 8, 2011.

This is the Schillix-ON gate.  It contains the OSS source code for the
Operating-system and Networking base for OpenSolaris and tries to be a
careful fork based on the last contribution state from Sun/Oracle from
August 18th 2010:

usr/src		This is a clone (with changes) to the Oracle ONNV gate
		originally found at:

			ssh://anon@hg.opensolaris.org/hg/onnv/onnv-gate

		Our goal is to avoid making changes that could needlessly
		break compatibility to SunOS, POSIX or that could make it
		hard to sync the code base with new code from Oracle,
		assuming that Oracle will continue to contribute code in
		the future.

exception_lists	A directory containing lists of files that need special
		treatment. We should aspire to empty this directory if
		possible.

Schillix-ON is self hosting. You may compile it on Schillix-0.7.2 or later
and on other compatible Solaris based platforms (you need onnv_147 or later)
after following the instrictions for setting up a compile machine. See:
http://schillix.berlios.de/pmwiki.php/Main/HowtoCompile

The following non-OSS components are currently needed for compiling:

sunstudio-12	The Sun Studio Compiler used for compiling
		File: sunstudio12-patched-ii-2009Sep-sol-x86.tar.bz2

sunstudio-12.1	Used for calling "lint" and "as" only
		File: sunstudio12u1-patched-ii-2010Feb-sol-x86.tar.gz

jdk6-jsp-136632	The Java subsystem
		File: jdk-6u21-solaris-i586.tar.Z

Everything else needed is OSS.


Integration Rules:

	Anybody is invited to collaborate. We like to be an open community.
	There is no company interest behind the Schillix-ON fork on the
	Sun/Oracle ONNV gate and we will stay independent from company
	interests.

	Changes should be discussed on the mailing list (below) before coding
	starts. This is in order to avoid that more than one group is working
	on a single problem and in order to agree on the way of implementation.
	We like to establish an Architecture Review Committee (ARC) as soon as
	possible.

	All changes must have been reviewed, and approved by one of the
	gatekeepers (below).  A code review may be performed by someone other
	than the gatekeeper. For complex changes more than one codereviewer is
	required. The code reviewer should be able to understand both, the code
	and the results of the changes. The final integration must be approved
	by one of the gatekeepers.  The gatekeepers act as a Change Review
	Team (CRT) advocate and give the permission for a putback to the main
	Mercurial repository. The gatekeeper will want to see your webrev
	and "hg outgoing -v" before.

	All changes must adhere to typical ON style and quality rules.
	For example, pass full cstyle, applicable lint rules, etc. There are a
	few exceptions only on cstyle: Kerberos and ksh93 are integrated from
	foreign projects and follow different rules. The code added from the
	Schily consolidation allows lines wider than 80 chars, but there is
	a cstyle option for this indentation style variant. Code written for
	this OpenSolaris project must strictly follow style and quality rules.

        All commits must include either a CDDL license or alternatively a
	BSD/MIT license with additional patent grant, unless approved otherwise
	by the gatekeeper.  CDDL licensed changes should be backed by a Sun 
	Contributor Agreement, so that the changes can be contributed to the
	upstream OpenSolaris consolidation.

	A code reviewer may be any person that understands the related code
	parts.

	A gatekeeper may be any person that understands the related code parts
	and that had a sufficient amount of previous putbacks to this project
	with an acceptable success/failure rate.


	Hg commits should have comments of the following form:

	123 This is a sample bug report, add synopsis
	456 If you have a second bug, add synopsis
	Short description of the changes
	You may add more lines
	Reviewed by: code-reviewer@somewhere.org
	Approved by: gatekeeper@were.ever

	Note that the source browser at: http://hg.berlios.de/repos/schillix-on
	only displays the first line from the changelog for each revision.

Branches:

	This is an OpenSource project, so everybody can of course create
	private branches. We however like to prefer collaboration before
	forking. If you have an idea for an enhancement, please first try
	to talk with us.

Other ONNV forks:

	We like to collaborate with other ONNV forks (like e.g. Illumos),
	regardless on whether they have different goals or not as long as
	we can identify common interests.

Gatekeeper:	J. Schilling <joerg@schily.net> until we set up a committee
IRC channel:	#schillix on irc.freenode.net
Mailing list:	schillix-on-devel@lists.berlios.de
Project home:	http://developer.berlios.de/projects/schillix-on/
Mercurial:	http://hg.berlios.de/repos/schillix-on
Register user:	http://developer.berlios.de/account/register.php
