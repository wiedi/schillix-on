# This file and its contents are supplied under the terms of the
# Common Development and Distribution License ("CDDL"), version 1.0.
# See: http://www.opensource.org/licenses/cddl1.txt

# Copyright 2005 Sun Microsystems, Inc.
# Copyright 2011 Jörg Schilling.
#
NAME="i.none"
FILELIST=${PKGSAV:?undefined}/filelist
BD=${BASEDIR:-/}
IR=${PKG_INSTALL_ROOT:-/}

is_an_archive=0
is_a_filelist=0
list_empty=1
Rm_alt_sav=0

CPIO_xpath=/usr/bin
CPIO_cmd=$CPIO_xpath/cpio
XZ_xpath=/usr/bin
XZ_cmd=$XZ_xpath/xz
RM_xpath=/usr/bin
RM_cmd=$RM_xpath/rm
Tmp_spath=/usr/tmp$$dir

eval_pkg() {
	read path
	if [ ${path:-NULL} != NULL ]; then # package src directory
		PKGSRC=${path:?undefined}
		PA=$PKGSRC/archive

		if [ -r $PA/reloc.xz ]; then
			is_an_archive=1
			Arch=$PA/reloc.xz
		fi
		if [ -r $PA/root.xz ]; then
			is_an_archive=1
			Arch_r=$PA/root.xz
		fi
	else
		exit 0	# empty pipe, we're done
	fi
}

xtr_ar()
{
	Ar=$1
	shift
	if [ -z "$Ar" -o ! -f "$Ar" ]; then
		return 0
	fi
	cd $1 || exit 1
	shift
	$XZ_cmd -d < "$Ar" 2> /dev/null | $CPIO_cmd -C 512 -idukm $@
	status=$?
	if [ "$status" -ne 0 ]; then
		echo "Extracting $Ar failed with error $status"
		exit 1
	fi
}

do_rm()
{
	for i in $@; do
		if [ -f "$i" ]; then
			$RM_cmd -f "$i"
		fi
	done
}

# main

eval_pkg

if [ $is_an_archive -eq 0 ]; then
	echo "ERROR : $NAME Cannot find archived files in $PA."
	exit 1
fi

if [ ! -d "$PKGSAV" ]; then
	echo "WARNING : $NAME Cannot find save directory $PKGSAV."
	PKGSAV=$Tmp_spath/$PKG.sav

	if [ ! -d "$PKGSAV" ]; then
		/usr/bin/mkdir $PKGSAV
	fi

	if [ $? -eq 0 ]; then
		echo "  Using alternate save directory" $PKGSAV
		FILELIST=$PKGSAV/filelist
		Rm_alt_sav=1
	else
		echo "ERROR : Cannot create alternate save directory" $PKGSAV
		exit 1
	fi
fi

if [ ${PKG_INIT_INSTALL:-null} = null ]; then
	is_a_filelist=1
	do_rm ${FILELIST} ${FILELIST}_r ${FILELIST}_o
	(while	read path
	do
		echo $path
		list_empty=0
	done) > ${FILELIST}_o
	sed -n '/^\//s,^/,,p' < ${FILELIST}_o > ${FILELIST}_r
	sed -n '/^[^/]/p'     < ${FILELIST}_o > ${FILELIST}
fi

if [ -x $XZ_cmd ]; then
	:
elif [ -x /opt/schily/bin/xz ]; then
	XZ_cmd=/opt/schily/bin/xz
fi
if [ ! -x "$XZ_cmd" ]; then
	echo "Cannot exec $XZ_cmd"
	exit 1
fi
if [ $is_a_filelist -eq 1 ]; then
	xtr_ar "$Arch_r" $IR -E ${FILELIST}_r || exit 1
	xtr_ar "$Arch"   $BD -E ${FILELIST}   || exit 1
else
	xtr_ar "$Arch_r" $IR || exit 1
	xtr_ar "$Arch"   $BD || exit 1
fi

do_rm ${FILELIST} ${FILELIST}_r ${FILELIST}_o

if [ $Rm_alt_sav -eq 1 ]; then
	$RM_cmd -r $PKGSAV
fi

exit 0
