#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#
#pragma ident	"%Z%%M%	%I%	%E% SMI"
#
# Copyright 2006 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
#	Global definitions for sun4u starcat implementation specific modules.
#

#
#	Define directories.
#
ROOT_STARCAT_DIR	= $(ROOT_PLAT_DIR)/SUNW,Sun-Fire-15000
ROOT_STARCAT_MOD_DIR	= $(ROOT_STARCAT_DIR)/kernel
ROOT_STARCAT_KERN_DIR_32 = $(ROOT_STARCAT_MOD_DIR)
ROOT_STARCAT_KERN_DIR_64 = $(ROOT_STARCAT_MOD_DIR)/$(SUBDIR64)
ROOT_STARCAT_MISC_DIR_32 = $(ROOT_STARCAT_MOD_DIR)/misc
ROOT_STARCAT_MISC_DIR_64 = $(ROOT_STARCAT_MOD_DIR)/misc/$(SUBDIR64)
ROOT_STARCAT_DRV_DIR_32 = $(ROOT_STARCAT_MOD_DIR)/drv
ROOT_STARCAT_DRV_DIR_64 = $(ROOT_STARCAT_MOD_DIR)/drv/$(SUBDIR64)
ROOT_STARCAT_CPU_DIR_32 = $(ROOT_STARCAT_MOD_DIR)/cpu
ROOT_STARCAT_CPU_DIR_64 = $(ROOT_STARCAT_MOD_DIR)/cpu/$(SUBDIR64)
ROOT_STARCAT_CRYPTO_DIR_32 = $(ROOT_STARCAT_MOD_DIR)/crypto
ROOT_STARCAT_CRYPTO_DIR_64 = $(ROOT_STARCAT_MOD_DIR)/crypto/$(SUBDIR64)

ROOT_STARCAT_KERN_DIR	= $(ROOT_STARCAT_KERN_DIR_$(CLASS))
ROOT_STARCAT_MISC_DIR	= $(ROOT_STARCAT_MISC_DIR_$(CLASS))
ROOT_STARCAT_DRV_DIR	= $(ROOT_STARCAT_DRV_DIR_$(CLASS))
ROOT_STARCAT_CPU_DIR	= $(ROOT_STARCAT_CPU_DIR_$(CLASS))
ROOT_STARCAT_CRYPTO_DIR	= $(ROOT_STARCAT_CRYPTO_DIR_$(CLASS))

ROOT_PLAT_MOD_DIRS	+= $(ROOT_STARCAT_MOD_DIR)
ROOT_PLAT_MISC_DIRS_32	+= $(ROOT_STARCAT_MISC_DIR_32)

USR_STARCAT_DIR	= $(USR_PLAT_DIR)/SUNW,Sun-Fire-15000
USR_STARCAT_LIB_DIR	= $(USR_STARCAT_DIR)/lib
USR_STARCAT_SBIN_DIR	= $(USR_STARCAT_DIR)/sbin
USR_STARCAT_INC_DIR	= $(USR_STARCAT_DIR)/include
USR_STARCAT_ISYS_DIR	= $(USR_STARCAT_INC_DIR)/sys

STARCAT_LINT_LIB_DIR	= $(UTSBASE)/$(PLATFORM)/starcat/lint-libs/$(OBJS_DIR)

#
#	Include the makefiles which define build rule templates, the
#	collection of files per module, and a few specific flags. Note
#	that order is significant, just as with an include path. The
#	first build rule template which matches the files name will be
#	used. By including these in order from most machine dependent
#	to most machine independent, we allow a machine dependent file
#	to be used in preference over a machine independent version
#	(Such as a machine specific optimization, which preserves the
#	interfaces.)
#
include $(UTSBASE)/sun4u/ngdr/Makefile.files
include $(UTSTREE)/sun4u/starcat/Makefile.files

#
#	Include common rules.
#
include $(UTSTREE)/sun4u/Makefile.sun4u

#
#	Define modules (must come after Makefile.sun4u, for CLOSED_BUILD).
#
STARCAT_KMODS	+= cvcredir
STARCAT_KMODS	+= dr

$(CLOSED_BUILD)CLOSED_STARCAT_KMODS	= platmod
$(CLOSED_BUILD)CLOSED_STARCAT_KMODS	+= axq
$(CLOSED_BUILD)CLOSED_STARCAT_KMODS	+= cvc
$(CLOSED_BUILD)CLOSED_STARCAT_KMODS	+= dman
$(CLOSED_BUILD)CLOSED_STARCAT_KMODS	+= drmach
$(CLOSED_BUILD)CLOSED_STARCAT_KMODS	+= fcgp2
$(CLOSED_BUILD)CLOSED_STARCAT_KMODS	+= gptwo_pci
$(CLOSED_BUILD)CLOSED_STARCAT_KMODS	+= gptwo_wci
$(CLOSED_BUILD)CLOSED_STARCAT_KMODS	+= iosram
$(CLOSED_BUILD)CLOSED_STARCAT_KMODS	+= mboxsc
$(CLOSED_BUILD)CLOSED_STARCAT_KMODS	+= sc_gptwocfg
$(CLOSED_BUILD)CLOSED_STARCAT_KMODS	+= schpc
$(CLOSED_BUILD)CLOSED_STARCAT_KMODS	+= sckmdrv
$(CLOSED_BUILD)CLOSED_STARCAT_KMODS	+= scosmb
$(CLOSED_BUILD)CLOSED_STARCAT_KMODS	+= wrsmplat

#
#	Define CPU modules.
#
STARCAT_CPU_KMODS	+= cheetah cheetahplus

#
#	Links to UltraSparc III crypto modules
#
STARCAT_CRYPTO_LINKS	= aes

#
#	Everybody needs to know how to build modstubs.o and to locate unix.o
#
UNIX_DIR	= $(UTSBASE)/$(PLATFORM)/starcat/unix
MODSTUBS_DIR	= $(UNIX_DIR)
DSF_DIR		= $(UTSBASE)/$(PLATFORM)/starcat/genassym
LINTS_DIR	= $(OBJS_DIR)
LINT_LIB_DIR	= $(UTSBASE)/$(PLATFORM)/starcat/lint-libs/$(OBJS_DIR)

UNIX_O		= $(UNIX_DIR)/$(OBJS_DIR)/unix.o

LINT_LIB	= $(LINT_LIB_DIR)/llib-lunix.ln

#
#	Define the actual specific platforms
#
MACHINE_DEFS	= -D$(PLATFORM) -D_MACHDEP -DSFMMU -DMP -DMIXEDCPU_DR_SUPPORTED
MACHINE_DEFS	+= -D_CPU_SIGNATURE

#
#	Define platform specific value
#
MACHINE_DEFS	+= -DNCPU=558
MACHINE_DEFS	+= -DMAX_CPU_CHIPID=554
MACHINE_DEFS	+= -DMAX_UPA=1024
MACHINE_DEFS	+= -DIGN_SIZE=10
MACHINE_DEFS	+= -DMAX_MEM_NODES=18

#
#	Define for inline pre-processing since
#	cpp not smart about v9 yet.
#	It's not smart about __sparc either since it only predefines sparc.
CPP_DEFS_32	= -D__sparc
CPP_DEFS_64	= -D__sparc -D__sparcv9
CPP_DEFS	= $(CPP_DEFS_$(CLASS))
