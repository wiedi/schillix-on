'\" te
.\" Copyright (C) 2003, Sun Microsystems, Inc. All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH gss_wrap_size_limit 3GSS "15 Jan 2003" "SunOS 5.11" "Generic Security Services API Library Functions"
.SH NAME
gss_wrap_size_limit \- allow application to determine maximum message size
with resulting output token of a specified maximum size
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lgss\fR  [ \fIlibrary\fR.\|.\|. ]
#include <gssapi/gssapi.h>

\fBOM_uint32\fR \fBgss_process_context_token\fR(\fBOM_uint32 *\fIminor_status\fR,
     \fBconst gss_ctx_id_t\fR \fIcontext_handle\fR, \fBint\fR  \fIconf_req_flag\fR,
     \fBgss_qop_t\fR \fIqop_req\fR, \fBOM_uint32\fR \fIreq_output_size\fR,
     \fBOM_uint32 *\fImax_input_size\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B gss_wrap_size_limit()
function allows an application to determine
the maximum message size that, if presented to
.B gss_wrap()
with the
same
.I conf_req_flag
and
.I qop_req
parameters, results in an output
token containing no more than
.I req_output_size
bytes. This call is
intended for use by applications that communicate over protocols that impose
a maximum message size. It enables the application to fragment messages
prior to applying protection. The
.B GSS-API
detects invalid
.BR QOP
values when
.B gss_wrap_size_limit()
is called. This routine guarantees
only a maximum message size, not the availability of specific \fBQOP\fR
values for message protection.
.sp
.LP
Successful completion of
.B gss_wrap_size_limit()
does not guarantee
that
.B gss_wrap()
will be able to protect a message of length
.I max_input_size
bytes, since this ability might depend on the
availability of system resources at the time that
.B gss_wrap()
is
called.
.SH PARAMETERS
.sp
.LP
The parameter descriptions for
.B gss_wrap_size_limit()
are as
follows:
.sp
.ne 2
.mk
.na
.I minor_status
.ad
.RS 19n
.rt
A mechanism-specific status code.
.RE

.sp
.ne 2
.mk
.na
.I context_handle
.ad
.RS 19n
.rt
A handle that refers to the security over which the messages will be
sent.
.RE

.sp
.ne 2
.mk
.na
.I conf_req_flag
.ad
.RS 19n
.rt
Indicates whether
.B gss_wrap()
will be asked to apply confidential
protection in addition to integrity protection. See \fBgss_wrap\fR(3GSS) for
more details.
.RE

.sp
.ne 2
.mk
.na
.I qop_req
.ad
.RS 19n
.rt
Indicates the level of protection that
.B gss_wrap()
will be asked to
provide. See \fBgss_wrap\fR(3GSS) for more details.
.RE

.sp
.ne 2
.mk
.na
.I req_output_size
.ad
.RS 19n
.rt
The desired maximum size for tokens emitted by
.BR gss_wrap() .
.RE

.sp
.ne 2
.mk
.na
.I max_input_size
.ad
.RS 19n
.rt
The maximum input message size that can be presented to
.B gss_wrap()
to
guarantee that the emitted token will be no larger than
.I req_output_size
bytes.
.RE

.SH ERRORS
.sp
.LP
.B gss_wrap_size_limit()
returns one of the following status codes:
.sp
.ne 2
.mk
.na
.B GSS_S_COMPLETE
.ad
.RS 25n
.rt
Successful completion.
.RE

.sp
.ne 2
.mk
.na
.B GSS_S_NO_CONTEXT
.ad
.RS 25n
.rt
The referenced context could not be accessed.
.RE

.sp
.ne 2
.mk
.na
.B GSS_S_CONTEXT_EXPIRED
.ad
.RS 25n
.rt
The context has expired.
.RE

.sp
.ne 2
.mk
.na
.B GSS_S_BAD_QOP
.ad
.RS 25n
.rt
The specified
.B QOP
is not supported by the mechanism.
.RE

.sp
.ne 2
.mk
.na
.B GSS_S_FAILURE
.ad
.RS 25n
.rt
The underlying mechanism detected an error for which no specific
.BR GSS
status code is defined.  The mechanism-specific status code reported by
means of the
.I minor_status
parameter details the error condition.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWgss (32-bit)
_
SUNWgssx (64-bit)
_
MT LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR gss_wrap (3GSS),
.BR attributes (5)
.sp
.LP
.I Solaris Security for Developers Guide
