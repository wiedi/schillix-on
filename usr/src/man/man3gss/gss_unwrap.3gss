'\" te
.\" Copyright (C) 2003, Sun Microsystems, Inc. All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH gss_unwrap 3GSS "15 Jan 2003" "SunOS 5.11" "Generic Security Services API Library Functions"
.SH NAME
gss_unwrap \- verify a message with attached cryptographic message
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lgss\fR  [ \fIlibrary\fR.\|.\|. ]
#include <gssapi/gssapi.h>

\fBOM_uint32\fR \fBgss_unwrap\fR(\fBOM_uint32 *\fIminor_status\fR,
     \fBconst gss_ctx_id_t\fR \fIcontext_handle\fR,
     \fBconst gss_buffer_t\fR \fIinput_message_buffer\fR,
     \fBgss_buffer_t\fR \fIoutput_message_buffer\fR, \fBint *\fIconf_state\fR,
     \fBgss_qop_t *\fIqop_state\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B gss_unwrap()
function converts a message previously protected by
.BR gss_wrap (3GSS)
back to a usable form, verifying the embedded
.BR MIC .
The
.I conf_state
parameter indicates whether the message was
encrypted; the
.I qop_state
parameter indicates the strength of
protection that was used to provide the confidentiality and integrity
services.
.sp
.LP
Since some application-level protocols may wish to use tokens emitted by
.BR gss_wrap (3GSS)
to provide secure framing, the
.B GSS-API
supports
the wrapping and unwrapping of zero-length messages.
.SH PARAMETERS
.sp
.LP
The parameter descriptions for
.B gss_unwrap()
follow:
.sp
.ne 2
.mk
.na
.I minor_status
.ad
.RS 25n
.rt
The status code returned by the underlying mechanism.
.RE

.sp
.ne 2
.mk
.na
.I context_handle
.ad
.RS 25n
.rt
Identifies the context on which the message arrived.
.RE

.sp
.ne 2
.mk
.na
.I input_message_buffer
.ad
.RS 25n
.rt
The message to be protected.
.RE

.sp
.ne 2
.mk
.na
.I output_message_buffer
.ad
.RS 25n
.rt
The buffer to receive the unwrapped message. Storage associated with this
buffer must be freed by the application after use with a call to
.BR gss_release_buffer (3GSS).
.RE

.sp
.ne 2
.mk
.na
.I conf_state
.ad
.RS 25n
.rt
If the value of
.I conf_state
is non-zero, then confidentiality and
integrity protection were used. If the value is zero, only integrity service
was used. Specify
.B NULL
if this parameter is not required.
.RE

.sp
.ne 2
.mk
.na
.I qop_state
.ad
.RS 25n
.rt
Specifies the quality of protection provided. Specify
.B NULL
if this
parameter is not required.
.RE

.SH ERRORS
.sp
.LP
.B gss_unwrap()
may return the following status codes:
.sp
.ne 2
.mk
.na
.B GSS_S_COMPLETE
.ad
.RS 25n
.rt
Successful completion.
.RE

.sp
.ne 2
.mk
.na
.B GSS_S_DEFECTIVE_TOKEN
.ad
.RS 25n
.rt
The token failed consistency checks.
.RE

.sp
.ne 2
.mk
.na
.B GSS_S_BAD_SIG
.ad
.RS 25n
.rt
The
.B MIC
was incorrect.
.RE

.sp
.ne 2
.mk
.na
.B GSS_S_DUPLICATE_TOKEN
.ad
.RS 25n
.rt
The token was valid, and contained a correct
.B MIC
for the message, but
it had already been processed.
.RE

.sp
.ne 2
.mk
.na
.B GSS_S_OLD_TOKEN
.ad
.RS 25n
.rt
The token was valid, and contained a correct
.B MIC
for the message, but
it is too old to check for duplication.
.RE

.sp
.ne 2
.mk
.na
.B GSS_S_UNSEQ_TOKEN
.ad
.RS 25n
.rt
The token was valid, and contained a correct
.B MIC
for the message, but
has been verified out of sequence; a later token has already been
received.
.RE

.sp
.ne 2
.mk
.na
.B GSS_S_GAP_TOKEN
.ad
.RS 25n
.rt
The token was valid, and contained a correct
.B MIC
for the message, but
has been verified out of sequence; an earlier expected token has not yet
been received.
.RE

.sp
.ne 2
.mk
.na
.B GSS_S_CONTEXT_EXPIRED
.ad
.RS 25n
.rt
The context has already expired.
.RE

.sp
.ne 2
.mk
.na
.B GSS_S_NO_CONTEXT
.ad
.RS 25n
.rt
The
.I context_handle
parameter did not identify a valid context.
.RE

.sp
.ne 2
.mk
.na
.B GSS_S_FAILURE
.ad
.RS 25n
.rt
The underlying mechanism detected an error for which no specific
.BR GSS
status code is defined.  The mechanism-specific status code reported by
means of the
.I minor_status
parameter details the error condition.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWgss (32-bit)
_
SUNWgssx (64-bit)
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR gss_release_buffer (3GSS),
.BR gss_wrap (3GSS),
.BR attributes (5)
.sp
.LP
.I Solaris Security for Developers Guide
