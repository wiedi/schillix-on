'\" te
.\" Copyright (C) 2003, Sun Microsystems, Inc. All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH gss_inquire_context 3GSS "17 Jan 2003" "SunOS 5.11" "Generic Security Services API Library Functions"
.SH NAME
gss_inquire_context \- obtain information about a security context
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lgss\fR  [ \fIlibrary\fR.\|.\|. ]
#include <gssapi/gssapi.h>

\fBOM_uint32\fR \fBgss_inquire_context\fR(\fBOM_uint32 *\fIminor_status\fR,
     \fBconst gss_ctx_id_t\fR \fIcontext_handle\fR,\fBgss_name_t *\fIsrc_name\fR,
     \fBgss_name_t *\fItarg_name\fR, \fBOM_uint32 *\fIlifetime_rec\fR,
     \fBgss_OID *\fImech_type\fR, \fBOM_uint32 *\fIctx_flags\fR,
     \fBint *\fIlocally_initiated\fR, \fBint *\fIopen\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B gss_inquire_context()
function obtains information about a
security context. The caller must already have obtained a handle that refers
to the context, although the context need not be fully established.
.SH PARAMETERS
.sp
.LP
The parameter descriptions for
.B gss_inquire_context()
are as
follows:
.sp
.ne 2
.mk
.na
.I minor_status
.ad
.RS 21n
.rt
A mechanism-specific status code.
.RE

.sp
.ne 2
.mk
.na
.I context_handle
.ad
.RS 21n
.rt
A handle that refers to the security context.
.RE

.sp
.ne 2
.mk
.na
.I src_name
.ad
.RS 21n
.rt
The name of the context initiator. If the context was established using
anonymous authentication, and if the application invoking
.B gss_inquire_context()
is the context acceptor, an anonymous name is
returned. Storage associated with this name must be freed by the application
after use with a call to
.BR gss_release_name() .
Specify
.B NULL
if the
parameter is not required.
.RE

.sp
.ne 2
.mk
.na
.I targ_name
.ad
.RS 21n
.rt
The name of the context acceptor. Storage associated with this name must be
freed by the application after use with a call to
.BR gss_release_name() .
If the context acceptor did not authenticate itself, and if the initiator
did not specify a target name in its call to
.BR gss_init_sec_context() ,
the value
.B GSS_C_NO_NAME
is returned. Specify
.B NULL
if the
parameter is not required.
.RE

.sp
.ne 2
.mk
.na
.I lifetime_rec
.ad
.RS 21n
.rt
The number of seconds for which the context will remain valid. If the
context has expired, this parameter will be set to zero. Specify \fBNULL\fR
if the parameter is not required.
.RE

.sp
.ne 2
.mk
.na
.I mech_type
.ad
.RS 21n
.rt
The security mechanism providing the context. The returned
.B OID
is a
pointer to static storage that should be treated as read-only by the
application; in particular, the application should not attempt to free it.
Specify
.B NULL
if the parameter is not required.
.RE

.sp
.ne 2
.mk
.na
.I ctx_flags
.ad
.RS 21n
.rt
Contains various independent flags, each of which indicates that the
context supports (or is expected to support, if
.B ctx_open
is false) a
specific service option. If not needed, specify
.BR NULL .
Symbolic names
are provided for each flag, and the symbolic names corresponding to the
required flags should be logically \fBAND\fRed with the \fBret_flags\fR
value to test whether a given option is supported by the context.  The flags
are:
.sp
.ne 2
.mk
.na
.B GSS_C_DELEG_FLAG
.ad
.RS 25n
.rt
If true, credentials were delegated from the initiator to the acceptor. If
false, no credentials were delegated.
.RE

.sp
.ne 2
.mk
.na
.B GSS_C_MUTUAL_FLAG
.ad
.RS 25n
.rt
If true, the acceptor was authenticated to the initiator. If false, the
acceptor did not authenticate itself.
.RE

.sp
.ne 2
.mk
.na
.B GSS_C_REPLAY_FLAG
.ad
.RS 25n
.rt
If true, the replay of protected messages will be detected. If false,
replayed messages will not be detected.
.RE

.sp
.ne 2
.mk
.na
.B GSS_C_SEQUENCE_FLAG
.ad
.RS 25n
.rt
If true, out-of-sequence protected messages will be detected. If false,
out-of-sequence messages will not be detected.
.RE

.sp
.ne 2
.mk
.na
.B GSS_C_CONF_FLAG
.ad
.RS 25n
.rt
If true, confidential service may be invoked by calling the
.BR gss_wrap (3GSS)
routine. If false, no confidential service is available
through
.BR gss_wrap() .
.B gss_wrap()
provides message encapsulation,
data-origin authentication, and integrity services only.
.RE

.sp
.ne 2
.mk
.na
.B GSS_C_INTEG_FLAG
.ad
.RS 25n
.rt
If true, integrity service can be invoked by calling either the
.B gss_get_mic()
or the
.B gss_wrap()
routine. If false, per-message
integrity service is unavailable.
.RE

.sp
.ne 2
.mk
.na
.B GSS_C_ANON_FLAG
.ad
.RS 25n
.rt
If true, the initiator's identity is not revealed to the acceptor. The
.I src_name
parameter, if requested, contains an anonymous internal name.
If false, the initiator has been authenticated normally.
.RE

.sp
.ne 2
.mk
.na
.B GSS_C_PROT_READY_FLAG
.ad
.RS 25n
.rt
If true, the protection services, as specified by the states of the
.B GSS_C_CONF_FLAG
and
.BR GSS_C_INTEG_FLAG ,
are available for use. If
false, they are available only if the context is fully established, that is,
if the
.I open
parameter is non-zero.
.RE

.sp
.ne 2
.mk
.na
.B GSS_C_TRANS_FLAG
.ad
.RS 25n
.rt
If true, resultant security context can be transferred to other processes
through a call to
.BR gss_export_sec_context() .
If false, the security
context is not transferable.
.RE

.RE

.sp
.ne 2
.mk
.na
.I locally_initiated
.ad
.RS 21n
.rt
Non-zero if the invoking application is the context initiator. Specify
.B NULL
if the parameter is not required.
.RE

.sp
.ne 2
.mk
.na
.I open
.ad
.RS 21n
.rt
Non-zero if the context is fully established; zero if a
context-establishment token is expected from the peer application. Specify
.B NULL
if the parameter is not required.
.RE

.SH ERRORS
.sp
.LP
.B gss_inquire_context()
returns one of the following status codes:
.sp
.ne 2
.mk
.na
.B GSS_S_COMPLETE
.ad
.RS 20n
.rt
Successful completion.
.RE

.sp
.ne 2
.mk
.na
.B GSS_S_NO_CONTEXT
.ad
.RS 20n
.rt
The referenced context could not be accessed.
.RE

.sp
.ne 2
.mk
.na
.B GSS_S_FAILURE
.ad
.RS 20n
.rt
The underlying mechanism detected an error for which no specific
.BR GSS
status code is defined.  The mechanism-specific status code reported by
means of the
.I minor_status
parameter details the error condition.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWgss (32-bit)
_
SUNWgssx (64-bit)
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR gss_accept_sec_context (3GSS),
.BR gss_context_time (3GSS),
.BR gss_delete_sec_context (3GSS),
.BR gss_export_sec_context (3GSS),
.BR gss_import_sec_context (3GSS),
.BR gss_init_sec_context (3GSS),
.BR gss_process_context_token (3GSS),
.BR gss_wrap (3GSS),
.BR gss_wrap_size_limit (3GSS),
.BR attributes (5)
.sp
.LP
.I Solaris Security for Developers Guide
