'\" te
.\" Copyright (c) 2003, Sun Microsystems, Inc. All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH libhbaapi 3LIB "1 Sep 2003" "SunOS 5.11" "Interface Libraries"
.SH NAME
libhbaapi \- Common Fibre Channel HBA information library
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR\&.\|.\|. ] \fIfile\fR\&.\|.\|. \fB-lHBAAPI\fR [ \fIlibrary\fR\&.\|.\|. ]
#include <hbaapi.h>
.fi

.SH DESCRIPTION
.sp
.LP
The functions in this library access Fibre Channel HBA data.
.sp
.LP
Fibre Channel HBA information is provided through a standard interface in a
vendor independent manner.  This common interface provides access to the
following information:
.RS +4
.TP
.ie t \(bu
.el o
Local HBA attributes
.RE
.RS +4
.TP
.ie t \(bu
.el o
Local HBA port attributes and statistics
.RE
.RS +4
.TP
.ie t \(bu
.el o
Mapping between FCP-2 discovered devices and operating system SCSI
information
.RE
.RS +4
.TP
.ie t \(bu
.el o
Discovered devices port attributes
.RE
.RS +4
.TP
.ie t \(bu
.el o
SCSI commands for discovered FCP-2 devices (Report LUNS, Read Capacity, and
Inquiry)
.RE
.RS +4
.TP
.ie t \(bu
.el o
Common Transport commands to discover Fabric details
.RE
.SH INTERFACES
.sp
.LP
The shared object
.B libhbaapi.so.1
provides the public interfaces
defined below. See
.BR Intro (3)
for additional information on shared
object interfaces.
.sp

.sp
.TS
tab();
lw(3i) lw(2.5i)
lw(3i) lw(2.5i)
.
\fBHBA_CloseAdapter\fR\fBHBA_FreeLibrary\fR
\fBHBA_GetAdapterAttributes\fR\fBHBA_GetAdapterName\fR
\fBHBA_GetAdapterPortAttributes\fR\fBHBA_GetBindingCapability\fR
\fBHBA_GetBindingSupport\fR\fBHBA_GetDiscoveredPortAttributes\fR
\fBHBA_GetEventBuffer\fR\fBHBA_GetFC4Statistics\fR
\fBHBA_GetFCPStatistics\fR\fBHBA_GetFcpPersistentBinding\fR
\fBHBA_GetFcpTargetMapping\fR\fBHBA_GetFcpTargetMappingV2\fR
\fBHBA_GetNumberOfAdapters\fR\fBHBA_GetPersistentBindingV2\fR
\fBHBA_GetPortAttributesByWWN\fR\fBHBA_GetPortStatistics\fR
\fBHBA_GetRNIDMgmtInfo\fR\fBHBA_GetVendorLibraryAttributes\fR
\fBHBA_GetVersion\fR\fBHBA_GetWrapperLibraryAttributes\fR
\fBHBA_LoadLibrary\fR\fBHBA_OpenAdapter\fR
\fBHBA_OpenAdapterByWWN\fR\fBHBA_RefreshAdapterConfiguration\fR
\fBHBA_RefreshInformation\fR\fBHBA_RegisterForAdapterAddEvents\fR
\fBHBA_RegisterForAdapterEvents\fR\fBHBA_RegisterForAdapterPortEvents\fR
\fBHBA_RegisterForAdapterPortStatEvents\fR\fBHBA_RegisterForLinkEvents\fR
\fBHBA_RegisterForTargetEvents\fR\fBHBA_RemoveAllPersistentBindings\fR
\fBHBA_RemoveCallback\fR\fBHBA_RemovePersistentBinding\fR
\fBHBA_ResetStatistics\fR\fBHBA_ScsiInquiryV2\fR
\fBHBA_ScsiReadCapacityV2\fR\fBHBA_ScsiReportLUNsV2\fR
\fBHBA_SendCTPassThru\fR\fBHBA_SendCTPassThruV2\fR
\fBHBA_SendLIRR\fR\fBHBA_SendRLS\fR
\fBHBA_SendRNID\fR\fBHBA_SendRNIDV2\fR
\fBHBA_SendRPL\fR\fBHBA_SendRPS\fR
\fBHBA_SendReadCapacity\fR\fBHBA_SendReportLUNs\fR
\fBHBA_SendSRL\fR\fBHBA_SendScsiInquiry\fR
\fBHBA_SetBindingSupport\fR\fBHBA_SetPersistentBindingV2\fR
\fBHBA_SetRNIDMgmtInfo\fR
.TE

.SH USAGE
.sp
.LP
Client applications link with the Common Library (using
.BR -l HBAAPI)
to
access the interfaces. The Common Library dynamically loads individual
Vendor-Specific Libraries (VSL) listed in \fB/etc/hba.conf\fR described on
the
.BR hba.conf (4).
.sp
.LP
Using the
.B libhbaapi
involves the following steps:
.RS +4
.TP
1.
Optionally determining the version of the library by calling
.BR HBA_GetVersion (3HBAAPI).
.RE
.RS +4
.TP
2.
Initializing the Common Library by calling
.BR HBA_LoadLibrary (3HBAAPI).
.RE
.RS +4
.TP
3.
Determine the number of HBAs known to the common library by calling
.BR HBA_GetNumberOfAdapters (3HBAAPI).
.RE
.RS +4
.TP
4.
Determine each HBA name in turn by calling
.BR HBA_GetAdapterName (3HBAAPI).
.RE
.RS +4
.TP
5.
Open each HBA in turn by calling
.BR HBA_OpenAdapter (3HBAAPI).
.RE
.RS +4
.TP
6.
Operate on a given HBA by calling the following:
.RS +4
.TP
.ie t \(bu
.el o
.BR HBA_GetAdapterAttributes (3HBAAPI)
.RE
.RS +4
.TP
.ie t \(bu
.el o
.BR HBA_GetAdapterPortAttributes (3HBAAPI)
.RE
.RS +4
.TP
.ie t \(bu
.el o
.BR HBA_GetDiscoveredPortAttributes (3HBAAPI)
.RE
.RS +4
.TP
.ie t \(bu
.el o
.BR HBA_GetPortAttributesByWWN (3HBAAPI)
.RE
.RS +4
.TP
.ie t \(bu
.el o
.BR HBA_SendCTPassThru (3HBAAPI)
.RE
.RS +4
.TP
.ie t \(bu
.el o
.BR HBA_SendCTPassThruV2 (3HBAAPI)
.RE
.RS +4
.TP
.ie t \(bu
.el o
.BR HBA_GetEventBuffer (3HBAAPI)
.RE
.RS +4
.TP
.ie t \(bu
.el o
.BR HBA_SetRNIDMgmtInfo (3HBAAPI)
.RE
.RS +4
.TP
.ie t \(bu
.el o
.BR HBA_GetRNIDMgmtInfo (3HBAAPI)
.RE
.RS +4
.TP
.ie t \(bu
.el o
.BR HBA_SendRNID (3HBAAPI)
.RE
.RS +4
.TP
.ie t \(bu
.el o
.BR HBA_SendRNIDV2 (3HBAAPI)
.RE
.RS +4
.TP
.ie t \(bu
.el o
.BR HBA_RefreshInformation (3HBAAPI)
.RE
.RS +4
.TP
.ie t \(bu
.el o
.BR HBA_RefreshAdapterConfiguration (3HBAAPI)
.RE
.RS +4
.TP
.ie t \(bu
.el o
.BR HBA_GetVendorLibraryAttributes (3HBAAPI)
.RE
.RS +4
.TP
.ie t \(bu
.el o
.BR HBA_GetWrapperLibraryAttributes (3HBAAPI)
.RE
.RS +4
.TP
.ie t \(bu
.el o
.BR HBA_ResetStatistics (3HBAAPI)
.RE
.RS +4
.TP
.ie t \(bu
.el o
.BR HBA_GetFcpTargetMapping (3HBAAPI)
.RE
.RS +4
.TP
.ie t \(bu
.el o
.BR HBA_GetFcpTargetMappingV2 (3HBAAPI)
.RE
.RS +4
.TP
.ie t \(bu
.el o
.BR HBA_GetFcpPersistentBinding (3HBAAPI)
.RE
.RS +4
.TP
.ie t \(bu
.el o
.BR HBA_SendScsiInquiry (3HBAAPI)
.RE
.RS +4
.TP
.ie t \(bu
.el o
.BR HBA_SendReportLUNs (3HBAAPI)
.RE
.RS +4
.TP
.ie t \(bu
.el o
.BR HBA_ScsiReportLUNsV2 (3HBAAPI)
.RE
.RS +4
.TP
.ie t \(bu
.el o
.BR HBA_SendReadCapacity (3HBAAPI)
.RE
.RS +4
.TP
.ie t \(bu
.el o
.BR HBA_SendRLS (3HBAAPI)
.RE
.RE
.RS +4
.TP
7.
Close open HBAs by calling
.BR HBA_CloseAdapter (3HBAAPI).
.RE
.RS +4
.TP
8.
Unload the library by calling
.BR HBA_FreeLibrary (3HBAAPI).
.RE
.SH ERRORS
.sp
.LP
Errors are generally returned from the underlying VSL and can include any
of the following values:
.sp
.ne 2
.mk
.na
.B HBA_STATUS_OK
.ad
.sp .6
.RS 4n
Request completed successfully. (No Error)
.RE

.sp
.ne 2
.mk
.na
.B HBA_STATUS_ERROR
.ad
.sp .6
.RS 4n
Non-specific error encountered.
.RE

.sp
.ne 2
.mk
.na
.B HBA_STATUS_ERROR_NOT_SUPPORTED
.ad
.sp .6
.RS 4n
The VSL does not support this interface.
.RE

.sp
.ne 2
.mk
.na
.B HBA_STATUS_ERROR_INVALID_HANDLE
.ad
.sp .6
.RS 4n
The
.I handle
argument does not refer to an open HBA handle.
.RE

.sp
.ne 2
.mk
.na
.B HBA_STATUS_ERROR_ARG
.ad
.sp .6
.RS 4n
An argument in the request was invalid.
.RE

.sp
.ne 2
.mk
.na
.B HBA_STATUS_ERROR_ILLEGAL_WWN
.ad
.sp .6
.RS 4n
A WWN in the request was not recognized.
.RE

.sp
.ne 2
.mk
.na
.B HBA_STATUS_ERROR_ILLEGAL_INDEX
.ad
.sp .6
.RS 4n
An index in the request was not recognized.
.RE

.sp
.ne 2
.mk
.na
.B HBA_STATUS_ERROR_MORE_DATA
.ad
.sp .6
.RS 4n
A larger buffer is required to complete the requested operation.
.RE

.sp
.ne 2
.mk
.na
.B HBA_STATUS_ERROR_STALE_DATA
.ad
.sp .6
.RS 4n
The state of the HBA has changed, possibly due to Dynamic Reconfiguration
or devices being added or removed.  The caller should call
\fBHBA_RefreshInformation\fR(3HBAAPI) and reissue any discovery logic to
reset all indexes related to this HBA.
.RE

.sp
.ne 2
.mk
.na
.B HBA_STATUS_SCSI_CHECK_CONDITION
.ad
.sp .6
.RS 4n
A SCSI check-condition was encountered during the I/O operation. Not all
VSLs report this error value.  Some might return
.B HBA_STATUS_ERROR
when
a check-condition is encountered, or
.BR HBA_STATUS_OK .
.RE

.sp
.ne 2
.mk
.na
.B HBA_STATUS_ERROR_BUSY
.ad
.sp .6
.RS 4n
The requested device is busy.  A retry might be effective.
.RE

.sp
.ne 2
.mk
.na
.B HBA_STATUS_ERROR_TRY_AGAIN
.ad
.sp .6
.RS 4n
The requested I/O timed out.  A retry might be effective.
.RE

.sp
.ne 2
.mk
.na
.B HBA_STATUS_ERROR_UNAVAILABLE
.ad
.sp .6
.RS 4n
The requested HBA has been removed or deactivated.
.RE

.sp
.LP
All other error values are reserved.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcfcl (32-bit)
_
SUNWcfclx (64-bit)
_
Interface StabilityStandard: FC-MI 1.92 (API version 1)
_
T{
Standard: FC-HBA Version 4 (API version 2)
T}
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR HBA_GetAdapterAttributes (3HBAAPI),
.BR HBA_GetAdapterName (3HBAAPI),
.BR HBA_GetAdapterPortAttributes (3HBAAPI),
.BR HBA_GetBindingCapability (3HBAAPI),
.BR HBA_GetDiscoveredPortAttributes (3HBAAPI),
.BR HBA_GetEventBuffer (3HBAAPI),
.BR HBA_GetFcpPersistentBinding (3HBAAPI),
.BR HBA_GetFcpTargetMapping (3HBAAPI),
.BR HBA_GetNumberOfAdapters (3HBAAPI),
.BR HBA_GetPortAttributesByWWN (3HBAAPI),
.BR HBA_GetPortStatistics (3HBAAPI),
.BR HBA_GetVersion (3HBAAPI),
.BR HBA_GetWrapperLibraryAttributes (3HBAAPI),
.BR HBA_LoadLibrary (3HBAAPI),
.BR HBA_OpenAdapter (3HBAAPI),
.BR HBA_RefreshInformation (3HBAAPI),
.BR HBA_RegisterForAdapterEvents (3HBAAPI),
.BR HBA_SendCTPassThru (3HBAAPI),
.BR HBA_SendRLS (3HBAAPI),
.BR HBA_SendScsiInquiry (3HBAAPI),
.BR HBA_SetRNIDMgmtInfo (3HBAAPI),
.BR hba.conf (4),
.BR attributes (5)
.sp
.LP
T11 FC-MI Specification
