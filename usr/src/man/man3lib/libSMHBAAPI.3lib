'\" te
.\" Copyright (c) 2009, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH libSMHBAAPI 3LIB "28 Sep 2009" "SunOS 5.11" "Interface Libraries"
.SH NAME
libSMHBAAPI, libsmhbaapi, SMHBA_GetAdapterAttributes,
SMHBA_GetAdapterPortAttributes, SMHBA_GetBindingCapability,
SMHBA_GetBindingSupport, SMHBA_GetDiscoveredPortAttributes,
SMHBA_GetFCPhyAttributes, SMHBA_GetLUNStatistics, SMHBA_GetNumberofPorts,
SMHBA_GetPersistentBinding, SMHBA_GetPhyStatistics,
SMHBA_GetPortAttributesByWWN, SMHBA_GetPortType,
SMHBA_GetProtocolStatistics, SMHBA_GetSASPhyAttributes,
SMHBA_GetTargetMapping, SMHBA_GetVendorLibraryAttributes, SMHBA_GetVersion,
SMHBA_GetWrapperLibraryAttributes, SMHBA_RegisterForAdapterAddEvents,
SMHBA_RegisterForAdapterEvents, SMHBA_RegisterForAdapterPhyStatEvents,
SMHBA_RegisterForAdapterPortEvents, SMHBA_RegisterForAdapterPortStatEvents,
SMHBA_RegisterForTargetEvents, SMHBA_RegisterLibrary,
SMHBA_RemoveAllPersistentBindings, SMHBA_RemovePersistentBinding,
SMHBA_ScsiInquiry, SMHBA_ScsiReadCapacity, SMHBA_ScsiReportLuns,
SMHBA_SendECHO, SMHBA_SendSMPPassThru, SMHBA_SendTEST,
SMHBA_SetBindingSupport, SMHBA_SetPersistentBinding \- Common Storage
Management HBA information library
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR\&.\|.\|. ] \fIfile\fR\&.\|.\|. \fB-lSMHBAAPI\fR [ \fIlibrary\fR\&.\|.\|. ]
#include <smhbaapi.h>
.fi

.SH DESCRIPTION
.sp
.LP
The functions in this library access Fibre Channel and/or Sereal Attached
SCSI HBA data depending on vendor provided implementation underneath.
.sp
.LP
HBA information is provided through a standard interface in a vendor
independent manner. This common interface provides access to the following
information:
.RS +4
.TP
.ie t \(bu
.el o
Local HBA attributes
.RE
.RS +4
.TP
.ie t \(bu
.el o
Local HBA port attributes and statistics
.RE
.RS +4
.TP
.ie t \(bu
.el o
Mapping between discovered devices and operating system SCSI information
.RE
.RS +4
.TP
.ie t \(bu
.el o
Discovered devices port attributes
.RE
.RS +4
.TP
.ie t \(bu
.el o
SCSI commands for discovered devices (Report LUNS, Read Capacity, and
Inquiry)
.RE
.RS +4
.TP
.ie t \(bu
.el o
Storage Managment Protocol commands to discover Serial Attached SCSI
configuration details
.RE
.RS +4
.TP
.ie t \(bu
.el o
Common Transport commands to discover Fibre Channel Fabric details
.RE
.SH INTERFACES
.sp
.LP
The shared object
.B libSMHBAAPI.so.1
provides the public interfaces
defined below. See
.BR Intro (3)
for additional information on shared
object interfaces.
.sp

.sp
.TS
tab();
lw(3i) lw(2.5i)
lw(3i) lw(2.5i)
.
\fBHBA_CloseAdapter\fR\fBHBA_FreeLibrary\fR
\fBHBA_GetAdapterName\fR\fBHBA_GetNumberOfAdapters\fR
\fBHBA_GetRNIDMgmtInfo\fR\fBHBA_LoadLibrary\fR
\fBHBA_OpenAdapter\fR\fBHBA_RefreshAdapterConfiguration\fR
\fBHBA_RefreshInformation\fR\fBHBA_RegisterForLinkEvents\fR
\fBHBA_RemoveCallback\fR\fBHBA_SendCTPassThruV2\fR
\fBHBA_SendLIRR\fR\fBHBA_SendRLS\fR
\fBHBA_SendRNIDV2\fR\fBHBA_SendRPL\fR
\fBHBA_SendRPS\fR\fBHBA_SendSRL\fR
\fBHBA_SetRNIDMgmtInfo\fR\fBSMHBA_GetAdapterAttributes\fR
\fBSMHBA_GetAdapterPortAttributes\fR\fBSMHBA_GetBindingCapability\fR
\fBSMHBA_GetBindingSupport\fR\fBSMHBA_GetDiscoveredPortAttributes\fR
\fBSMHBA_GetFCPhyAttributes\fR\fBSMHBA_GetLUNStatistics\fR
\fBSMHBA_GetNumberofPorts\fR\fBSMHBA_GetPersistentBinding\fR
\fBSMHBA_GetPhyStatistics\fR\fBSMHBA_GetPortAttributesByWWN\fR
\fBSMHBA_GetPortType\fR\fBSMHBA_GetProtocolStatistics\fR
\fBSMHBA_GetSASPhyAttributes\fR\fBSMHBA_GetTargetMapping\fR
\fBSMHBA_GetVendorLibraryAttributes\fR\fBSMHBA_GetVersion\fR
\fBSMHBA_GetWrapperLibraryAttributes\fR\fBSMHBA_RegisterForAdapterAddEvents\fR
\fBSMHBA_RegisterForAdapterEvents\fR\fBSMHBA_RegisterForAdapterPhyStatEvents\fR
\fBSMHBA_RegisterForAdapterPortEvents\fR\fBSMHBA_RegisterForAdapterPortStatEvents\fR
\fBSMHBA_RegisterForTargetEvents\fR\fBSMHBA_RegisterLibrary\fR
\fBSMHBA_RemoveAllPersistentBindings\fR\fBSMHBA_RemovePersistentBinding\fR
\fBSMHBA_ScsiInquiry\fR\fBSMHBA_ScsiReadCapacity\fR
\fBSMHBA_ScsiReportLuns\fR\fBSMHBA_SendECHO\fR
\fBSMHBA_SendSMPPassThru\fR\fBSMHBA_SendTEST\fR
\fBSMHBA_SetBindingSupport\fR\fBSMHBA_SetPersistentBinding\fR
.TE

.SH USAGE
.sp
.LP
Client applications link with the Common Library (using -\fBlSMHBAAPI\fR)
to access the interfaces. The Common Library dynamically loads individual
Vendor-Specific Libraries (VSL) listed in
.B /etc/smhba.conf
and
described on
.BR smhba.conf (4).
.sp
.LP
Using the
.B libSMHBAAPI
involves the following steps:
.RS +4
.TP
1.
Optionally determining the version of the library by calling
.BR SMHBA_GetVersion() .
.RE
.RS +4
.TP
2.
Initializing the Common Library by calling
.BR HBA_LoadLibrary() .
.RE
.RS +4
.TP
3.
Determine the number of HBAs known to the common library by calling
.BR HBA_GetNumberOfAdapters() .
.RE
.RS +4
.TP
4.
Determine each HBA name in turn by calling
.BR HBA_GetAdapterName() .
.RE
.RS +4
.TP
5.
Open each HBA in turn by calling
.BR HBA_OpenAdapter() .
.RE
.RS +4
.TP
6.
Operate on a given HBA by calling the following:
.RS +4
.TP
.ie t \(bu
.el o
.B SMHBA_GetAdapterAttributes()
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B SMHBA_GetAdapterPortAttributes()
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B SMHBA_GetDiscoveredPortAttributes()
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B SMHBA_GetPortAttributesByWWN()
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B SMHBA_GetNumberofPorts()
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B SMHBA_GetPortType()
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B SMHBA_GetProtocolStatistics()
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B SMHBA_GetPhyStatistics()
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B SMHBA_GetBindingCapability()
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B SMHBA_GetBindingSupport()
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B SMHBA_SetBindingSupport()
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B SMHBA_GetTargetMapping()
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B SMHBA_GetPersistentBinding()
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B SMHBA_SetPersistentBinding()
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B SMHBA_RemoveAllPersistentBindings()
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B SMHBA_GetLUNStatistics()
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B SMHBA_SendScsiInquiry()
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B SMHBA_SendReportLuns()
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B SMHBA_SendReadCapacity()
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B SMHBA_RegisterForAdapterAddEvents()
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B SMHBA_RegisterForAdapterEvents()
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B SMHBA_RegisterForAdapterPortEvents()
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B SMHBA_RegisterForAdapterPortStatEvents()
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B SMHBA_RegisterForAdapterPhyStatEvents()
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B SMHBA_RegisterForTargetEvents()
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B HBA_RegisterForLinkEvents()
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B HBA_RemoveCallback()
.RE
For Serial Attached HBA
.RS +4
.TP
.ie t \(bu
.el o
.B SMHBA_GetSASPhyAttributes()
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B SMHBA_SendSMPPassThru()
.RE
For Fibre Channle HBA
.RS +4
.TP
.ie t \(bu
.el o
.B SMHBA_GetFCPhyAttributes()
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B HBA_SendCTPassThruV2()
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B HBA_SetRNIDMgmtInfo()
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B HBA_GetRNIDMgmtInfo()
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B HBA_SendRNIDV2()
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B HBA_SendRPL()
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B HBA_SendRPS()
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B HBA_SendSRL()
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B HBA_SendLIRR()
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B HBA_SendRLS()
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B HBA_SendTEST()
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B HBA_SendECHO()
.RE
.RE
.RS +4
.TP
7.
Close open HBAs by calling
.BR HBA_CloseAdapter() .
.RE
.RS +4
.TP
8.
Unload the library by calling
.BR HBA_FreeLibrary() .
.RE
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWsmhba, SUNWsmhbar
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
_
StandardT{
ANSI INCITS 428  Storage Management Host Bus Adapter Application Programming Interface (SM-HBA)
T}
.TE

.SH SEE ALSO
.sp
.LP
.BR smhba.conf (4),
.BR attributes (5)
