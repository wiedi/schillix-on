'\" te
.\" Copyright (c) 2005, by Sun Microsystems, Inc.  All rights reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH libdoor 3LIB "22 Mar 2005" "SunOS 5.11" "Interface Libraries"
.SH NAME
libdoor \- doors library
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|.  [ \fIlibrary\fR.\|.\|. ]
#include <\fBdoor.h\fR>
.fi

.SH DESCRIPTION
.sp
.LP
Historically, functions in this library provided programmatic access to
doors, including the ability to create and call them. This functionality now
resides in
.BR libc (3LIB).
.sp
.LP
Doors are a fast light-weight RPC mechanism for secure control transfer
between processes on the same machine. Conceptually, a thread in one process
can issue a call using a door descriptor that causes code to be executed in
another process and then returns using the traditional synchronous RPC
model. Doors can also be used to pass data and file descriptors between
processes.
.sp
.LP
This library is maintained to provide backward compatibility for both
runtime and compilation environments. The shared object is implemented as a
filter on
.BR libc.so.1 .
New application development need not specify
.BR -ldoor .
.SH INTERFACES
.sp
.LP
The shared object
.B libdoor.so.1
provides the public interfaces defined
below. See
.BR Intro (3)
for additional information on shared object
interfaces.
.sp

.sp
.TS
tab();
lw(2.75i) lw(2.75i)
lw(2.75i) lw(2.75i)
.
\fBdoor_bind\fR\fBdoor_call\fR
\fBdoor_create\fR\fBdoor_cred\fR
\fBdoor_info\fR\fBdoor_return\fR
\fBdoor_revoke\fR\fBdoor_server_create\fR
\fBdoor_ucred\fR\fBdoor_unbind\fR
.TE

.SH FILES
.sp
.ne 2
.mk
.na
.B /lib/libdoor.so.1
.ad
.RS 24n
.rt
shared object
.RE

.sp
.ne 2
.mk
.na
.B /lib/64/libdoor.so.1
.ad
.RS 24n
.rt
64-bit shared object
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcsl
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR Intro (3),
.BR libc (3LIB),
.BR attributes (5)
.sp
.LP
Stevens, W. Richard. \fIUNIX Network Programming, Volume 2: Interprocess
Communications, 2/e\fR. Tucson, Ariz.: Prentice Hall, 1999.
