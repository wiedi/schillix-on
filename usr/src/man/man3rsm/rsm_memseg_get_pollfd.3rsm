'\" te
.\" Copyright (c) 2002 by Sun Microsystems, Inc.  All rights reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH rsm_memseg_get_pollfd 3RSM "1 Dec 2002" "SunOS 5.11" "Remote Shared Memory Library Functions"
.SH NAME
rsm_memseg_get_pollfd, rsm_memseg_release_pollfd \- get or release a poll
descriptor
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. -lrsm [ \fIlibrary\fR.\|.\|. ]
#include <rsmapi.h>

\fBint\fR \fBrsm_memseg_get_pollfd\fR(\fBvoid *\fImemseg\fR, \fBstruct pollfd *\fIfd\fR);
.fi

.LP
.nf
\fBint\fR \fBrsm_memseg_release_pollfd\fR(\fBvoid *\fImemseg\fR);
.fi

.SH DESCRIPTION
.sp
.LP
.RB "The " rsm_memseg_get_pollfd() " and " rsm_memseg_release_pollfd() 
functions provide an alternative to
.BR rsm_intr_signal_wait "(3RSM). The"
waiting process can multiplex event waiting using the
.BR poll (2)
function
after first obtaining a poll descriptor using
.BR rsm_memseg_get_pollfd() .
The descriptor can subsequently be released using
.BR rsm_memseg_release_pollfd() .
.sp
.LP
As a result of a call
.BR rsm_memseg_get_pollfd() ,
the specified
.B pollfd
structure is initialized with a descriptor for the specified
segment
.RI ( memseg )
and the event generated by
.BR rsm_intr_signal_post (3RSM).
Either an export segment handle or an
import segment handle can be type cast to a void pointer. The
.I pollfd
argument can subsequently be used with the
.BR rsm_intr_signal_wait_pollfd (3RSM)
function to wait for the event; it
cannot be used with
.BR poll() .
If
.I memseg
references an export
segment, the segment must be currently published.  If
.I memseg
references an import segment, the segment must be connected.
.sp
.LP
The
.B rsm_memseg_reslease_pollfd()
function decrements the reference
count of the
.B pollfd
structure associated with the specified segment.
A segment unpublish, destroy or unmap operation will fail if the reference
count is non-zero.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, these functions return 0.  Otherwise, an error
value is returned to indicate the error.
.SH ERRORS
.sp
.LP
.RB "The " rsm_memseg_get_pollfd() " and " rsm_memseg_release_pollfd() 
function can return the following error:
.sp
.ne 2
.mk
.na
.B RSMERR_BAD_SEG_HNDL
.ad
.RS 24n
.rt
Invalid segment handle.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
lw(2.75i) |lw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPE ATTRIBUTE VALUE
_
Interface StabilityEvolving
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR poll (2),
.BR rsm_intr_signal_post (3RSM),
.BR rsm_intr_signal_wait_pollfd (3RSM),
.BR attributes (5)
