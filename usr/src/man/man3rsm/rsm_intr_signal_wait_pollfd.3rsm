'\" te
.\" Copyright (c) 2002, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH rsm_intr_signal_wait_pollfd 3RSM "1 Dec 2002" "SunOS 5.11" "Remote Shared Memory Library Functions"
.SH NAME
rsm_intr_signal_wait_pollfd \- wait for events on a list of file
descriptors
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR.\|.\|. ] \fIfile\fR\&.\|.\|. \fB-lrsm\fR [ \fIlibrary \&.\|.\|.\fR ]
#include <rsmapi.h>

\fBint\fR \fBrsm_intr_signal_wait_pollfd\fR(\fBstruct pollfd\fR \fIfds\fR[],
     \fBnfds_t\fR \fInfds\fR, \fBint\fR \fItimeout\fR, \fBint *\fInumfdsp\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B rsm_intr_signal_wait_pollfd()
function is similar to
.BR rsm_intr_signal_wait (3RSM),
except that it  allows an application to
multiplex I/O over various types of file descriptors. Applications can use
this function to wait for interrupt signals on RSMAPI segments as well as
poll for I/O events on other non-RSMAPI file descriptors.
.sp
.LP
The
.IR fds " argument is an array of "
.B pollfd
structures that
correspond to both RSMAPI segments and other file descriptors. The
.BR rsm_memseg_get_pollfd (3RSM)
is used to obtain a
.B pollfd
structure
corresponding to an RSMAPI segment.
.sp
.LP
The number of file descriptors that have events is returned in
.IR numfdsp .
This parameter can be set to
.I NULL
if the application is
not interested in the number of file descriptors that have events. See
.BR poll (2)
for descriptions of the
.B pollfd
structure as well as the
.I nfds
and
.I timeout
parameters.
.sp
.LP
It is the application's responsibility to establish the validity of a
.B pollfd
structure corresponding to an RSMAPI segment by ensuring that
.BR rsm_memseg_release_pollfd (3RSM)
has not been called on the segment or
that the segment has not been destroyed.
.sp
.LP
For file descriptors other than RSMAPI segments, the behavior of
.B rsm_intr_signal_wait_pollfd()
is similar to
.BR poll() .
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B rsm_intr_signal_wait_pollfd()
returns 0
and the
.B revents
member of the
.B pollfd
struct corresponding to an
RSMAPI segment is set to
.BR POLLRDNORM ,
indicating that an interrupt
signal for that segment was received. Otherwise, an error value is
returned.
.sp
.LP
For file descriptors other than RSMAPI segments, the
.B revents
member
of the
.B pollfd
struct is identical to that returned by
.BR poll (2).
.SH ERRORS
.sp
.LP
The
.B rsm_intr_signal_wait_pollfd()
function can return the following
errors:
.sp
.ne 2
.mk
.na
.B RSMERR_TIMEOUT
.ad
.sp .6
.RS 4n
Timeout has occured.
.RE

.sp
.ne 2
.mk
.na
.B RSMERR_BAD_ARGS_ERRORS
.ad
.sp .6
.RS 4n
Invalid arguments passed.
.RE

.sp
.ne 2
.mk
.na
.B RSMERR_BAD_ADDR
.ad
.sp .6
.RS 4n
An argument points to an illegal address.
.RE

.sp
.ne 2
.mk
.na
.B RSMERR_INTERRUPTED
.ad
.sp .6
.RS 4n
The call was interrupted.
.RE

.sp
.ne 2
.mk
.na
.B RSMERR_INSUFFICIENT_MEM
.ad
.sp .6
.RS 4n
Insufficient memory.
.RE

.sp
.ne 2
.mk
.na
.B RSMERR_INSUFFICIENT_RESOURCES
.ad
.sp .6
.RS 4n
Insufficient resources.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityEvolving
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR poll (2),
.BR rsm_intr_signal_wait (3RSM),
.BR rsm_memseg_get_pollfd (3RSM),
.BR rsm_memseg_release_pollfd (3RSM),
.BR attributes (5)
