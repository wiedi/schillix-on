'\" te
.\" Copyright (c) 2002 by Sun Microsystems, Inc.  All rights reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH rsm_memseg_import_map 3RSM "13 Nov 2002" "SunOS 5.11" "Remote Shared Memory Library Functions"
.SH NAME
rsm_memseg_import_map, rsm_memseg_import_unmap \- map or unmap imported
segment
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. -lrsm [ \fIlibrary\fR.\|.\|. ]
#include <rsmapi.h>

\fBint\fR \fBrsm_memseg_import_map\fR(\fBrsm_memseg_import_handle_t\fR \fIim_memseg\fR,
     \fBvoid **\fIaddress\fR, \fBrsm_attribute_t\fR \fIattr\fR,
     \fBrsm_permission_t\fR \fIperm\fR, \fBoff_t\fR \fIoffset\fR, \fBsize_t\fR \fIlength\fR);
.fi

.LP
.nf
\fBint\fR \fBrsm_memseg_import_unmap\fR(\fBrsm_memseg_import_handle_t\fR \fIim_memseg\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B rsm_memseg_import_map()
and
.B rsm_memseg_import_unmap()
functions
provide for mapping and unmapping operations on imported segments. The mapping
operations are only available for native architecture interconnects such as
Dolphin-SCI or Sun Fire Link. Mapping a segment allows that segment to be
accessed by CPU memory operations, saving the overhead of calling the memory
access primitives described on the
.BR rsm_memseg_import_get "(3RSM) and"
.BR rsm_memseg_import_put (3RSM)
manual pages.
.sp
.LP
The
.B rsm_memseg_import_map()
function maps an import segment into caller's
address space for the segment to be accessed by CPU memory operations.  The
.I im_memseg
argument represents the import segment that is being mapped. The
location where the process's address space is mapped to the segment is pointed
to by the
.I address
argument. The
.I attr
argiment can be one fo the
following:
.sp
.ne 2
.mk
.na
.B RSM_MAP_NONE
.ad
.RS 18n
.rt
The system will choose available virtual address to map and return its value in
the
.I address
argument.
.RE

.sp
.ne 2
.mk
.na
.B RSM_MAP_FIXED
.ad
.RS 18n
.rt
The import segment should be mapped at the requested virtual address specified
in the
.I address
argument.
.RE

.sp
.LP
The
.I perm
argument determines whether read, write or a combination of
accesses are permitted to the data being mapped. It can be either
.BR RSM_PERM_READ ,
.BR RSM_PERM_WRITE ,
or
.BR RSM_PERM_RDWR .
.sp
.LP
The
.I offset
argument is the byte offset location from the base of the
segment being mapped to
.IR address .
The
.I length
argument indicates the
number of bytes from offset to be mapped.
.sp
.LP
The
.B rsm_memseg_import_unmap()
function unmaps a previously mapped import
segment.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, these functions return 0. Otherwise, an error value
is returned to indicate the error.
.SH ERRORS
.sp
.LP
The
.B rsm_memseg_import_map()
and
.B rsm_memseg_import_unmap()
functions
can return the following errors:
.sp
.ne 2
.mk
.na
.B RSMERR_BAD_SEG_HNDL
.ad
.RS 24n
.rt
Invalid segment handle.
.RE

.sp
.LP
The
.B rsm_memseg_import_map()
function can return the following errors:
.sp
.ne 2
.mk
.na
.B RSMERR_BAD_ADDR
.ad
.RS 30n
.rt
Invalid address.
.RE

.sp
.ne 2
.mk
.na
.B RSMERR_BAD_LENGTH
.ad
.RS 30n
.rt
Invalid length.
.RE

.sp
.ne 2
.mk
.na
.B RSMERR_BAD_MEM_ALIGNMENT
.ad
.RS 30n
.rt
The address is not aligned on a page boundary.
.RE

.sp
.ne 2
.mk
.na
.B RSMERR_BAD_OFFSET
.ad
.RS 30n
.rt
Invalid offset.
.RE

.sp
.ne 2
.mk
.na
.B RSMERR_BAD_PERMS
.ad
.RS 30n
.rt
Invalid permissions.
.RE

.sp
.ne 2
.mk
.na
.B RSMERR_CONN_ABORTED
.ad
.RS 30n
.rt
Connection aborted.
.RE

.sp
.ne 2
.mk
.na
.B RSMERR_MAP_FAILED
.ad
.RS 30n
.rt
Map failure.
.RE

.sp
.ne 2
.mk
.na
.B RSMERR_SEG_ALREADY_MAPPED
.ad
.RS 30n
.rt
Segment already mapped.
.RE

.sp
.ne 2
.mk
.na
.B RSMERR_SEG_NOT_CONNECTED
.ad
.RS 30n
.rt
Segment not connected.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
lw(2.75i) |lw(2.75i)
lw(2.75i) |lw(2.75i)
.
\fBATTRIBUTE TYPE \fR\fBATTRIBUTE VALUE\fR
_
Interface StabilityEvolving
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR rsm_memseg_import_connect (3RSM),
.BR rsm_memseg_import_get (3RSM),
.BR rsm_memseg_import_put (3RSM),
.BR rsm_memseg_get_pollfd (3RSM),
.BR attributes (5)
