'\" te
.\" Copyright (c) 2001 by Sun Microsystems, Inc.  All rights reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH rsm_memseg_import_connect 3RSM "8 Jun 2001" "SunOS 5.11" "Remote Shared Memory Library Functions"
.SH NAME
rsm_memseg_import_connect, rsm_memseg_import_disconnect \- create or break
logical commection between import and export segments
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. -lrsm [ \fIlibrary\fR.\|.\|. ]
#include <rsmapi.h>

\fBint\fR \fBrsm_memseg_import_connect\fR(
     \fBrsmapi_controller_handle_t\fR \fIcontroller\fR,
     \fBrsm_node_id_t\fR \fInodeid\fR, \fBrsm_memseg_id_t\fR \fIsegment_id\fR,
     \fBrsm_permission_t\fR \fIperm\fR, \fBrsm_memseg_import_handle_t *\fImemseg\fR);
.fi

.LP
.nf
\fBint\fR \fBrsm_memseg_import_disconnect\fR(
     \fBrsm_memseg_import_handle_t\fR \fImemseg\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B rsm_memseg_import_connect()
function provides a means of creating
an import segment called
.I memseg
and establishing a logical connection
with an export segment identified by the
.I segment_id
on the node
specified by
.IR node_id .
The controller specified by
.IR controller
must have a physical connection with the controller (see
.BR rsm_get_interconnect_topology (3RSM))
used while exporting the segment
identified by
.I segment_id
on node specified by
.IR node_id .
The
.I perm
argument specifies the mode of access that the importer is
requesting for this connection. In the connection process, the mode of
access and the importers userid and groupid are compared with the access
permissions specified by the exporter. If the request mode is not valid, the
connection request is denied. The
.I perm
argument is limited to the
following octal values:
.sp
.ne 2
.mk
.na
.B 0400
.ad
.RS 8n
.rt
read mode
.RE

.sp
.ne 2
.mk
.na
.B 0200
.ad
.RS 8n
.rt
write mode
.RE

.sp
.ne 2
.mk
.na
.B 0600
.ad
.RS 8n
.rt
read/write mode
.RE

.sp
.LP
The
.B rsm_memseg_import_disconnect()
function breaks the logical
connection between the import segment and the exported segment and
deallocates the resources associated with the import segment handle
.IR memseg .
.SH RETURN VALUES
.sp
.LP
Upon successful completion, these functions return 0. Otherwise, an error
value is returned to indicate the error.
.SH ERRORS
.sp
.LP
The
.B rsm_memseg_import_connect()
and
.B rsm_memseg_import_disconnect()
functions can return the following
errors:
.sp
.ne 2
.mk
.na
.B RSMERR_BAD_SEG_HNDL
.ad
.RS 24n
.rt
Invalid segment handle.
.RE

.sp
.LP
The
.B rsm_memseg_import_connect()
function can return the following
errors:
.sp
.ne 2
.mk
.na
.B RSMERR_BAD_CTLR_HNDL
.ad
.sp .6
.RS 4n
Invalid controller handle.
.RE

.sp
.ne 2
.mk
.na
.B RSMERR_CTLR_NOT_PRESENT
.ad
.sp .6
.RS 4n
Controller not present.
.RE

.sp
.ne 2
.mk
.na
.B RSMERR_PERM_DENIED
.ad
.sp .6
.RS 4n
Permission denied.
.RE

.sp
.ne 2
.mk
.na
.B RSMERR_INSUFFICIENT_MEM
.ad
.sp .6
.RS 4n
Insufficient memory.
.RE

.sp
.ne 2
.mk
.na
.B RSMERR_INSUFFICIENT_RESOURCES
.ad
.sp .6
.RS 4n
Insufficient resources.
.RE

.sp
.ne 2
.mk
.na
.B RSMERR_SEG_NOT_PUBLISHED_TO_NODE
.ad
.sp .6
.RS 4n
Segment not published to node.
.RE

.sp
.ne 2
.mk
.na
.B RSMERR_SEG_NOT_PUBLISHED
.ad
.sp .6
.RS 4n
Segment not published at all.
.RE

.sp
.ne 2
.mk
.na
.B RSMERR_BAD_ADDR
.ad
.sp .6
.RS 4n
Bad address.
.RE

.sp
.ne 2
.mk
.na
.B RSMERR_REMOTE_NODE_UNREACHABLE
.ad
.sp .6
.RS 4n
Remote not not reachable.
.RE

.sp
.ne 2
.mk
.na
.B RSMERR_INTERRUPTED
.ad
.sp .6
.RS 4n
Connection interrupted.
.RE

.sp
.LP
The
.B rsm_memseg_import_disconnect()
function can return the following
errors:
.sp
.ne 2
.mk
.na
.B RSMERR_SEG_STILL_MAPPED
.ad
.RS 28n
.rt
Segment still mapped, need to unmap before disconnect.
.RE

.sp
.ne 2
.mk
.na
.B RSMERR_POLLFD_IN_USE
.ad
.RS 28n
.rt
Poll file descriptor in use.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
lw(2.75i) |lw(2.75i)
lw(2.75i) |lw(2.75i)
.
\fBATTRIBUTE TYPE \fR\fBATTRIBUTE VALUE\fR
_
Interface StabilityEvolving
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR rsm_memseg_import_map (3RSM),
.BR attributes (5)
