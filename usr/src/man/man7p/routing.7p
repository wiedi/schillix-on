'\" te
.\" Copyright 1989 AT&T
.\" Copyright (C) 1999, Sun Microsystems,
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" Inc. All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH routing 7P "9 Nov 1999" "SunOS 5.11" "Protocols"
.SH NAME
routing \- system support for packet network routing
.SH DESCRIPTION
.sp
.LP
The network facilities provide general packet routing. The \fBrouting\fR
interface described here can be used to maintain the system's IPv4 routing
table. It has been maintained for compatibility with older applications. The
recommended interface for maintaining the system's routing tables is the
routing socket, described at
.BR route (7P).
The routing socket can be used
to manipulate both the IPv4 and IPv6 routing tables of the system. Routing
table maintenance may be implemented in applications processes.
.sp
.LP
A simple set of data structures compose a "routing table" used in selecting
the appropriate network interface when transmitting packets. This table
contains a single entry for each route to a specific network or host. The
routing table was designed to support routing for the Internet Protocol
(IP), but its implementation is protocol independent and thus it may serve
other protocols as well. User programs may manipulate this data base with
the aid of two
.BR ioctl (2)
commands,
.B SIOCADDRT
and
.BR SIOCDELRT .
These commands allow the addition and deletion of a single routing table
entry, respectively. Routing table manipulations may only be carried out by
privileged user.
.sp
.LP
A routing table entry has the following form, as defined in
.BR /usr/include/net/route.h :
.sp
.in +2
.nf
struct rtentry {
        unit_t   rt_hash;               /* to speed lookups */
        struct  sockaddr rt_dst;        /* key */
        struct  sockaddr rt_gateway;    /* value */
        short   rt_flags;               /* up/down?, host/net */
        short   rt_refcnt;              /* # held references */
        unit_t   rt_use;                /* raw # packets forwarded */
/*
 * The kernel does not use this field, and without it the structure is
 * datamodel independent.
 */
#if !defined(_KERNEL)
        struct  ifnet *rt_ifp;          /* the answer: interface to use */
#endif                                  /* !defined(_KERNEL) */
};
.fi
.in -2

.sp
.LP
with
.I rt_flags
defined from:
.sp
.in +2
.nf
#define RTF_UP 0x1         /* route usable */
#define RTF_GATEWAY 0x2    /* destination is a gateway */
#define RTF_HOST 0x4       /* host entry (net otherwise) */
.fi
.in -2

.sp
.LP
There are three types of routing table entries: those for a specific host,
those for all hosts on a specific network, and those for any destination
not matched by entries of the first two types, called a  wildcard route.
Each network interface installs a routing table entry when it is
initialized. Normally the interface specifies if the route through it is a
"direct" connection to the destination host or network. If the route is
direct, the transport layer of a protocol family usually requests the packet
be sent to the same host specified in the packet. Otherwise, the interface
may be requested to address the packet to an entity different from the
eventual recipient; essentially, the packet is forwarded.
.sp
.LP
Routing table entries installed by a user process may not specify the hash,
reference count, use, or interface fields; these are filled in by the
routing routines. If a route is in use when it is deleted, meaning its
.B rt_refcnt
is non-zero, the resources associated with it will not be
reclaimed until all references to it are removed.
.sp
.LP
User processes read the routing tables through the
.B /dev/ip
device.
.sp
.LP
The
.I rt_use
field contains the number of packets sent along the route.
This value is used to select among multiple routes to the same destination.
When multiple routes to the same destination exist, the least used route is
selected.
.sp
.LP
A wildcard routing entry is specified with a
.B zero
destination
address value. Wildcard routes are used only when the system fails to find a
route to the destination host and network. The combination of wildcard
routes and routing redirects can provide an economical mechanism for routing
traffic.
.SH ERRORS
.sp
.ne 2
.mk
.na
.B EEXIST
.ad
.RS 15n
.rt
A request was made to duplicate an existing entry.
.RE

.sp
.ne 2
.mk
.na
.B ESRCH
.ad
.RS 15n
.rt
A request was made to delete a non-existent entry.
.RE

.sp
.ne 2
.mk
.na
.B ENOBUFS
.ad
.RS 15n
.rt
Insufficient resources were available to install a new route.
.RE

.sp
.ne 2
.mk
.na
.B ENOMEM
.ad
.RS 15n
.rt
Insufficient resources were available to install a new route.
.RE

.sp
.ne 2
.mk
.na
.B ENETUNREACH
.ad
.RS 15n
.rt
The gateway is not directly reachable.  For example, it does not match the
destination/subnet on any of the network interfaces.
.RE

.SH FILES
.sp
.ne 2
.mk
.na
.B /dev/ip
.ad
.RS 11n
.rt
.B IP
device driver
.RE

.SH SEE ALSO
.sp
.LP
.BR route (1M),
.BR ioctl (2),
.BR route (7P)
