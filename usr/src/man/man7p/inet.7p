'\" te
.\" Copyright 1989 AT&T
.\" Copyright (C) 2000, Sun Microsystems, Inc. All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH inet 7P "3 Aug 2000" "SunOS 5.11" "Protocols"
.SH NAME
inet \- Internet protocol family
.SH SYNOPSIS
.LP
.nf
\fB#include <sys/types.h>\fR
.fi

.LP
.nf
\fB#include <netinet/in.h>\fR
.fi

.SH DESCRIPTION
.sp
.LP
The Internet protocol family implements a collection of protocols which are
centered around the Internet Protocol ("\fBIP\fR") and which share a common
address format. The Internet family protocols can be accessed using the
socket interface, where they support the
.BR SOCK_STREAM ,
.BR SOCK_DGRAM ,
and
.B SOCK_RAW
socket types, or the Transport Level
Interface (TLI), where they support the connectionless (\fBT_CLTS\fR)  and
connection oriented (\fBT_COTS_ORD\fR) service types.
.SH PROTOCOLS
.sp
.LP
The Internet protocol family is comprised of the Internet Protocol
("\fBIP\fR"), the Address Resolution Protocol ("\fBARP\fR"), the Internet
Control Message Protocol ("\fBICMP\fR"), the Transmission Control Protocol
("\fBTCP\fR"), and the User Datagram Protocol ("\fBUDP\fR").
.sp
.LP
.B TCP
supports the socket interface's
.B SOCK_STREAM
abstraction and
\fBTLI\fR's \fBT_COTS_ORD\fR service type. \fBUDP\fR supports the
.B SOCK_DGRAM
socket abstraction and the
.B "TLI T_CLTS"
service
type. See \fBtcp\fR(7P) and \fBudp\fR(7P). A direct interface to
.B IP
is
available using both
.B TLI
and the socket interface (see
.BR ip (7P)).
.B ICMP
is used by the kernel to handle and report errors in protocol
processing. It is also accessible to user programs (see
.BR icmp (7P)).
.B ARP
is used to translate 32-bit
.B IP
addresses into 48-bit
Ethernet addresses. See
.BR arp (7P).
.sp
.LP
The 32-bit
.B IP
address is divided into network number and host number
parts. It is frequency-encoded. The most-significant bit is zero in Class A
addresses, in which the high-order 8 bits represent the network number.
Class B addresses have their high order two bits set to 10 and use the
high-order 16 bits as the network number field. Class C addresses have a
24-bit network number part of which the high order three bits are 110. Sites
with a cluster of
.B IP
networks may chose to use a single network number
for the cluster; this is done by using subnet addressing. The host number
portion of the address is further subdivided into subnet number and host
number parts. Within a subnet, each subnet appears to be an individual
network. Externally, the entire cluster appears to be a single, uniform
network requiring only a single routing entry. Subnet addressing is enabled
and examined by the following
.BR ioctl (2)
commands. They have the same
form as the
.B SIOCSIFADDR
command.
.sp
.ne 2
.mk
.na
.B SIOCSIFNETMASK
.ad
.RS 18n
.rt
Set interface network mask. The network mask defines the network part of
the address; if it contains more of the address than the address type would
indicate, then subnets are in use.
.RE

.sp
.ne 2
.mk
.na
.B SIOCGIFNETMASK
.ad
.RS 18n
.rt
Get interface network mask.
.RE

.SH ADDRESSING
.sp
.LP
.B IP
addresses are four byte quantities, stored in network byte order.
.B IP
addresses should be manipulated using the byte order conversion
routines. See
.BR byteorder (3SOCKET).
.sp
.LP
Addresses in the Internet protocol family use the
.BR sockaddr_in
structure, which has that following members:
.sp
.in +2
.nf
short    sin_family;
ushort_t sin_port;
struct   in_addr  sin_addr;
char     sin_zero[8];
.fi
.in -2

.sp
.LP
Library routines are provided to manipulate structures of this form; See
.BR inet (3SOCKET).
.sp
.LP
The
.B sin_addr
field of the
.B sockaddr_in
structure specifies a
local or remote
.B IP
address.  Each network interface has its own unique
.B IP
address.  The special value
.B INADDR_ANY
may be used in this
field to effect "wildcard" matching. Given in a \fBbind\fR(3SOCKET) call,
this value leaves the local
.B IP
address of the socket unspecified, so
that the socket will receive connections or messages directed at any of the
valid
.B IP
addresses of the system. This can prove useful when a process
neither knows nor cares what the local
.B IP
address is or when a process
wishes to receive requests using all of its network interfaces. The
.B sockaddr_in
structure given in the
.BR bind "(3SOCKET) call must"
specify an
.B in_addr
value of either
.B INADDR_ANY
or one of the
system's valid
.B IP
addresses. Requests to bind any other address will
elicit the error
.BR EADDRNOTAVAIL .
When a
.BR connect "(3SOCKET) call is"
made for a socket that has a wildcard local address, the system sets the
.B sin_addr
field of the socket to the
.B IP
address of the network
interface that the packets for that connection are routed through.
.sp
.LP
The
.B sin_port
field of the
.B sockaddr_in
structure specifies a
port number used by
.B TCP
or
.B UDP.
The local port address specified
in a
.BR bind "(3SOCKET) call is restricted to be greater than"
.B IPPORT_RESERVED
(defined in <\fB<netinet/in.h>\fR>) unless the
creating process is running as the superuser, providing a space of protected
port numbers. In addition, the local port address must not be in use by any
socket of same address family and type. Requests to bind sockets to port
numbers being used by other sockets return the error
.BR EADDRINUSE .
If
the local port address is specified as 0, then the system picks a unique
port address greater than
.BR IPPORT_RESERVED .
A unique local port address
is also picked when a socket which is not bound is used in a
.BR connect (3SOCKET)
or
.B sendto
(see \fBsend\fR(3SOCKET)) call. This
allows programs which do not care which local port number is used to set up
.B TCP
connections by simply calling
.BR socket "(3SOCKET) and then"
.BR connect (3SOCKET),
and to send
.B UDP
datagrams with a
.BR socket (3SOCKET)
call followed by a
.B sendto()
call.
.sp
.LP
Although this implementation restricts sockets to unique local port
numbers,
.B TCP
allows multiple simultaneous connections involving the
same local port number so long as the remote
.B IP
addresses or port
numbers are different for each connection. Programs may explicitly override
the socket restriction by setting the
.B SO_REUSEADDR
socket option with
.B setsockopt
(see
.BR getsockopt (3SOCKET)).
.sp
.LP
.B TLI
applies somewhat different semantics to the binding of local port
numbers. These semantics apply when Internet family protocols are used using
the
.BR TLI .
.SH SEE ALSO
.sp
.LP
.BR ioctl (2),
.BR bind (3SOCKET),
.BR byteorder (3SOCKET),
.BR connect (3SOCKET),
.BR gethostbyname (3NSL),
.BR getnetbyname (3SOCKET),
.BR getprotobyname (3SOCKET),
.BR getservbyname (3SOCKET),
.BR getsockopt (3SOCKET),
.BR send (3SOCKET),
.BR socket (3SOCKET),
.BR arp (7P),
.BR icmp (7P),
.BR ip (7P),
.BR tcp (7P),
.BR udp (7P)
.sp
.LP
Network Information Center,
.I "DDN Protocol Handbook"
(3 vols.), Network
Information Center,
.B SRI
International, Menlo Park, Calif., 1985.
.SH NOTES
.sp
.LP
The Internet protocol support is subject to change as the Internet
protocols develop.  Users should not depend on details of the current
implementation, but rather the services exported.
