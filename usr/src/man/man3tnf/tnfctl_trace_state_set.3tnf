'\" te
.\" Copyright (c) 1996 Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH tnfctl_trace_state_set 3TNF "4 Mar 1997" "SunOS 5.11" "TNF Library Functions"
.SH NAME
tnfctl_trace_state_set, tnfctl_filter_state_set, tnfctl_filter_list_get,
tnfctl_filter_list_add, tnfctl_filter_list_delete \- control kernel tracing
and process filtering
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR .\|.\|. ] \fIfile\fR .\|.\|. \fB-ltnfctl\fR [ \fIlibrary\fR .\|.\|. ]
#include <tnf/tnfctl.h>

\fBtnfctl_errcode_t\fR \fBtnfctl_trace_state_set\fR(\fBtnfctl_handle_t *\fIhndl\fR,
     \fBboolean_t\fR \fItrace_state\fR);
.fi

.LP
.nf
\fBtnfctl_errcode_t\fR \fBtnfctl_filter_state_set\fR(\fBtnfctl_handle_t *\fIhndl\fR,
     \fBboolean_t\fR \fIfilter_state\fR);
.fi

.LP
.nf
\fBtnfctl_errcode_t\fR \fBtnfctl_filter_list_get\fR(\fBtnfctl_handle_t *\fIhndl\fR,
     \fBpid_t **\fIpid_list\fR,\ \fBint *\fIpid_count\fR);
.fi

.LP
.nf
\fBtnfctl_errcode_t\fR \fBtnfctl_filter_list_add\fR(\fBtnfctl_handle_t *\fIhndl\fR,
     \fBpid_t\fR \fIpid_to_add\fR);
.fi

.LP
.nf
\fBtnfctl_errcode_t\fR \fBtnfctl_filter_list_delete\fR(\fBtnfctl_handle_t *\fIhndl\fR,
     \fBpid_t\fR \fIpid_to_delete\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The interfaces to control kernel tracing and process filtering are used
only with kernel handles, handles created by \fBtnfctl_kernel_open\fR(3TNF).
These interfaces are used to change the tracing and filter  states for
kernel tracing.
.sp
.LP
\fBtnfctl_trace_state_set()\fR sets the kernel global tracing state to "on"
if \fItrace_state\fR is \fBB_TRUE,\fR or to "off" if \fItrace_state\fR is
\fBB_FALSE.\fR For the kernel,  \fItrace_state\fR is off by default.Probes
that are enabled will  not write out data unless this state is on. Use
\fBtnfctl_trace_attrs_get\fR(3TNF) to retrieve the current tracing state.
.sp
.LP
\fBtnfctl_filter_state_set()\fR sets the kernel process filtering state to
"on" if \fIfilter_state\fR is \fBB_TRUE,\fR or to "off" if
\fIfilter_state\fR is \fBB_FALSE.\fR \fIfilter_state\fR is off by default.
If it is on, only probe points encountered  by processes in the process
filter set by \fBtnfctl_filter_list_add()\fR will generate trace points.
Use \fBtnfctl_trace_attrs_get\fR(3TNF) to retrieve the current process
filtering state.
.sp
.LP
\fBtnfctl_filter_list_get()\fR returns the process filter list as an array
in
.IR pid_list .
The count of elements in the process filter list is
returned in
.IR pid_count .
The caller should use \fBfree\fR(3C) to free
memory allocated for the array
.IR pid_list .
.sp
.LP
\fBtnfctl_filter_list_add()\fR adds  \fIpid_to_add\fR to the process filter
list. The process filter list is maintained even when the process filtering
state is off, but it has no effect unless the process filtering state is
on.
.sp
.LP
\fBtnfctl_filter_list_delete()\fR deletes \fIpid_to_delete\fR from the
process filter list.  It returns an error if the process does  not exist or
is not in the filter list.
.SH RETURN VALUES
.sp
.LP
The interfaces \fBtnfctl_trace_state_set()\fR,
\fBtnfctl_filter_state_set()\fR, \fBtnfctl_filter_list_add()\fR,
\fBtnfctl_filter_list_delete()\fR, and  \fBtnfctl_filter_list_get()\fR
return
.B TNFCTL_ERR_NONE
upon success.
.SH ERRORS
.sp
.LP
The following error codes apply to \fBtnfctl_trace_state_set\fR:
.sp
.ne 2
.mk
.na
.B TNFCTL_ERR_BADARG
.ad
.RS 24n
.rt
The handle is not a kernel handle.
.RE

.sp
.ne 2
.mk
.na
.B TNFCTL_ERR_NOBUF
.ad
.RS 24n
.rt
Cannot turn on tracing without a buffer being allocated.
.RE

.sp
.ne 2
.mk
.na
.B TNFCTL_ERR_BUFBROKEN
.ad
.RS 24n
.rt
Tracing is broken in the target.
.RE

.sp
.ne 2
.mk
.na
.B TNFCTL_ERR_INTERNAL
.ad
.RS 24n
.rt
An internal error occurred.
.RE

.sp
.LP
The following error codes apply to \fBtnfctl_filter_state_set\fR:
.sp
.ne 2
.mk
.na
.B TNFCTL_ERR_BADARG
.ad
.RS 23n
.rt
The handle is not a kernel handle.
.RE

.sp
.ne 2
.mk
.na
.B TNFCTL_ERR_INTERNAL
.ad
.RS 23n
.rt
An internal error occurred.
.RE

.sp
.LP
The following error codes apply to \fBtnfctl_filter_list_add\fR:
.sp
.ne 2
.mk
.na
.B TNFCTL_ERR_BADARG
.ad
.RS 24n
.rt
The handle is not a kernel handle.
.RE

.sp
.ne 2
.mk
.na
.B TNFCTL_ERR_NOPROCESS
.ad
.RS 24n
.rt
No such process exists.
.RE

.sp
.ne 2
.mk
.na
.B TNFCTL_ERR_ALLOCFAIL
.ad
.RS 24n
.rt
A memory allocation failure occurred.
.RE

.sp
.ne 2
.mk
.na
.B TNFCTL_ERR_INTERNAL
.ad
.RS 24n
.rt
An internal error occurred.
.RE

.sp
.LP
The following error codes apply to \fBtnfctl_filter_list_delete\fR:
.sp
.ne 2
.mk
.na
.B TNFCTL_ERR_BADARG
.ad
.RS 24n
.rt
The handle is not a kernel handle.
.RE

.sp
.ne 2
.mk
.na
.B TNFCTL_ERR_NOPROCESS
.ad
.RS 24n
.rt
No such process exists.
.RE

.sp
.ne 2
.mk
.na
.B TNFCTL_ERR_INTERNAL
.ad
.RS 24n
.rt
An internal error occurred.
.RE

.sp
.LP
The following error codes apply to  \fBtnfctl_filter_list_get\fR:
.sp
.ne 2
.mk
.na
.B TNFCTL_ERR_BADARG
.ad
.RS 24n
.rt
The handle is not a kernel handle.
.RE

.sp
.ne 2
.mk
.na
.B TNFCTL_ERR_ALLOCFAIL
.ad
.RS 24n
.rt
A memory allocation failure occurred.
.RE

.sp
.ne 2
.mk
.na
.B TNFCTL_ERR_INTERNAL
.ad
.RS 24n
.rt
An internal error occurred.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWtnfc
_
MT LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR prex (1),
.BR TNF_PROBE (3TNF),
\fBfree\fR(3C),
\fBlibtnfctl\fR(3TNF), \fBtnfctl_kernel_open\fR(3TNF),
\fBtnfctl_trace_attrs_get\fR(3TNF), \fBtracing\fR(3TNF),
\fBtnf_kernel_probes\fR(4), \fBattributes\fR(5)
