'\" te
.\" Copyright (c) 1996 Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH tnfctl_trace_attrs_get 3TNF "4 Mar 1997" "SunOS 5.11" "TNF Library Functions"
.SH NAME
tnfctl_trace_attrs_get \- get the trace attributes from a tnfctl handle
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-ltnfctl\fR [ \fIlibrary\fR.\|.\|. ]
#include <tnf/tnfctl.h>

\fBtnfctl_errcode_t\fR \fBtnfctl_trace_attrs_get\fR(\fBtnfctl_handle_t *\fIhndl\fR,
     \fBtnfctl_trace_attrs_t *\fIattrs\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B tnfctl_trace_attrs_get()
function returns the trace attributes
associated with
.I hndl
in
.IR attrs .
The trace attributes can be
changed by some of the other interfaces in \fBlibtnfctl\fR(3TNF). It is the
client's responsibility to use
.B tnfctl_trace_attrs_get()
to get the
new trace attributes after use of interfaces that change them.  Typically, a
client will use
.B tnfctl_trace_attrs_get()
after a call to
.BR tnfctl_continue (3TNF)
in order to make sure that tracing is still
working. See the discussion of
.B trace_buf_state
that follows.
.sp
.LP
Trace attributes are represented by the \fBstruct tnfctl_trace_attrs\fR
structure defined in <\fBtnf/tnfctl.h\fR>:
.sp
.in +2
.nf
struct tnfctl_trace_attrs {
pid_t              targ_pid;           /* not kernel mode */
const char         *trace_file_name;   /* not kernel mode */
size_t             trace_buf_size;
size_t             trace_min_size;
tnfctl_bufstate_t  trace_buf_state;
boolean_t          trace_state;
boolean_t          filter_state;       /* kernel mode only */
long               pad;
};
.fi
.in -2

.sp
.LP
The semantics of the individual members of
.I attrs
are:
.sp
.ne 2
.mk
.na
.B targ_pid
.ad
.RS 19n
.rt
The process id of the target process.  This is not valid for kernel
tracing.
.RE

.sp
.ne 2
.mk
.na
.B trace_file_name
.ad
.RS 19n
.rt
The name of the trace file to which the target writes.
.B trace_file_name
will be
.B NULL
if no trace file exists or if
kernel tracing is implemented.  This pointer should not be used after
calling other
.B libtnfctl
interfaces. The client should copy this string
if it should be saved for the use of other
.B libtnfctl
interfaces.
.RE

.sp
.ne 2
.mk
.na
.B trace_buf_size
.ad
.RS 19n
.rt
The size of the trace buffer or file in bytes.
.RE

.sp
.ne 2
.mk
.na
.B trace_min_size
.ad
.RS 19n
.rt
The minimum size in bytes of the trace buffer that can be allocated by
using the \fBtnfctl_buffer_alloc\fR(3TNF) interface.
.RE

.sp
.ne 2
.mk
.na
.B trace_buf_state
.ad
.RS 19n
.rt
The state of the trace buffer.
.B TNFCTL_BUF_OK
indicates that a trace
buffer has been allocated.
.B TNFCTL_BUF_NONE
indicates that no buffer
has been allocated.
.B TNFCTL_BUF_BROKEN
indicates that there is an
internal error in the target for tracing. The target will continue to run
correctly, but no trace records will be written. To fix tracing, restart the
process. For kernel tracing, deallocate the existing buffer with
.BR tnfctl_buffer_dealloc (3TNF)
and allocate a new one with
.BR tnfctl_buffer_alloc (3TNF).
.RE

.sp
.ne 2
.mk
.na
.B trace_state
.ad
.RS 19n
.rt
The global tracing state of the target. Probes that are enabled will not
write out data unless this state is on. This state is off by default for the
kernel and can be changed by \fBtnfctl_trace_state_set\fR(3TNF). For a
process, this state is on by default and can only be changed by
.BR tnf_process_disable (3TNF)
and  \fBtnf_process_enable\fR(3TNF).
.RE

.sp
.ne 2
.mk
.na
.B filter_state
.ad
.RS 19n
.rt
The state of process filtering.  For kernel probe control, it is possible
to select a set of processes for which probes are enabled. See
.BR tnfctl_filter_list_get (3TNF),
.BR tnfctl_filter_list_add (3TNF),
and
.BR tnfctl_filter_list_delete (3TNF).
No trace output will be written when
other processes traverse these probe points.  By default process filtering
is off, and all processes cause the generation of trace records when they
hit an enabled probe.  Use \fBtnfctl_filter_state_set\fR(3TNF) to change the
filter state.
.RE

.SH RETURN VALUES
.sp
.LP
The \fBtnfctl_trace_attrs_get()\fR function returns \fBTNFCTL_ERR_NONE\fR
upon success.
.SH ERRORS
.sp
.LP
The
.B tnfctl_trace_attrs_get()
function will fail if:
.sp
.ne 2
.mk
.na
.B TNFCTL_ERR_INTERNAL
.ad
.RS 23n
.rt
An internal error occurred.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWtnfc
_
MT LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR prex (1),
.BR TNF_PROBE (3TNF),
.BR libtnfctl (3TNF),
.BR tnfctl_buffer_alloc (3TNF),
.BR tnfctl_continue (3TNF),
.BR tnfctl_filter_list_get (3TNF),
.BR tnf_process_disable (3TNF),
.BR tracing (3TNF),
.BR attributes (5)
