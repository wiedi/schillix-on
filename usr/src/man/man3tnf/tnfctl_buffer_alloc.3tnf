'\" te
.\" Copyright (c) 1996 Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH tnfctl_buffer_alloc 3TNF "4 Mar 1997" "SunOS 5.11" "TNF Library Functions"
.SH NAME
tnfctl_buffer_alloc, tnfctl_buffer_dealloc \- allocate or deallocate a
buffer for trace data
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR .\|.\|. ] \fIfile\fR .\|.\|. \fB-ltnfctl\fR [ \fIlibrary\fR .\|.\|. ]
#include <tnf/tnfctl.h>
\fBtnfctl_errcode_t\fR \fBtnfctl_buffer_alloc\fR(\fBtnfctl_handle_t *\fIhndl\fR,
     \fBconst char *\fItrace_file_name\fR, \fBsize_t\fR \fItrace_buffer_size\fR);
.fi

.LP
.nf
\fBtnfctl_buffer_dealloc\fR(\fBtnfctl_handle_t *\fIhndl\fR);
.fi

.SH DESCRIPTION
.sp
.LP
.B tnfctl_buffer_alloc()
allocates a buffer to which trace events are
logged. When tracing a process using a
.B tnfctl
handle returned by
.BR tnfctl_pid_open (3TNF),
.BR tnfctl_exec_open (3TNF),
.BR tnfctl_indirect_open (3TNF),
and
.BR tnfctl_internal_open (3TNF)),
.I trace_file_name
is the name of the trace file to which trace events
should be logged. It can be an absolute path specification or a relative
path specification. If it is relative, the current working directory of the
process that is calling
.B tnfctl_buffer_alloc()
is prefixed to
.IR trace_file_name .
If the named trace file already exists, it is
overwritten. For kernel tracing, that is, for a tnfctl handle returned by
.BR tnfctl_kernel_open (3TNF),
trace events are logged to a trace buffer in
memory; therefore,
.I trace_file_name
is ignored.  Use \fBtnfxtract\fR(1)
to extract a kernel buffer into a file.
.sp
.LP
.I trace_buffer_size
is the size in bytes of the trace buffer that
should be allocated. An error is returned if an attempt is made to allocate
a buffer when one already exists.
.B tnfctl_buffer_alloc()
affects the
trace attributes; use 
.BR tnfctl_trace_attrs_get (3TNF)
to get the latest
trace attributes after a buffer is allocated.
.sp
.LP
.B tnfctl_buffer_dealloc()
is used to deallocate a kernel trace buffer
that is no longer needed.
.I hndl
must be a kernel handle, returned by
.BR tnfctl_kernel_open (3TNF).
A process's trace file cannot be deallocated
using
.BR tnfctl_buffer_dealloc() .
Instead, once the trace file is no
longer needed for analysis and after  the process being traced exits, use
.BR rm (1)
to remove the trace file. Do not remove the trace file while the
process being traced is still alive.
.B tnfctl_buffer_dealloc()
affects
the trace attributes; use 
.BR tnfctl_trace_attrs_get (3TNF)
to get the
latest trace attributes after a buffer is deallocated.
.sp
.LP
For a complete discussion of
.BR "tnf tracing" ,
see
.BR tracing (3TNF).
.SH RETURN VALUES
.sp
.LP
.B tnfctl_buffer_alloc()
and
.B tnfctl_buffer_dealloc()
return
.B TNFCTL_ERR_NONE
upon success.
.SH ERRORS
.sp
.LP
The following error codes apply to
.BR tnfctl_buffer_alloc() :
.sp
.ne 2
.mk
.na
.B TNFCTL_ERR_BUFEXISTS
.ad
.RS 27n
.rt
A buffer already exists.
.RE

.sp
.ne 2
.mk
.na
.B TNFCTL_ERR_ACCES
.ad
.RS 27n
.rt
Permission denied; could not create a trace file.
.RE

.sp
.ne 2
.mk
.na
.B TNFCTL_ERR_SIZETOOSMALL
.ad
.RS 27n
.rt
The
.I trace_buffer_size
requested is smaller than the minimum trace
buffer size needed. Use
.B trace_min_size
of trace attributes in
.BR tnfctl_trace_attrs_get (3TNF)
to determine the minimum size of the
buffer.
.RE

.sp
.ne 2
.mk
.na
.B TNFCTL_ERR_SIZETOOBIG
.ad
.RS 27n
.rt
The requested trace file size is too big.
.RE

.sp
.ne 2
.mk
.na
.B TNFCTL_ERR_BADARG
.ad
.RS 27n
.rt
.I trace_file_name
is
.I NULL
or the absolute path name is longer
than
.BR MAXPATHLEN.
.RE

.sp
.ne 2
.mk
.na
.B TNFCTL_ERR_ALLOCFAIL
.ad
.RS 27n
.rt
A memory allocation failure occurred.
.RE

.sp
.ne 2
.mk
.na
.B TNFCTL_ERR_INTERNAL
.ad
.RS 27n
.rt
An internal error occurred.
.RE

.sp
.LP
The following error codes apply to
.BR tnfctl_buffer_dealloc() :
.sp
.ne 2
.mk
.na
.B TNFCTL_ERR_BADARG
.ad
.RS 25n
.rt
.I hndl
is not a kernel handle.
.RE

.sp
.ne 2
.mk
.na
.B TNFCTL_ERR_NOBUF
.ad
.RS 25n
.rt
No buffer exists to deallocate.
.RE

.sp
.ne 2
.mk
.na
.B TNFCTL_ERR_BADDEALLOC
.ad
.RS 25n
.rt
Cannot deallocate a trace buffer unless tracing is stopped. Use
.BR tnfctl_trace_state_set (3TNF)
to stop tracing.
.RE

.sp
.ne 2
.mk
.na
.B TNFCTL_ERR_INTERNAL
.ad
.RS 25n
.rt
An internal error occurred.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWtnfc
_
MT LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR prex (1),
.BR rm (1),
.BR tnfxtract (1),
.BR TNF_PROBE (3TNF),
.BR libtnfctl (3TNF),
.BR tnfctl_exec_open (3TNF),
.BR tnfctl_indirect_open (3TNF),
.BR tnfctl_internal_open (3TNF),
.BR tnfctl_kernel_open (3TNF),
.BR tnfctl_pid_open (3TNF),
.BR tnfctl_trace_attrs_get (3TNF),
.BR tracing (3TNF),
.BR attributes (5)
