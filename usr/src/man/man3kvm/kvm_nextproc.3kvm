'\" te
.\" Copyright (c) 2002, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH kvm_nextproc 3KVM "2 May 2002" "SunOS 5.11" "Kernel VM Library Functions"
.SH NAME
kvm_nextproc, kvm_getproc, kvm_setproc \- read system process structures
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR\&.\|.\|. ] \fIfile\fR\&.\|.\|. \fB-lkvm\fR [ \fIlibrary\fR\&.\|.\|.]
#include <kvm.h>
#include <sys/param.h>
#include <sys/time.h>
#include <sys/proc.h>

\fBstruct proc *\fBkvm_nextproc\fR(\fBkvm_t *\fIkd\fR);
.fi

.LP
.nf
\fBint\fR \fBkvm_setproc\fR(\fBkvm_t *\fIkd\fR);
.fi

.LP
.nf
\fBstruct proc *\fBkvm_getproc\fR(\fBkvm_t *\fIkd\fR, \fBpid_t\fR \fIpid\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B kvm_nextproc()
function reads sequentially all of the system
process structures from the kernel identified by
.I kd
(see
.BR kvm_open (3KVM)).
Each call to
.B kvm_nextproc()
returns a pointer to
the static memory area that contains a copy of the next valid process table
entry. There is no guarantee that the data will remain valid across calls to
.BR kvm_nextproc() ,
.BR kvm_setproc() ,
or
.BR kvm_getproc() .
If the
process structure must be saved, it should be copied to non-volatile
storage.
.sp
.LP
For performance reasons, many implementations will cache a set of system
process structures. Since the system state is liable to change between calls
to
.BR kvm_nextproc() ,
and since the cache may contain obsolete
information, there is no guarantee that every process structure returned
refers to an active process, nor is it certain that all processes will be
reported.
.sp
.LP
The
.B kvm_setproc()
function rewinds the process list, enabling
\fBkvm_nextproc()\fR to rescan from the beginning of the system process
table. This function will always flush the process structure cache, allowing
an application to re-scan the process table of a running system.
.sp
.LP
The
.B kvm_getproc()
function locates the
.B proc
structure of the
process specified by
.I pid
and returns a pointer to it.  Although this
function does not interact with the process table pointer manipulated by
.BR kvm_nextproc() ,
the restrictions regarding the validity of the data
still apply.
.SH RETURN VALUES
.sp
.LP
On success,
.B kvm_nextproc()
returns a pointer to a copy of the next
valid process table entry. On failure, it returns
.IR NULL .
.sp
.LP
On success,
.B kvm_getproc()
returns a pointer to the
.IR proc
structure of the process specified by
.IR pid .
On failure, it returns
.IR NULL .
.sp
.LP
The
.B kvm_setproc()
function returns 0 on success and \(mi1 on
failure.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStable
_
MT-LevelUnsafe
.TE

.SH SEE ALSO
.sp
.LP
.BR kvm_getu (3KVM),
.BR kvm_open (3KVM),
.BR kvm_kread (3KVM),
.BR attributes (5)
