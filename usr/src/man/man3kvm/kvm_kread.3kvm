'\" te
.\" Copyright (c) 2002, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH kvm_kread 3KVM "2 May 2002" "SunOS 5.11" "Kernel VM Library Functions"
.SH NAME
kvm_kread, kvm_kwrite, kvm_uread, kvm_uwrite \- copy data to or from a
kernel image or running system
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR\&.\|.\|. ] \fIfile\fR\&.\|.\|. \fB-lkvm\fR [ \fIlibrary\fR\&.\|.\|.]
#include <kvm.h>

\fBssize_t\fR \fBkvm_kread\fR(\fBkvm_t *\fIkd\fR, \fBuintptr_t\fR \fIaddr\fR, \fBvoid *\fIbuf\fR, \fBsize_t\fR \fInbytes\fR);
.fi

.LP
.nf
\fBssize_t\fR \fBkvm_kwrite\fR(\fBkvm_t *\fIkd\fR, \fBuintptr_t\fR \fIaddr\fR, \fBvoid *\fIbuf\fR, \fBsize_t\fR \fInbytes\fR);
.fi

.LP
.nf
\fBssize_t\fR \fBkvm_uread\fR(\fBkvm_t\fR \fI*kd\fR, \fBuintptr_t\fR \fIaddr\fR, \fBvoid *\fIbuf\fR, \fBsize_t\fR \fInbytes\fR);
.fi

.LP
.nf
\fBssize_t\fR \fBkvm_uwrite\fR(\fBkvm_t *\fIkd\fR, \fBuintptr_t\fR \fIaddr\fR, \fBvoid *\fIbuf\fR, \fBsize_t\fR \fInbytes\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B kvm_kread()
function transfers data from the kernel address space
to the address space of the process.
.I nbytes
bytes of data are copied
from the kernel virtual address given by
.I addr
to the buffer pointed to
by
.IR buf .
.sp
.LP
The
.B kvm_kwrite()
function is like
.BR kvm_kread() ,
except that the
direction of the transfer is reversed. To use this function, the
.BR kvm_open (3KVM)
call that returned
.I kd
must have specified write
access.
.sp
.LP
The
.B kvm_uread()
function transfers data from the address space of the
processes specified in the most recent
.BR kvm_getu "(3KVM) call."
.I nbytes
bytes of data are copied from the user virtual address given by
.I addr
to the buffer pointed to by \fIbuf\fR.
.sp
.LP
The
.B kvm_uwrite()
function is like
.BR kvm_uread() ,
except that the
direction of the transfer is reversed. To use this function, the
.BR kvm_open (3KVM)
call that returned
.I kd
must have specified write
access. The address is resolved in the address space of the process
specified in the most recent
.BR kvm_getu "(3KVM) call."
.SH RETURN VALUES
.sp
.LP
On success, these functions return the number of bytes actually
transferred. On failure, they return \(mi1.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStable
_
MT-LevelUnsafe
.TE

.SH SEE ALSO
.sp
.LP
.BR kvm_getu (3KVM),
.BR kvm_nlist (3KVM),
.BR kvm_open (3KVM),
.BR attributes (5)
