'\" te
.\" Copyright (c) 2008, Sun Microsystems Inc. All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mms_send_cmd 3MMS "28 Oct 2008" "SunOS 5.11" "Media Management System Library Functions"
.SH NAME
mms_send_cmd, mms_send_acmd, mms_read_response, mms_free_rsp \-
communication functions for MMS client
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR.\|.\|.] \fIfile\fR.\|.\|. -\fBlmms\fR [ \fIlibrary\fR.\|.\|.]
#include <mms_api.h>

\fBint\fR \fBmms_send_cmd\fR(\fBvoid *\fIsession\fR, \fBchar *\fIcmd\fR, \fBvoid **\fIrsp\fR);
.fi

.LP
.nf
\fBint\fR \fBmms_send_acmd\fR(\fBvoid *\fIsession\fR, \fBchar *\fIcmd\fR,
     \fBvoid\fR (*\fIcallbk\fR)(\fBvoid *\fIarg\fR, \fBvoid *\fIarg1\fR), \fBvoid\fR \fIcallbk_parm\fR);
.fi

.LP
.nf
\fBint\fR \fBmms_read_response\fR(\fBvoid *\fIsession\fR, \fBchar *\fItid\fR, \fBvoid **\fIrsp\fR);
.fi

.LP
.nf
\fBvoid\fR \fBmms_free_rsp\fR(\fBvoid *\fIrsp\fR);
.fi

.SH DESCRIPTION
.sp
.LP
For these functions,
.I session
specifies which session to use to
communicate with the MMS.
.sp
.LP
The
.B mms_send_cmd()
function sends an MMP command
.I cmd
with a
task ID of
.I tid
to MMS. On successful completion of the command, the
response is returned in rsp. This function can be used in either a
synchronous or asynchronous session.
.sp
.LP
The
.B mms_send_acmd()
function sends an MMP command
.I cmd
with a
task ID of
.I tid
to MMS, but does not wait for a response from MMS. When
a response is received, the API invokes the call back function
.IR callbk ,
passing
.I callbk_parm
as the first argument and the response as the
second argument. This function can only be used in an asynchronous
session.
.sp
.LP
The
.B mms_read_response()
function obtains additional responses if the
response to
.B mms_send_cmd()
or
.B mms_send_acmd()
function returned
an "intermediate" response. This occurs when the response exceeds the
allowed size and has to be delivered in several separate responses.
.sp
.LP
The \fBmms_free_rsp()\fR function frees the memory associated with a
response from one of the communication functions.
.SS "Response Types"
.sp
.LP
There are five possible responses from MMS:
.sp
.ne 2
.mk
.na
.B cancelled
.ad
.RS 16n
.rt
The client cancelled the command prior to MMS starting execution of it.
.RE

.sp
.ne 2
.mk
.na
.B error
.ad
.RS 16n
.rt
The command failed to be executed. The format of the error response
contains a error class and code indicating the type of failure that
occurred. An optional error message may also be specified.
.RE

.sp
.ne 2
.mk
.na
.B intermediate
.ad
.RS 16n
.rt
The response contains data that exceeds a preset memory size that a
response can contain. If a command generates a response that exceeds the
preset memory size, MMS breaks the response into a series of responses
consisting of one or more intermediate responses followed by a success
response. Each of the intermediate responses and the success response will
contain a valid response structure that the client can process
individually.
.RE

.sp
.ne 2
.mk
.na
.B success
.ad
.RS 16n
.rt
The command has completed successfully. The data that is returned with the
success response is dependent on what the command requested for a report.
.RE

.sp
.ne 2
.mk
.na
.B unacceptable
.ad
.RS 16n
.rt
The syntax of the command the client sent to MMS was invalid.
.RE

.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B MMS_API_OK
is returned. If a function
encounters a processing error, it returns an error code indicating the type
of error.
.SH ERRORS
.sp
.LP
These functions will fail if:
.sp
.ne 2
.mk
.na
.B MMS_API_ERR
.ad
.RS 26n
.rt
Unrecoverable internal processing error occurred.
.RE

.sp
.ne 2
.mk
.na
.B MMS_API_NOT_ERR_RSP
.ad
.RS 26n
.rt
Response is not an error response.
.RE

.sp
.ne 2
.mk
.na
.B MMS_API_SHUTDOWN
.ad
.RS 26n
.rt
Client has shut down API.
.RE

.sp
.ne 2
.mk
.na
.B MMS_ASYNC_API_FAILURE
.ad
.RS 26n
.rt
Reader thread unable to obtain reader mutex.
.RE

.sp
.ne 2
.mk
.na
.B MMS_CFG_FILE_ERR
.ad
.RS 26n
.rt
Unable to open watcher daemon's network configuration file.
.RE

.sp
.ne 2
.mk
.na
.B MMS_E_CONNECT_ERR
.ad
.RS 26n
.rt
Failed to connect to MMS.
.RE

.sp
.ne 2
.mk
.na
.B MMS_E_INVALID_RESPONSE
.ad
.RS 26n
.rt
Invalid MMS response to command.
.RE

.sp
.ne 2
.mk
.na
.B MMS_E_NET_IO_ERR
.ad
.RS 26n
.rt
Connection failure to MMS.
.RE

.sp
.ne 2
.mk
.na
.B MMS_E_SYNTAX_ERR
.ad
.RS 26n
.rt
MMS response contained a syntax error.
.RE

.sp
.ne 2
.mk
.na
.B MMS_ERR_BIAS
.ad
.RS 26n
.rt
Unknown Error code.
.RE

.sp
.ne 2
.mk
.na
.B MMS_INVALID_RSP
.ad
.RS 26n
.rt
Unknown response type received.
.RE

.sp
.ne 2
.mk
.na
.B MMS_MALLOC_ERROR
.ad
.RS 26n
.rt
Unable to allocate required space.
.RE

.sp
.ne 2
.mk
.na
.B MMS_MISSING_TASKID
.ad
.RS 26n
.rt
Unable to find task ID in response.
.RE

.sp
.ne 2
.mk
.na
.B MMS_SELECT_ERROR
.ad
.RS 26n
.rt
Select system call failed.
.RE

.sp
.ne 2
.mk
.na
.B MMS_TRACE_FAILURE
.ad
.RS 26n
.rt
Unable to open API's trace file.
.RE

.sp
.ne 2
.mk
.na
.B MMS_WRONG_API_MODE
.ad
.RS 26n
.rt
API session does not support this API command.
.RE

.sp
.ne 2
.mk
.na
.B MMS_WRONG_TASKID
.ad
.RS 26n
.rt
Wrong task ID found for accept response.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityUncommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR libmms (3LIB),
.BR mms_rsp_type (3MMS),
.BR mms_init (3MMS),
.BR attributes (5)
