'\" te
.\" Copyright (C) 1988 Sun Microsystems, Inc. - All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH floatingpoint.h 3HEAD "5 Mar 1993" "SunOS 5.11" "Headers"
.SH NAME
floatingpoint.h, floatingpoint \- IEEE floating point definitions
.SH SYNOPSIS
.LP
.nf
#include <floatingpoint.h>
.fi

.SH DESCRIPTION
.sp
.LP
This file defines constants, types, and functions used to implement
standard floating point according to ANSI/IEEE Std 754-1985. The functions
are implemented in
.BR libc .
The included header file <\fBsys/ieeefp.h\fR>
defines certain types of interest to the kernel.
.SS "IEEE Rounding Modes"
.sp
.ne 2
.mk
.na
\fBfp_direction_type\fR
.ad
.RS 23n
.rt
The type of the IEEE rounding direction mode. Note: the order of
enumeration varies according to hardware.
.RE

.sp
.ne 2
.mk
.na
\fBfp_precision_type\fR
.ad
.RS 23n
.rt
The type of the IEEE rounding precision mode, which only applies on systems
that support extended precision such as machines based on the Intel 80387
FPU or the 80486.
.B SIGFPE
handling:
.RE

.sp
.ne 2
.mk
.na
\fBsigfpe_code_type\fR
.ad
.RS 23n
.rt
The type of a
.B SIGFPE
code.
.RE

.sp
.ne 2
.mk
.na
\fBsigfpe_handler_type\fR
.ad
.RS 23n
.rt
The type of a user-definable
.B SIGFPE
exception handler called to
handle a particular
.B SIGFPE
code.
.RE

.sp
.ne 2
.mk
.na
.B SIGFPE_DEFAULT
.ad
.RS 23n
.rt
A macro indicating the default
.B SIGFPE
exception handling, namely to
perform the exception handling specified by the user, if any, and otherwise
to dump core using
.BR abort (3C).
.RE

.sp
.ne 2
.mk
.na
.B SIGFPE_IGNORE
.ad
.RS 23n
.rt
A macro indicating an alternate
.B SIGFPE
exception handling, namely to
ignore and continue execution.
.RE

.sp
.ne 2
.mk
.na
.B SIGFPE_ABORT
.ad
.RS 23n
.rt
A macro indicating an alternate
.B SIGFPE
exception handling, namely to
abort with a core dump.
.RE

.SS "IEEE Exception Handling"
.sp
.ne 2
.mk
.na
.B N_IEEE_EXCEPTION
.ad
.RS 27n
.rt
The number of distinct IEEE floating-point exceptions.
.RE

.sp
.ne 2
.mk
.na
\fBfp_exception_type\fR
.ad
.RS 27n
.rt
The type of the
.B N_IEEE_EXCEPTION
exceptions.  Each exception is given
a bit number.
.RE

.sp
.ne 2
.mk
.na
\fBfp_exception_field_type\fR
.ad
.RS 27n
.rt
The type intended to hold at least
.B N_IEEE_EXCEPTION
bits
corresponding to the IEEE exceptions numbered by
.BR fp_exception_type .
Thus \fBfp_inexact\fR corresponds to the least significant bit and
\fBfp_invalid\fR to the fifth least significant bit. Note: some operations
may set more than one exception.
.RE

.SS "IEEE Formats and Classification"
.sp
.ne 2
.mk
.na
.BR single ;\|\fBextended\fR;\|\fBquadruple\fR
.ad
.sp .6
.RS 4n
Definitions of IEEE formats.
.RE

.sp
.ne 2
.mk
.na
\fBfp_class_type\fR
.ad
.sp .6
.RS 4n
An enumeration of the various classes of IEEE values and symbols.
.RE

.SS "IEEE Base Conversion"
.sp
.LP
The functions described under \fBfloating_to_decimal\fR(3C) and
\fBdecimal_to_floating\fR(3C) satisfy not only the \fBIEEE\fR Standard, but
also the stricter requirements of correct rounding for all arguments.
.sp
.ne 2
.mk
.na
.B DECIMAL_STRING_LENGTH
.ad
.RS 26n
.rt
The length of a
.BR decimal_string .
.RE

.sp
.ne 2
.mk
.na
.B decimal_string
.ad
.RS 26n
.rt
The digit buffer in a
.BR decimal_record .
.RE

.sp
.ne 2
.mk
.na
.B decimal_record
.ad
.RS 26n
.rt
The canonical form for representing an unpacked decimal floating-point
number.
.RE

.sp
.ne 2
.mk
.na
\fBdecimal_form\fR
.ad
.RS 26n
.rt
The type used to specify fixed or floating binary to decimal conversion.
.RE

.sp
.ne 2
.mk
.na
.B decimal_mode
.ad
.RS 26n
.rt
A struct that contains specifications for conversion between binary and
decimal.
.RE

.sp
.ne 2
.mk
.na
\fBdecimal_string_form\fR
.ad
.RS 26n
.rt
An enumeration of possible valid character strings representing
floating-point numbers, infinities, or NaNs.
.RE

.SH FILES
.sp
.LP
\fB/usr/include/sys/ieeefp.h\fR
.SH SEE ALSO
.sp
.LP
.BR abort (3C),
.BR decimal_to_floating (3C),
.BR econvert (3C),
\fBfloating_to_decimal\fR(3C), \fBsigfpe\fR(3C),
.BR string_to_decimal (3C),
.BR strtod (3C)
