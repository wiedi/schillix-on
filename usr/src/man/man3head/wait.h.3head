'\" te
.\" Copyright 1989 AT&T.
.\" Copyright (c) 2001, The IEEE and The Open Group. All Rights Reserved.
.\" Portions Copyright (c) 2004, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH wait.h 3HEAD "10 Sep 2004" "SunOS 5.11" "Headers"
.SH NAME
wait.h, wait \- wait status
.SH SYNOPSIS
.LP
.nf
\fB#include <sys/wait.h>\fR
.fi

.SH DESCRIPTION
.sp
.LP
When a process waits for status from its children using either the
.BR wait (3C)
or
.BR waitpid (3C)
function, the status returned can be
evaluated with the following macros, defined in
.RB < sys/wait.h >.
These
macros evaluate to integral expressions. The
.I stat
argument to these
macros is the integer value returned from
.B wait()
or
.BR waitpid() .
.sp
.ne 2
.mk
.na
\fBWCOREDUMP\fR(\fIstat\fR)\fR
.ad
.RS 22n
.rt
If the value of
.B WIFSIGNALED
.RI ( stat )
is non-zero, this macro
evaluates to a non-zero value if a core image of the terminated child was
created.
.RE

.sp
.ne 2
.mk
.na
\fBWEXITSTATUS\fR(\fIstat\fR)\fR
.ad
.RS 22n
.rt
If the value of  \fBWIFEXITED(\fIstat\fB)\fR is non-zero, this macro
evaluates to the exit code that the child process passed to
.BR _exit()
(see
.BR exit (2))
or
.BR exit "(3C), or the value that the child process"
returned from
.BR main .
.RE

.sp
.ne 2
.mk
.na
\fBWIFCONTINUED\fR(\fIstat\fR)\fR
.ad
.RS 22n
.rt
Evaluates to a non-zero value if status was returned for a child process
that has continued.
.RE

.sp
.ne 2
.mk
.na
\fBWIFEXITED\fR(\fIstat\fR)\fR
.ad
.RS 22n
.rt
Evaluates to a non-zero value if status was returned for a child process
that terminated normally.
.RE

.sp
.ne 2
.mk
.na
\fBWIFSIGNALED\fR(\fIstat\fR)\fR
.ad
.RS 22n
.rt
Evaluates to a non-zero value if status was returned for a child process
that terminated due to the receipt of a signal.
.RE

.sp
.ne 2
.mk
.na
\fBWIFSTOPPED\fR(\fIstat\fR)\fR
.ad
.RS 22n
.rt
Evaluates to a non-zero value if status was returned for a child process
that is currently stopped.
.RE

.sp
.ne 2
.mk
.na
\fBWSTOPSIG\fR(\fIstat\fR)\fR
.ad
.RS 22n
.rt
If the value of \fBWIFSTOPPED(\fIstat\fB)\fR is non-zero, this macro
evaluates to the number of the signal that caused the child process to
stop.
.RE

.sp
.ne 2
.mk
.na
\fBWTERMSIG\fR(\fIstat\fR)\fR
.ad
.RS 22n
.rt
If the value of  \fBWIFSIGNALED\fR(\fIstat\fR) is non-zero, this macro
evaluates to the number of the signal that caused the termination of the
child process.
.RE

.sp
.LP
The
.RB < sys/wait.h >
header defines the symbolic constants listed below
for use with
.BR waitpid (3C).
.sp
.ne 2
.mk
.na
.B WNOHANG
.ad
.RS 13n
.rt
Do not hang if no status is available; return immediately.
.RE

.sp
.ne 2
.mk
.na
.B WUNTRACED
.ad
.RS 13n
.rt
Report status of stopped child process.
.RE

.sp
.LP
The symbolic constants listed below are defined as possible values for the
.I options
argument to
.BR waitid (2).
.sp
.ne 2
.mk
.na
.B WEXITED
.ad
.RS 14n
.rt
Wait for processes that have exited.
.RE

.sp
.ne 2
.mk
.na
.B WSTOPPED
.ad
.RS 14n
.rt
Status is returned for any child that has stopped upon receipt of a
signal.
.RE

.sp
.ne 2
.mk
.na
.B WCONTINUED
.ad
.RS 14n
.rt
Status is returned for any child that was stopped and has been continued.
.RE

.sp
.ne 2
.mk
.na
.B WNOHANG
.ad
.RS 14n
.rt
Return immediately if there are no children to wait for.
.RE

.sp
.ne 2
.mk
.na
.B WNOWAIT
.ad
.RS 14n
.rt
Keep the process whose status is returned in
.B infop
in a waitable
state.
.RE

.sp
.LP
The type
.B idtype_t
is defined as an enumeration type whose possible
values include the following:
.sp
.in +2
.nf
P_ALL
P_PID
P_PGID
.fi
.in -2

.sp
.LP
The
.B id_t
and
.B pid_t
types are defined as described in
.RB < sys/types.h >.
.sp
.LP
.RB "The " siginfo_t " type is defined as described in <" signal.h >.
.sp
.LP
The
.B rusage
structure is defined as described in
.RB < sys/resource.h >.
.sp
.LP
Inclusion of the
.RB < sys/wait.h >
header can also make visible all
.RB "symbols from <" signal.h "> and <" sys/resource.h >.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard
.TE

.SH SEE ALSO
.sp
.LP
.BR exit (2),
.BR waitid (2),
.BR exit (3C),
.BR wait (3C),
\fBwaitpid\fR(3C),\fBattributes\fR(5), \fBstandards\fR(5)
