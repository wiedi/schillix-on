'\" te
.\" Copyright (c) 2001, The IEEE and The Open Group. All Rights Reserved.
.\" Portions Copyright (c) 2004, Sun Microsystems, Inc. All Rights Reserved.
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH termios.h 3HEAD "10 Sep 2004" "SunOS 5.11" "Headers"
.SH NAME
termios.h, termios \- define values for termios
.SH SYNOPSIS
.LP
.nf
#include <\fBtermios.h\fR>
.fi

.SH DESCRIPTION
.sp
.LP
The <\fBtermios.h\fR> header contains the definitions used by the terminal
I/O interfaces. See \fBtermios\fR(3C) and \fBtermio\fR(7I) for an overview
of the terminal interface.
.SS "The termios Structure"
.sp
.LP
The following data types are defined through
.BR typedef :
.sp
.ne 2
.mk
.na
.B cc_t
.ad
.RS 12n
.rt
used for terminal special characters
.RE

.sp
.ne 2
.mk
.na
.B speed_t
.ad
.RS 12n
.rt
used for terminal baud rates
.RE

.sp
.ne 2
.mk
.na
\fBtcflag_t\fR
.ad
.RS 12n
.rt
used for terminal modes
.RE

.sp
.LP
The above types are all unsigned integer types.
.sp
.LP
The implementation supports one or more programming environments in which
the widths of
.BR cc_t ,
.BR speed_t ,
and \fBtcflag_t\fR are no greater
than the width of type
.BR long .
The names of these programming
environments can be obtained using the \fBconfstr\fR(3C) function or the
.BR getconf (1)
utility.
.sp
.LP
The
.B termios
structure is defined and includes the following
members:
.sp
.in +2
.nf
tcflag_t c_iflag        /* input modes */
tcflag_t c_oflag        /* output modes */
tcflag_t c_cflag        /* control modes */
tcflag_t c_lflag        /* local modes */
cc_t     c_cc[NCCS]     /* control characters */
.fi
.in -2

.sp
.LP
A definition is provided for:
.sp
.ne 2
.mk
.na
.B NCCS
.ad
.RS 8n
.rt
size of the array
.B c_cc
for control characters
.RE

.sp
.LP
The following subscript names for the array
.B c_cc
are defined:
.sp

.sp
.TS
tab();
cw(1.47i) cw(1.87i) cw(2.15i)
lw(1.47i) lw(1.87i) lw(2.15i)
.
Subscript UsageCanonical ModeSubscript UsageNon-Canonical ModeDescription
_
\fBVEOF\fREOF character
\fBVEOL\fREOL character
\fBVERASE\fRERASE character
\fBVINTR\fR\fBVINTR\fRINTR character
\fBVKILL\fRKILL character
\fBVMIN\fRMIN value
\fBVQUIT\fR\fBVQUIT\fRQUIT character
\fBVSTART\fR\fBVSTART\fRSTART character
\fBVSTOP\fR\fBVSTOP\fRSTOP character
\fBVSUSP\fR\fBVSUSP\fRSUSP character
\fBVTIME\fRTIME value
.TE

.sp
.LP
The subscript values are unique, except that the
.B VMIN
and
.BR VTIME
subscripts can have the same values as the
.B VEOF
and
.BR VEOL
subscripts, respectively.
.sp
.LP
The header file provides the flags described below.
.SS "Input Modes"
.sp
.LP
The \fBc_iflag\fR field describes the basic terminal input control:
.sp
.ne 2
.mk
.na
.B BRKINT
.ad
.RS 10n
.rt
Signal interrupt on break.
.RE

.sp
.ne 2
.mk
.na
.B ICRNL
.ad
.RS 10n
.rt
Map CR to NL on input.
.RE

.sp
.ne 2
.mk
.na
.B IGNBRK
.ad
.RS 10n
.rt
Ignore break condition.
.RE

.sp
.ne 2
.mk
.na
.B IGNCR
.ad
.RS 10n
.rt
Ignore CR.
.RE

.sp
.ne 2
.mk
.na
.B IGNPAR
.ad
.RS 10n
.rt
Ignore characters with parity errors.
.RE

.sp
.ne 2
.mk
.na
.B INLCR
.ad
.RS 10n
.rt
Map NL to CR on input.
.RE

.sp
.ne 2
.mk
.na
.B INPCK
.ad
.RS 10n
.rt
Enable input parity check.
.RE

.sp
.ne 2
.mk
.na
.B ISTRIP
.ad
.RS 10n
.rt
Strip character.
.RE

.sp
.ne 2
.mk
.na
.B IXANY
.ad
.RS 10n
.rt
Enable any character to restart output.
.RE

.sp
.ne 2
.mk
.na
.B IXOFF
.ad
.RS 10n
.rt
Enable start/stop input control.
.RE

.sp
.ne 2
.mk
.na
.B IXON
.ad
.RS 10n
.rt
Enable start/stop output control.
.RE

.sp
.ne 2
.mk
.na
.B PARMRK
.ad
.RS 10n
.rt
Mark parity errors.
.RE

.SS "Output Modes"
.sp
.LP
The \fBc_oflag\fR field specifies the system treatment of output:
.sp
.ne 2
.mk
.na
.B OPOST
.ad
.RS 10n
.rt
Post-process output.
.RE

.sp
.ne 2
.mk
.na
.B ONLCR
.ad
.RS 10n
.rt
Map NL to CR-NL on output.
.RE

.sp
.ne 2
.mk
.na
.B OCRNL
.ad
.RS 10n
.rt
Map CR to NL on output.
.RE

.sp
.ne 2
.mk
.na
.B ONOCR
.ad
.RS 10n
.rt
No CR output at column 0.
.RE

.sp
.ne 2
.mk
.na
.B ONLRET
.ad
.RS 10n
.rt
NL performs CR function.
.RE

.sp
.ne 2
.mk
.na
.B OFILL
.ad
.RS 10n
.rt
Use fill characters for delay.
.RE

.sp
.ne 2
.mk
.na
.B NLDLY
.ad
.RS 10n
.rt
Select newline delays:
.sp
.ne 2
.mk
.na
.B NL0
.ad
.RS 7n
.rt
newline type 0
.RE

.sp
.ne 2
.mk
.na
.B NL1
.ad
.RS 7n
.rt
newline type 1
.RE

.RE

.sp
.ne 2
.mk
.na
.B CRDLY
.ad
.RS 10n
.rt
Select carriage-return delays:
.sp
.ne 2
.mk
.na
.B CR0
.ad
.RS 7n
.rt
carriage-return delay type 0
.RE

.sp
.ne 2
.mk
.na
.B CR1
.ad
.RS 7n
.rt
carriage-return delay type 1
.RE

.sp
.ne 2
.mk
.na
.B CR2
.ad
.RS 7n
.rt
carriage-return delay type 2
.RE

.sp
.ne 2
.mk
.na
.B CR3
.ad
.RS 7n
.rt
carriage-return delay type 3
.RE

.RE

.sp
.ne 2
.mk
.na
.B TABDLY
.ad
.RS 10n
.rt
Select horizontal-tab delays:
.sp
.ne 2
.mk
.na
.B TAB0
.ad
.RS 8n
.rt
horizontal-tab delay type 0
.RE

.sp
.ne 2
.mk
.na
.B TAB1
.ad
.RS 8n
.rt
horizontal-tab delay type 1
.RE

.sp
.ne 2
.mk
.na
.B TAB2
.ad
.RS 8n
.rt
horizontal-tab delay type 2
.RE

.sp
.ne 2
.mk
.na
.B TAB3
.ad
.RS 8n
.rt
expand tabs to spaces
.RE

.RE

.sp
.ne 2
.mk
.na
.B BSDLY
.ad
.RS 10n
.rt
Select backspace delays:
.sp
.ne 2
.mk
.na
.B BS0
.ad
.RS 7n
.rt
backspace-delay type 0
.RE

.sp
.ne 2
.mk
.na
.B BS1
.ad
.RS 7n
.rt
backspace-delay type 1
.RE

.RE

.sp
.ne 2
.mk
.na
.B VTDLY
.ad
.RS 10n
.rt
Select vertical-tab delays:
.sp
.ne 2
.mk
.na
.B VT0
.ad
.RS 7n
.rt
vertical-tab delay type 0
.RE

.sp
.ne 2
.mk
.na
.B VT1
.ad
.RS 7n
.rt
vertical-tab delay type 1
.RE

.RE

.sp
.ne 2
.mk
.na
.B FFDLY
.ad
.RS 10n
.rt
Select form-feed delays:
.sp
.ne 2
.mk
.na
.B FF0
.ad
.RS 7n
.rt
form-feed delay type 0
.RE

.sp
.ne 2
.mk
.na
.B FF1
.ad
.RS 7n
.rt
form-feed delay type 1
.RE

.RE

.SS "Baud Rate Selection"
.sp
.LP
The input and output baud rates are stored in the
.B termios
structure.
These are the valid values for objects of type
.BR "speed_ t" .
The following
values are defined, but not all baud rates need be supported by the
underlying hardware.
.sp
.ne 2
.mk
.na
.B B0
.ad
.RS 10n
.rt
Hang up
.RE

.sp
.ne 2
.mk
.na
.B B50
.ad
.RS 10n
.rt
50 baud
.RE

.sp
.ne 2
.mk
.na
.B B75
.ad
.RS 10n
.rt
75 baud
.RE

.sp
.ne 2
.mk
.na
.B B110
.ad
.RS 10n
.rt
110 baud
.RE

.sp
.ne 2
.mk
.na
.B B134
.ad
.RS 10n
.rt
134.5 baud
.RE

.sp
.ne 2
.mk
.na
.B B150
.ad
.RS 10n
.rt
150 baud
.RE

.sp
.ne 2
.mk
.na
.B B200
.ad
.RS 10n
.rt
200 baud
.RE

.sp
.ne 2
.mk
.na
.B B300
.ad
.RS 10n
.rt
300 baud
.RE

.sp
.ne 2
.mk
.na
.B B600
.ad
.RS 10n
.rt
600 baud
.RE

.sp
.ne 2
.mk
.na
.B B1200
.ad
.RS 10n
.rt
1 200 baud
.RE

.sp
.ne 2
.mk
.na
.B B1800
.ad
.RS 10n
.rt
1 800 baud
.RE

.sp
.ne 2
.mk
.na
.B B2400
.ad
.RS 10n
.rt
2 400 baud
.RE

.sp
.ne 2
.mk
.na
.B B4800
.ad
.RS 10n
.rt
4 800 baud
.RE

.sp
.ne 2
.mk
.na
.B B9600
.ad
.RS 10n
.rt
9 600 baud
.RE

.sp
.ne 2
.mk
.na
.B B19200
.ad
.RS 10n
.rt
19 200 baud
.RE

.sp
.ne 2
.mk
.na
.B B38400
.ad
.RS 10n
.rt
38 400 baud
.RE

.SS "Control Modes"
.sp
.LP
The \fBc_cflag\fR field describes the hardware control of the terminal; not
all values specified are required to be supported by the underlying
hardware:
.sp
.ne 2
.mk
.na
.B CSIZE
.ad
.RS 10n
.rt
Character size:
.sp
.ne 2
.mk
.na
.B CS5
.ad
.RS 7n
.rt
5 bits
.RE

.sp
.ne 2
.mk
.na
.B CS6
.ad
.RS 7n
.rt
6 bits
.RE

.sp
.ne 2
.mk
.na
.B CS7
.ad
.RS 7n
.rt
7 bits
.RE

.sp
.ne 2
.mk
.na
.B CS8
.ad
.RS 7n
.rt
8 bits
.RE

.RE

.sp
.ne 2
.mk
.na
.B CSTOPB
.ad
.RS 10n
.rt
Send two stop bits, else one.
.RE

.sp
.ne 2
.mk
.na
.B CREAD
.ad
.RS 10n
.rt
Enable receiver.
.RE

.sp
.ne 2
.mk
.na
.B PARENB
.ad
.RS 10n
.rt
Parity enable.
.RE

.sp
.ne 2
.mk
.na
.B PARODD
.ad
.RS 10n
.rt
Odd parity, else even.
.RE

.sp
.ne 2
.mk
.na
.B HUPCL
.ad
.RS 10n
.rt
Hang up on last close.
.RE

.sp
.ne 2
.mk
.na
.B CLOCAL
.ad
.RS 10n
.rt
Ignore modem status lines.
.RE

.sp
.LP
The implementation supports the functionality associated with the symbols
.BR CS7 ,
.BR CS8 ,
.BR CSTOPB ,
.BR PARODD ,
and
.BR PARENB .
.SS "Local Modes"
.sp
.LP
The \fBc_lflag\fR field of the argument structure is used to control
various terminal functions:
.sp
.ne 2
.mk
.na
.B ECHO
.ad
.RS 10n
.rt
Enable echo.
.RE

.sp
.ne 2
.mk
.na
.B ECHOE
.ad
.RS 10n
.rt
Echo erase character as error-correcting backspace.
.RE

.sp
.ne 2
.mk
.na
.B ECHOK
.ad
.RS 10n
.rt
Echo KILL.
.RE

.sp
.ne 2
.mk
.na
.B ECHONL
.ad
.RS 10n
.rt
Echo NL.
.RE

.sp
.ne 2
.mk
.na
.B ICANON
.ad
.RS 10n
.rt
Canonical input (erase and kill processing).
.RE

.sp
.ne 2
.mk
.na
.B IEXTEN
.ad
.RS 10n
.rt
Enable extended input character processing.
.RE

.sp
.ne 2
.mk
.na
.B ISIG
.ad
.RS 10n
.rt
Enable signals.
.RE

.sp
.ne 2
.mk
.na
.B NOFLSH
.ad
.RS 10n
.rt
Disable flush after interrupt or quit.
.RE

.sp
.ne 2
.mk
.na
.B TOSTOP
.ad
.RS 10n
.rt
Send
.B SIGTTOU
for background output.
.RE

.SS "Attribute Selection"
.sp
.LP
The following symbolic constants for use with
.B tcsetattr()
are
defined:
.sp
.ne 2
.mk
.na
.B TCSANOW
.ad
.RS 13n
.rt
Change attributes immediately.
.RE

.sp
.ne 2
.mk
.na
.B TCSADRAIN
.ad
.RS 13n
.rt
Change attributes when output has drained.
.RE

.sp
.ne 2
.mk
.na
.B TCSAFLUSH
.ad
.RS 13n
.rt
Change attributes when output has drained; also flush pending input.
.RE

.SS "Line Control"
.sp
.LP
The following symbolic constants for use with \fBtcflush()\fR are
defined:
.sp
.ne 2
.mk
.na
.B TCIFLUSH
.ad
.RS 13n
.rt
Flush pending input.
.RE

.sp
.ne 2
.mk
.na
.B TCIOFLUSH
.ad
.RS 13n
.rt
Flush both pending input and untransmitted output.
.RE

.sp
.ne 2
.mk
.na
.B TCOFLUSH
.ad
.RS 13n
.rt
Flush untransmitted output.
.RE

.sp
.LP
The following symbolic constants for use with \fBtcflow()\fR are defined:
.sp
.ne 2
.mk
.na
.B TCIOFF
.ad
.RS 10n
.rt
Transmit a
.B STOP
character, intended to suspend input data.
.RE

.sp
.ne 2
.mk
.na
.B TCION
.ad
.RS 10n
.rt
Transmit a
.B START
character, intended to restart input data.
.RE

.sp
.ne 2
.mk
.na
.B TCOOFF
.ad
.RS 10n
.rt
Suspend output.
.RE

.sp
.ne 2
.mk
.na
.B TCOON
.ad
.RS 10n
.rt
Restart output.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard
.TE

.SH SEE ALSO
.sp
.LP
\fBgetconf\fR(1), \fBcfgetispeed\fR(3C), \fBcfsetispeed\fR(3C),
\fBconfstr\fR(3C), \fBtcdrain\fR(3C), \fBtcflow\fR(3C), \fBtcflush\fR(3C),
.BR tcgetattr (3C),
.BR tcgetsid (3C),
.BR tcsendbreak (3C),
.BR tcsetattr (3C),
.BR attributes (5),
.BR standards (5)
