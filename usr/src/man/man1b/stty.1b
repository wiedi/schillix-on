'\" te
.\" Copyright (c) 2005, Sun Microsystems, Inc.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH stty 1B "14 Feb 2005" "SunOS 5.11" "SunOS/BSD Compatibility Package Commands"
.SH NAME
stty \- set the options for a terminal
.SH SYNOPSIS
.LP
.nf
\fB/usr/ucb/stty\fR [\fB-a\fR] [\fB-g\fR] [\fB-h\fR] [\fImodes\fR]
.fi

.SH DESCRIPTION
.sp
.LP
\fBstty\fR sets certain terminal I/O options for the device that is the
current standard output. Without arguments,
.B stty
reports the settings
of certain options.
.SH OPTIONS
.sp
.LP
In this report, if a character is preceded by a caret
.RB ( ^ ),
then the
value of that option is the corresponding CTRL character (for example,
\fB^h\fR is CTRL-h. In this case, recall that CTRL-h is the same as the
BACKSPACE key.) The sequence
.B ^@
means that an option has a null
value.
.sp
.ne 2
.mk
.na
.B -a
.ad
.RS 6n
.rt
Reports all of the option settings.
.RE

.sp
.ne 2
.mk
.na
.B -g
.ad
.RS 6n
.rt
Reports current settings in a form that can be used as an argument to
another
.B stty
command.
.RE

.sp
.ne 2
.mk
.na
.B -h
.ad
.RS 6n
.rt
Reports all the option settings with the control characters in an easy to
read column format.
.RE

.sp
.LP
Options in the last group are implemented using options in the previous
groups. Many combinations of options make no sense, but no sanity checking
is performed. Hardware flow control and clock modes options might not be
supported by all hardware interfaces. The options are selected from the
following:
.SS "Special Requests"
.sp
.ne 2
.mk
.na
.B all
.ad
.RS 14n
.rt
Reports the same option settings as
.B stty
without arguments,  but with
the control characters in column format.
.RE

.sp
.ne 2
.mk
.na
.B everything
.ad
.RS 14n
.rt
Everything
.B stty
knows about is printed. Same as
.B -h
option.
.RE

.sp
.ne 2
.mk
.na
.B speed
.ad
.RS 14n
.rt
The terminal speed alone is reported on the standard output.
.RE

.sp
.ne 2
.mk
.na
.B size
.ad
.RS 14n
.rt
The terminal (window) sizes are printed on the standard output, first rows
and then columns. This option is only appropriate if currently running a
window system.
.sp
\fBsize\fR and \fBspeed\fR always report on the settings of \fB/dev/tty\fR,
and always report the settings to the standard output.
.RE

.SS "Control Modes"
.sp
.ne 2
.mk
.na
\fBparenb\fR (\fB-parenb\fR)\fR
.ad
.sp .6
.RS 4n
Enable (disable) parity generation and detection.
.RE

.sp
.ne 2
.mk
.na
\fBparext\fR (\fB-parext\fB)\fR
.ad
.sp .6
.RS 4n
Enable (disable) extended parity generation and detection for mark and
space parity.
.RE

.sp
.ne 2
.mk
.na
\fBparodd\fR (\fB-parodd\fR)\fR
.ad
.sp .6
.RS 4n
Select odd (even) parity, or mark (space) parity if
.B parext
is
enabled.
.RE

.sp
.ne 2
.mk
.na
.B cs5 cs6 cs7 cs8
.ad
.sp .6
.RS 4n
Select character size (see \fBtermio\fR(7I)).
.RE

.sp
.ne 2
.mk
.na
.B 0
.ad
.sp .6
.RS 4n
Hang up line immediately.
.RE

.sp
.ne 2
.mk
.na
.B "110 300 600 1200 1800 2400 4800 9600 19200 exta 38400 extb
.ad
.sp .6
.RS 4n
Set terminal baud rate to the number given, if possible. (All speeds are
not supported by all hardware interfaces.)
.RE

.sp
.ne 2
.mk
.na
\fBispeed 0 110 300 600 1200 1800 2400 4800 9600 19200 exta 38400
extb\fR
.ad
.sp .6
.RS 4n
Set terminal input baud rate to the number given, if possible. (Not all
hardware supports split baud rates.)  If the input baud rate is set to zero,
the input baud rate is specified by the value of the output baud rate.
.RE

.sp
.ne 2
.mk
.na
\fBospeed 0 110 300 600 1200 1800 2400 4800 9600 19200 exta 38400
extb\fR
.ad
.sp .6
.RS 4n
Set terminal output baud rate to the number given, if possible. (Not all
hardware supports split baud rates.)  If the  baud rate is set to zero, the
line is hung up immediately.
.RE

.sp
.ne 2
.mk
.na
\fBhupcl\fR (\fB-hupcl\fR)\fR
.ad
.sp .6
.RS 4n
Hang up (do not hang up) connection on last close.
.RE

.sp
.ne 2
.mk
.na
\fBhup\fR (\fB-hup\fR)\fR
.ad
.sp .6
.RS 4n
Same as
.BR hupcl
.RB ( -hupcl ).
.RE

.sp
.ne 2
.mk
.na
\fBcstopb\fR (\fB-cstopb\fR)\fR
.ad
.sp .6
.RS 4n
Use two (one) stop bits per character.
.RE

.sp
.ne 2
.mk
.na
\fBcread\fR (\fB-cread\fR)\fR
.ad
.sp .6
.RS 4n
Enable (disable) the receiver.
.RE

.sp
.ne 2
.mk
.na
\fBclocal\fR (\fB-clocal\fR)\fR
.ad
.sp .6
.RS 4n
Assume a line without (with) modem control.
.RE

.sp
.ne 2
.mk
.na
\fBcrtscts\fR (\fB-crtscts\fR)\fR
.ad
.sp .6
.RS 4n
Enable hardware flow control.  Raise the RTS  (Request to Send) modem
control line.  Suspends  output until the
.B CTS
(Clear to Send) line is
raised.
.RE

.sp
.ne 2
.mk
.na
\fBloblk\fR (\fB-loblk\fR)\fR
.ad
.sp .6
.RS 4n
Block (do not block) output from a non-current layer.
.RE

.SS "Input Modes"
.sp
.ne 2
.mk
.na
\fBignbrk\fR (\fB-ignbrk\fR)\fR
.ad
.RS 22n
.rt
Ignore (do not ignore) break on input.
.RE

.sp
.ne 2
.mk
.na
\fBbrkint\fR (\fB-brkint\fR)\fR
.ad
.RS 22n
.rt
Signal (do not signal) INTR on break.
.RE

.sp
.ne 2
.mk
.na
\fBignpar\fR (\fB-ignpar\fR)\fR
.ad
.RS 22n
.rt
Ignore (do not ignore) parity errors.
.RE

.sp
.ne 2
.mk
.na
\fBparmrk\fR (\fB-parmrk\fR)\fR
.ad
.RS 22n
.rt
Mark (do not mark) parity errors (see \fBtermio\fR(7I)).
.RE

.sp
.ne 2
.mk
.na
\fBinpck\fR (\fB-inpck\fR)\fR
.ad
.RS 22n
.rt
Enable (disable) input parity checking.
.RE

.sp
.ne 2
.mk
.na
\fBistrip\fR (\fB-istrip\fR)\fR
.ad
.RS 22n
.rt
Strip (do not strip) input characters to seven bits.
.RE

.sp
.ne 2
.mk
.na
\fBinlcr\fR (\fB-inlcr\fR)\fR
.ad
.RS 22n
.rt
Map (do not map) NL to CR on input.
.RE

.sp
.ne 2
.mk
.na
\fBigncr\fR (\fB-igncr\fR)\fR
.ad
.RS 22n
.rt
Ignore (do not ignore) CR on input.
.RE

.sp
.ne 2
.mk
.na
\fBicrnl\fR (\fB-icrnl\fR)\fR
.ad
.RS 22n
.rt
Map (do not map) CR to NL on input.
.RE

.sp
.ne 2
.mk
.na
\fBiuclc\fR (\fB-iuclc\fR)\fR
.ad
.RS 22n
.rt
Map (do not map) upper-case alphabetics to lower case on input.
.RE

.sp
.ne 2
.mk
.na
\fBixon\fR (\fB-ixon\fR)\fR
.ad
.RS 22n
.rt
Enable (disable) START/STOP output control.  Output is stopped by sending
an STOP and started by sending an START.
.RE

.sp
.ne 2
.mk
.na
\fBixany\fR (\fB-ixany\fR)\fR
.ad
.RS 22n
.rt
Allow any character (only START) to restart output.
.RE

.sp
.ne 2
.mk
.na
\fBdecctlq\fR (\fB-decctlq\fR)\fR
.ad
.RS 22n
.rt
Same as
.BR -ixany .
.RE

.sp
.ne 2
.mk
.na
\fBixoff\fR (\fB-ixoff\fR)\fR
.ad
.RS 22n
.rt
Request that the system send (not send) START/STOP characters when the
input queue is nearly empty/full.
.RE

.sp
.ne 2
.mk
.na
\fBtandem\fR (\fB-tandem\fB)\fR
.ad
.RS 22n
.rt
Same as
.BR ixoff .
.RE

.sp
.ne 2
.mk
.na
\fBimaxbel\fR (\fB-imaxbel\fB)\fR
.ad
.RS 22n
.rt
Echo (do not echo)
.B BEL
when the input line is too long.
.RE

.sp
.ne 2
.mk
.na
\fBiexten\fR (\fB-iexten\fB)\fR
.ad
.RS 22n
.rt
Enable (disable) extended (implementation-defined) functions for input
data.
.RE

.SS "Output Modes"
.sp
.ne 2
.mk
.na
\fBopost\fR (\fB-opost\fR)\fR
.ad
.RS 23n
.rt
Post-process output (do not post-process output; ignore all other output
modes).
.RE

.sp
.ne 2
.mk
.na
\fBolcuc\fR (\fB-olcuc\fR)\fR
.ad
.RS 23n
.rt
Map (do not map) lower-case alphabetics to upper case on output.
.RE

.sp
.ne 2
.mk
.na
\fBonlcr\fR (\fB-onlcr\fR)\fR
.ad
.RS 23n
.rt
Map (do not map) NL to CR-NL on output.
.RE

.sp
.ne 2
.mk
.na
\fBocrnl\fR (\fB-ocrnl\fR)\fR
.ad
.RS 23n
.rt
Map (do not map) CR to NL on output.
.RE

.sp
.ne 2
.mk
.na
\fBonocr\fR (\fB-onocr\fR)\fR
.ad
.RS 23n
.rt
Do not (do) output CRs at column zero.
.RE

.sp
.ne 2
.mk
.na
\fBonlret\fR (\fB-onlret\fR)\fR
.ad
.RS 23n
.rt
On the terminal NL performs (does not perform) the CR function.
.RE

.sp
.ne 2
.mk
.na
\fBofill\fR (\fB-ofill\fR)\fR
.ad
.RS 23n
.rt
Use fill characters (use timing) for delays.
.RE

.sp
.ne 2
.mk
.na
\fBofdel\fR (\fB-ofdel\fR)\fR
.ad
.RS 23n
.rt
Fill characters are DELs (NULs).
.RE

.sp
.ne 2
.mk
.na
.B cr0 cr1 cr2 cr3
.ad
.RS 23n
.rt
Select style of delay for carriage returns (see \fBtermio\fR(7I)).
.RE

.sp
.ne 2
.mk
.na
.B nl0 nl1
.ad
.RS 23n
.rt
Select style of delay for line-feeds (see \fBtermio\fR(7I)).
.RE

.sp
.ne 2
.mk
.na
.B tab0 tab1 tab2 tab3
.ad
.RS 23n
.rt
Select style of delay for horizontal tabs (see \fBtermio\fR(7I)).
.RE

.sp
.ne 2
.mk
.na
.B bs0 bs1
.ad
.RS 23n
.rt
Select style of delay for backspaces (see \fBtermio\fR(7I)).
.RE

.sp
.ne 2
.mk
.na
\fBff0 ff1\fR
.ad
.RS 23n
.rt
Select style of delay for form-feeds (see \fBtermio\fR(7I)).
.RE

.sp
.ne 2
.mk
.na
.B vt0 vt1
.ad
.RS 23n
.rt
Select style of delay for vertical tabs (see \fBtermio\fR(7I)).
.RE

.SS "Local Modes"
.sp
.ne 2
.mk
.na
\fBisig\fR (\fB-isig\fR)\fR
.ad
.RS 24n
.rt
Enable (disable) the checking of characters against the special control
characters INTR, QUIT, and SWTCH. For information on
.BR SWTCH ,
see
.BR NOTES .
.RE

.sp
.ne 2
.mk
.na
\fBicanon\fR (\fB-icanon\fR)\fR
.ad
.RS 24n
.rt
Enable (disable) canonical input (ERASE and KILL processing). Does not set
MIN or TIME.
.RE

.sp
.ne 2
.mk
.na
\fBcbreak\fR (\fB-cbreak\fR)\fR
.ad
.RS 24n
.rt
Equivalent to
.BR "-icanon min 1 time 0" .
.RE

.sp
.ne 2
.mk
.na
\fBxcase\fR (\fB-xcase\fR)\fR
.ad
.RS 24n
.rt
Canonical (unprocessed) upper/lower-case presentation.
.RE

.sp
.ne 2
.mk
.na
\fBecho\fR (\fB-echo\fR)\fR
.ad
.RS 24n
.rt
Echo back (do not echo back) every character typed.
.RE

.sp
.ne 2
.mk
.na
\fBechoe\fR (\fB-echoe\fR)\fR
.ad
.RS 24n
.rt
Echo (do not echo) ERASE character as a backspace-space-backspace string.
Note: This mode erases the ERASEed character on many CRT terminals; however,
it does
.I not
keep track of column position and, as a result, can be
confusing on escaped characters, tabs, and backspaces.
.RE

.sp
.ne 2
.mk
.na
\fBcrterase\fR (\fB-crterase\fR)\fR
.ad
.RS 24n
.rt
Same as
.BR echoe .
.RE

.sp
.ne 2
.mk
.na
\fBechok\fR (\fB-echok\fR)\fR
.ad
.RS 24n
.rt
Echo (do not echo) NL after KILL character.
.RE

.sp
.ne 2
.mk
.na
\fBlfkc\fR (\fB-lfkc\fR)\fR
.ad
.RS 24n
.rt
The same as
.BR echok
.RB ( -echok );
obsolete.
.RE

.sp
.ne 2
.mk
.na
\fBechonl\fR (\fB-echonl\fR)\fR
.ad
.RS 24n
.rt
Echo (do not echo) NL.
.RE

.sp
.ne 2
.mk
.na
\fBnoflsh\fR (\fB-noflsh\fR)\fR
.ad
.RS 24n
.rt
Disable (enable) flush after INTR, QUIT, or SWTCH. For information on
.BR SWTCH ,
see
.BR NOTES .
.RE

.sp
.ne 2
.mk
.na
\fBstwrap\fR (\fB-stwrap\fR)\fR
.ad
.RS 24n
.rt
Disable (enable) truncation of lines longer than 79 characters on a
synchronous line.  (Does not apply to the 3B2.)
.RE

.sp
.ne 2
.mk
.na
\fBtostop\fR (\fB-tostop\fR)\fR
.ad
.RS 24n
.rt
Send (do not send)
.B SIGTTOU
for background processes.
.RE

.sp
.ne 2
.mk
.na
\fBechoctl\fR (\fB-echoctl\fB)\fR
.ad
.RS 24n
.rt
Echo (do not echo) control characters as ^\fIchar\fR, delete as ^?
.RE

.sp
.ne 2
.mk
.na
\fBctlecho\fR (\fB-ctlecho\fB)\fR
.ad
.RS 24n
.rt
Same as
.BR echoctl .
.RE

.sp
.ne 2
.mk
.na
\fBechoprt\fR (\fB-echoprt\fB)\fR
.ad
.RS 24n
.rt
Echo (do not echo) erase character as character is ``erased''.
.RE

.sp
.ne 2
.mk
.na
\fBprterase\fR (\fB-prterase\fR)\fR
.ad
.RS 24n
.rt
Same as
.BR echoprt .
.RE

.sp
.ne 2
.mk
.na
\fBechoke\fR (\fB-echoke\fB)\fR
.ad
.RS 24n
.rt
BS-SP-BS erase (do not BS-SP-BS erase) entire line on line kill.
.RE

.sp
.ne 2
.mk
.na
\fBcrtkill\fR (\fB-crtkill\fR)\fR
.ad
.RS 24n
.rt
Same as
.BR echoke .
.RE

.sp
.ne 2
.mk
.na
\fBflusho\fR (\fB-flusho\fB)\fR
.ad
.RS 24n
.rt
Output is (is not) being flushed.
.RE

.sp
.ne 2
.mk
.na
\fBpendin\fR (\fB-pendin\fB)\fR
.ad
.RS 24n
.rt
Retype (do not retype) pending input at next read or input character.
.RE

.sp
.ne 2
.mk
.na
\fBstflush\fR (\fB-stflush\fR)\fR
.ad
.RS 24n
.rt
Enable (disable) flush on a synchronous line after every
.BR write (2).
(Does not apply to the 3B2.)
.RE

.sp
.ne 2
.mk
.na
\fBstappl\fR (\fB-stappl\fR)\fR
.ad
.RS 24n
.rt
Use application mode (use line mode) on a synchronous line. (Does not apply
to the 3B2.)
.RE

.SS "Hardware Flow Control Modes"
.sp
.ne 2
.mk
.na
\fBrtsxoff\fR (\fB-rtsxoff\fR)\fR
.ad
.RS 24n
.rt
Enable (disable) RTS hardware flow control on input.
.RE

.sp
.ne 2
.mk
.na
\fBctsxon\fR (\fB-ctsxon\fR)\fR
.ad
.RS 24n
.rt
Enable (disable) CTS hardware flow control on output.
.RE

.sp
.ne 2
.mk
.na
\fBdterxoff\fR (\fB-dterxoff\fR)\fR
.ad
.RS 24n
.rt
Enable (disable) DTER hardware flow control on input.
.RE

.sp
.ne 2
.mk
.na
\fBrlsdxon\fR (\fB-rlsdxon\fR)\fR
.ad
.RS 24n
.rt
Enable (disable) RLSD hardware flow control on output.
.RE

.sp
.ne 2
.mk
.na
\fBisxoff\fR (\fB-isxoff\fR)\fR
.ad
.RS 24n
.rt
Enable (disable) isochronous hardware flow control on input.
.RE

.SS "Clock Modes"
.sp
.ne 2
.mk
.na
.B xcibrg
.ad
.RS 12n
.rt
Get transmit clock from internal baud rate generator.
.RE

.sp
.ne 2
.mk
.na
.B xctset
.ad
.RS 12n
.rt
Get the transmit clock from transmitter signal element timing (DCE source)
lead, CCITT V.24 circuit 114, EIA-232-D pin 15.
.RE

.sp
.ne 2
.mk
.na
.B xcrset
.ad
.RS 12n
.rt
Get transmit clock from receiver signal element timing (DCE source) lead,
CCITT V.24 circuit 115, EIA-232-D pin 17.
.RE

.sp
.ne 2
.mk
.na
.B rcibrg
.ad
.RS 12n
.rt
Get receive clock from internal baud rate generator.
.RE

.sp
.ne 2
.mk
.na
.B rctset
.ad
.RS 12n
.rt
Get receive clock from transmitter signal element timing (DCE source) lead,
CCITT V.24 circuit 114, EIA-232-D pin 15.
.RE

.sp
.ne 2
.mk
.na
.B rcrset
.ad
.RS 12n
.rt
Get receive clock from receiver signal element timing (DCE source) lead,
CCITT V.24 circuit 115, EIA-232-D pin 17.
.RE

.sp
.ne 2
.mk
.na
\fBtsetcoff\fR
.ad
.RS 12n
.rt
Transmitter signal element timing clock not provided.
.RE

.sp
.ne 2
.mk
.na
.B tsetcrc
.ad
.RS 12n
.rt
Output receive clock on transmitter signal element timing (DTE source)
lead, CCITT V.24 circuit 113, EIA-232-D pin 24, clock source.
.RE

.sp
.ne 2
.mk
.na
.B tsetcxc
.ad
.RS 12n
.rt
Output transmit clock on transmitter signal element timing (DTE source)
lead, CCITT V.24 circuit 113, EIA-232-D pin 24, clock source.
.RE

.sp
.ne 2
.mk
.na
\fBrsetcoff\fR
.ad
.RS 12n
.rt
Receiver signal element timing clock not provided.
.RE

.sp
.ne 2
.mk
.na
.B rsetcrc
.ad
.RS 12n
.rt
Output receive clock on receiver signal element timing (DTE source) lead,
CCITT V.24 circuit 128, no EIA-232-D pin, clock source.
.RE

.sp
.ne 2
.mk
.na
.B rsetcxc
.ad
.RS 12n
.rt
Output transmit clock on receiver signal element timing (DTE source) lead,
CCITT V.24 circuit 128, no EIA-232-D pin, clock source.
.RE

.SS "Control Assignments"
.sp
.ne 2
.mk
.na
.I control-character c
.ad
.RS 23n
.rt
Set
.I control-character
to
.IR c ,
where
.I control-character
is
.BR intr ,
.BR quit ,
.BR erase ,
.BR kill ,
\fBeof\fR, \fBeol\fR,
.BR eol2 ,
.BR swtch ,
.BR start ,
.BR stop ,
.BR susp ,
.BR dsusp ,
.BR rprnt ,
.BR flush ,
.BR werase ,
.BR "lnext min" ,
.BR ctab ,
.BR time ,
or
.BR brk )
(\fBctab\fR is used with
.BR -stappl ;
.B min
and
.B time
are used with
.BR -icanon ;
see
.BR termio (7I)).
If
\fIc\fR is preceded by an (escaped from the shell) caret
.RB ( ^ ),
then the
value used is the corresponding CTRL character (for example, ``^d'' is a
Control-d). ``^?'' is interpreted as DEL and ``\fB^\(mi\fR'' is interpreted
as undefined. For information on
.BR SWTCH ,
see
.BR NOTES .
.RE

.sp
.ne 2
.mk
.na
.BI line " i"
.ad
.RS 23n
.rt
Set line discipline to
.I i
(0 <
.I i
< 127 ).
.RE

.SS "Combination Modes"
.sp
.ne 2
.mk
.na
\fBevenp\fR or \fBparity\fR
.ad
.RS 24n
.rt
Enable
.B parenb
and
.BR cs7 .
.RE

.sp
.ne 2
.mk
.na
.BR -evenp ,
or
.BR -parity
.ad
.RS 24n
.rt
Disable
.BR parenb ,
and set
.BR cs8 .
.RE

.sp
.ne 2
.mk
.na
\fBeven\fR (\fB-even\fR)\fR
.ad
.RS 24n
.rt
Same as
.BR evenp
.RB ( -evenp ).
.RE

.sp
.ne 2
.mk
.na
.B oddp
.ad
.RS 24n
.rt
Enable
.BR parenb ,
.BR cs7 ,
and
.BR parodd .
.RE

.sp
.ne 2
.mk
.na
.B -oddp
.ad
.RS 24n
.rt
Disable
.B parenb
and
.BR parodd ,
and set
.BR cs8 .
.RE

.sp
.ne 2
.mk
.na
\fBodd\fR (\fB-odd\fR)\fR
.ad
.RS 24n
.rt
Same as
.BR oddp
.RB ( -oddp ).
.RE

.sp
.ne 2
.mk
.na
.B spacep
.ad
.RS 24n
.rt
Enable
.BR parenb ,
.BR cs7 ,
and
.BR parext .
.RE

.sp
.ne 2
.mk
.na
.B -spacep
.ad
.RS 24n
.rt
Disable
.B parenb
and
.BR parext ,
and set
.BR cs8 .
.RE

.sp
.ne 2
.mk
.na
.B markp
.ad
.RS 24n
.rt
Enable
.BR parenb ,
.BR cs7 ,
.BR parodd ,
and
.BR parext .
.RE

.sp
.ne 2
.mk
.na
.B -markp
.ad
.RS 24n
.rt
Disable
.BR parenb ,
.BR parodd ,
and
.BR parext ,
and set
.BR cs8 .
.RE

.sp
.ne 2
.mk
.na
\fBraw\fR (\fB-raw\fR or \fBcooked\fR)\fR
.ad
.RS 24n
.rt
Enable (disable) raw input and output (no ERASE, KILL, INTR, QUIT, SWTCH,
EOT, or output post processing). For information on
.BR SWTCH ,
see
.BR NOTES .
.RE

.sp
.ne 2
.mk
.na
\fBnl\fR (\fB-nl\fR)\fR
.ad
.RS 24n
.rt
Unset (set)
.BR icrnl ,
.BR onlcr .
In addition
.B -nl
unsets
.BR inlcr ,
.BR igncr ,
.BR ocrnl ,
and
.BR onlret .
.RE

.sp
.ne 2
.mk
.na
\fBlcase\fR (\fB-lcase\fR)\fR
.ad
.RS 24n
.rt
Set (unset)
.BR xcase ,
.BR iuclc ,
and
.BR olcuc .
.RE

.sp
.ne 2
.mk
.na
\fBLCASE\fR (\fB-LCASE\fR)\fR
.ad
.RS 24n
.rt
Same as
.BR lcase
.RB ( -lcase ).
.RE

.sp
.ne 2
.mk
.na
\fBtabs\fR (\fB-tabs\fR or \fBtab3\fR)\fR
.ad
.RS 24n
.rt
Preserve (expand to spaces) tabs when printing.
.RE

.sp
.ne 2
.mk
.na
.B ek
.ad
.RS 24n
.rt
Reset ERASE and KILL characters back to normal DEL and CTRL-u,
respectively.
.RE

.sp
.ne 2
.mk
.na
.B sane
.ad
.RS 24n
.rt
Reset all modes to some reasonable values.
.RE

.sp
.ne 2
.mk
.na
.B term
.ad
.RS 24n
.rt
Set all modes suitable for the terminal type
.IR term ,
where
.IR term
is one of
.BR tty33 ,
.BR tty37 ,
.BR vt05 ,
.BR tn300 ,
.BR ti700 ,
or
.BR tek .
.RE

.sp
.ne 2
.mk
.na
.B async
.ad
.RS 24n
.rt
Set normal asynchronous communications where clock settings are
.BR xcibrg ,
.BR rcibrg ,
\fBtsetcoff\fR and \fBrsetcoff\fR.
.RE

.sp
.ne 2
.mk
.na
\fBlitout (\fB-litout\fB)\fR
.ad
.RS 24n
.rt
Disable (enable)
.BR parenb ,
.BR istrip ,
and
.BR opost ,
and set
.B cs8
.RB ( cs7 ).
.RE

.sp
.ne 2
.mk
.na
\fBpass8 (\fB-pass8\fB)\fR
.ad
.RS 24n
.rt
Disable (enable)
.B parenb
and
.BR istrip ,
and set
.B cs8
(\fBcs7\fR).
.RE

.sp
.ne 2
.mk
.na
.B crt
.ad
.RS 24n
.rt
Set options for a
.B CRT
(\fBechoe\fR,
.BR echoctl ,
and, if >= 1200
baud,
.BR echoke .)
.RE

.sp
.ne 2
.mk
.na
.B dec
.ad
.RS 24n
.rt
Set all modes suitable for Digital Equipment Corp. operating systems users
ERASE, KILL, and INTR characters to
.BR ^? ,
.BR ^U ,
and
.BR ^C ,
.BR decctlq ,
and
.BR crt .)
.RE

.SS "Window Size"
.sp
.ne 2
.mk
.na
\fBrows\fIn\fR
.ad
.RS 12n
.rt
Set window size to
.IR "n rows" .
.RE

.sp
.ne 2
.mk
.na
\fBcolumns\fIn\fR
.ad
.RS 12n
.rt
Set window size to
.IR "n columns" .
.RE

.sp
.ne 2
.mk
.na
\fBcols\fIn\fR
.ad
.RS 12n
.rt
An alias for
.BR "columns\fI n" .
.RE

.sp
.ne 2
.mk
.na
\fBypixels\fIn\fR
.ad
.RS 12n
.rt
Set vertical window size to
.IR "n pixels" .
.RE

.sp
.ne 2
.mk
.na
\fBxpixels\fIn\fR
.ad
.RS 12n
.rt
Set horizontal window size to
.IR "n pixels" .
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWscpu
.TE

.SH SEE ALSO
.sp
.LP
.BR tabs (1),
.BR ioctl (2),
.BR attributes (5),
.BR termio (7I),
.BR termiox (7I)
.SH NOTES
.sp
.LP
Solaris does not support any of the actions implied by
.BR swtch ,
which
was used by the
.B sxt
driver on System V release 4.  Solaris allows the
\fBswtch\fR value to be set, and prints it out if set, but it does not
perform the
.B swtch
action.
.sp
.LP
The job switch functionality on Solaris is actually handled by job control.
\fBsusp\fR is the correct setting for this.
