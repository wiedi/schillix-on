'\" te
.\" Copyright (C) 1998-2003, Carnegie Mellon Univeristy.  All Rights Reserved.
.\" Portions Copyright (C) 2003, Sun Microsystems,
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" Inc. All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH sasl_client_step 3SASL "28 Aug 2003" "SunOS 5.11" "Simple Authentication Security Layer Library Functions"
.SH NAME
sasl_client_step \- acquire an auxiliary property context
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR .\|.\|. ] \fIfile\fR .\|.\|. \fB-lsasl\fR   [ \fIlibrary\fR .\|.\|. ]
#include <sasl/sasl.h>

\fBint\fR \fBsasl_client_step\fR(\fBsasl_conn_t *\fIconn\fR, \fBconst char *\fIserverin\fR,
     \fBsasl_interact_t **\fBunsigned\fR \fIserverinlen\fR, \fIprompt_need\fR,
     \fBconst char **\fIclientout\fR, \fBsasl_interact_t **\fBunsigned *\fIclientoutlen\fR);
.fi

.SH DESCRIPTION
.sp
.LP
Use the
.B sasl_client_step()
interface performs a step in the
authentication negotiation.
.B sasl_client_step()
returns
.BR SASL_OK
if the complete negotiation is successful. If the negotiation on step is
completed successfuly, but at least one more step is required,
.B sasl_client_step()
returns
.BR SASL_CONTINUE .
A client should not
assume an authentication negotiaion is successful because the server
signaled success through the protocol. For example, if the server signaled
.B OK Authentication succeeded
in IMAP,
.B sasl_client_step()
should
be called one more time with a
.I serverinlen
of zero.
.sp
.LP
If a call to
.B sasl_client_step()
returns
.BR SASL_INTERACT ,
the
library requires some values before
.B sasl_client_step()
can proceed.
The
.I prompt_need
structure will be filled with the requests. The
application should fulfull these requests and call
.BR sasl_client_step()
again with identical parameters. The
.I prompt_need
parameter will be the
same pointer as before, but it will have been filled in by the
application.
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I conn
.ad
.RS 16n
.rt
The SASL connection context.
.RE

.sp
.ne 2
.mk
.na
.I serverin
.ad
.RS 16n
.rt
The data given by the server. The data is decoded if the protocol encodes
requests sent over the wire.
.RE

.sp
.ne 2
.mk
.na
.I serverinlen
.ad
.RS 16n
.rt
The length of the
.IR serverin .
.RE

.sp
.ne 2
.mk
.na
.I clientout
.ad
.br
.na
.I clientoutlen
.ad
.RS 16n
.rt
.I clientout
and
.I clientoutlen
are created. They contain the
initial client response to send to the server. It is the job of the client
to send them over the network to the server. Any protocol specific
encodingthat is necessary, for example
.B base64
encoding, must be done
by the client.
.RE

.sp
.ne 2
.mk
.na
.I prompt_need
.ad
.RS 16n
.rt
A list of prompts that are needed to continue, if necessary.
.RE

.SH RETURN VALUES
.sp
.LP
.B sasl_client_step()
returns an integer that corresponds to a SASL
error code.
.SH ERRORS
.sp
.ne 2
.mk
.na
.B SASL_OK
.ad
.RS 17n
.rt
The call to
.B sasl_client_start()
was successful. Authentication is
complete.
.RE

.sp
.ne 2
.mk
.na
.B SASL_CONTINUE
.ad
.RS 17n
.rt
The call to
.B sasl_client_start()
was successful, but at least one more
step is required for authentication.
.RE

.sp
.ne 2
.mk
.na
.B SASL_INTERACT
.ad
.RS 17n
.rt
The library requires some values before
.B sasl_client_step()
can
proceed.
.RE

.sp
.LP
All other error codes indicate an error situation that must be handled, or
the authentication session should be quit. See \fBsasl_errors\fR(3SASL) for
information on SASL error codes.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWlibsasl
_
Interface StabilityEvolving
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR sasl_errors (3SASL),
.BR attributes (5)
