'\" te
.\" Copyright (C) 1998-2003, Carnegie Mellon Univeristy.  All Rights Reserved.
.\" Portions Copyright (C) 2003, Sun Microsystems,
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" Inc. All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH sasl_decode 3SASL "28 Aug 2003" "SunOS 5.11" "Simple Authentication Security Layer Library Functions"
.SH NAME
sasl_decode \- decode data received
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR .\|.\|. ] \fIfile\fR .\|.\|. \fB-lsasl\fR   [ \fIlibrary\fR .\|.\|. ]
#include <sasl/sasl.h>

\fBint\fR \fBsasl_decode\fR(\fBsasl_conn_t *\fIconn\fR, \fBconst char *\fIinput\fR, \fBunsigned\fR \fIinputlen\fR,
     \fBconst char **\fIoutput\fR, \fBunsigned *\fIoutputlen\fR);
.fi

.SH DESCRIPTION
.sp
.LP
Use the
.B sasl_decode()
interface to decode data received. After
authentication, call this function on all data received. The data is decoded
from encrypted or signed form to plain data. If no security lay is
negotiated, the output is identical to the input.
.sp
.LP
Do not give
.B sasl_decode()
more data than the negotiated
.BR maxbufsize .
See
.BR sasl_getprop (3SASL).
.sp
.LP
.B sasl_decode()
can complete successfully although the value of
.I outputlen
is zero. If this is the case, wait for more data and call
.B sasl_decode()
again.
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I conn
.ad
.RS 13n
.rt
The SASL connection context.
.RE

.sp
.ne 2
.mk
.na
.I input
.ad
.RS 13n
.rt
Data received.
.RE

.sp
.ne 2
.mk
.na
.I inputlen
.ad
.RS 13n
.rt
The length of
.IR input
.RE

.sp
.ne 2
.mk
.na
.I output
.ad
.RS 13n
.rt
The decoded data.
.I output
must be allocated or freed by the library.
.RE

.sp
.ne 2
.mk
.na
.I outputlen
.ad
.RS 13n
.rt
The length of
.IR output .
.RE

.SH RETURN VALUES
.sp
.LP
.B sasl_decode()
returns an integer that corresponds to a SASL error
code.
.SH ERRORS
.sp
.ne 2
.mk
.na
.B SASL_OK
.ad
.RS 11n
.rt
The call to
.B sasl_decode()
was successful.
.RE

.sp
.LP
See
.BR sasl_errors (3SASL)
for information on SASL error codes.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWlibsasl
_
Interface StabilityEvolving
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR sasl_errors (3SASL),
.BR sasl_getprop (3SASL),
.BR attributes (5)
