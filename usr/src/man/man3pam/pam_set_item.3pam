'\" te
.\" Copyright (c) 2004, Sun Microsystems, Inc.   All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH pam_set_item 3PAM "31 Oct 2006" "SunOS 5.11" "PAM Library Functions"
.SH NAME
pam_set_item, pam_get_item \- authentication information routines for PAM
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR .\|.\|. ] \fIfile\fR .\|.\|. \fB-lpam\fR [ \fIlibrary\fR .\|.\|. ]
#include <security/pam_appl.h>

\fBint\fR \fBpam_set_item\fR(\fBpam_handle_t *\fIpamh\fR, \fBint\fR \fIitem_type\fR,
     \fBconst void *\fIitem\fR);
.fi

.LP
.nf
\fBint\fR \fBpam_get_item\fR(\fBconst pam_handle_t *\fIpamh\fR, \fBint\fR \fIitem_type\fR,
     \fBvoid **\fIitem\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B pam_get_item()
and
.B pam_set_item()
functions allow
applications and
.B PAM
service modules to access and to update
.BR PAM
information as needed.  The information is specified by
.IR item_type ,
and
can be one of the following:
.sp
.ne 2
.mk
.na
.B PAM_AUSER
.ad
.RS 19n
.rt
The authenticated user name.  Applications that are trusted to correctly
identify the authenticated user should set this item to the authenticated
user name. See NOTES and
.BR pam_unix_cred (5).
.RE

.sp
.ne 2
.mk
.na
.B PAM_AUTHTOK
.ad
.RS 19n
.rt
The user authentication token.
.RE

.sp
.ne 2
.mk
.na
.B PAM_CONV
.ad
.RS 19n
.rt
The
.B pam_conv
structure.
.RE

.sp
.ne 2
.mk
.na
.B PAM_OLDAUTHTOK
.ad
.RS 19n
.rt
The old user authentication token.
.RE

.sp
.ne 2
.mk
.na
.B PAM_RESOURCE
.ad
.RS 19n
.rt
.RI "A semicolon-separated list of " key = value " pairs that represent"
the set of resource controls for application by
.BR pam_setcred "(3PAM) or"
.BR pam_open_session (3PAM).
See the individual service module definitions,
such as
.BR pam_unix_cred (5),
for interpretations of the keys and
values.
.RE

.sp
.ne 2
.mk
.na
.B PAM_RHOST
.ad
.RS 19n
.rt
The remote host name.
.RE

.sp
.ne 2
.mk
.na
.B PAM_RUSER
.ad
.RS 19n
.rt
.RB "The " rlogin / rsh " untrusted remote user name."
.RE

.sp
.ne 2
.mk
.na
.B PAM_SERVICE
.ad
.RS 19n
.rt
The service name.
.RE

.sp
.ne 2
.mk
.na
.B PAM_TTY
.ad
.RS 19n
.rt
The tty name.
.RE

.sp
.ne 2
.mk
.na
.B PAM_USER
.ad
.RS 19n
.rt
The user name.
.RE

.sp
.ne 2
.mk
.na
.B PAM_USER_PROMPT
.ad
.RS 19n
.rt
The default prompt used by
.BR pam_get_user() .
.RE

.sp
.ne 2
.mk
.na
.B PAM_REPOSITORY
.ad
.RS 19n
.rt
The repository that contains the authentication token information.
.RE

.sp
.LP
The pam_repository structure is defined as:
.sp
.in +2
.nf
struct pam_repository {
    char   *type;       /* Repository type, e.g., files, */
                        /* nis, ldap */
    void   *scope;      /* Optional scope information */
    size_t  scope_len;  /* length of scope information */
};
.fi
.in -2

.sp
.LP
The
.I item_type
.B PAM_SERVICE
can be set only by
.BR pam_start()
and is read-only to both applications and service modules.
.sp
.LP
For security reasons, the
.I item_type
.B PAM_AUTHTOK
and
.B PAM_OLDAUTHTOK
are available only to the module providers. The
authentication module, account module, and session management module should
treat
.B PAM_AUTHTOK
as the current authentication token and ignore
.BR PAM_OLDAUTHTOK .
The password management module should treat
.B PAM_OLDAUTHTOK
as the current authentication token and
.B PAM_AUTHTOK
as the new authentication token.
.sp
.LP
The
.B pam_set_item()
function is passed the authentication handle,
.IR pamh ,
returned by
.BR pam_start() ,
a pointer to the object,
.IR item ,
and its type,
.IR item_type .
If successful,
.B pam_set_item()
copies the item to an internal storage area allocated
by the  authentication module and returns
.BR PAM_SUCCESS .
An item that
had been previously set will be overwritten by the new value.
.sp
.LP
The
.B pam_get_item()
function is passed the authentication handle,
.IR pamh ,
returned by
.BR pam_start() ,
an
.IR item_type ,
and the
address of the pointer,
.IR item ,
which is assigned the address of the
requested object. The object data is valid until modified by a subsequent
call to
.B pam_set_item()
for the same
.IR item_type ,
or unless it is
modified by any of the underlying service modules. If the item has not been
previously set,
.B pam_get_item()
.RI "returns a null pointer.  An" " item"
retrieved by
.B pam_get_item()
should not be modified or freed.  The item
will be released by
.BR pam_end() .
.SH RETURN VALUES
.sp
.LP
Upon success,
.B pam_get_item()
returns
.BR PAM_SUCCESS ;
otherwise it
returns an error code. Refer to
.BR pam (3PAM)
for information on error
related return values.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for description of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface Stability Stable
_
MT-LevelMT-Safe with exceptions
.TE

.sp
.LP
The functions in
.BR libpam (3LIB)
are MT-Safe only if each thread within
the multithreaded application uses its own
.B PAM
handle.
.SH SEE ALSO
.sp
.LP
.BR libpam (3LIB),
.BR pam (3PAM),
.BR pam_acct_mgmt (3PAM),
.BR pam_authenticate (3PAM),
.BR pam_chauthtok (3PAM),
.BR pam_get_user (3PAM),
.BR pam_open_session (3PAM),
.BR pam_setcred (3PAM),
.BR pam_start (3PAM),
.BR attributes (5),
.BR pam_unix_cred (5)
.SH NOTES
.sp
.LP
If the
.B PAM_REPOSITORY
.I item_type
is set and a service module
does not recognize the type, the service module does not process any
information, and returns
.BR PAM_IGNORE .
If the
.BR PAM_REPOSITORY
.I item_type
is not set, a service module performs its default action.

.sp
.LP
PAM_AUSER is not intended as a replacement for PAM_USER.  It is expected to
be used to supplement PAM_USER when there is an authenticated user from a
source other than
.BR pam_authenticate "(3PAM). Such sources could be"
.B sshd
host-based authentication, kerberized
.BR rlogin ,
and
.BR su (1M).
