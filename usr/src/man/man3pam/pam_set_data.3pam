'\" te
.\" Copyright (c) 1998, Sun Microsystems, Inc.   All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH pam_set_data 3PAM "13 Oct 1998" "SunOS 5.11" "PAM Library Functions"
.SH NAME
pam_set_data, pam_get_data \- PAM routines to maintain module specific
state
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR .\|.\|. ] \fIfile\fR .\|.\|. \fB-lpam\fR [ \fIlibrary\fR .\|.\|. ]
#include <security/pam_appl.h>



\fBint\fR \fBpam_set_data\fR(\fBpam_handle_t *\fIpamh\fR,
     \fBconst char *\fImodule_data_name\fR, \fBvoid *\fIdata\fR,
     \fBvoid  (*\fIcleanup\fR) (pam_handle_t *\fIpamh\fR, \fBvoid *\fIdata\fR,
     \fBint\fR \fIpam_end_status\fR));
.fi

.LP
.nf
\fBint\fR \fBpam_get_data\fR(\fBconst pam_handle_t *\fIpamh\fR,
     \fBconst char *\fImodule_data_name\fR, \fBconst void **\fIdata\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B pam_set_data()
and
.B pam_get_data()
functions allow
.BR PAM
service modules to access and update module specific information as needed.
These functions should not be used by applications.
.sp
.LP
The
.B pam_set_data()
function stores module specific data within the
\fBPAM\fR handle
.IR pamh .
The
.I module_data_name
argument uniquely
identifies the data, and the
.I data
argument represents the actual data.
The
.I module_data_name
argument should be unique across all services.
.sp
.LP
The
.I cleanup
function frees up any memory used by the
.I data
after
it is no longer needed, and is invoked by
.BR pam_end() .
The
.IR cleanup
function takes as its arguments a pointer to the 
.B PAM
handle,
.IR pamh ,
a pointer to the actual data,
.IR data ,
and a status code,
.IR pam_end_status .
The status code determines exactly what state
information needs to be  purged.
.sp
.LP
If
.B pam_set_data()
is called and module data already exists  from a
prior call to 
.B pam_set_data()
under the same
.IR module_data_name ,
then the existing
.I data
is replaced by the new
.IR data ,
and the
existing
.I cleanup
function is replaced by the new
.IR cleanup
function.
.sp
.LP
The
.B pam_get_data()
function retrieves module-specific data stored in
the
.B PAM
handle,
.IR pamh ,
identified by the unique name,
.IR module_data_name .
The
.I data
argument is assigned the address of
the requested data. The 
.I data
retrieved by
.B pam_get_data()
should
not be modified or freed.  The
.I data
will be released by
.BR pam_end() .
.SH RETURN VALUES
.sp
.LP
In addition to the return values listed in \fBpam\fR(3PAM), the following
value may also be returned:
.sp
.ne 2
.mk
.na
.B PAM_NO_MODULE_DATA
.ad
.RS 22n
.rt
No module specific data is present.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for description of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface Stability Stable
_
MT-LevelMT-Safe with exceptions
.TE

.SH SEE ALSO
.sp
.LP
.BR pam (3PAM),
.BR pam_end (3PAM),
.BR libpam (3LIB),
.BR attributes (5)
.SH NOTES
.sp
.LP
The interfaces in 
.B libpam
are MT-Safe only if each thread within the
multithreaded application uses its own 
.B PAM
handle.
