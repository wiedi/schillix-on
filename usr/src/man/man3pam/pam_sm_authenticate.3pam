'\" te
.\" Copyright (c) 2005, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH pam_sm_authenticate 3PAM "27 Jan 2005" "SunOS 5.11" "PAM Library Functions"
.SH NAME
pam_sm_authenticate \- service provider implementation for
pam_authenticate
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lpam\fR [ \fIlibrary\fR.\|.\|. ]
#include <security/pam_appl.h>
#include <security/pam_modules.h>


\fBint\fR \fBpam_sm_authenticate\fR(\fBpam_handle_t *\fIpamh\fR, \fBint\fR \fIflags\fR,
     \fBint\fR \fIargc\fR, \fBconst char **\fIargv\fR);
.fi

.SH DESCRIPTION
.sp
.LP
In response to a call to
.BR pam_authenticate (3PAM),
the
.B PAM
framework calls
.B pam_sm_authenticate()
from the modules listed in the
.BR pam.conf (4)
file. The authentication provider supplies the back-end
functionality for this interface function.
.sp
.LP
The
.B pam_sm_authenticate()
function is called to verify the identity
of the current user. The user is usually required to enter a password or
similar authentication token depending upon the authentication scheme
configured within the system. The user in question is specified by a prior
call to
.BR pam_start() ,
and is referenced by the authentication handle
.IR pamh .
.sp
.LP
If the user is unknown to the authentication service, the service module
should mask this error and continue to prompt the user for a password. It
should then return the error,
.BR PAM_USER_UNKNOWN .
.sp
.LP
The following flag may be passed in to
.BR pam_sm_authenticate() :
.sp
.ne 2
.mk
.na
.B PAM_SILENT
.ad
.RS 29n
.rt
The authentication service should not generate any messages.
.RE

.sp
.ne 2
.mk
.na
.B PAM_DISALLOW_NULL_AUTHTOK
.ad
.RS 29n
.rt
The authentication service should return
.RE

.sp
.ne 2
.mk
.na
.B PAM_AUTH_ERR
.ad
.RS 29n
.rt
The user has a null authentication token.
.RE

.sp
.LP
The
.I argc
argument represents the number of module options passed in
from the configuration file
.BR pam.conf (4).
.I argv
specifies the
module options, which are interpreted and processed by the authentication
service. Please refer to the specific module man pages for the various
available
.IR options .
If any unknown option is passed in, the module
should log the error and ignore the option.
.sp
.LP
Before returning,
.B pam_sm_authenticate()
should call
.B pam_get_item()
and retrieve
.BR PAM_AUTHTOK .
If it has not been set
before and the value is
.IR NULL ,
.B pam_sm_authenticate()
should set
it to the password entered by the user using
.BR pam_set_item() .
.sp
.LP
An authentication module may save the authentication status (success or
reason for failure) as state in the authentication handle using
.BR pam_set_data (3PAM).
This information is intended for use by
.BR pam_setcred() .
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B PAM_SUCCESS
must be returned. In
addition, the following values may be returned:
.sp
.ne 2
.mk
.na
.B PAM_MAXTRIES
.ad
.RS 25n
.rt
Maximum number of authentication attempts exceeded.
.RE

.sp
.ne 2
.mk
.na
.B PAM_AUTH_ERR
.ad
.RS 25n
.rt
Authentication failure.
.RE

.sp
.ne 2
.mk
.na
.B PAM_CRED_INSUFFICIENT
.ad
.RS 25n
.rt
Cannot access authentication data due to insufficient credentials.
.RE

.sp
.ne 2
.mk
.na
.B PAM_AUTHINFO_UNAVAIL
.ad
.RS 25n
.rt
Underlying authentication service can not retrieve authentication
information.
.RE

.sp
.ne 2
.mk
.na
.B PAM_USER_UNKNOWN
.ad
.RS 25n
.rt
User not known to underlying authentication module.
.RE

.sp
.ne 2
.mk
.na
.B PAM_IGNORE
.ad
.RS 25n
.rt
Ignore underlying authentication module regardless of whether the control
flag is \fIrequired\fR,\fIoptional,\fR or \fIsufficient\fR1.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for description of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface Stability Stable
_
MT-LevelMT-Safe with exceptions
.TE

.SH SEE ALSO
.sp
.LP
.BR pam (3PAM),
.BR pam_authenticate (3PAM),
.BR pam_get_item (3PAM),
.BR pam_set_data (3PAM),
.BR pam_set_item (3PAM),
.BR pam_setcred (3PAM),
.BR pam_start (3PAM),
.BR libpam (3LIB),
.BR pam.conf (4),
.BR attributes (5)
.SH NOTES
.sp
.LP
Modules should not retry the authentication in the event of a failure.
Applications handle authentication retries and maintain the retry count. To
limit the number of retries, the module can return a
.B PAM_MAXTRIES
error.
.sp
.LP
The interfaces in
.B libpam
are MT-Safe only if each thread within the
multithreaded application uses its own
.B PAM
handle.
.sp
.LP
If the
.B PAM_REPOSITORY
.I item_type
is set and a service module
does not recognize the type, the service module does not process any
information, and returns
.BR PAM_IGNORE .
If the
.BR PAM_REPOSITORY
.I item_type
is not set, a service module performs its default action.
