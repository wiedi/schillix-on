'\" te
.\" Copyright (c) 2005, Sun Microsystems, Inc.  All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH pam_start 3PAM "22 Feb 2005" "SunOS 5.11" "PAM Library Functions"
.SH NAME
pam_start, pam_end \- PAM authentication transaction functions
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR .\|.\|. ] \fIfile\fR .\|.\|. \fB-lpam\fR [ \fIlibrary\fR .\|.\|. ]
#include <security/pam_appl.h>

\fBint\fR \fBpam_start\fR(\fBconst char *\fIservice\fR, \fBconst char *\fIuser\fR,
     \fBconst struct pam_conv *\fIpam_conv\fR, \fBpam_handle_t *\fI*pamh\fR);
.fi

.LP
.nf
\fBint\fR \fBpam_end\fR(\fBpam_handle_t *\fIpamh\fR, \fBint\fR \fIstatus\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B pam_start()
function is called to initiate an authentication
transaction. It takes as arguments the name of the current service,
.IR service ,
the name of the user to be authenticated,
.IR user ,
the
address of the conversation structure,
.IR pam_conv ,
and the address of a
variable to be assigned the authentication handle
.IR pamh .
Upon
successful completion,
.I pamh
refers to a
.B PAM
handle for use with
subsequent calls to the authentication library.
.sp
.LP
The
.I pam_conv
structure contains the address of the conversation
function provided by the application.  The underlying
.B PAM
service
module invokes this function to output information to and retrieve input
from the user. The
.B pam_conv
structure has the following entries:
.sp
.in +2
.nf
struct pam_conv {
    int   (*conv)();     /* Conversation function */
    void  *appdata_ptr;  /* Application data */
};
.fi
.in -2

.sp
.in +2
.nf
int conv(int num_msg, const struct pam_message **msg,
         struct pam_response **resp, void *appdata_ptr);
.fi
.in -2

.sp
.LP
The
.B conv()
function is called by a service module to hold a
.BR PAM
conversation with the application or user. For window applications, the
application can create a new pop-up window to be used by the interaction.
.sp
.LP
The
.I num_msg
parameter is the number of messages associated with the
call. The parameter
.I msg
is a pointer to an array of length
.I num_msg
of the
.I pam_message
structure.
.sp
.LP
The
.B pam_message
structure is used to pass prompt, error message, or
any text information from the authentication service to the application or
user. It is the responsibility of the
.B PAM
service modules to localize
the messages. The memory used by
.B pam_message
has to be allocated and
freed by the
.B PAM
modules.  The
.B pam_message
structure has the
following entries:
.sp
.in +2
.nf
struct pam_message{
    int     msg_style;
    char    *msg;
};
.fi
.in -2

.sp
.LP
The message style,
.BR msg_style ,
can be set to one of the following
values:
.sp
.ne 2
.mk
.na
.B PAM_PROMPT_ECHO_OFF
.ad
.RS 23n
.rt
Prompt user, disabling echoing of response.
.RE

.sp
.ne 2
.mk
.na
.B PAM_PROMPT_ECHO_ON
.ad
.RS 23n
.rt
Prompt user, enabling echoing of response.
.RE

.sp
.ne 2
.mk
.na
.B PAM_ERROR_MSG
.ad
.RS 23n
.rt
Print error message.
.RE

.sp
.ne 2
.mk
.na
.B PAM_TEXT_INFO
.ad
.RS 23n
.rt
Print general text information.
.RE

.sp
.LP
The maximum size of the message and the response string is
.B PAM_MAX_MSG_SIZE
as defined in <\fBsecurity/pam.appl.h\fR>.
.sp
.LP
The structure
.I pam_response
is used by the authentication service to
get the user's response back from the application or user. The storage used
by
.I pam_response
has to be allocated by the application and freed by
the
.B PAM
modules. The
.I pam_response
structure has the following
entries:
.sp
.in +2
.nf
struct pam_response{
    char *resp;
    int  resp_retcode;  /* currently not used, */
                        /* should be set to 0 */
 };
.fi
.in -2

.sp
.LP
It is the responsibility of the conversation function to strip off
.B NEWLINE
characters for
.B PAM_PROMPT_ECHO_OFF
and
.B PAM_PROMPT_ECHO_ON
message styles, and to add
.B NEWLINE
characters
(if appropriate) for
.B PAM_ERROR_MSG
and
.B PAM_TEXT_INFO
message
styles.
.sp
.LP
The
.I appdata_ptr
argument is an application data pointer which is
passed by the application to the
.B PAM
service modules. Since the
.B PAM
modules pass it back through the conversation function, the
applications can use this pointer to point to any application-specific
data.
.sp
.LP
The
.B pam_end()
function is called to terminate the authentication
transaction identified by
.I pamh
and to free any storage area allocated
by the authentication module. The argument,
.IR status ,
is passed to the
.B cleanup(|)
function stored within the
.B pam
handle, and is used
to determine what module-specific state must be purged.  A cleanup function
is attached to the handle by the underlying
.B PAM
modules through a call
to \fBpam_set_data\fR(3PAM) to free module-specific data.
.sp
.LP
Refer to
.I "Solaris Security for Developers Guide"
for information about
providing authentication, account management, session management, and
password management through PAM modules.
.SH RETURN VALUES
.sp
.LP
Refer to the RETURN VALUES section on
.BR pam (3PAM).
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for description of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface Stability Stable
_
MT-LevelMT-Safe with exceptions
.TE

.SH SEE ALSO
.sp
.LP
.BR libpam (3LIB),
.BR pam (3PAM),
.BR pam_acct_mgmt (3PAM),
.BR pam_authenticate (3PAM),
.BR pam_chauthtok (3PAM),
.BR pam_open_session (3PAM),
.BR pam_setcred (3PAM),
.BR pam_set_data (3PAM),
.BR pam_strerror (3PAM),
.BR attributes (5)
.sp
.LP
.I Solaris Security for Developers Guide
.SH NOTES
.sp
.LP
The interfaces in
.B libpam
are MT-Safe only if each thread within the
multithreaded application uses its own
.B PAM
handle.
