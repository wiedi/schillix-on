'\" te
.\" Copyright (c) 1990, Sun Microsystems, Inc.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH tmpfs 7FS "9 Oct 1990" "SunOS 5.11" "File Systems"
.SH NAME
tmpfs \- memory based file system
.SH SYNOPSIS
.LP
.nf
#include <sys/mount.h>

\fBmount\fR (\fIspecial\fR, \fIdirectory\fR, \fIMS_DATA\fR, \fI"tmpfs"\fR, \fINULL\fR, \fI0\fR);
.fi

.SH DESCRIPTION
.sp
.LP
.B tmpfs
is a memory based file system which uses kernel resources
relating to the
.B VM
system and page cache as a file system. Once
mounted, a
.B tmpfs
file system provides standard file operations and
semantics.
.B tmpfs
is so named because files and directories are not
preserved across reboot or unmounts, all files residing on a  \fBtmpfs\fR
file system that is unmounted will be lost.
.sp
.LP
.B tmpfs
file systems can be mounted with the command:
.sp
.in +2
.nf
\fBmount \fB-F\fB tmpfs swap \fIdirectory\fR
.fi
.in -2

.sp
.LP
Alternatively, to mount a
.B tmpfs
file system on
.B /tmp
at
multi-user startup time (maximizing possible performance improvements), add
the following line to
.BR /etc/vfstab :
.sp
.in +2
.nf
\fBswap \(mi/tmp tmpfs \(mi yes \(mi\fR
.fi
.in -2

.sp
.LP
.B tmpfs
is designed as a performance enhancement which is achieved by
caching the writes to files residing on a
.B tmpfs
file system.
Performance improvements are most noticeable when a large number of short
lived files are written and accessed on a
.B tmpfs
file system. Large
compilations with \fBtmpfs\fR mounted on \fB/tmp\fR are a good example of
this.
.sp
.LP
Users of
.B tmpfs
should be aware of some constraints involved in
mounting a  \fBtmpfs\fR file system. The resources used by \fBtmpfs\fR are
the same as those used when commands are executed (for example, swap space
allocation). This means that  large sized
.B tmpfs
files can affect the
amount of space left over for programs to execute. Likewise, programs
requiring large amounts of memory use up the space available to
.BR tmpfs .
Users running into this constraint (for example, running out of space on
.BR tmpfs )
can allocate more swap space by using the
.BR swap (1M)
command.
.sp
.LP
Another constraint is that the number of files available in a  \fBtmpfs\fR
file system is calculated based on the physical memory of the machine and
not the size of the swap device/partition. If you have too many files,
.B tmpfs
will print a warning message and you will be unable to create
new files. You cannot increase this limit by adding swap space.
.sp
.LP
Normal file system writes are scheduled to be written to a permanent
storage medium along with all control information associated with the file
(for example, modification time, file permissions).
.B tmpfs
control
information resides only in memory and never needs to be written to
permanent storage. File data remains in core until memory demands are
sufficient to cause pages associated with
.B tmpfs
to be reused at which
time they are copied out to swap.
.sp
.LP
An additional mount option can be specified to control the size of an
individual
.B tmpfs
file system.
.SH SEE ALSO
.sp
.LP
.BR df (1M),
.BR mount (1M),
.BR mount_tmpfs (1M),
.BR swap (1M),
.BR mmap (2),
.BR mount (2),
.BR umount (2),
.BR vfstab (4)
.sp
.LP
.I System Administration Guide: Basic Administration
.SH DIAGNOSTICS
.sp
.LP
If
.B tmpfs
runs out of space, one of the following messages will
display in the console.
.sp
.ne 2
.mk
.na
.IR directory :
File system full, swap space limit exceeded\fR
.ad
.sp .6
.RS 4n
This message appears because a page could not be allocated while writing to
a file. This can occur if
.B tmpfs
is attempting to write more than it is
allowed, or if currently executing programs are using a lot of memory. To
make more space available, remove unnecessary files, exit from some
programs, or allocate more swap space using
.BR swap (1M).
.RE

.sp
.ne 2
.mk
.na
.IR directory :
File system full, memory allocation failed\fR
.ad
.sp .6
.RS 4n
.B tmpfs
ran out of physical memory while attempting to create a new
file or directory. Remove unnecessary files or directories or install more
physical memory.
.RE

.SH WARNINGS
.sp
.LP
Files and directories on a
.B tmpfs
file system are not preserved across
reboots or unmounts. Command scripts or programs which count on this will
not work as expected.
.SH NOTES
.sp
.LP
Compilers do not necessarily use
.B /tmp
to write intermediate files
therefore missing some significant performance benefits. This can be
remedied by setting the environment variable
.B TMPDIR
to
.BR /tmp .
Compilers use the value in this environment variable as the name of the
directory to store intermediate files.
.sp
.LP
.B swap
to a
.B tmpfs
file is not supported.
.sp
.LP
.BR df (1M)
output is of limited accuracy since a
.B tmpfs
file system
size is not static and the space available to
.B tmpfs
is dependent on
the swap space demands of the entire system.
