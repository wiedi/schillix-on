'\" te
.\" Copyright (c) 2007 Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH pcfs 7FS "6 Nov 2007" "SunOS 5.11" "File Systems"
.SH NAME
pcfs \- FAT formatted file system
.SH SYNOPSIS
.LP
.nf
#include <sys/param.h>
#include <sys/mount.h>
#include <sys/fs/pc_fs.h>

\fBint\fR \fBmount\fR(\fBconst char *\fIspec\fR,
     \fBconst char *\fR \fIdir\fR, \fBint\fR  \fImflag\fR,
     \fB"pcfs", NULL, 0,\fR \fBchar *\fIoptptr\fR,
     \fBint\fR \fIoptlen\fR);
.fi

.SH DESCRIPTION
.sp
.LP
.B pcfs
is a file system type that enables direct access to files on
.B FAT
formatted disks from within the SunOS operating system.
.sp
.LP
Once mounted,
.B pcfs
provides standard SunOS file operations and
semantics. Using
.BR pcfs ,
you can create, delete, read, and write files
on a
.B FAT
formatted disk. You can also create and delete directories
and list files in a directory.
.sp
.LP
.B pcfs
supports FAT12 (floppies) and FAT16 and FAT32 file systems.
.sp
.LP
.B pcfs
file systems can be force umounted using the
.B -f
argument
to
.BR umount (1M).
.sp
.LP
The
.B pcfs
file system contained on the block special file identified
by
.I spec
is mounted on the directory identified by
.IR dir .
.I spec
and
.I dir
are pointers to pathnames.
.I mflag
specifies
the
.B mount
options. The
.B MS_DATA
bit in
.I mflag
must be set.
Mount options can be passed to
.B pcfs
using the  optptr and optlen
arguments. See
.BR mount_pcfs (1M)
for a list of mount options supported by
.BR pcfs .
.sp
.LP
Because FAT formatted media can record file timestamps between January 1st
1980 and December 31st 2127, it's not possible to fully represent UNIX
.B time_t
in
.B pcfs
for 32 bit or 64 bit programs. In particular, if
post-2038 timestamps are present on a FAT formatted medium and
.B pcfs
returns these, 32bit applications may unexpectedly fail with
.B EOVERFLOW
errors. To prevent this, the default behaviour of
.B pcfs
has been
modified to clamp post-2038 timestamps to the latest possible value for a
32bit
.BR time_t ,
which is January 19th 2038, 03:14:06 UTC when setting
and retrieving file timestamps. You can override this behavior using the
.B noclamptime
mount option, as described in
.BR mount_pcfs (1M).
.sp
.LP
Timestamps on FAT formatted media are recorded in local time. If the
recording and  receiving systems use different timezones, the representation
of timestamps shown on the two systems for the same medium might vary. To
correct this,
.B pcfs
provides a  timezone mount option to force
interpretation of timestamps as read from a FAT formatted medium in a given
timezone (that of the recorder). By default, the local timezone of the
receiver is used. See 
.BR mount_pcfs (1M)
for details.
.sp
.LP
The root directory of a FAT formatted medium has no timestamps and
.B pcfs
returns the time when the mount was done as timestamp  for the
root of the filesystem.
.sp
.LP
The FAT filesystem doesn't support multiple links. As a result, the link
count for all files and directories in \fBpcfs\fR is hard-coded as "1."
.SS "Mounting File Systems"
.sp
.LP
Use the following command to mount
.B pcfs
from diskette:
.sp
.in +2
.nf
mount \fB-F\fR pcfs \fIdevice-special\fR \fIdirectory-name\fR
.fi
.in -2
.sp

.sp
.LP
You can use:
.sp
.in +2
.nf
mount \fIdirectory-name\fR
.fi
.in -2
.sp

.sp
.LP
if the following line is in your
.B /etc/vfstab
file:
.sp
.in +2
.nf
\fIdevice-special\fR - \fIdirectory-name\fRpcfs \(mi no rw
.fi
.in -2

.sp
.LP
Use the following command to mount
.B pcfs
from non-diskette media:
.sp
.in +2
.nf
mount \fB-F\fR pcfs \fIdevice-special\fR:\fIlogical-drive\fR \fBdirectory-name\fR
.fi
.in -2
.sp

.sp
.LP
You can use:
.sp
.in +2
.nf
mount \fIdirectory-name\fR
.fi
.in -2
.sp

.sp
.LP
if the following line is in your
.B /etc/vfstab
file:
.sp
.in +2
.nf
\fIdevice-special\fR:\fIlogical_drive\fR \fB\(mi\fR \fIdirectory-name\fR \fBpcfs \(mi no rw\fR
.fi
.in -2

.sp
.LP
.I device-special
specifies the special block device file for the
diskette (\fB/dev/diskette\fIN\fR) or the entire hard disk
(\fB/dev/dsk/c\fIN\fRt\fIN\fRd\fIN\fRp0\fR for a SCSI disk, and
\fB/dev/dsk/c\fIN\fRd\fIN\fRp0\fR for
.B IDE
disks) or the \fBPCMCIA\fR
pseudo-floppy memory card
(\fB/dev/dsk/c\fIN\fRt\fIN\fRd\fIN\fRs\fIN\fR).
.sp
.LP
.I logical-drive
specifies either the
.B DOS
logical drive letter
(\fBc\fR through
.BR z )
or a drive number (\fB1\fR through
.BR 24 ).
Drive letter
.B c
is equivalent to drive number
.B 1
and represents
the Primary
.B DOS
partition on the disk; drive letters
.B d
through
.B z
are equivalent to drive numbers
.B 2
through
.BR 24 ,
and
represent
.B DOS
drives within the Extended
.B FAT
partition. Note
that
.I device-special
and
.I logical-drive
must be separated by a
colon.
.sp
.LP
.I directory-name
specifies the location where the file system is
mounted.
.sp
.LP
For example, to mount the Primary
.B DOS
partition from a SCSI hard
disk, use:
.sp
.in +2
.nf
mount \fB-F\fR pcfs /dev/dsk/c\fIN\fRt\fIN\fRd\fIN\fRp0:c /pcfs/c
.fi
.in -2
.sp

.sp
.LP
To mount the first logical drive in the Extended
.B DOS
partition from
an
.B IDE
hard disk, use:
.sp
.in +2
.nf
mount \fB-F\fR pcfs /dev/dsk/c\fIN\fRd\fIN\fRp0:d /pcfs/d
.fi
.in -2
.sp

.sp
.LP
To mount a
.B DOS
diskette in the first floppy drive when volume
management is not running use:
.sp
.in +2
.nf
mount \fB-F\fR pcfs /dev/diskette /pcfs/a
.fi
.in -2
.sp

.sp
.LP
If Volume Management is running, run
.BR volcheck (1)
to automatically
mount the floppy and some removable disks.
.sp
.LP
To mount a
.B PCMCIA
pseudo-floppy memory card, with Volume Management
not running (or not managing the
.B PCMCIA
media), use:
.sp
.in +2
.nf
mount \fB-F\fR pcfs /dev/dsk/c\fIN\fRt\fIN\fRd\fIN\fRs\fIN\fR /pcfs
.fi
.in -2
.sp

.SS "Conventions"
.sp
.LP
Files and directories created through
.B pcfs
must comply with either
the
.B FAT
short file name convention or the long file name convention
introduced with Windows 95. The
.B FAT
short file name convention is of
the form \fIfilename\fR[.\fIext\fR], where
.I filename
generally consists
of from one to eight upper-case characters, while the optional
.I ext
consists of from one to three upper-case characters.
.sp
.LP
The long file name convention is much closer to Solaris file names. A long
file name can consist of any characters valid in a short file name,
lowercase letters, non-leading spaces, the characters
.BR +,;=[] ,
any
number of periods, and can be up to 255 characters long. Long file names
have an associated short file name for systems that do not support long file
names (including earlier releases of Solaris). The short file name is not
visible if the system recognizes long file names.
.B pcfs
generates a
unique short name automatically when creating a long file name.
.sp
.LP
Given a long file name such as
.BR "This is a really long filename.TXT" ,
the short file name will generally be of the form
\fBTHISIS~\fIN\fB\&.TXT\fR, where
.I N
is a number. The long file
name will probably get the short name
.BR THISIS~1.TXT ,
or
.B THISIS~2.TXT
if
.B THISIS~1.TXT
already exits (or
.B THISIS~3.TXT
if both exist, and so forth). If you use
.B pcfs
file
systems on systems that do not support long file names, you may want to
continue following the short file name conventions. See
.BR EXAMPLES .
.sp
.LP
When creating a file name,
.B pcfs
creates a short file name if it fits
the
.B FAT
short file name format, otherwise it creates a long file name.
This is because long file names take more directory space. Because the root
directory of a
.B pcfs
file system is fixed size, long file names in the
root directory should be avoided if possible.
.sp
.LP
When displaying file names,
.B pcfs
shows them exactly as they are on
the media. This means that short names are displayed as uppercase and long
file names retain their case. Earlier versions of
.B pcfs
folded all
names to lowercase, which can be forced with the
.B PCFS_MNT_FOLDCASE
mount option. All file name searches within
.BR pcfs ,
however, are treated
as if they were uppercase, so
.B readme.txt
and
.B ReAdMe.TxT
refer to
the same file.
.sp
.LP
To format a diskette or a
.B PCMCIA
pseudo-floppy memory card in
.B FAT
format in the SunOS system, use either the
.B "fdformat -d"
or the
.B "DOS FORMAT"
command.
.SS "Boot Partitions"
.sp
.LP
On x86 systems, hard drives may contain an
.B fdisk
partition reserved
for the Solaris boot utilities. These partitions are special instances of
.BR pcfs .
You can mount an x86 boot partition with the command:
.sp
.in +2
.nf
mount \fB-F\fR pcfs \fIdevice-special\fR:boot \fIdirectory-name\fR
.fi
.in -2
.sp

.sp
.LP
or you can use:
.sp
.in +2
.nf
\fBmount \fIdirectory-name\fR
.fi
.in -2
.sp

.sp
.LP
if the following line is in your
.B /etc/vfstab
file:
.sp
.in +2
.nf
\fIdevice-special\fR:boot \(mi \fIdirectory-name\fR pcfs \(mi no rw
.fi
.in -2
.sp

.sp
.LP
.I device-special
specifies the special block device file for the entire
hard disk
.RB ( /dev/dsk/c\fIN\fRt\fIN\fRd\fIN\fRp0 )
.sp
.LP
.I directory-name
specifies the location where the file system is
mounted.
.sp
.LP
All files on a boot partition are owned by super-user. Only the super-user
may create, delete, or modify files on a boot partition.
.SH EXAMPLES
.LP
.B Example 1
Sample Displays of File Names
.sp
.LP
If you copy a file
.B financial.data
from a UNIX file system to
.BR pcfs ,
it displays as
.B financial.data
in
.BR pcfs ,
but may show
up as
.B FINANC~1.DAT
in systems that do not support long file names.

.sp
.LP
The following are legal long file names. They are also
.B illegal
short
file names:

.br
.in +2
.B test.sh.orig
.in -2
.br
.in +2
.B data+
.in -2
.br
.in +2
\fB\&.login\fR
.in -2
.sp
.LP
Other systems that do not support long file names may see:

.br
.in +2
.B TESTSH~1.ORI
.in -2
.br
.in +2
.B DATA~1
.in -2
.br
.in +2
.B LOGIN~1
.in -2
.sp
.LP
The short file name is generated from the initial characters of the long
file name, so differentiate names in the first few characters. For example,
these names:

.br
.in +2
.B WorkReport.January.Data
.in -2
.br
.in +2
.B WorkReport.February.Data
.in -2
.br
.in +2
.B WorkReport.March.Data
.in -2
.sp
.LP
result in these short names, which are not distinguishable:

.br
.in +2
.B WORKRE~1.DAT
.in -2
.br
.in +2
.B WORKRE~2.DAT
.in -2
.br
.in +2
.B WORKRE~13.DAT
.in -2
.sp
.LP
These names, however:

.br
.in +2
.B January.WorkReport.Data
.in -2
.br
.in +2
.B February.WorkReport.Data
.in -2
.br
.in +2
.B March.WorkReport.Data
.in -2
.sp
.LP
result in the more descriptive short names:

.br
.in +2
.B JANUAR~1.DAT
.in -2
.br
.in +2
.B FEBRUA~1.DAT
.in -2
.br
.in +2
.B MARCHW~1.DAT
.in -2
.SH FILES
.sp
.ne 2
.mk
.na
.B /usr/lib/fs/pcfs/mount
.ad
.RS 26n
.rt
.B pcfs mount
command
.RE

.sp
.ne 2
.mk
.na
.B /usr/kernel/fs/pcfs
.ad
.RS 26n
.rt
32-bit kernel module
.RE

.SH ENVIRONMENT VARIABLES
.sp
.LP
See
.BR environ (5)
for descriptions of the following environment
variables for the current locale setting: LANG, LC_ALL, LC_CTYPE, and
LC_COLLATE.
.SH SEE ALSO
.sp
.LP
.BR chgrp (1),
.BR chown (1),
.BR dos2unix (1),
.BR eject (1),
.BR fdformat (1),
.BR unix2dos (1),
.BR volcheck (1),
.BR mount (1M),
.BR mount_pcfs (1M),
.BR umount (1M),
.BR ctime (3C),
.BR vfstab (4),
.BR environ (5),
.BR pcmem (7D)
.SH WARNINGS
.sp
.LP
Do not physically eject a
.B FAT
floppy while the device is mounted as
.BR pcfs .
If Volume Management is managing a device, use the
.BR eject (1)
command before physically removing media.
.sp
.LP
When mounting
.B pcfs
on a hard disk, make sure the first block on that
device contains a valid
.B fdisk
partition table.
.sp
.LP
Because
.B pcfs
has no provision for handling owner-IDs or group-IDs on
files,
.BR chown (1)
or
.BR chgrp (1)
may generate various errors. This is
a limitation of
.BR pcfs ,
but it should not cause problems other than
error messages.
.SH NOTES
.sp
.LP
Only the following characters are allowed in
.B pcfs
short file names
and extensions:
.br
.in +2
.B 0-9
.in -2
.br
.in +2
.B A-Z
.in -2
.br
.in +2
.B $#&@!%()-{}<>`_^~|'
.in -2
.sp
.LP
SunOS and
.B FAT
use different character sets and have different
requirements for the text file format. Use the
.BR dos2unix (1)
and
.BR unix2dos (1)
commands to convert files between them.
.sp
.LP
.B pcfs
offers a convenient transportation vehicle for files between Sun
workstations and
.B PCs.
Because the
.B FAT
disk format was designed
for use under
.B DOS,
it does not operate efficiently under the SunOS
system and should not be used as the format for a regular local storage.
Instead, use
.B ufs
for local storage within the SunOS system.
.sp
.LP
Although long file names can contain spaces (just as in UNIX file names),
some utilities may be confused by them.
.sp
.LP
This implementation of
.B pcfs
conforms to the behavior exhibited by
Windows 95 version 4.00.950.
.sp
.LP
When
.B pcfs
encounters long file names with non-ASCII characters, it
converts such long file names in Unicode scalar values into UTF-8 encoded
filenames so that they are legible and usable with any of Solaris UTF-8
locales. In the same context, when new file names with non-ASCII characters
are created,
.B pcfs
expects that such file names are in UTF-8. This
feature increases the interoperability of
.B pcfs
on Solaris with other
operating systems.
.SH BUGS
.sp
.LP
.B pcfs
should handle the disk change condition in the same way that
.B DOS
does, so you do not need to unmount the file system to change
floppies.
