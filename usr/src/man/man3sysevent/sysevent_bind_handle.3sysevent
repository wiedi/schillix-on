'\" te
.\" Copyright (c) 2009, Sun Microsystems, Inc. All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH sysevent_bind_handle 3SYSEVENT "24 Jul 2009" "SunOS 5.11" "System Event Library Functions"
.SH NAME
sysevent_bind_handle, sysevent_unbind_handle \- bind or unbind subscriber
handle
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [\fIflag\fR\&.\|.\|.]  \fIfile\fR \&.\|.\|. \fB-lsysevent\fR [\fIlibrary\fR \&.\|.\|.]
#include <libsysevent.h>

\fBsysevent_handle_t *\fBsysevent_bind_handle\fR(\fBvoid (*\fIevent_handler\fR)
     (sysevent_t *\fIev\fR));
.fi

.LP
.nf
\fBvoid\fR \fBsysevent_unbind_handle\fR(\fBsysevent_handle_t *\fIsysevent_hdl\fR);
.fi

.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I ev
.ad
.RS 17n
.rt
pointer to
.B sysevent
buffer handle
.RE

.sp
.ne 2
.mk
.na
.I event_handler
.ad
.RS 17n
.rt
pointer to an event handling function
.RE

.sp
.ne 2
.mk
.na
.I sysevent_hdl
.ad
.RS 17n
.rt
pointer to a
.B sysevent
subscriber handle
.RE

.SH DESCRIPTION
.sp
.LP
The
.B sysevent_bind_handle()
function allocates memory associated with a
subscription handle and binds it to the caller's
.IR event_handler .
The
.I event_handler
is invoked during subsequent system event notifications once
a subscription has been made with
.BR sysevent_subscribe_event (3SYSEVENT).
.sp
.LP
The system event is represented by the argument
.I ev
and is passed as an
argument to the invoked event delivery function,
.IR event_handler .
.sp
.LP
Additional threads are created to service communication between
.BR syseventd (1M)
and the calling process and to run the event handler
routine,
.IR event_handler .
.sp
.LP
The
.B sysevent_unbind_handle()
function deallocates memory and other
resources associated with a subscription handle and deactivates all system event
notifications for the calling process.  All event notifications are guaranteed
to stop upon return from
.BR sysevent_unbind_handle() .
.SH RETURN VALUES
.sp
.LP
The
.B sysevent_bind_handle()
function returns a valid
.BR sysevent
subscriber handle if the handle is successfully allocated.  Otherwise,
.I NULL
is returned and
.B errno
is set to indicate the error.
.sp
.LP
The
.B sysevent_unbind_handle()
function returns no value.
.SH ERRORS
.sp
.LP
The
.B sysevent_bind_handle()
function will fail if:
.sp
.ne 2
.mk
.na
.B EACCES
.ad
.RS 10n
.rt
The calling process has an ID other than the privileged user.
.RE

.sp
.ne 2
.mk
.na
.B EBUSY
.ad
.RS 10n
.rt
There are no resources available.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The pointer to the function
.I event_handler
is
.IR NULL .
.RE

.sp
.ne 2
.mk
.na
.B EMFILE
.ad
.RS 10n
.rt
The process has too many open descriptors.
.RE

.sp
.ne 2
.mk
.na
.B ENOMEM
.ad
.RS 10n
.rt
There are insufficient resources to allocate the handle.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR syseventd (1M),
.BR sysevent_subscribe_event (3SYSEVENT),
.BR attributes (5)
.SH NOTES
.sp
.LP
Event notifications are revoked by
.B syseventd
when the bound process dies.
Event notification is suspended if a signal is caught and handled by the
.I event_handler
thread.  Event notification is also suspended when the
calling process attempts to use
.BR fork (2)
or
.BR fork1 (2).
Event
notifications might be lost during suspension periods.
.sp
.LP
The
.B libsysevent
interfaces do not work at all in non-global zones.
