'\" te
.\" Copyright (c) 2009, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH sysevent_post_event 3SYSEVENT "24 Jul 2009" "SunOS 5.11" "System Event Library Functions"
.SH NAME
sysevent_post_event \- post system event for applications
.SH SYNOPSIS
.LP
.nf
\fBcc\fR  [ \fIflag\fR\&.\|.\|. ]  \fIfile\fR\&.\|.\|. \fB-lsysevent\fR \fB -lnvpair \fR [ \fIlibrary\fR\&.\|.\|. ]
#include <libsysevent.h>
#include <libnvpair.h>

\fBint\fR \fBsysevent_post_event\fR(\fBchar *\fIclass\fR, \fBchar *\fIsubclass\fR, \fBchar *\fIvendor\fR,
     \fBchar *\fIpublisher\fR, \fBnvlist_t *\fIattr_list\fR, \fBsysevent_id_t *\fIeid\fR);
.fi

.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I attr_list
.ad
.RS 13n
.rt
pointer to an
.BR nvlist_t ,
listing the name-value attributes associated
with the event, or
.I NULL
if there are no such attributes for this
event
.RE

.sp
.ne 2
.mk
.na
.I class
.ad
.RS 13n
.rt
pointer to a string defining the event class
.RE

.sp
.ne 2
.mk
.na
.I eid
.ad
.RS 13n
.rt
pointer to a system unique identifier
.RE

.sp
.ne 2
.mk
.na
.I publisher
.ad
.RS 13n
.rt
pointer to a string defining the event's publisher nam
.RE

.sp
.ne 2
.mk
.na
.I subclass
.ad
.RS 13n
.rt
pointer to a string defining the event subclass
.RE

.sp
.ne 2
.mk
.na
.I vendor
.ad
.RS 13n
.rt
pointer to a string defining the vendor
.RE

.SH DESCRIPTION
.sp
.LP
The
.B sysevent_post_event()
function causes a system event of the
specified class, subclass, vendor, and publisher to be generated on behalf
of the caller and queued for delivery to  the sysevent daemon
.BR syseventd (1M).
.sp
.LP
The vendor should be the company stock symbol (or similarly enduring
identifier) of the event posting application. The publisher should be the
name of the application generating the event.
.sp
.LP
For example, all events posted by Sun applications begin with the company's
stock symbol, "SUNW". The publisher is usually the name of the application
generating the system event. A system event generated by \fBdevfsadm\fR(1M)
has a publisher string of
.BR devfsadm .
.sp
.LP
The publisher information is used by sysevent consumers to filter unwanted
event publishers.
.sp
.LP
Upon successful queuing of the system event, a unique identifier is
assigned to
.IR eid .
.SH RETURN VALUES
.sp
.LP
The
.B sysevent_post_event()
function returns
.B 0
if the system
event has been queued successfully for delivery. Otherwise it returns
\fB\(mi1\fR and sets \fBerrno\fR to indicate the error.
.SH ERRORS
.sp
.LP
The
.B sysevent_post_event()
function will fail if:
.sp
.ne 2
.mk
.na
.B ENOMEM
.ad
.RS 10n
.rt
Insufficient resources to queue the system event.
.RE

.sp
.ne 2
.mk
.na
.B EIO
.ad
.RS 10n
.rt
The
.B syseventd
daemon is not responding and events cannot be queued or
delivered at this time.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
Invalid argument.
.RE

.sp
.ne 2
.mk
.na
.B EPERM
.ad
.RS 10n
.rt
Permission denied.
.RE

.sp
.ne 2
.mk
.na
.B EFAULT
.ad
.RS 10n
.rt
A copy error occurred.
.RE

.SH EXAMPLES
.LP
.B Example 1
Post a system event event with no attributes.
.sp
.LP
The following example posts a system event event with no attributes.

.sp
.in +2
.nf
if (sysevent_post_event(EC_PRIV, "ESC_MYSUBCLASS", "SUNW", argv[0],
    NULL), &eid == -1) {
        fprintf(stderr, "error logging system event\en");
}
.fi
.in -2

.LP
.B Example 2
Post a system event with two name-value pair attributes.
.sp
.LP
The following example posts a system event event with two name-value pair
attributes, an integer value and a string.

.sp
.in +2
.nf
nvlist_t        *attr_list;
uint32_t        uint32_val = 0XFFFFFFFF;
char            *string_val = "string value data";

if (nvlist_alloc(&attr_list, 0, 0) == 0) {
        err = nvlist_add_uint32(attr_list, "uint32 data", uint32_val);
        if (err == 0)
                err = nvlist_add_string(attr_list, "str data",
                    string_val);
        if (err == 0)
                err = sysevent_post_event(EC_PRIV, "ESC_MYSUBCLASS",
                    "SUNW", argv[0], attr_list, &eid);
        if (err != 0)
                fprintf(stderr, "error logging system event\en");
        nvlist_free(attr_list);
}
.fi
.in -2

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR devfsadm (1M),
.BR syseventd (1M),
.BR nvlist_add_boolean (3NVPAIR),
.BR nvlist_alloc (3NVPAIR),
.BR attributes (5)
.SH NOTES
.sp
.LP
The
.B libsysevent
interfaces do not work at all in non-global zones.
