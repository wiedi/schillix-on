'\" te
.\" Copyright (c) 1992, X/Open Company Limited.  All Rights Reserved. 
.\" Portions Copyright (c) 2003, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH sendmsg 3XNET "1 Nov 2003" "SunOS 5.11" "X/Open Networking Services Library Functions"
.SH NAME
sendmsg \- send a message on a socket using a message structure
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR .\|.\|. ] \fIfile\fR .\|.\|. \fB-lxnet\fR [ \fIlibrary\fR .\|.\|. ]
#include <sys/socket.h>

\fBssize_t\fR \fBsendmsg\fR(\fBint\fR \fIsocket\fR, \fBconst struct msghdr *\fImessage\fR, \fBint\fR \fIflags\fR);
.fi

.SH PARAMETERS
.sp
.LP
The function takes the following arguments:
.sp
.ne 2
.mk
.na
.I socket
.ad
.RS 11n
.rt
Specifies the socket file descriptor.
.RE

.sp
.ne 2
.mk
.na
.I message
.ad
.RS 11n
.rt
Points to a
.B msghdr
structure, containing both the destination address
and the buffers for the outgoing message. The length and format of the
address depend on the address family of the socket.  The
.B msg_flags
member is ignored.
.RE

.sp
.ne 2
.mk
.na
.I flags
.ad
.RS 11n
.rt
Specifies the type of message transmission. The application may specify 0
or the following flag:
.sp
.ne 2
.mk
.na
.B MSG_EOR
.ad
.RS 11n
.rt
Terminates a record (if supported by the protocol)
.RE

.sp
.ne 2
.mk
.na
.B MSG_OOB
.ad
.RS 11n
.rt
Sends out-of-band data on sockets that support out-of-bound data. The
significance and semantics of out-of-band data are protocol-specific.
.RE

.RE

.SH DESCRIPTION
.sp
.LP
The
.B sendmsg()
function sends a message through a connection-mode or
connectionless-mode socket.  If the socket is connectionless-mode, the
message will be sent to the address specified by
.IR msghdr .
If the
socket is connection-mode, the destination address in
.I msghdr
is
ignored.
.sp
.LP
The
.I msg_iov
and
.I msg_iovlen
fields of message specify zero or
more buffers containing the data to be sent.
.I msg_iov
points to an
array of
.B iovec
structures;
.I msg_iovlen
must be set to the
dimension of this array. In each
.B iovec
.RI "structure, the " " iov_base"
field specifies  a storage area and the
.I iov_len
field gives its size
in bytes. Some of these sizes can be zero. The data from each storage area
indicated by
.I msg_iov
is sent in turn.
.sp
.LP
Successful completion of a call to
.B sendmsg()
does not guarantee
delivery of the message. A return value of \(mi1 indicates only
locally-detected errors.
.sp
.LP
If space is not available at the sending socket to hold the message to be
transmitted and the socket file descriptor does not have
.BR O_NONBLOCK
set,
.B sendmsg()
function blocks until space is available.  If space is
not available at the sending socket to hold the message to be transmitted
and the socket file descriptor does have
.B O_NONBLOCK
set,
.B sendmsg()
function will fail.
.sp
.LP
If the socket protocol supports broadcast and the specified address is a
broadcast address for the socket protocol,
.B sendmsg()
will fail if the
.B SO_BROADCAST
option is not set for the socket.
.sp
.LP
The socket in use may require the process to have appropriate privileges to
use the
.B sendmsg()
function.
.SH USAGE
.sp
.LP
The
.BR select "(3C) and"
.BR poll (2)
functions can be used to determine
when it is possible to send more data.
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B sendmsg()
function returns the number of
bytes sent.  Otherwise, \(mi1 is returned and
.B errno
is set to indicate
the error.
.SH ERRORS
.sp
.LP
The
.B sendmsg()
function will fail if:
.sp
.ne 2
.mk
.na
.B EAGAIN
.ad
.br
.na
.B EWOULDBLOCK
.ad
.RS 16n
.rt
The socket's file descriptor is marked O_NONBLOCK and the requested
operation would block.
.RE

.sp
.ne 2
.mk
.na
.B EAFNOSUPPORT
.ad
.RS 16n
.rt
Addresses in the specified address family cannot be used with this
socket.
.RE

.sp
.ne 2
.mk
.na
.B EBADF
.ad
.RS 16n
.rt
The
.I socket
argument is not a valid file descriptor.
.RE

.sp
.ne 2
.mk
.na
.B ECONNRESET
.ad
.RS 16n
.rt
A connection was forcibly closed by a peer.
.RE

.sp
.ne 2
.mk
.na
.B EFAULT
.ad
.RS 16n
.rt
The
.I message
parameter, or storage pointed to by the
.IR msg_name ,
.I msg_control
or
.I msg_iov
fields of the
.I message
parameter,
or storage pointed to by the
.B iovec
structures pointed to by the
.I msg_iov
field can not be accessed.
.RE

.sp
.ne 2
.mk
.na
.B EINTR
.ad
.RS 16n
.rt
A signal interrupted
.B sendmsg()
before any data was transmitted.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 16n
.rt
The sum of the
.B iov_len
values overflows an
.BR ssize_t .
.RE

.sp
.ne 2
.mk
.na
.B EMSGSIZE
.ad
.RS 16n
.rt
The message is to large to be sent all at once (as the socket requires), or
the
.B msg_iovlen
member of the
.B msghdr
structure pointed to by
.I message
is less than or equal to 0 or is greater than
.BR IOV_MAX .
.RE

.sp
.ne 2
.mk
.na
.B ENOTCONN
.ad
.RS 16n
.rt
The socket is connection-mode but is not connected.
.RE

.sp
.ne 2
.mk
.na
.B ENOTSOCK
.ad
.RS 16n
.rt
The
.I socket
argument does not refer a socket.
.RE

.sp
.ne 2
.mk
.na
.B EOPNOTSUPP
.ad
.RS 16n
.rt
The
.I socket
argument is associated with a socket that does not support
one or more of the values set in
.IR flags .
.RE

.sp
.ne 2
.mk
.na
.B EPIPE
.ad
.RS 16n
.rt
The socket is shut down for writing, or the socket is connection-mode and
is no longer connected. In the latter case, and if the socket is of type
SOCK_STREAM, the
.B SIGPIPE
signal is generated to the calling thread.
.RE

.sp
.LP
If the address family of the socket is
.BR AF_UNIX ,
then
.BR sendmsg()
will fail if:
.sp
.ne 2
.mk
.na
.B EIO
.ad
.RS 16n
.rt
An I/O error occurred while reading from or writing to the file system.
.RE

.sp
.ne 2
.mk
.na
.B ELOOP
.ad
.RS 16n
.rt
Too many symbolic links were encountered in translating the pathname in the
socket address.
.RE

.sp
.ne 2
.mk
.na
.B ENAMETOOLONG
.ad
.RS 16n
.rt
A component of a pathname exceeded
.I NAME_MAX
characters, or an entire
pathname exceeded
.I PATH_MAX
characters.
.RE

.sp
.ne 2
.mk
.na
.B ENOENT
.ad
.RS 16n
.rt
A component of the pathname does not name an existing file or the pathname
is an empty string.
.RE

.sp
.ne 2
.mk
.na
.B ENOTDIR
.ad
.RS 16n
.rt
A component of the path prefix of the pathname in the socket address is not
a directory.
.RE

.sp
.LP
The
.B sendmsg()
function may fail if:
.sp
.ne 2
.mk
.na
.B EACCES
.ad
.RS 16n
.rt
Search permission is denied for a component of the path prefix; or write
access to the named socket is denied.
.RE

.sp
.ne 2
.mk
.na
.B EDESTADDRREQ
.ad
.RS 16n
.rt
The socket is not connection-mode and does not have its peer address set,
and no destination address was specified.
.RE

.sp
.ne 2
.mk
.na
.B EHOSTUNREACH
.ad
.RS 16n
.rt
The destination host cannot be reached (probably because the host is down
or a remote router cannot reach it).
.RE

.sp
.ne 2
.mk
.na
.B EIO
.ad
.RS 16n
.rt
An I/O error occurred while reading from or writing to the file system.
.RE

.sp
.ne 2
.mk
.na
.B EISCONN
.ad
.RS 16n
.rt
A destination address was specified and the socket is already connected.
.RE

.sp
.ne 2
.mk
.na
.B ENETDOWN
.ad
.RS 16n
.rt
The local interface used to reach the destination is down.
.RE

.sp
.ne 2
.mk
.na
.B ENETUNREACH
.ad
.RS 16n
.rt
No route to the network is present.
.RE

.sp
.ne 2
.mk
.na
.B ENOBUFS
.ad
.RS 16n
.rt
Insufficient resources were available in the system to perform the
operation.
.RE

.sp
.ne 2
.mk
.na
.B ENOMEM
.ad
.RS 16n
.rt
Insufficient memory was available to fulfill the request.
.RE

.sp
.ne 2
.mk
.na
.B ENOSR
.ad
.RS 16n
.rt
There were insufficient STREAMS resources available for the operation to
complete.
.RE

.sp
.LP
If the address family of the socket is
.BR AF_UNIX ,
then
.BR sendmsg()
may fail if:
.sp
.ne 2
.mk
.na
.B ENAMETOOLONG
.ad
.RS 16n
.rt
Pathname resolution of a symbolic link produced an intermediate result
whose length exceeds
.IR PATH_MAX .
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR poll (2)
.BR getsockopt (3XNET),
.BR recv (3XNET),
.BR recvfrom (3XNET),
.BR recvmsg (3XNET),
.BR select (3C),
.BR send (3XNET),
.BR sendto (3XNET),
.BR setsockopt (3XNET),
.BR shutdown (3XNET),
.BR socket (3XNET),
.BR attributes (5),
.BR standards (5)
