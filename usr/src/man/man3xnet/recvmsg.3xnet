'\" te
.\" Copyright (c) 1992, X/Open Company Limited  All Rights Reserved
.\" Portions Copyright (c) 2006, Sun Microsystems, Inc.  All Rights Reserved
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH recvmsg 3XNET "27 Feb 2006" "SunOS 5.11" "X/Open Networking Services Library Functions"
.SH NAME
recvmsg \- receive a message from a socket
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR .\|.\|. ] \fIfile\fR .\|.\|. \fB-lxnet\fR [ \fIlibrary\fR .\|.\|. ]
#include <sys/socket.h>

\fBssize_t\fR \fBrecvmsg\fR(\fBint\fR \fIsocket\fR, \fBstruct msghdr *\fImessage\fR, \fBint\fR \fIflags\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B recvmsg()
function receives a message from a connection-mode or
connectionless-mode socket. It is normally used with connectionless-mode
sockets because it permits the application to retrieve the source address of
received data.
.sp
.LP
The
.B recvmsg()
function receives messages from unconnected or
connected sockets and returns the length of the message.
.sp
.LP
The
.B recvmsg()
function returns the total length of the message. For
message-based sockets such as
.B SOCK_DGRAM
and
.BR SOCK_SEQPACKET ,
the
entire message must be read in a single operation. If a message is too long
to fit in the supplied buffers, and
.B MSG_PEEK
is not set in the
.I flags
argument, the excess bytes are discarded, and
.B MSG_TRUNC
is
set in the
.B msg_flags
member of the
.B msghdr
structure. For
stream-based sockets such as
.BR SOCK_STREAM ,
message boundaries are
ignored. In this case, data is returned to the user as soon as it becomes
available, and no data is discarded.
.sp
.LP
If the
.B MSG_WAITALL
flag is not set, data will be returned only up to
the end of the first message.
.sp
.LP
If no messages are available at the socket, and
.B O_NONBLOCK
is not set
on the socket's file descriptor,
.B recvmsg()
blocks until a message
arrives. If no messages are available at the socket and
.B O_NONBLOCK
is
set on the socket's file descriptor, the
.B recvmsg()
function fails and
sets
.B errno
to
.B EAGAIN
or
.BR EWOULDBLOCK .
.sp
.LP
In the
.B msghdr
structure, defined in
.BR socket.h (3HEAD),
the
.B msg_name
and
.B msg_namelen
members specify the source address if
the socket is unconnected. If the socket is connected, the \fBmsg_name\fR
and
.B msg_namelen
members are ignored. The
.B msg_name
member may be
a null pointer if no names are desired or required.
.sp
.LP
The
.B msg_control
and
.B msg_controllen
members specify a buffer to
receive ancillary data sent along with a message. Ancillary data consists of
a sequence of pairs. Each pair is composed of a
.B cmsghdr
structure
followed by a data array. The
.B cmsghdr
structure, defined in
.BR socket.h (3HEAD),
contains descriptive information which allows an
application to correctly parse data. The data array contains the ancillary
data message.
.sp
.LP
If ancillary data is not transferred,
.B msg_control
is set to
.B NULL
and
.B msg_controllen
is set to
.BR 0 .
.sp
.LP
The
.B msg_iov
and
.B msg_iovlen
fields of the
.B msghdr
structure
are used to specify where the received data will be stored. \fBmsg_iov\fR
points to an array of
.B iovec
structures. The
.B msg_iovlen
must be
set to the dimension of this array. In each
.B iovec
structure, the
.B iov_base
field specifies a storage area and the
.B iov_len
field
gives its size in bytes. Each storage area indicated by
.B msg_iov
is
filled with received data in turn until all of the received data is stored
or all of the areas have been filled.
.sp
.LP
If the
.B SO_TIMESTAMP
option has been enabled through
.BR setsockopt() ,
then a struct
.B timeval
is returned following the
.BR cmsghdr ,
and the
.B cmsg_len
field of the
.B cmsghdr
indicates
the size of the struct
.BR timeval .
.sp
.LP
On successful completion, the
.B msg_flags
member of the message header
is the bitwise-inclusive OR of all of the following flags that indicate
conditions detected for the received message:
.sp
.ne 2
.mk
.na
.B MSG_EOR
.ad
.RS 14n
.rt
End of record was received (if supported by the protocol).
.RE

.sp
.ne 2
.mk
.na
.B MSG_OOB
.ad
.RS 14n
.rt
Out-of-band data was received.
.RE

.sp
.ne 2
.mk
.na
.B MSG_TRUNC
.ad
.RS 14n
.rt
Normal data was truncated.
.RE

.sp
.ne 2
.mk
.na
.B MSG_CTRUNC
.ad
.RS 14n
.rt
Control data was truncated.
.RE

.SH PARAMETERS
.sp
.LP
The function takes the following arguments:
.sp
.ne 2
.mk
.na
.I socket
.ad
.RS 11n
.rt
Specifies the socket file descriptor.
.RE

.sp
.ne 2
.mk
.na
.I message
.ad
.RS 11n
.rt
Points to a
.B msghdr
structure, containing both the buffer to store the
source address and the buffers for the incoming message. The length and
format of the address depend on the address family of the socket. The
.B msg_flags
member is ignored on input, but may contain meaningful
values on output.
.RE

.sp
.ne 2
.mk
.na
.I flags
.ad
.RS 11n
.rt
Specifies the type of message reception. Values of this argument are formed
by logically OR'ing zero or more of the following values:
.sp
.ne 2
.mk
.na
.B MSG_OOB
.ad
.RS 15n
.rt
Requests out-of-band data. The significance and semantics of out-of-band
data are protocol-specific.
.RE

.sp
.ne 2
.mk
.na
.B MSG_PEEK
.ad
.RS 15n
.rt
Peeks at the incoming message.
.RE

.sp
.ne 2
.mk
.na
.B MSG_WAITALL
.ad
.RS 15n
.rt
Requests that the function block until the full amount of data requested
can be returned. The function may return a smaller amount of data if a
signal is caught, if the connection is terminated, if
.B MSG_PEEK
was
specified, or if an error is pending for the socket.
.RE

.RE

.SH USAGE
.sp
.LP
The
.BR select "(3C) and"
.BR poll (2)
functions can be used to determine
when data is available to be received.
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B recvmsg()
returns the length of the
message in bytes. If no messages are available to be received and the peer
has performed an orderly shutdown,
.B recvmsg()
returns
.BR 0 .
Otherwise, \fB\(mi1\fR is returned and
.B errno
is set to indicate the
error.
.SH ERRORS
.sp
.LP
The
.B recvmsg()
function will fail if:
.sp
.ne 2
.mk
.na
.B EAGAIN
.ad
.br
.na
.B EWOULDBLOCK
.ad
.RS 15n
.rt
The socket's file descriptor is marked
.B O_NONBLOCK
and no data is
waiting to be received; or
.B MSG_OOB
is set and no out-of-band data is
available and either the socket's file descriptor is marked \fBO_NONBLOCK\fR
or the socket does not support blocking to await out-of-band data.
.RE

.sp
.ne 2
.mk
.na
.B EBADF
.ad
.RS 15n
.rt
The
.I socket
argument is not a valid open file descriptor.
.RE

.sp
.ne 2
.mk
.na
.B ECONNRESET
.ad
.RS 15n
.rt
A connection was forcibly closed by a peer.
.RE

.sp
.ne 2
.mk
.na
.B EFAULT
.ad
.RS 15n
.rt
The
.I message
parameter, or storage pointed to by the
.IR msg_name ,
.I msg_control
or
.I msg_iov
fields of the
.I message
parameter, or
storage pointed to by the
.B iovec
structures pointed to by the
.I msg_iov
field can not be accessed or written.
.RE

.sp
.ne 2
.mk
.na
.B EINTR
.ad
.RS 15n
.rt
This function was interrupted by a signal before any data was available.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 15n
.rt
The sum of the
.B iov_len
values overflows an
.BR ssize_t .
or the
MSG_OOB flag is set and no out-of-band data is available.
.RE

.sp
.ne 2
.mk
.na
.B EMSGSIZE
.ad
.RS 15n
.rt
The
.B msg_iovlen
member of the
.B msghdr
structure pointed to by
.I message
is less than or equal to 0, or is greater than
.BR IOV_MAX .
.RE

.sp
.ne 2
.mk
.na
.B ENOTCONN
.ad
.RS 15n
.rt
A receive is attempted on a connection-mode socket that is not connected.
.RE

.sp
.ne 2
.mk
.na
.B ENOTSOCK
.ad
.RS 15n
.rt
The
.I socket
argument does not refer to a socket.
.RE

.sp
.ne 2
.mk
.na
.B EOPNOTSUPP
.ad
.RS 15n
.rt
The specified flags are not supported for this socket type.
.RE

.sp
.ne 2
.mk
.na
.B ETIMEDOUT
.ad
.RS 15n
.rt
The connection timed out during connection establishment, or due to a
transmission timeout on active connection.
.RE

.sp
.LP
The
.B recvmsg()
function may fail if:
.sp
.ne 2
.mk
.na
.B EIO
.ad
.RS 11n
.rt
An
.B IO
error occurred while reading from or writing to the file
system.
.RE

.sp
.ne 2
.mk
.na
.B ENOBUFS
.ad
.RS 11n
.rt
Insufficient resources were available in the system to perform the
operation.
.RE

.sp
.ne 2
.mk
.na
.B ENOMEM
.ad
.RS 11n
.rt
Insufficient memory was available to fulfill the request.
.RE

.sp
.ne 2
.mk
.na
.B ENOSR
.ad
.RS 11n
.rt
There were insufficient STREAMS resources available for the operation to
complete.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR poll (2),
.BR recv (3XNET),
.BR recvfrom (3XNET),
.BR select (3C),
.BR send (3XNET),
.BR sendmsg (3XNET),
.BR sendto (3XNET),
.BR setsockopt (3XNET),
.BR shutdown (3XNET),
.BR socket (3XNET),
.BR socket.h (3HEAD),
.BR attributes (5),
.BR standards (5)
