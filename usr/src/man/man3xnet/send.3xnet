'\" te
.\" Copyright (c) 1992, X/Open Company Limited  All Rights Reserved. 
.\" Portions Copyright (c) 2003, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH send 3XNET "1 Nov 2003" "SunOS 5.11" "X/Open Networking Services Library Functions"
.SH NAME
send \- send a message on a socket
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR .\|.\|. ] \fIfile\fR .\|.\|. \fB-lxnet\fR [ \fIlibrary\fR .\|.\|. ]
#include <sys/socket.h>

\fBssize_t\fR \fBsend\fR(\fBint\fR \fIsocket\fR, \fBconst void *\fIbuffer\fR, \fBsize_t\fR \fIlength\fR, \fBint flags\fR);
.fi

.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I socket
.ad
.RS 10n
.rt
Specifies the socket file descriptor.
.RE

.sp
.ne 2
.mk
.na
.I buffer
.ad
.RS 10n
.rt
Points to the buffer containing the message to send.
.RE

.sp
.ne 2
.mk
.na
.I length
.ad
.RS 10n
.rt
Specifies the length of the message in bytes.
.RE

.sp
.ne 2
.mk
.na
.I flags
.ad
.RS 10n
.rt
Specifies the type of message transmission. Values of this argument are formed
by logically OR'ing zero or more of the following flags:
.sp
.ne 2
.mk
.na
.B MSG_EOR
.ad
.RS 11n
.rt
Terminates a record (if supported by the protocol)
.RE

.sp
.ne 2
.mk
.na
.B MSG_OOB
.ad
.RS 11n
.rt
Sends out-of-band data on sockets that support out-of-band communications. The
significance and semantics of out-of-band data are protocol-specific.
.RE

.RE

.SH DESCRIPTION
.sp
.LP
The
.B send()
function initiates transmission of a message from the
specified socket to its peer.  The
.B send()
function sends a message only
when the socket is connected (including when the peer of a connectionless
socket has been set via
.BR connect (3XNET)).
.sp
.LP
The length of the message to be sent is specified by the
.IR length
argument. If the message is too long to pass through the underlying protocol,
.B send()
fails and no data is transmitted.
.sp
.LP
Successful completion of a call to
.B send()
does not guarantee delivery of
the message.  A return value of \(mi1 indicates only locally-detected errors.
.sp
.LP
If space is not available at the sending socket to hold the message to be
transmitted and the socket file descriptor does not have
.B O_NONBLOCK
set,
.B send()
blocks until space is available.  If space is not available at the
sending socket to hold the message to be transmitted and the socket file
descriptor does have
.B O_NONBLOCK
set,
.B send()
will fail. The
.BR select (3C)
and
.BR poll (2)
functions can be used to determine when it
is possible to send more data.
.sp
.LP
The socket in use may require the process to have appropriate privileges to
use the
.B send()
function.
.SH USAGE
.sp
.LP
The
.B send()
function is identical to
.BR sendto "(3XNET) with a null"
pointer
.I dest_len
argument, and to
.B write()
if no flags are used.
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B send()
returns the number of bytes sent.
Otherwise, \(mi1 is returned and
.B errno
is set to indicate the error.
.SH ERRORS
.sp
.LP
The
.B send()
function will fail if:
.sp
.ne 2
.mk
.na
.B EAGAIN
.ad
.br
.na
.B EWOULDBLOCK
.ad
.RS 16n
.rt
The socket's file descriptor is marked
.B O_NONBLOCK
and the requested
operation would block.
.RE

.sp
.ne 2
.mk
.na
.B EBADF
.ad
.RS 16n
.rt
The
.I socket
argument is not a valid file descriptor.
.RE

.sp
.ne 2
.mk
.na
.B ECONNRESET
.ad
.RS 16n
.rt
A connection was forcibly closed by a peer.
.RE

.sp
.ne 2
.mk
.na
.B EDESTADDRREQ
.ad
.RS 16n
.rt
The socket is not connection-mode and no peer address is set.
.RE

.sp
.ne 2
.mk
.na
.B EFAULT
.ad
.RS 16n
.rt
The
.I buffer
parameter can not be accessed.
.RE

.sp
.ne 2
.mk
.na
.B EINTR
.ad
.RS 16n
.rt
A signal interrupted
.B send()
before any data was transmitted.
.RE

.sp
.ne 2
.mk
.na
.B EMSGSIZE
.ad
.RS 16n
.rt
The message is too large be sent all at once, as the socket requires.
.RE

.sp
.ne 2
.mk
.na
.B ENOTCONN
.ad
.RS 16n
.rt
The socket is not connected or otherwise has not had the peer prespecified.
.RE

.sp
.ne 2
.mk
.na
.B ENOTSOCK
.ad
.RS 16n
.rt
The
.I socket
argument does not refer to a socket.
.RE

.sp
.ne 2
.mk
.na
.B EOPNOTSUPP
.ad
.RS 16n
.rt
The
.I socket
argument is associated with a socket that does not support
one or more of the values set in
.IR flags .
.RE

.sp
.ne 2
.mk
.na
.B EPIPE
.ad
.RS 16n
.rt
The socket is shut down for writing, or the socket is connection-mode and is
no longer connected. In the latter case, and if the socket is of type
.BR SOCK_STREAM ,
the
.B SIGPIPE
signal is generated to the calling
thread.
.RE

.sp
.LP
The
.B send()
function may fail if:
.sp
.ne 2
.mk
.na
.B EACCES
.ad
.RS 15n
.rt
The calling process does not have the appropriate privileges.
.RE

.sp
.ne 2
.mk
.na
.B EIO
.ad
.RS 15n
.rt
An I/O error occurred while reading from or writing to the file system.
.RE

.sp
.ne 2
.mk
.na
.B ENETDOWN
.ad
.RS 15n
.rt
The local interface used to reach the destination is down.
.RE

.sp
.ne 2
.mk
.na
.B ENETUNREACH
.ad
.RS 15n
.rt
No route to the network is present.
.RE

.sp
.ne 2
.mk
.na
.B ENOBUFS
.ad
.RS 15n
.rt
Insufficient resources were available in the system to perform the
operation.
.RE

.sp
.ne 2
.mk
.na
.B ENOSR
.ad
.RS 15n
.rt
There were insufficient STREAMS resources available for the operation to
complete.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR connect (3XNET),
.BR getsockopt (3XNET),
.BR poll (2),
.BR recv (3XNET),
.BR recvfrom (3XNET),
.BR recvmsg (3XNET),
.BR select (3C),
.BR sendmsg (3XNET),
.BR sendto (3XNET),
.BR setsockopt (3XNET),
.BR shutdown (3XNET),
.BR socket (3XNET),
.BR attributes (5),
.BR standards (5)
