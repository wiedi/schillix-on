'\" te
.\" Copyright (C) 2003, Sun Microsystems, Inc.
.\" All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH if_nametoindex 3XNET "14 Dec 2003" "SunOS 5.11" "X/Open Networking Services Library Functions"
.SH NAME
if_nametoindex, if_indextoname, if_nameindex, if_freenameindex \- functions
to map Internet Protocol network interface names and interface indexes
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lxnet\fR [ \fIlibrary\fR.\|.\|. ]
#include <net/if.h>

\fBunsigned int\fR \fBif_nametoindex\fR(\fBconst char *\fIifname\fR);
.fi

.LP
.nf
\fBchar *\fBif_indextoname\fR(\fBunsigned int\fR \fIifindex\fR, \fBchar *\fIifname\fR);
.fi

.LP
.nf
\fBstruct if_nameindex *\fBif_nameindex\fR(void)
.fi

.LP
.nf
\fBvoid\fR \fBif_freenameindex\fR(\fBstruct if_nameindex *\fIptr\fR);
.fi

.SH PARAMETERS
.sp
.LP
These functions support the following parameters:
.sp
.ne 2
.mk
.na
.I ifname
.ad
.RS 11n
.rt
interface name
.RE

.sp
.ne 2
.mk
.na
.I ifindex
.ad
.RS 11n
.rt
interface index
.RE

.sp
.ne 2
.mk
.na
.I ptr
.ad
.RS 11n
.rt
pointer returned by \fBif_nameindex()\fR
.RE

.SH DESCRIPTION
.sp
.LP
This
.B API
defines two functions that map between an Internet Protocol
network interface name and index, a third function that returns all the
interface names and indexes, and a fourth function to return the dynamic
memory allocated by the previous function.
.sp
.LP
Network interfaces are normally known by names such as
.BR eri0 ,
.BR sl1 ,
.BR ppp2 ,
and the like. The
.I ifname
argument must point to a buffer of
at least
.B IF_NAMESIZE
bytes into which the interface name corresponding
to the specified index is returned.
.B IF_NAMESIZE
is defined in
<\fBnet/if.h\fR> and its value includes a terminating null byte at the end of
the interface name.
.sp
.ne 2
.mk
.na
.B if_nametoindex()
.ad
.RS 22n
.rt
The
.B if_nametoindex()
function returns the interface index corresponding
to the interface name pointed to by the
.I ifname
pointer. If the specified
interface name does not exist, the return value is
.BR 0 ,
and
.I errno
is
set to
.BR ENXIO .
If there was a system error, such as running out of
memory, the return value is
.B 0
and
.I errno
is set to the proper
value, for example,
.BR ENOMEM .
.RE

.sp
.ne 2
.mk
.na
.B if_indextoname()
.ad
.RS 22n
.rt
The
.B if_indextoname()
function maps an interface index into its
corresponding name. This pointer is also the return value of the function. If
there is no interface corresponding to the specified index,
.B NULL
is
returned, and
.I errno
is set to
.BR ENXIO ,
if there was a system error,
such as running out of memory,
.B if_indextoname()
returns
.B NULL
and
.I errno
would be set to the proper value, for example,
.BR ENOMEM .
.RE

.sp
.ne 2
.mk
.na
.B *if_nameindex()
.ad
.RS 22n
.rt
The \fBif_nameindex()\fR function returns an array of \fBif_nameindex\fR
structures, one structure per interface. The
.B if_nameindex
structure
holds the information about a single interface and is defined when the
<\fBnet/if.h\fR> header is included:
.sp
.in +2
.nf
struct if_nameindex {
    unsigned int   if_index;  /* 1, 2, .\|.\|. */
    char           *if_name;   /* null terminated name: "eri0", .\|.\|. */
};
.fi
.in -2

The end of the array of structures is indicated by a structure with an
.B if_index
of 0 and an
.B if_name
of
.BR NULL .
The function returns a
null pointer upon an error and sets
.I errno
to the appropriate value. The
memory used for this array of structures along with the interface names
pointed to by the
.B if_name
members is obtained dynamically. This memory
is freed by the
.B if_freenameindex()
function.
.RE

.sp
.ne 2
.mk
.na
.B if_freenameindex()
.ad
.RS 22n
.rt
The
.B if_freenameindex()
function frees the dynamic memory that was
allocated by
.BR if_nameindex() .
The argument to this function must be a
pointer that was returned by
.BR if_nameindex() .
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcsl (32-bit)
_
SUNWcslx (64-bit)
_
Interface StabilityStandard
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR ifconfig (1M),
.BR if_nametoindex (3SOCKET),
.BR attributes (5),
.BR standards (5),
.BR if (7P)
