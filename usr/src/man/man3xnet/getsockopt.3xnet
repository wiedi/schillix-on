'\" te
.\" Copyright (c) 1992, X/Open Company Limited.  All Rights Reserved.
.\" Portions Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved.
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH getsockopt 3XNET "21 Jan 2007" "SunOS 5.11" "X/Open Networking Services Library Functions"
.SH NAME
getsockopt \- get the socket options
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lxnet\fR [ \fIlibrary\fR.\|.\|. ]
#include <sys/socket.h>

\fBint\fR \fBgetsockopt\fR(\fBint\fR \fIsocket\fR, \fBint\fR \fIlevel\fR, \fBint\fR \fIoption_name\fR,
     \fBvoid *restrict\fR \fIoption_value\fR, \fBsocklen_t *restrict\fR \fIoption_len\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B getsockopt()
function retrieves the value for the option specified
by the
.I option_name
argument for the socket specified by the
.IR socket
argument. If the size of the option value is greater than
.IR option_len ,
the value stored in the object pointed to by the
.I option_value
argument
will be silently truncated. Otherwise, the object pointed to by the
\fIoption_len\fR argument will be modified to indicate the actual length of
the value.
.sp
.LP
The
.I level
argument specifies the protocol level at which the option
resides. To retrieve options at the socket level, specify the \fIlevel\fR
argument as
.BR SOL_SOCKET .
To retrieve options at other levels, supply the
appropriate protocol number for the protocol controlling the option. For
.RB "example, to indicate that an option will be interpreted by the" " TCP"
(Transport Control Protocol), set
.I level
to the protocol number of
.BR TCP ,
as defined in the <\fBnetinet/in.h\fR> header, or as determined by
using
.BR getprotobyname (3XNET)
function.
.sp
.LP
The socket in use might require the process to have appropriate privileges to
use the
.B getsockopt()
function.
.sp
.LP
The
.I option_name
argument specifies a single option to be retrieved.  It
can be one of the following values defined in
.BR <sys/socket.h> :
.sp
.ne 2
.mk
.na
.B SO_DEBUG
.ad
.RS 17n
.rt
Reports whether debugging information is being recorded. This option stores
an
.B int
value. This is a boolean option.
.RE

.sp
.ne 2
.mk
.na
.B SO_ACCEPTCONN
.ad
.RS 17n
.rt
.RB "Reports whether socket listening is enabled. This option stores an" " int"
value.
.RE

.sp
.ne 2
.mk
.na
.B SO_BROADCAST
.ad
.RS 17n
.rt
Reports whether transmission of broadcast messages is supported, if this is
supported by the protocol. This option stores an
.B int
value. This is a
boolean option.
.RE

.sp
.ne 2
.mk
.na
.B SO_REUSEADDR
.ad
.RS 17n
.rt
Reports whether the rules used in validating addresses supplied to
.BR bind (3XNET)
should allow reuse of local addresses, if this is supported
by the protocol. This option stores an
.B int
value. This is a boolean
option.
.RE

.sp
.ne 2
.mk
.na
.B SO_KEEPALIVE
.ad
.RS 17n
.rt
Reports whether connections are kept active with periodic transmission of
messages, if this is supported by the protocol.
.sp
If the connected socket fails to respond to these messages, the connection is
broken and threads writing to that socket are notified with a
.BR SIGPIPE
signal. This option stores an
.B int
value.
.sp
This is a boolean option.
.RE

.sp
.ne 2
.mk
.na
.B SO_LINGER
.ad
.RS 17n
.rt
Reports whether the socket lingers on
.BR close (2)
if data is present. If
\fBSO_LINGER\fR is set, the system blocks the process during
.BR close (2)
until it can transmit the data or until the end of the interval indicated by
the
.B l_linger
member, whichever comes first. If
.B SO_LINGER
is not
specified, and
.BR close (2)
is issued, the system handles the call in a way
that allows the process to continue as quickly as possible. This option stores
a
.B linger
structure.
.RE

.sp
.ne 2
.mk
.na
.B SO_OOBINLINE
.ad
.RS 17n
.rt
Reports whether the socket leaves received out-of-band data (data marked
urgent) in line. This option stores an
.B int
value. This is a boolean
option.
.RE

.sp
.ne 2
.mk
.na
.B SO_SNDBUF
.ad
.RS 17n
.rt
Reports send buffer size information. This option stores an \fBint\fR
value.
.RE

.sp
.ne 2
.mk
.na
.B SO_RCVBUF
.ad
.RS 17n
.rt
Reports receive buffer size information. This option stores an \fBint\fR
value.
.RE

.sp
.ne 2
.mk
.na
.B SO_ERROR
.ad
.RS 17n
.rt
Reports information about error status and clears it. This option stores an
\fBint\fR value.
.RE

.sp
.ne 2
.mk
.na
.B SO_TYPE
.ad
.RS 17n
.rt
Reports the socket type. This option stores an
.B int
value.
.RE

.sp
.ne 2
.mk
.na
.B SO_DONTROUTE
.ad
.RS 17n
.rt
Reports whether outgoing messages bypass the standard routing facilities. The
destination must be on a directly-connected network, and messages are directed
to the appropriate network interface according to the destination address. The
effect, if any, of this option depends on what protocol is in use. This option
stores an
.B int
value. This is a boolean option.
.RE

.sp
.ne 2
.mk
.na
.B SO_MAC_EXEMPT
.ad
.RS 17n
.rt
Gets the mandatory access control status of the socket. A socket that has
this option enabled can communicate with an unlabeled peer if the socket is in
the global zone or has a label that dominates the default label of the peer.
Otherwise, the socket must have a label that is equal to the default label of
the unlabeled peer.
.B SO_MAC_EXEMPT
is a boolean option that is
available only when the system is configured with Trusted Extensions.
.RE

.sp
.ne 2
.mk
.na
.B SO_ALLZONES
.ad
.RS 17n
.rt
Bypasses zone boundaries (privileged). This option stores an
.B int
value.
This is a boolean option.
.sp
The
.B SO_ALLZONES
option can be used to bypass zone boundaries between
shared-IP zones. Normally, the system prevents a socket from being bound to an
address that is not assigned to the current zone. It also prevents a socket
that is bound to a wildcard address from receiving traffic for other zones.
However, some daemons which run in the global zone might need to send and
receive traffic using addresses that belong to other shared-IP zones. If set
before a socket is bound,
.B SO_ALLZONES
causes the socket to ignore zone
boundaries between shared-IP zones and permits the socket to be bound to any
address assigned to the shared-IP zones. If the socket is bound to a wildcard
address, it receives traffic intended for all shared-IP zones and behaves as
if an equivalent socket were bound in each active shared-IP zone. Applications
that use the
.B SO_ALLZONES
option to initiate connections or send datagram
traffic should specify the source address for outbound traffic by binding to a
specific address. There is no effect from setting this option in an
exclusive-IP zone. Setting this option requires the \fBsys_net_config\fR
privilege. See
.BR zones (5).
.RE

.sp
.ne 2
.mk
.na
.B SO_DOMAIN
.ad
.RS 17n
.rt
get the domain used in the socket (get only)
.RE

.sp
.ne 2
.mk
.na
.B SO_PROTOTYPE
.ad
.RS 17n
.rt
for socket in domains
.B AF_INET
and
.BR AF_INET6 ,
get the underlying
protocol number used in the socket. For socket in domain
.BR AF_ROUTE ,
get
the address family used in the socket.
.RE

.sp
.LP
For boolean options, a zero value indicates that the option is disabled and a
non-zero value indicates that the option is enabled.
.sp
.LP
Options at other protocol levels vary in format and name.
.sp
.LP
The socket in use may require the process to have appropriate privileges to
use the
.B getsockopt()
function.
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B getsockopt()
returns
.BR 0 .
Otherwise,
\fB\(mi1\fR is returned and \fBerrno\fR is set to indicate the error.
.SH ERRORS
.sp
.LP
The
.B getsockopt()
function will fail if:
.sp
.ne 2
.mk
.na
.B EBADF
.ad
.RS 15n
.rt
The
.I socket
argument is not a valid file descriptor.
.RE

.sp
.ne 2
.mk
.na
.B EFAULT
.ad
.RS 15n
.rt
The
.I option_value
or
.I option_len
parameter can not be accessed or
written.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 15n
.rt
The specified option is invalid at the specified socket level.
.RE

.sp
.ne 2
.mk
.na
.B ENOPROTOOPT
.ad
.RS 15n
.rt
The option is not supported by the protocol.
.RE

.sp
.ne 2
.mk
.na
.B ENOTSOCK
.ad
.RS 15n
.rt
The
.I socket
argument does not refer to a socket.
.RE

.sp
.LP
The
.B getsockopt()
function may fail if:
.sp
.ne 2
.mk
.na
.B EACCES
.ad
.RS 11n
.rt
The calling process does not have the appropriate privileges.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 11n
.rt
The socket has been shut down.
.RE

.sp
.ne 2
.mk
.na
.B ENOBUFS
.ad
.RS 11n
.rt
Insufficient resources are available in the system to complete the call.
.RE

.sp
.ne 2
.mk
.na
.B ENOSR
.ad
.RS 11n
.rt
There were insufficient STREAMS resources available for the operation to
complete.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR close (2),
.BR bind (3XNET),
.BR endprotoent (3XNET),
.BR setsockopt (3XNET),
.BR socket (3XNET),
.BR attributes ,
.BR standards (5)
