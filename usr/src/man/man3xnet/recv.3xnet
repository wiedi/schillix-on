'\" te
.\" Copyright (c) 1992, X/Open Company Limited  All Rights Reserved
.\" Portions Copyright (c) 1998, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH recv 3XNET "10 Jun 2002" "SunOS 5.11" "X/Open Networking Services Library Functions"
.SH NAME
recv \- receive a message from a connected socket
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR .\|.\|. ] \fIfile\fR .\|.\|. \fB-lxnet\fR [ \fIlibrary\fR .\|.\|. ]
#include <sys/socket.h>

\fBssize_t\fR \fBrecv\fR(\fBint\fR \fIsocket\fR, \fBvoid *\fIbuffer\fR, \fBsize_t\fR \fIlength\fR, \fBint\fR \fIflags\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B recv()
function receives a message from a connection-mode or
connectionless-mode socket. It is normally used with connected sockets
because it does not permit the application to retrieve the source address of
received data. The function takes the following arguments:
.sp
.ne 2
.mk
.na
.I socket
.ad
.RS 10n
.rt
Specifies the socket file descriptor.
.RE

.sp
.ne 2
.mk
.na
.I buffer
.ad
.RS 10n
.rt
Points to a buffer where the message should be stored.
.RE

.sp
.ne 2
.mk
.na
.I length
.ad
.RS 10n
.rt
Specifies the length in bytes of the buffer pointed to by the \fIbuffer\fR
argument.
.RE

.sp
.ne 2
.mk
.na
.I flags
.ad
.RS 10n
.rt
Specifies the type of message reception.  Values of this argument are
formed by logically OR'ing zero or more of the following values:
.sp
.ne 2
.mk
.na
.B MSG_PEEK
.ad
.RS 15n
.rt
Peeks at an incoming message.  The data is treated as unread and the next
.B recv()
or similar function will still return this data.
.RE

.sp
.ne 2
.mk
.na
.B MSG_OOB
.ad
.RS 15n
.rt
Requests out-of-band data. The significance and semantics of out-of-band
data are protocol-specific.
.RE

.sp
.ne 2
.mk
.na
.B MSG_WAITALL
.ad
.RS 15n
.rt
Requests that the function block until the full amount of data requested
can be returned.  The function may return a smaller amount of data if a
signal is caught, if the connection is terminated,  if
.B MSG_PEEK
was
specified, or if an error is pending for the socket.
.RE

.RE

.sp
.LP
The
.B recv()
function returns the length of the message written to the
buffer pointed to by the
.I buffer
argument.  For message-based sockets
such as
.B SOCK_DGRAM
and
.BR SOCK_SEQPACKET ,
the entire message must
be read in a single operation.  If a message is too long to fit in the
supplied buffer, and
.B MSG_PEEK
is not set in the
.I flags
argument,
the excess bytes are discarded.  For stream-based sockets such as
.BR SOCK_STREAM ,
message boundaries are ignored.  In this case, data is
returned to the user as soon as it becomes available, and no data is
discarded.
.sp
.LP
If the
.B MSG_WAITALL
flag is not set, data will be returned only up to
the end of the first message.
.sp
.LP
If no messages are available at the socket and
.B O_NONBLOCK
is not set
on the socket's file descriptor,
.B recv()
blocks until a message
arrives. If no messages are available at the socket and
.B O_NONBLOCK
is
set on the socket's file descriptor,
.B recv()
fails and sets
.BR errno
to
.B EAGAIN
or
.BR EWOULDBLOCK .
.SH USAGE
.sp
.LP
The
.B recv()
function is identical to \fBrecvfrom\fR(3XNET) with a zero
.I address_len
argument, and to
.B read()
if no flags are used.
.sp
.LP
The
.BR select "(3C) and"
.BR poll (2)
functions can be used to determine
when data is available to be received.
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B recv()
returns the length of the message
in bytes.  If no messages are available to be received and the peer has
performed an orderly shutdown,
.B recv()
returns 0.  Otherwise, -1 is
returned and
.B errno
is set to indicate the error.
.SH ERRORS
.sp
.LP
The
.B recv()
function will fail if:
.sp
.ne 2
.mk
.na
.B EAGAIN
.ad
.br
.na
.B EWOULDBLOCK
.ad
.RS 15n
.rt
The socket's file descriptor is marked
.B O_NONBLOCK
and no data is
waiting to be received; or
.B MSG_OOB
is set and no out-of-band data is
available and either the socket's file descriptor is marked \fBO_NONBLOCK\fR
or the socket does not support blocking to await out-of-band data.
.RE

.sp
.ne 2
.mk
.na
.B EBADF
.ad
.RS 15n
.rt
The
.I socket
argument is not a valid file descriptor.
.RE

.sp
.ne 2
.mk
.na
.B ECONNRESET
.ad
.RS 15n
.rt
A connection was forcibly closed by a peer.
.RE

.sp
.ne 2
.mk
.na
.B EFAULT
.ad
.RS 15n
.rt
The
.I buffer
parameter can not be accessed or written.
.RE

.sp
.ne 2
.mk
.na
.B EINTR
.ad
.RS 15n
.rt
The
.B recv()
function was interrupted by a signal that was caught,
before any data was available.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 15n
.rt
The
.B MSG_OOB
flag is set and no out-of-band data is available.
.RE

.sp
.ne 2
.mk
.na
.B ENOTCONN
.ad
.RS 15n
.rt
A receive is attempted on a connection-mode socket that is not connected.
.RE

.sp
.ne 2
.mk
.na
.B ENOTSOCK
.ad
.RS 15n
.rt
The
.I socket
argument does not refer to a socket.
.RE

.sp
.ne 2
.mk
.na
.B EOPNOTSUPP
.ad
.RS 15n
.rt
The specified flags are not supported for this socket type or protocol.
.RE

.sp
.ne 2
.mk
.na
.B ETIMEDOUT
.ad
.RS 15n
.rt
The connection timed out during connection establishment, or due to a
transmission timeout on active connection.
.RE

.sp
.LP
The
.B recv()
function may fail if:
.sp
.ne 2
.mk
.na
.B EIO
.ad
.RS 11n
.rt
An I/O error occurred while reading from or writing to the file system.
.RE

.sp
.ne 2
.mk
.na
.B ENOBUFS
.ad
.RS 11n
.rt
Insufficient resources were available in the system to perform the
operation.
.RE

.sp
.ne 2
.mk
.na
.B ENOMEM
.ad
.RS 11n
.rt
Insufficient memory was available to fulfill the request.
.RE

.sp
.ne 2
.mk
.na
.B ENOSR
.ad
.RS 11n
.rt
There were insufficient STREAMS resources available for the operation to
complete.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR poll (2),
.BR recvmsg (3XNET),
.BR recvfrom (3XNET),
.BR select (3C),
.BR send (3XNET),
.BR sendmsg (3XNET),
.BR sendto (3XNET),
.BR shutdown (3XNET),
.BR socket (3XNET),
.BR attributes (5),
.BR standards (5)
