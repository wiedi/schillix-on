'\" te
.\" Copyright (c) 1997, The Open Group. All Rights Reserved.
.\" Portions Copyright (c) 2003, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH bind 3XNET "20 Feb 2003" "SunOS 5.11" "X/Open Networking Services Library Functions"
.SH NAME
bind \- bind a name to a socket
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR .\|.\|. ] \fIfile\fR .\|.\|. \fB-lxnet\fR [ \fIlibrary\fR .\|.\|. ]
#include <sys/socket.h>

\fBint\fR \fBbind\fR(\fBint\fR \fIsocket\fR, \fBconst struct sockaddr *\fIaddress\fR,
     \fBsocklen_t\fR \fIaddress_len\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B bind()
function assigns an
.I address
to an unnamed socket.
Sockets created with
.BR socket (3XNET)
function are initially unnamed.
They are identified only by their address family.
.sp
.LP
The function takes the following arguments:
.sp
.ne 2
.mk
.na
.I socket
.ad
.RS 15n
.rt
Specifies the file descriptor of the socket to be bound.
.RE

.sp
.ne 2
.mk
.na
.I address
.ad
.RS 15n
.rt
Points to a
.B sockaddr
structure containing the address to be bound to
the socket.  The length and format of the address depend on the address
family of the socket.
.RE

.sp
.ne 2
.mk
.na
.I address_len
.ad
.RS 15n
.rt
Specifies the length of the
.B sockaddr
structure pointed to by the
.I address
argument.
.RE

.sp
.LP
The socket in use may require the process to have appropriate privileges to
use the
.B bind()
function.
.SH USAGE
.sp
.LP
An application program can retrieve the assigned socket name with the
.BR getsockname (3XNET)
function.
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B bind()
returns 0.  Otherwise, \(mi1 is
returned and
.B errno
is set to indicate the error.
.SH ERRORS
.sp
.LP
The
.B bind()
function will fail if:
.sp
.ne 2
.mk
.na
.B EADDRINUSE
.ad
.RS 17n
.rt
The specified address is already in use.
.RE

.sp
.ne 2
.mk
.na
.B EADDRNOTAVAIL
.ad
.RS 17n
.rt
The specified address is not available from the local machine.
.RE

.sp
.ne 2
.mk
.na
.B EAFNOSUPPORT
.ad
.RS 17n
.rt
The specified address is not a valid address for the address family of the
specified socket.
.RE

.sp
.ne 2
.mk
.na
.B EBADF
.ad
.RS 17n
.rt
The
.I socket
argument is not a valid file descriptor.
.RE

.sp
.ne 2
.mk
.na
.B EFAULT
.ad
.RS 17n
.rt
The
.I address
argument can not be accessed.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 17n
.rt
The socket is already bound to an address, and the protocol does not
support binding to a new address; or the socket has been shut down.
.RE

.sp
.ne 2
.mk
.na
.B ENOTSOCK
.ad
.RS 17n
.rt
The
.I socket
argument does not refer to a socket.
.RE

.sp
.ne 2
.mk
.na
.B EOPNOTSUPP
.ad
.RS 17n
.rt
The socket type of the specified socket does not support binding to an
address.
.RE

.sp
.LP
If the address family of the socket is AF_UNIX, then
.B bind()
will fail
if:
.sp
.ne 2
.mk
.na
.B EACCES
.ad
.RS 16n
.rt
A component of the path prefix denies search permission, or the requested
name requires writing in a directory with a mode that denies write
permission.
.RE

.sp
.ne 2
.mk
.na
.B EDESTADDRREQ
.ad
.br
.na
.B EISDIR
.ad
.RS 16n
.rt
The
.I address
argument is a null pointer.
.RE

.sp
.ne 2
.mk
.na
.B EIO
.ad
.RS 16n
.rt
An I/O error occurred.
.RE

.sp
.ne 2
.mk
.na
.B ELOOP
.ad
.RS 16n
.rt
Too many symbolic links were encountered in translating the pathname in
.I address.
.RE

.sp
.ne 2
.mk
.na
.B ENAMETOOLONG
.ad
.RS 16n
.rt
A component of a pathname exceeded
.I NAME_MAX
characters, or an entire
pathname exceeded
.I PATH_MAX
characters.
.RE

.sp
.ne 2
.mk
.na
.B ENOENT
.ad
.RS 16n
.rt
A component of the pathname does not name an existing file or the pathname
is an empty string.
.RE

.sp
.ne 2
.mk
.na
.B ENOTDIR
.ad
.RS 16n
.rt
A component of the path prefix of the pathname in
.I address
is not a
directory.
.RE

.sp
.ne 2
.mk
.na
.B EROFS
.ad
.RS 16n
.rt
The name would reside on a read-only filesystem.
.RE

.sp
.LP
The
.B bind()
function may fail if:
.sp
.ne 2
.mk
.na
.B EACCES
.ad
.RS 16n
.rt
The specified address is protected, and
.B {PRIV_NET_PRIVADOR}
is not
asserted in the effective set of the current process.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 16n
.rt
The
.I address_len
argument is not a valid length for the address
family.
.RE

.sp
.ne 2
.mk
.na
.B EISCONN
.ad
.RS 16n
.rt
The socket is already connected.
.RE

.sp
.ne 2
.mk
.na
.B ENAMETOOLONG
.ad
.RS 16n
.rt
Pathname resolution of a symbolic link produced an intermediate result
whose length exceeds
.IR PATH_MAX .
.RE

.sp
.ne 2
.mk
.na
.B ENOBUFS
.ad
.RS 16n
.rt
Insufficient resources were available to complete the call.
.RE

.sp
.ne 2
.mk
.na
.B ENOSR
.ad
.RS 16n
.rt
There were insufficient STREAMS resources for the operation to complete.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR connect (3XNET),
.BR getsockname (3XNET),
.BR listen (3XNET),
.BR socket (3XNET),
.BR attributes (5),
.BR privileges (5),
.BR standards (5)
