'\" te
.\" Copyright (c) 2006 Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH SSAAgentIsAlive 3SNMP "30 Apr 2006" "SunOS 5.11" "SNMP Library Functions"
.SH NAME
SSAAgentIsAlive, SSAGetTrapPort, SSARegSubtable, SSARegSubagent,
SSARegSubtree, SSASendTrap, SSASubagentOpen \- Sun Solstice Enterprise Agent
registration and communication helper functions
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR .\|.\|. ] \fIfile\fR .\|.\|. \fB-lssagent\fR \fB -lssasnmp \fR [ \fIlibrary\fR .. ]
#include <impl.h>



\fBextern int\fR \fBSSAAgentIsAlive\fR(\fBIPAddress *\fIagent_addr\fR, \fBint *\fIport\fR,
     \fBchar *\fIcommunity\fR, \fBstruct timeval *\fItimeout\fR);
.fi

.LP
.nf
\fBextern int\fR \fBSSAGetTrapPort\fR();
.fi

.LP
.nf
\fBextern int *\fBSSARegSubagent\fR(\fBAgent*\fR \fIagent\fR);
.fi

.LP
.nf
\fBint\fR \fBSSARegSubtable\fR(\fBSSA_Table *\fItable\fR);
.fi

.LP
.nf
\fBint\fR \fBSSARegSubtree\fR(\fBSSA_Subtree *\fIsubtree\fR);
.fi

.LP
.nf
\fBextern void\fR \fBSSASendTrap\fR(\fBchar *\fIname\fR);
.fi

.LP
.nf
\fBextern int\fR \fBSSASubagentOpen\fR(\fBint *\fInum_of_retry\fR, \fBchar *\fIagent_name\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B SSAAgentIsAlive()
function returns
.B TRUE
if the master agent
is alive, otherwise returns
.BR FALSE .
The
.I agent_addr
parameter is
the address of the agent. Specify the security token in the \fIcommunity\fR
parameter. You can specify the maximum amount of time to wait for a response
with the
.I timeout
parameter.
.sp
.LP
The
.B SSAGetTrapPort()
function returns the port number used by the
Master Agent to communicate with the subagent.
.sp
.LP
The
.B SSARegSubagent()
function enables a subagent to register and
unregister with a Master Agent. The
.I agent
parameter is a pointer to an
.B Agent
structure containing the following members:
.sp
.in +2
.nf
int      timeout;         /* optional */
int      agent_id;        /* required */
int      agent_status;    /* required */
char     *personal_file;  /* optional */
char     *config_file;    /* optional */
char     *executable;     /* optional */
char     *version_string; /* optional */
char     *protocol;       /* optional */
int      process_id;      /* optional */
char     *name;           /* optional */
int      system_up_time;  /* optional */
int      watch_dog_time;  /* optional */
Address  address;         /* required */
struct   _Agent;          /* reserved */
struct   _Subtree;        /* reserved */
.fi
.in -2

.sp
.LP
The
.B agent_id
member is an integer value returned by the
.B SSASubagentOpen()
function. After calling
.BR SSASubagentOpen() ,
you
pass the
.B agent_id
in the
.B SSARegSubagent()
call to  register the
subagent with the Master Agent.
.sp
.LP
The following values are supported for
.BR agent_status :
.sp
.in +2
.nf
SSA_OPER_STATUS_ACTIVE
SSA_OPER_STATUS_NOT_IN_SERVICE
SSA_OPER_STATUS_DESTROY
.fi
.in -2

.sp
.LP
You pass
.B SSA_OPER_STATUS_DESTROY
as the value in a
.B SSARegSubagent()
function call when you want to unregister the agent
from the Master Agent.
.sp
.LP
.B Address
has the same structure as
.BR sockaddr_in ,
that is a common
UNIX structure containing the following members:
.sp
.in +2
.nf
short      sin_family;
ushort_t   sin_port;
struct     in_addr sin_addr;
char       sin_zero[8];
.fi
.in -2

.sp
.LP
The
.B SSARegSubtable()
function registers a MIB table with the Master
Agent. If this function is successful, an index number is returned,
otherwise
.B 0
is returned. The
.I table
parameter is a pointer to a
.B SSA_Table
structure containing the following members:
.sp
.in +2
.nf
int  regTblIndex;         /* index value */
int  regTblAgentID;       /* current agent ID */
Oid  regTblOID;           /* Object ID of the table */
int  regTblStartColumn;   /* start column index */
int  regTblEndColumn;     /* end column index */
int  regTblStartRow;      /* start row index */
int  regTblEndRow;        /* end row index */
int  regTblStatus;        /* status */
.fi
.in -2

.sp
.LP
The
.B regTblStatus
can have one of the following values:
.sp
.in +2
.nf
SSA_OPER_STATUS_ACTIVE
SSA_OPER_STATUS_NOT_IN_SERVICE
.fi
.in -2

.sp
.LP
The
.B SSARegSubtree()
function registers a MIB subtree with the master
agent. If successful this function returns an index number, otherwise
.B 0
is returned. The
.I subtree
parameter is a pointer to a
.B SSA_Subtree
structure containing the following members:
.sp
.in +2
.nf
int  regTreeIndex;      /* index value */
int  regTreeAgentID;    /* current agent ID */
Oid  name;              /* Object ID to register */
int  regtreeStatus;     /* status */
.fi
.in -2

.sp
.LP
The
.B regtreeStatus
can have one of the following values:
.sp
.in +2
.nf
SSA_OPER_STATUS_ACTIVE
SSA_OPER_STATUS_NOT_IN_SERVICE
.fi
.in -2

.sp
.LP
The
.B SSASendTrap()
function instructs the Master Agent to send a trap
notification, based on the keyword passed with
.IR name .
When your
subagent MIB is compiled by
.BR mibcodegen ,
it creates a lookup table of
the trap notifications defined in the MIB. By passing the name of the trap
notification type as
.IR name ,
the subagent instructs the Master Agent to
construct the type of trap defined in the MIB.
.sp
.LP
The
.B SSASubagentOpen()
function initializes communication between the
subagent and the Master Agent.  You must call this function before calling
.B SSARegSubagent()
to register the subagent with the Master Agent. The
.B SSASubagentOpen()
function returns a unique agent ID that is passed in
the
.B SSARegSubagent()
call to register the subagent. If
.B 0
is
returned as the agent ID, the attempt to initialize communication with the
Master Agent was unsuccessful. Since UDP is used to initialize communication
with the Master Agent, you may want to set the value of \fInum_of_retry\fR
to make multiple attempts.
.sp
.LP
The value for
.I agent_name
must be unique within the domain for which
the Master Agent is responsible.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityObsolete
_
MT-LevelUnsafe
.TE

.SH SEE ALSO
.sp
.LP
.BR attributes (5)
