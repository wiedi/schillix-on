'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc. All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH scf_service_create 3SCF "27 Aug 2007" "SunOS 5.11" "Service Configuration Facility Library Functions"
.SH NAME
scf_service_create, scf_service_handle, scf_service_destroy,
scf_service_get_parent, scf_service_get_name, scf_scope_get_service,
scf_scope_add_service, scf_service_delete \- create and manipulate service
handles and services in the Service Configuration Facility
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR\&.\|.\|. ] \fIfile\fR\&.\|.\|. \fB-lscf\fR [ \fIlibrary\fR\&.\|.\|. ]
#include <libscf.h>

\fBscf_service_t *\fBscf_service_create\fR(\fBscf_handle_t *\fIhandle\fR);
.fi

.LP
.nf
\fBscf_handle_t *\fBscf_service_handle\fR(\fBscf_service_t *\fIsvc\fR);
.fi

.LP
.nf
\fBvoid\fR \fBscf_service_destroy\fR(\fBscf_service_t *\fIsvc\fR);
.fi

.LP
.nf
\fBint\fR \fBscf_service_get_parent\fR(\fBscf_service_t *\fIsvc\fR, \fBscf_scope_t *\fIsc\fR);
.fi

.LP
.nf
\fBssize_t\fR \fBscf_service_get_name\fR(\fBconst scf_service_t *\fIsvc\fR, \fBchar *\fIbuf\fR,
     \fBsize_t\fR \fIsize\fR);
.fi

.LP
.nf
\fBint\fR \fBscf_scope_get_service\fR(\fBconst scf_scope_t *\fIsc\fR, \fBconst char *\fIname\fR,
     \fBscf_service_t *\fIsvc\fR);
.fi

.LP
.nf
\fBint\fR \fBscf_scope_add_service\fR(\fBconst scf_scope_t *\fIsc\fR, \fBconst char *\fIname\fR,
     \fBscf_service_t *\fIsvc\fR);
.fi

.LP
.nf
\fBint\fR \fBscf_service_delete\fR(\fBscf_service_t *\fIsvc\fR);
.fi

.SH DESCRIPTION
.sp
.LP
Services form the middle layer of the Service Configuration Facility
repository tree. Services are children of a scope (see
\fBscf_scope_create\fR(3SCF)) and have three sets of children:
.sp
.ne 2
.mk
.na
.B Property groups
.ad
.RS 19n
.rt
These hold configuration information shared by all of the instances of the
service. See \fBscf_pg_create\fR(3SCF), \fBscf_iter_service_pgs\fR(3SCF),
and
.BR scf_iter_service_pgs_typed (3SCF).
.RE

.sp
.ne 2
.mk
.na
.B Instances
.ad
.RS 19n
.rt
A particular instantiation of the service. See
.BR scf_instance_create (3SCF).
.RE

.sp
.LP
A service groups one or more related instances and provides a shared
configuration for them.
.sp
.LP
An \fBscf_service_t\fR is an opaque handle that can be set to a single
service at any given time. The \fBscf_service_create()\fR function allocates
and initializes a new \fBscf_service_t\fR bound to
.IR handle .
The
\fBscf_service_destroy()\fR function destroys and frees svc.
.sp
.LP
The \fBscf_service_handle()\fR function retrieves the handle to which
\fIsvc\fR is bound.
.sp
.LP
The \fBscf_service_get_parent()\fR function sets
.I sc
to the scope that
is the parent of
.IR svc .
.sp
.LP
The \fBscf_service_get_name()\fR function retrieves the name of the service
to which
.I svc
is set.
.sp
.LP
The \fBscf_scope_get_service()\fR function sets
.I svc
to the service
specified by
.I name
in the scope specified by
.IR sc .
.sp
.LP
The \fBscf_scope_add_service()\fR function sets
.I svc
to a new service
specified by
.I name
in the scope specified by
.IR sc .
.sp
.LP
The \fBscf_service_delete()\fR function deletes the service to which
\fIsvc\fR is set, as well as all of its children.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, \fBscf_service_create()\fR returns a new
\fBscf_service_t\fR. Otherwise, it returns \fINULL\fR.
.sp
.LP
Upon successful completion, \fBscf_service_handle()\fR returns the handle
to which svc is bound. Otherwise, it returns
.IR NULL .
.sp
.LP
Upon successful completion, \fBscf_service_get_name()\fR returns the length
of the string written, not including the terminating null byte. Otherwise,
it returns -1.
.sp
.LP
Upon successful completion,
.BR scf_service_get_parent() ,
.BR scf_scope_get_service() ,
.BR scf_scope_add_service() ,
and
\fBscf_service_delete()\fR return 0. Otherwise, it returns -1.
.SH ERRORS
.sp
.LP
The \fBscf_service_create()\fR function will fail if:
.sp
.ne 2
.mk
.na
.B SCF_ERROR_INVALID_ARGUMENT
.ad
.RS 30n
.rt
The value of the
.I handle
argument is
.IR NULL .
.RE

.sp
.ne 2
.mk
.na
.B SCF_ERROR_NO_MEMORY
.ad
.RS 30n
.rt
There is not enough memory to allocate an
.BR scf_service_t .
.RE

.sp
.ne 2
.mk
.na
.B SCF_ERROR_NO_RESOURCES
.ad
.RS 30n
.rt
The server does not have adequate resources for a new scope handle.
.RE

.sp
.LP
The \fBscf_service_handle()\fR function will fail if:
.sp
.ne 2
.mk
.na
.B SCF_ERROR_HANDLE_DESTROYED
.ad
.RS 30n
.rt
The handle associated with
.I svc
has been destroyed.
.RE

.sp
.LP
The
.BR scf_service_get_name() ,
.BR scf_service_get_parent() ,
and
\fBscf_service_delete()\fR functions will fail if:
.sp
.ne 2
.mk
.na
.B SCF_ERROR_DELETED
.ad
.sp .6
.RS 4n
The service has been deleted by someone else.
.RE

.sp
.ne 2
.mk
.na
.B SCF_ERROR_NOT_SET
.ad
.sp .6
.RS 4n
The service is not set.
.RE

.sp
.ne 2
.mk
.na
.B SCF_ERROR_NOT_BOUND
.ad
.sp .6
.RS 4n
The handle is not bound.
.RE

.sp
.ne 2
.mk
.na
.B SCF_ERROR_CONNECTION_BROKEN
.ad
.sp .6
.RS 4n
The connection to the repository was lost.
.RE

.sp
.LP
The \fBscf_service_delete()\fR function will fail if:
.sp
.ne 2
.mk
.na
.B SCF_ERROR_EXISTS
.ad
.RS 26n
.rt
The service contains instances.
.RE

.sp
.ne 2
.mk
.na
.B SCF_ERROR_NO_RESOURCES
.ad
.RS 26n
.rt
The server does not have adequate resources for a new scope handle.
.RE

.sp
.LP
The \fBscf_scope_add_service()\fR function will fail if:
.sp
.ne 2
.mk
.na
.B SCF_ERROR_EXISTS
.ad
.RS 20n
.rt
A {service,instance,property group} named
.I name
already exists.
.RE

.sp
.LP
The \fBscf_scope_get_service()\fR function will fail if:
.sp
.ne 2
.mk
.na
.B SCF_ERROR_BACKEND_ACCESS
.ad
.RS 28n
.rt
The  storage  mechanism  that  the   repository server
(\fBsvc.configd\fR(1M)) chose for the operation denied access.
.RE

.sp
.ne 2
.mk
.na
.B SCF_ERROR_INTERNAL
.ad
.RS 28n
.rt
An internal error occurred.
.RE

.sp
.LP
The \fBscf_scope_add_service()\fR and \fBscf_scope_get_service()\fR
functions will fail if:
.sp
.ne 2
.mk
.na
.B SCF_ERROR_CONNECTION_BROKEN
.ad
.sp .6
.RS 4n
The connection to the repository was lost.
.RE

.sp
.ne 2
.mk
.na
.B SCF_ERROR_DELETED
.ad
.sp .6
.RS 4n
The parent entity has been deleted.
.RE

.sp
.ne 2
.mk
.na
.B SCF_ERROR_HANDLE_MISMATCH
.ad
.sp .6
.RS 4n
The scope and service are not derived from the same handle.
.RE

.sp
.ne 2
.mk
.na
.B SCF_ERROR_INVALID_ARGUMENT
.ad
.sp .6
.RS 4n
The value of the
.I name
argument is not a valid service name.
.RE

.sp
.ne 2
.mk
.na
.B SCF_ERROR_NO_RESOURCES
.ad
.sp .6
.RS 4n
The server does not have the resources to complete the request.
.RE

.sp
.ne 2
.mk
.na
.B SCF_ERROR_NOT_BOUND
.ad
.sp .6
.RS 4n
The handle is not bound.
.RE

.sp
.ne 2
.mk
.na
.B SCF_ERROR_NOT_FOUND
.ad
.sp .6
.RS 4n
The service specified by
.I name
was not found.
.RE

.sp
.ne 2
.mk
.na
.B SCF_ERROR_NOT_SET
.ad
.sp .6
.RS 4n
The scope is not set.
.RE

.sp
.LP
The \fBscf_scope_add_service()\fR and \fBscf_service_delete()\fR functions
will fail if:
.sp
.ne 2
.mk
.na
.B SCF_ERROR_PERMISSION_DENIED
.ad
.sp .6
.RS 4n
The user does not have sufficient privileges to create or delete a
service.
.RE

.sp
.ne 2
.mk
.na
.B SCF_ERROR_BACKEND_READONLY
.ad
.sp .6
.RS 4n
The repository backend is read-only.
.RE

.sp
.ne 2
.mk
.na
.B SCF_ERROR_BACKEND_ACCESS
.ad
.sp .6
.RS 4n
The repository backend refused the modification.
.RE

.sp
.LP
The \fBscf_error\fR(3SCF) function can be used to retrieve the error
value.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
\fBlibscf\fR(3LIB), \fBscf_error\fR(3SCF),
\fBscf_handle_decode_fmri\fR(3SCF), \fBscf_iter_service_pgs\fR(3SCF),
\fBscf_iter_service_pgs_typed\fR(3SCF), \fBscf_instance_create\fR(3SCF),
\fBscf_pg_create\fR(3SCF), \fBscf_scope_create\fR(3SCF),
.BR scf_service_to_fmri (3SCF),
.BR attributes (5),
.BR smf (5)
