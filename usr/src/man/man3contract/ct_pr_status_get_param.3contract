'\" te
.\" Copyright (c) 2008, Sun Microsystems, Inc. All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH ct_pr_status_get_param 3CONTRACT "25 Feb 2008" "SunOS 5.11" "Contract Management Library Functions"
.SH NAME
ct_pr_status_get_param, ct_pr_status_get_fatal, ct_pr_status_get_members,
ct_pr_status_get_contracts, ct_pr_status_get_svc_fmri,
ct_pr_status_get_svc_aux, ct_pr_status_get_svc_ctid,
ct_pr_status_get_svc_creator \- process contract status functions
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR\&.\|.\|. ] \fIfile\fR\&.\|.\|. \fB-D_LARGEFILE64_SOURCE\fR \fB -lcontract \fR [ \fIlibrary\fR\&.\|.\|. ]
#include <libcontract.h>
#include <sys/contract/process.h>

\fBint\fR \fBct_pr_status_get_param\fR(\fBct_stathdl_t\fR \fIstathdl\fR, \fBuint_t *\fIparamp\fR);
.fi

.LP
.nf
\fBint\fR \fBct_pr_status_get_fatal\fR(\fBct_stathdl_t\fR \fIstathdl\fR, \fBuint_t *\fIeventsp\fR);
.fi

.LP
.nf
\fBint\fR \fBct_pr_status_get_members\fR(\fBct_stathdl_t\fR \fIstathdl\fR,
     \fBpid_t **\fIpidpp\fR, \fBuint_t *\fIn\fR);
.fi

.LP
.nf
\fBint\fR \fBct_pr_status_get_contracts\fR(\fBct_stathdl_t\fR \fIstathdl\fR,
     \fBctid_t **\fIidpp\fR, \fBuint_t *\fIn\fR);
.fi

.LP
.nf
\fBint\fR \fBct_pr_status_get_svc_fmri\fR(\fBct_stathdl_t\fR \fIstathdl\fR, \fBchar **\fIfmri\fR);
.fi

.LP
.nf
\fBint\fR \fBct_pr_status_get_svc_aux\fR(\fBct_stathdl_t\fR \fIstathdl\fR, \fBchar **\fIaux\fR);
.fi

.LP
.nf
\fBint\fR \fBct_pr_status_get_svc_ctid\fR(\fBct_stathdl_t\fR \fIstathdl\fR, \fBctid_t *\fIctid\fR);
.fi

.LP
.nf
\fBint\fR \fBct_pr_status_get_svc_creator\fR(\fBct_stathdl_t\fR \fIstathdl\fR,
     \fBchar **\fIcreator\fR);
.fi

.SH DESCRIPTION
.sp
.LP
These functions read process contract status information from a status
object returned by
.BR ct_status_read (3CONTRACT).
.sp
.LP
The
.B ct_pr_status_get_param()
function reads the parameter set term.
The value is a collection of bits as described in
.BR process (4).
.sp
.LP
The \fBct_pr_status_get_fatal()\fR function reads the fatal event set term.
The value is a collection of bits as described in
.BR process (4).
.sp
.LP
The
.B ct_pr_status_get_members()
function obtains a list of the process
IDs of the members of the process contract. A pointer to an array of process
IDs is stored in *\fIpidpp\fR. The number of elements in this array is
stored in *\fIn\fR. These data are freed when the status object is freed by
a call to \fBct_status_free\fR(3CONTRACT).
.sp
.LP
The
.B ct_pr_status_get_contracts()
function obtains a list of IDs of
contracts that have been inherited by the contract. A pointer to an array of
IDs is stored in *\fIidpp\fR. The number of elements in this array is stored
in *\fIn\fR. These data are freed when the status object is freed by a call
to
.BR ct_status_free() .
.sp
.LP
The
.BR ct_pr_status_get_svc_fmri() ,
.BR ct_pr_status_get_svc_creator() ,
and
.BR ct_pr_status_get_svc_aux()
functions read, respectively, the service FMRI, the contract's creator
\fBexecname\fR and  the creator's auxiliary field. The buffer pointed to by
\fIfmri\fR, \fIaux\fR or
.IR creator ,
is freed by a call to
\fBct_status_free()\fR and should not be modified.
.sp
.LP
The
.B ct_pr_status_get_svc_ctid()
function reads the process contract
id for which the service FMRI was first set.
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.BR ct_pr_status_get_param() ,
.BR ct_pr_status_get_fatal() ,
.BR ct_pr_status_get_members() ,
.BR ct_pr_status_get_contracts() ,
.BR ct_pr_status_get_svc_fmri() ,
.BR ct_pr_status_get_svc_creator() ,
.BR ct_pr_status_get_svc_aux() ,
and
\fBct_pr_status_get_svc_ctid()\fR return 0. Otherwise, they return a
non-zero error value.
.SH ERRORS
.sp
.LP
The
.BR ct_pr_status_get_param() ,
.BR ct_pr_status_get_fatal() ,
.BR ct_pr_status_get_members() ,
.BR ct_pr_status_get_contracts() ,
.BR ct_pr_status_get_svc_fmri() ,
.BR ct_pr_status_get_svc_creator() ,
.BR ct_pr_status_get_svc_aux() ,
and
.BR ct_pr_status_get_svc_ctid()
functions will fail if:
.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The
.I stathdl
argument is not a process contract status object.
.RE

.sp
.LP
The
.BR ct_pr_status_get_param() ,
.BR ct_pr_status_get_fatal() ,
.BR ct_pr_status_get_members() ,
.BR ct_r_status_get_contracts() ,
.BR ct_pr_status_get_svc_fmri() ,
.BR ct_pr_status_get_svc_creator() ,
.BR ct_pr_status_get_svc_aux() ,
and
.BR ct_pr_status_get_svc_ctid()
functions will fail if:
.sp
.ne 2
.mk
.na
.B ENOENT
.ad
.RS 10n
.rt
The requested data were not available in the status object.
.RE

.SH EXAMPLES
.LP
\fBExample 1\fR Print members of process contract 1.
.sp
.LP
Open the status file for contract 1, read the contract's status, obtain the
list of processes, print them, and free the status object.

.sp
.in +2
.nf
#include <sys/types.h>
#include <fcntl.h>
#include <libcontract.h>
#include <stdio.h>

\&...
int fd;
uint_t i, n;
pid_t *procs;
ct_stathdl_t st;

fd = open("/system/contract/process/1/status");
ct_status_read(fd, &st);
ct_pr_status_get_members(st, &procs, &n);
for (i = 0 ; i < n; i++)
        printf("%ld\en", (long)procs[i]);
ct_status_free(stat);
close(fd);
\&...
.fi
.in -2

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR ct_status_free (3CONTRACT),
.BR ct_status_read (3CONTRACT),
.BR libcontract (3LIB),
.BR contract (4),
.BR process (4),
.BR attributes (5),
.BR lfcompile (5)
