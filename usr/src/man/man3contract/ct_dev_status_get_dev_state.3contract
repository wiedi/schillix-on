'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH ct_dev_status_get_dev_state 3CONTRACT "9 Aug 2007" "SunOS 5.11" "Contract Management Library Functions"
.SH NAME
ct_dev_status_get_dev_state, ct_dev_status_get_aset,
ct_dev_status_get_minor, ct_dev_status_get_noneg \- read contract status
information from a status object
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR\&.\|.\|. ] \fIfile\fR\&.\|.\|. \fB-D_LARGEFILE64_SOURCE\fR \fB -lcontract \fR [ \fIlibrary\fR\&.\|.\|. ]
#include <libcontract.h>
#include <sys/contract/device.h>

\fBint\fR \fBct_dev_status_get_dev_state\fR(\fBct_stathdl_t\fR \fIstathdl\fR,
     \fBuint_t *\fIstatep\fR);
.fi

.LP
.nf
\fBint\fR \fBct_dev_status_get_aset\fR(\fBct_stathdl_t\fR \fIstathdl\fR,
     \fBuint_t *\fIasetp\fR);
.fi

.LP
.nf
\fBint\fR \fBct_dev_status_get_minor\fR(\fBct_stathdl_t\fR \fIstathdl\fR, \fBchar *\fIbuf\fR,
     \fBsize_t *\fIbuflenp\fR);
.fi

.LP
.nf
\fBint\fR \fBct_dev_status_get_noneg\fR(\fBct_stathdl_t\fR \fIstathdl\fR,
     \fBuint_t *\fInonegp\fR);
.fi

.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I asetp
.ad
.RS 11n
.rt
a pointer to a
.B uint_t
variable for receiving the acceptable state set
(such as A-set) for the contract
.RE

.sp
.ne 2
.mk
.na
.I buf
.ad
.RS 11n
.rt
a buffer for receiving the
.B devfs
path of a minor in a contract
.RE

.sp
.ne 2
.mk
.na
.I buflenp
.ad
.RS 11n
.rt
a pointer to a variable of type
.B size_t
for passing the size of the
buffer
.IR buf .
If the buffer is too small (<
.BR PATH_MAX ),
the minimum
size of the buffer needed
.RB ( PATH_MAX )
is passed back to the caller with
this argument.
.RE

.sp
.ne 2
.mk
.na
.I nonegp
.ad
.RS 11n
.rt
a pointer to a
.B uint_t
variable for receiving the setting of the
"noneg" term
.RE

.sp
.ne 2
.mk
.na
.I stathdl
.ad
.RS 11n
.rt
a status object returned by
.BR ct_status_read (3CONTRACT)
.RE

.sp
.ne 2
.mk
.na
.I statep
.ad
.RS 11n
.rt
a pointer to a
.B uint_t
variable for receiving the current state of the
device which is the subject of the contract
.RE

.SH DESCRIPTION
.sp
.LP
These functions read contract status information from a status object
.I stathdl
returned by
.BR ct_status_read() .
The detail level in the
call to
.B ct_status_read()
needs to be at least
.B CTD_FIXED
for the
following calls to be successful. The one exception is
.BR ct_dev_status_get_minor() ,
which requires a detail level of
.BR CTD_ALL .
.sp
.LP
The
.B ct_dev_status_get_dev_state()
function returns the current state
of the device which is the subject of the contract. This can be one of the
following:
.sp
.ne 2
.mk
.na
.B CT_DEV_EV_ONLINE
.ad
.RS 22n
.rt
The device is online and functioning normally.
.RE

.sp
.ne 2
.mk
.na
.B CT_DEV_EV_DEGRADED
.ad
.RS 22n
.rt
The device is online but degraded.
.RE

.sp
.ne 2
.mk
.na
.B CT_DEV_EV_OFFLINE
.ad
.RS 22n
.rt
The device is offline and not configured.
.RE

.sp
.LP
The
.B ct_dev_status_get_aset()
function returns the A-set of the
contract. This can be the bitset of one or more of the following states:
.BR CT_DEV_EV_ONLINE ,
.BR CT_DEV_EV_DEGRADED ,
or
.BR CT_DEV_EV_OFFLINE .
.sp
.LP
The
.B ct_dev_status_get_minor()
function reads the
.B devfs
path of
the minor participating in the contract. The
.B devfs
path returned does
not include the
.B /devices
prefix. If the buffer passed in by the caller
is too small (<
.BR PATH_MAX ),
the minimum size of the buffer required (
.BR PATH_MAX )
is returned to the caller via the
.I buflenp
argument.
.sp
.LP
The \fBct_dev_status_get_noneg()\fR function returns the "noneg" setting
for the contract. A value of 1 is returned in the
.I nonegp
argument if
.B NONEG
is set, else 0 is returned.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, these functions return 0. Otherwise, they
return a non-zero error value.
.SH ERRORS
.sp
.LP
The
.B ct_dev_status_get_minor()
function will fail if:
.sp
.ne 2
.mk
.na
.B EOVERFLOW
.ad
.RS 13n
.rt
The buffer size is too small to hold the result.
.RE

.sp
.LP
The
.BR ct_dev_status_get_dev_state() ,
.BR ct_dev_status_get_aset() ,
.B ct_dev_status_get_minor()
and
.BR ct_dev_status_get_noneg()
functions will fail if:
.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
An invalid argument was specified.
.RE

.sp
.ne 2
.mk
.na
.B ENOENT
.ad
.RS 10n
.rt
The requested data is not present in the status object.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR ct_status_free (3CONTRACT),
.BR ct_status_read (3CONTRACT),
.BR libcontract (3LIB),
.BR contract (4),
.BR devices (4),
.BR attributes (5),
.BR lfcompile (5)
