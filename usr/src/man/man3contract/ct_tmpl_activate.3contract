'\" te
.\" Copyright (c) 2004, Sun Microsystems, Inc. All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH ct_tmpl_activate 3CONTRACT "1 Apr 2004" "SunOS 5.11" "Contract Management Library Functions"
.SH NAME
ct_tmpl_activate, ct_tmpl_clear, ct_tmpl_create, ct_tmpl_set_cookie,
ct_tmpl_set_critical, ct_tmpl_set_informative, ct_tmpl_get_cookie,
ct_tmpl_get_critical, ct_tmpl_get_informative \- common contract template
functions
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR\&.\|.\|. ] \fIfile\fR\&.\|.\|. \fB-D_LARGEFILE64_SOURCE\fR \fB -lcontract \fR [ \fIlibrary\fR\&.\|.\|. ]
#include <libcontract.h>

\fBint\fR \fBct_tmpl_activate\fR(\fBint\fR \fIfd\fR);
.fi

.LP
.nf
\fBint\fR \fBct_tmpl_clear\fR(\fBint\fR \fIfd\fR);
.fi

.LP
.nf
\fBint\fR \fBct_tmpl_create\fR(\fBint\fR \fIfd\fR, \fBctid_t *\fIidp\fR);
.fi

.LP
.nf
\fBint\fR \fBct_tmpl_set_cookie\fR(\fBint\fR \fIfd\fR, \fBuint64_t\fR \fIcookie\fR);
.fi

.LP
.nf
\fBint\fR \fBct_tmpl_set_critical\fR(\fBint\fR \fIfd\fR, \fBuint_t\fR \fIevents\fR);
.fi

.LP
.nf
\fBint\fR \fBct_tmpl_set_informative\fR(\fBint\fR \fIfd\fR, \fBuint_t\fR \fIevents\fR);
.fi

.LP
.nf
\fBint\fR \fBct_tmpl_get_cookie\fR(\fBint\fR \fIfd\fR, \fBuint64_t *\fIcookiep\fR);
.fi

.LP
.nf
\fBint\fR \fBct_tmpl_get_critical\fR(\fBint\fR \fIfd\fR, \fBuint_t *\fIeventsp\fR);
.fi

.LP
.nf
\fBint\fR \fBct_tmpl_get_informative\fR(\fBint\fR \fIfd\fR, \fBuint_t *\fIeventsp\fR);
.fi

.SH DESCRIPTION
.sp
.LP
These functions operate on contract template file descriptors obtained from
the
.BR contract (4)
file system.
.sp
.LP
The
.B ct_tmpl_activate()
function makes the template referenced by the
file descriptor \fIfd\fR the active template for the calling thread.
.sp
.LP
The
.B ct_tmpl_clear()
function clears calling thread's active
template.
.sp
.LP
The
.B ct_tmpl_create()
function uses the template referenced by the
file descriptor \fIfd\fR to create a new contract. If successful, the ID of
the newly created contract is placed in *\fIidp\fR.
.sp
.LP
The
.B ct_tmpl_set_cookie()
and
.B ct_tmpl_get_cookie()
functions
write and read the cookie term of a contract template. The cookie term is
ignored by the system, except to include its value in a resulting contract's
status object. The default cookie term is 0.
.sp
.LP
The
.B ct_tmpl_set_critical()
and
.B ct_tmpl_get_critical()
functions
write and read the critical event set term. The value is a collection of
bits as described in the contract type's manual page.
.sp
.LP
The \fBct_tmpl_set_informative()\fR and \fBct_tmpl_get_informative()\fR
functions write and read the informative event set term. The value is a
collection of bits as described in the contract type's manual page.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, \fBct_tmpl_activate()\fR,
.BR ct_tmpl_create() ,
.BR ct_tmpl_set_cookie() ,
.BR ct_tmpl_get_cookie() ,
.BR ct_tmpl_set_critical() ,
.BR ct_tmpl_get_critical() ,
\fBct_tmpl_set_informative()\fR, and
\fBct_tmpl_get_informative()\fR return 0. Otherwise, they return a non-zero
error value.
.SH ERRORS
.sp
.LP
The
.B ct_tmpl_create()
function will fail if:
.sp
.ne 2
.mk
.na
.B ERANGE
.ad
.RS 10n
.rt
The terms specified in the template were unsatisfied at the time of the
call.
.RE

.sp
.ne 2
.mk
.na
.B EAGAIN
.ad
.RS 10n
.rt
The \fIproject\fR.\fImax-contracts\fR resource control would have been
exceeded.
.RE

.sp
.LP
The
.B ct_tmpl_set_critical()
and \fBct_tmpl_set_informative()\fR
functions will fail if:
.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
An invalid event was specified.
.RE

.sp
.LP
The
.B ct_tmpl_set_critical()
function will fail if:
.sp
.ne 2
.mk
.na
.B EPERM
.ad
.RS 9n
.rt
One of the specified events was disallowed given other contract terms (see
.BR contract (4))
and {\fBPRIV_CONTRACT_EVENT\fR} was not in the effective
set for the calling process.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityEvolving
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR libcontract (3LIB),
.BR contract (4),
.BR attributes (5),
\fBlfcompile\fR(5)
