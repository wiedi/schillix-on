'\" te
.\" Copyright (c) 2008, Sun Microsystems Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH stmfGetProviderDataProt 3STMF "7 Oct 2008" "SunOS 5.11" "SCSI Target Mode Framework Library Functions"
.SH NAME
stmfGetProviderDataProt \- retrieve data for the specified provider
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lstmf\fR [ \fIlibrary\fR.\|.\|. ]
 #include <libstmf.h>

\fBint\fR \fBstmfGetProviderDataProt\fR(\fBchar *\fIproviderName\fR, \fBnvlist_t **\fInvl\fR,
     \fBint\fR \fIproviderType\fR, \fBuint64_t *\fItoken\fR);
.fi

.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I providerName
.ad
.RS 16n
.rt
The name of the provider for which data is being retrieved.
.RE

.sp
.ne 2
.mk
.na
.I nvl
.ad
.RS 16n
.rt
A pointer to a pointer to an
.BR nvlist_t .
On success, this will contain
the nvlist retrieved. The caller is responsible for freeing the returned
nvlist by calling \fBnvlist_free\fR(3NVPAIR).
.RE

.sp
.ne 2
.mk
.na
.I providerType
.ad
.RS 16n
.rt
The value for this parameter must be either
.B STMF_LU_PROVIDER_TYPE
or
.BR STMF_PORT_PROVIDER_TYPE .
.RE

.sp
.ne 2
.mk
.na
.I token
.ad
.RS 16n
.rt
A pointer to a
.B uint64_t
allocated by the caller. On success, this
will contain a token for the returned data that can be used in a call to
.BR stmfSetProviderDataProt (3STMF)
to ensure that the data returned in
this call is not stale. If this value is
.IR NULL ,
the token will be
ignored.
.RE

.SH DESCRIPTION
.sp
.LP
The
.B stmfGetProviderDataProt()
function retrieves the data for the
specified provider.
.SH RETURN VALUES
.sp
.LP
The following values are returned:
.sp
.ne 2
.mk
.na
.B STMF_ERROR_NOMEM
.ad
.RS 23n
.rt
The library was unable to allocate sufficient memory to return the data.
.RE

.sp
.ne 2
.mk
.na
.B STMF_STATUS_SUCCESS
.ad
.RS 23n
.rt
The API call was successful.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR libstmf (3LIB),
.BR nvlist_free (3NVPAIR),
.BR stmfSetProviderDataProt (3STMF),
.BR attributes (5)
