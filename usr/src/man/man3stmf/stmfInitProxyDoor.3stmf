'\" te
.\" Copyright (c) 2009, Sun Microsystems Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH stmfInitProxyDoor 3STMF "29 Sep 2009" "SunOS 5.11" "SCSI Target Mode Framework Library Functions"
.SH NAME
stmfInitProxyDoor \- establish the door server with the STMF proxy
service
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lstmf\fR [ \fIlibrary\fR.\|.\|. ]
#include <libstmf.h>

\fBint\fR \fBstmfInitProxyDoor\fR(\fBint *\fIhdl\fR, \fBint\fR \fIfd\fR);
.fi

.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I hdl
.ad
.RS 7n
.rt
a pointer to an
.B int
that will contain the handle for the proxy door
to be used in calls to \fBstmfPostProxyMsg\fR(3STMF) and
.BR stmfDestroyProxyDoor (3STMF).
.RE

.sp
.ne 2
.mk
.na
.I fd
.ad
.RS 7n
.rt
the door file descriptor for the established door server
.RE

.SH DESCRIPTION
.sp
.LP
The
.B stmfInitProxyDoor()
function establishes the door server with the
STMF proxy service. The STMF proxy service is responsible for sending SCSI
commands to the peer node on behalf of a logical unit in the Standby
asymmetric logical unit access (ALUA) state. \fBstmfInitProxyDoor()\fR
should be called once a peer-to-peer communication channel between the two
participating ALUA nodes has been established by the caller.
.sp
.LP
The \fBdoor_call\fR(3C) from the STMF proxy service to the door server will
fill in the
.B door_arg_t
structure as follows:
.sp
.in +2
.nf
door_arg_t arg;
uint32_t result;

arg.data_ptr = buf;
arg.data_size = size;
arg.desc_ptr = NULL;
arg.desc_num = 0;
arg.rbuf = (char *)&result
arg.rsize = sizeof (result);
.fi
.in -2

.sp
.LP
The tuple <\fIdata_ptr\fR,
.IR data_size >
is expected to arrive at the
peer node STMF proxy service via
.BR stmfPostProxyMsg() .
.sp
.LP
The door server is expected to complete the door call with these arguments
to
.BR door_return (3C):
.sp
.in +2
.nf
uinit32_t result;

(void) door_return((char *)&result, sizeof(result), NULL, 0);
.fi
.in -2

.sp
.LP
where result is of type
.B uint32_t
and set to 0 on success, non-zero on
failure.
.sp
.LP
Non-zero values are logged as errors without further action. No file
descriptors will be exchanged by the door call or return.
.SH RETURN VALUES
.sp
.LP
The following values are returned:
.sp
.ne 2
.mk
.na
.B STMF_ERROR_DOOR_INSTALLED
.ad
.RS 29n
.rt
A previous door has already been established.
.RE

.sp
.ne 2
.mk
.na
.B STMF_STATUS_SUCCESS
.ad
.RS 29n
.rt
The API call was successful.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR door_call (3C),
.BR door_return (3C),
.BR libstmf (3LIB),
.BR stmfDestroyProxyDoor (3STMF),
.BR stmfPostProxyMsg (3STMF),
.BR attributes (5)
