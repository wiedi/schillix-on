'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH vlog_ 3MVEC "14 Dec 2007" "SunOS 5.11" "Vector Math Library Functions"
.SH NAME
vlog_, vlogf_ \- vector logarithm functions
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR\&.\|.\|. ] \fIfile\fR\&.\|.\|. \fB-lmvec\fR [ \fIlibrary\fR\&.\|.\|. ]

\fBvoid\fR \fBvlog_\fR(\fBint *\fIn\fR, \fBdouble * restrict\fR \fIx\fR, \fBint *\fIstridex\fR,
     \fBdouble * restrict\fR \fIy\fR, \fBint *\fIstridey\fR);
.fi

.LP
.nf
\fBvoid\fR \fBvlogf_\fR(\fBint *\fIn\fR, \fBfloat * restrict\fR \fIx\fR, \fBint *\fIstridex\fR,
     \fBfloat * restrict\fR \fIy\fR, \fBint *\fIstridey\fR);
.fi

.SH DESCRIPTION
.sp
.LP
These functions evaluate the function \fBlog\fR(\fIx\fR) for an entire vector
of values at once. The first parameter specifies the number of values to
compute. Subsequent parameters specify the argument and result vectors. Each
vector is described by a pointer to the first element and a stride, which is
the increment between successive elements.
.sp
.LP
Specifically, \fBvlog_\fR(\fIn\fR, \fIx\fR, \fIsx\fR, \fIy\fR, \fIsy\fR)
computes \fIy\fR[\fIi\fR * *\fIsy\fR] = \fBlog\fR(\fIx\fR[\fIi\fR *
*\fIsx\fR]) for each \fIi\fR = 0, 1, .\|.\|., *\fIn\fR - 1. The \fBvlogf_()\fR
function performs the same computation for single precision data.
.sp
.LP
These functions are not guaranteed to deliver results that are identical to
the results of the \fBlog\fR(3M) functions given the same arguments.
Non-exceptional results, however, are accurate to within a unit in the last
place.
.SH USAGE
.sp
.LP
The element count *\fIn\fR must be greater than zero. The strides for the
argument and result arrays can be arbitrary integers, but the arrays
themselves must not be the same or overlap. A zero stride effectively
collapses an entire vector into a single element. A negative stride causes a
vector to be accessed in descending memory order, but note that the
corresponding pointer must still point to the first element of the vector to
be used; if the stride is negative, this will be the highest-addressed element
in memory. This convention differs from the Level 1 BLAS, in which array
parameters always refer to the lowest-addressed element in memory even when
negative increments are used.
.sp
.LP
These functions assume that the default round-to-nearest rounding direction
mode is in effect. On x86, these functions also assume that the default
round-to-64-bit rounding precision mode is in effect. The result of calling a
vector function with a non-default rounding mode in effect is undefined.
.sp
.LP
These functions handle special cases and exceptions in the same way as the
.B log()
functions when
.B "c99 MATHERREXCEPT"
conventions are in
effect. See \fBlog\fR(3M) for the results for special cases.
.sp
.LP
An application wanting to check for exceptions should call
\fBfeclearexcept\fR(\fBFE_ALL_EXCEPT\fR) before calling these functions. On
return, if \fBfetestexcept\fR(\fBFE_INVALID\fR | \fBFE_DIVBYZERO\fR |
.B FE_OVERFLOW
|
.BR FE_UNDERFLOW )
is non-zero, an exception has been
raised. The application can then examine the result or argument vectors for
exceptional values. Some vector functions can raise the inexact exception even
if all elements of the argument array are such that the numerical results are
exact.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR log (3M),
.BR feclearexcept (3M),
.BR fetestexcept (3M),
.BR attributes (5)
