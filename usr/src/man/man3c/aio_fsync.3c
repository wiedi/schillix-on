'\" te
.\" Copyright (c) 2008, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" Copyright 1989 AT&T
.\" Portions Copyright (c) 1992, X/Open Company Limited.  All Rights Reserved.
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH aio_fsync 3C "5 Feb 2008" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
aio_fsync \- asynchronous file synchronization
.SH SYNOPSIS
.LP
.nf
#include <aio.h>

\fBint\fR \fBaio_fsync\fR(\fBint\fR \fIop\fR, \fBstruct aiocb *\fIaiocbp\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B aio_fsync()
function asynchronously forces all I/O operations
associated with the file indicated by the file descriptor \fBaio_fildes\fR
member of the
.B aiocb
structure referenced by the
.I aiocbp
argument
and queued at the time of the call to
.B aio_fsync()
to the synchronized
I/O completion state. The function call returns when the synchronization
request has been initiated or queued to the file or device (even when the
data cannot be synchronized immediately).
.sp
.LP
If
.I op
is
.BR O_DSYNC ,
all currently queued I/O operations are
completed as if by a call to \fBfdatasync\fR(3C); that is, as defined for
synchronized I/O data integrity completion. If
.I op
is
.BR O_SYNC ,
all
currently queued I/O operations are completed as if by a call to
.BR fsync (3C);
that is, as defined for synchronized I/O file integrity
completion. If the
.B aio_fsync()
function fails, or if the operation
queued by \fBaio_fsync()\fR fails, then, as for \fBfsync\fR(3C) and
.BR fdatasync (3C),
outstanding I/O operations are not guaranteed to have
been completed.
.sp
.LP
If
.B aio_fsync()
succeeds, then it is only the I/O that was queued at
the time of the call to
.B aio_fsync()
that is guaranteed to be forced to
the relevant completion state. The completion of subsequent I/O on the file
descriptor is not guaranteed to be completed in a synchronized fashion.
.sp
.LP
The
.I aiocbp
argument refers to an asynchronous I/O control block. The
.I aiocbp
value may be used as an argument to
.BR aio_error "(3C) and"
.BR aio_return (3C)
in order to determine the error status and return
status, respectively, of the asynchronous operation while it is proceeding.
When the request is queued, the error status for the operation is
.B EINPROGRESS.
When all data has been successfully transferred, the error
status will be reset to reflect the success or failure of the operation. If
the operation does not complete successfully, the error status for the
operation will be set to indicate the error. The
.I aio_sigevent
member
determines the asynchronous notification to occur when all operations have
achieved synchronized I/O completion (see
.BR signal.h (3HEAD)).
All other
members of the structure referenced by
.I aiocbp
are ignored. If the
control block referenced by
.I aiocbp
becomes an illegal address prior to
asynchronous I/O completion, then the behavior is undefined.
.sp
.LP
If the
.B aio_fsync()
function fails or the
.I aiocbp
indicates an
error condition, data is not guaranteed to have been successfully
transferred.
.sp
.LP
If
.I aiocbp
is
.IR NULL ,
then no status is returned in
.IR aiocbp ,
and no signal is generated upon completion of the operation.
.SH RETURN VALUES
.sp
.LP
The \fBaio_fsync()\fR function returns \fB0\fR to the calling process if the
I/O operation is successfully queued; otherwise, the function returns
\fB\(mi1\fR and sets \fBerrno\fR to indicate the error.
.SH ERRORS
.sp
.LP
The
.B aio_fsync()
function will fail if:
.sp
.ne 2
.mk
.na
.B EAGAIN
.ad
.RS 10n
.rt
The requested asynchronous operation was not queued due to temporary
resource limitations.
.RE

.sp
.ne 2
.mk
.na
.B EBADF
.ad
.RS 10n
.rt
The \fBaio_fildes\fR member of the \fBaiocb\fR structure referenced by the
.I aiocbp
argument is not a valid file descriptor open for writing.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The system does not support synchronized I/O for this file.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
A value of
.I op
other than
.B O_DSYNC
or
.B O_SYNC
was
specified.
.RE

.sp
.LP
In the event that any of the queued I/O operations fail, \fBaio_fsync()\fR
returns the error condition defined for
.BR read (2)
and
.BR write (2).
The
error will be returned in the error status for the asynchronous
.BR fsync (3C)
operation, which can be retrieved using
.BR aio_error (3C).

.SH USAGE
.sp
.LP
The
.B aio_fsync()
function has a transitional interface for 64-bit file
offsets. See
.BR lf64 (5).
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
_
StandardSee \fBstandards\fR(5).
.TE

.SH SEE ALSO
.sp
.LP
.BR fcntl (2),
.BR open (2),
.BR read (2),
.BR write (2),
.BR aio_error (3C),
.BR aio_return (3C),
.BR aio.h (3HEAD),
.BR fcntl.h (3HEAD),
.BR fdatasync (3C),
\fBfsync\fR(3C),
.BR signal.h (3HEAD),
.BR attributes (5),
.BR lf64 (5),
.BR standards (5)
