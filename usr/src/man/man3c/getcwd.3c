'\" te
.\" Copyright (c) 2001, the Institute of Electrical and Electronics Engineers,
.\" Inc. and The Open Group. All Rights Reserved.
.\" Copyright 1989 AT&T
.\" Portions Copyright (c) 2004, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH getcwd 3C "18 Oct 2004" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
getcwd \- get pathname of current working directory
.SH SYNOPSIS
.LP
.nf
#include <unistd.h>

\fBchar *\fBgetcwd\fR(\fBchar *\fIbuf\fR, \fBsize_t\fR \fIsize\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B getcwd()
function places an absolute pathname of the current
working directory in the array pointed to by
.IR buf ,
and returns
.IR buf .
The pathname copied to the array contains no components that are
symbolic links. The
.I size
argument is the size in bytes of the
character array pointed to by
.I buf
and must be at least one greater
than the length of the pathname to be returned.
.sp
.LP
If
.I buf
is not a null pointer, the pathname is stored in the space
pointed to by
.IR buf .
.sp
.LP
If
.I buf
is a null pointer,
.B
getcwd()
obtains
.I size
bytes of
space using
.BR malloc "(3C). The pointer returned by"
.B getcwd()
can be
used as the argument in a subsequent call to
.BR free() .
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B getcwd()
returns the
.I buf
argument.
If
.I buf
is an invalid destination buffer address,
.I NULL
is
returned and
.B errno
is set to
.BR EFAULT .
Otherwise, a null pointer
is returned and
.B errno
is set to indicate the error.
.SH ERRORS
.sp
.LP
The
.B getcwd()
function will fail if:
.sp
.ne 2
.mk
.na
.B EFAULT
.ad
.RS 10n
.rt
The
.I buf
argument is an invalid destination buffer address.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The
.I size
argument is equal to 0.
.RE

.sp
.ne 2
.mk
.na
.B ERANGE
.ad
.RS 10n
.rt
The
.I size
argument is greater than 0 and less than the length of the
pathname plus 1.
.RE

.sp
.LP
The
.B getcwd()
function may fail if:
.sp
.ne 2
.mk
.na
.B EACCES
.ad
.RS 10n
.rt
A parent directory cannot be read to get its name.
.RE

.sp
.ne 2
.mk
.na
.B ENOMEM
.ad
.RS 10n
.rt
Insufficient storage space is available.
.RE

.SH EXAMPLES
.LP
.B Example 1
Determine the absolute pathname of the current working
directory.
.sp
.LP
The following example returns a pointer to an array that holds the absolute
pathname of the current working directory. The pointer is returned in the
.I ptr
variable, which points to the
.I buf
array where the pathname
is stored.

.sp
.in +2
.nf
#include <stdlib.h>
#include <unistd.h>
\&...
long size;
char *buf;
char *ptr;
size = pathconf(".", _PC_PATH_MAX);
if ((buf = (char *)malloc((size_t)size)) != NULL)
       ptr = getcwd(buf, (size_t)size);
\&...
.fi
.in -2

.LP
.B Example 2
Print the current working directory.
.sp
.LP
The following example prints the current working directory.

.sp
.in +2
.nf
#include <unistd.h>
#include <stdio.h>

main(\|)
{
    char *cwd;
    if ((cwd = getcwd(NULL, 64)) == NULL) {
        perror("pwd");
        exit(2);
    }
    (void)printf("%s\en", cwd);
    free(cwd); /* free memory allocated by getcwd() */
    return(0);
}
.fi
.in -2

.SH USAGE
.sp
.LP
Applications should exercise care when using
.BR chdir (2)
in conjunction
with
.BR getcwd() .
The current working directory is global to all threads
within a process. If more than one thread calls
.B chdir()
to change the
working directory, a subsequent call to
.B getcwd()
could produce
unexpected results.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR chdir (2),
.BR malloc (3C),
.BR attributes (5),
.BR standards (5)
