'\" te
.\" Copyright (c) 2006, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH rctlblk_set_value 3C "15 May 2006" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
rctlblk_set_value, rctlblk_get_firing_time, rctlblk_get_global_action,
rctlblk_get_global_flags, rctlblk_get_local_action, rctlblk_get_local_flags,
rctlblk_get_privilege, rctlblk_get_recipient_pid, rctlblk_get_value,
rctlblk_get_enforced_value, rctlblk_set_local_action,
rctlblk_set_local_flags, rctlblk_set_privilege, rctlblk_set_recipient_pid,
rctlblk_size \- manipulate resource control blocks
.SH SYNOPSIS
.LP
.nf
#include <rctl.h>

\fBhrtime_t\fR  \fBrctlblk_get_firing_time\fR(\fBrctlblk_t *\fIrblk\fR);
.fi

.LP
.nf
\fBint\fR \fBrctlblk_get_global_action\fR(\fBrctlblk_t *\fIrblk\fR);
.fi

.LP
.nf
\fBint\fR \fBrctlblk_get_global_flags\fR(\fBrctlblk_t *\fIrblk\fR);
.fi

.LP
.nf
\fBint\fR \fBrctlblk_get_local_action\fR(\fBrctlblk_t *\fIrblk\fR, \fBint *\fIsignalp\fR);
.fi

.LP
.nf
\fBint\fR \fBrctlblk_get_local_flags\fR(\fBrctlblk_t *\fIrblk\fR);
.fi

.LP
.nf
\fBrctl_priv_t\fR  \fBrctlblk_get_privilege\fR(\fBrctlblk_t *\fIrblk\fR);
.fi

.LP
.nf
\fBid_t\fR \fBrctlblk_get_recipient_pid\fR(\fBrctlblk_t *\fIrblk\fR);
.fi

.LP
.nf
\fBrctl_qty_t\fR  \fBrctlblk_get_value\fR(\fBrctlblk_t *\fIrblk\fR);
.fi

.LP
.nf
\fBrctl_qty_t\fR  \fBrctlblk_get_enforced_value\fR(\fBrctlblk_t *\fIrblk\fR);
.fi

.LP
.nf
\fBvoid\fR \fBrctlblk_set_local_action\fR(\fBrctlblk_t *\fIrblk\fR, \fBrctl_action_t\fR \fIaction\fR,
     \fBint\fR \fIsignal\fR);
.fi

.LP
.nf
\fBvoid\fR \fBrctlblk_set_local_flags\fR(\fBrctlblk_t *\fIrblk\fR, \fBint\fR \fIflags\fR);
.fi

.LP
.nf
\fBvoid\fR \fBrctlblk_set_privilege\fR(\fBrctlblk_t *\fIrblk\fR, \fBrctl_priv_t\fR \fIprivilege\fR);
.fi

.LP
.nf
\fBvoid\fR \fBrctlblk_set_value\fR(\fBrctlblk_t *\fIrblk\fR, \fBrctl_qty_t\fR \fIvalue\fR);
.fi

.LP
.nf
\fBvoid\fR  \fBrctlblk_set_recipient_pid\fR(\fBid_t\fIpid\fR);
.fi

.LP
.nf
\fBsize_t\fR \fBrctlblk_size\fR(\fBvoid\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The resource control block routines allow the establishment or retrieval of
values from a resource control block used to transfer information using the
.BR getrctl (2)
and
.BR setrctl (2)
functions. Each of the routines
accesses or sets the resource control block member corresponding to its
name. Certain of these members are read-only and do not possess set
routines.
.sp
.LP
The firing time of a resource control block is 0 if the resource control
action-value has not been exceeded for its lifetime on the process.
Otherwise the firing time is the value of
.BR gethrtime "(3C) at the moment"
the action on the resource control value was taken.
.sp
.LP
The global actions and flags are the action and flags set by
.BR rctladm (1M).
These values cannot be set with
.BR setrctl (2).
Valid
global actions are listed in the table below. Global flags are generally a
published property of the control and are not modifiable.
.sp
.ne 2
.mk
.na
.B RCTL_GLOBAL_DENY_ALWAYS
.ad
.RS 28n
.rt
The action taken when a control value is exceeded on this control will
always include denial of the resource.
.RE

.sp
.ne 2
.mk
.na
.B RCTL_GLOBAL_DENY_NEVER
.ad
.RS 28n
.rt
The action taken when a control value is exceeded on this control will
always exclude denial of the resource; the resource will always be granted,
although other actions can also be taken.
.RE

.sp
.ne 2
.mk
.na
.B RCTL_GLOBAL_SIGNAL_NEVER
.ad
.RS 28n
.rt
No signal actions are permitted on this control.
.RE

.sp
.ne 2
.mk
.na
.B RCTL_GLOBAL_CPU_TIME
.ad
.RS 28n
.rt
The valid signals available as local actions include the
.BR SIGXCPU
signal.
.RE

.sp
.ne 2
.mk
.na
.B RCTL_GLOBAL_FILE_SIZE
.ad
.RS 28n
.rt
The valid signals available as local actions include the
.BR SIGXFSZ
signal.
.RE

.sp
.ne 2
.mk
.na
.B RCTL_GLOBAL_INFINITE
.ad
.RS 28n
.rt
This resource control supports the concept of an unlimited value; generally
true only of accumulation-oriented resources, such as CPU time.
.RE

.sp
.ne 2
.mk
.na
.B RCTL_GLOBAL_LOWERABLE
.ad
.RS 28n
.rt
Non-privileged callers are able to lower the value of privileged resource
control values on this control.
.RE

.sp
.ne 2
.mk
.na
.B RCTL_GLOBAL_NOACTION
.ad
.RS 28n
.rt
No global action will be taken when a resource control value is exceeded on
this control.
.RE

.sp
.ne 2
.mk
.na
.B RCTL_GLOBAL_NOBASIC
.ad
.RS 28n
.rt
No values with the
.B RCPRIV_BASIC
privilege are permitted on this
control.
.RE

.sp
.ne 2
.mk
.na
.B RCTL_GLOBAL_SYSLOG
.ad
.RS 28n
.rt
A standard message will be logged by the
.BR syslog (3C)
facility when any
resource control value on a sequence associated with this control is
exceeded.
.RE

.sp
.ne 2
.mk
.na
.B RCTL_GLOBAL_SYSLOG_NEVER
.ad
.RS 28n
.rt
The resource control does not support the
.B syslog()
global action.
Exceeding a resource control value on this control will not result in a
message logged by the
.B syslog()
facility.
.RE

.sp
.ne 2
.mk
.na
.B RCTL_GLOBAL_UNOBSERVABLE
.ad
.RS 28n
.rt
The resource control (generally on a task- or project-related control) does
not support observational control values. An
.B RCPRIV_BASIC
privileged
control value placed by a process on the task or process will generate an
action only if the value is exceeded by that process.
.RE

.sp
.ne 2
.mk
.na
.B RCTL_GLOBAL_BYTES
.ad
.RS 28n
.rt
This resource control represents a number of bytes.
.RE

.sp
.ne 2
.mk
.na
.B RCTL_GLOBAL_SECONDS
.ad
.RS 28n
.rt
This resource control represents a quantity of time in seconds.
.RE

.sp
.ne 2
.mk
.na
.B RCTL_GLOBAL_COUNT
.ad
.RS 28n
.rt
This resource control represents an integer count.
.RE

.sp
.LP
The local action and flags are those on the current resource control value
represented by this resource control block. Valid actions and flags are
listed in the table below. In the case of
.BR RCTL_LOCAL_SIGNAL ,
the
second argument to
.B rctlblk_set_local_action()
contains the signal to
be sent. Similarly, the signal to be sent is copied into the integer
location specified by the second argument to
.BR rctlblk_get_local_action() .
A restricted set of signals is made
available for normal use by the resource control facility:
.BR SIGBART ,
.BR SIGXRES ,
.BR SIGHUP ,
.BR SIGSTOP ,
.BR SIGTERM ,
and
.BR SIGKILL .
Other signals are permitted due to global properties of a
specific control. Calls to
.B setrctl()
with illegal signals will fail.
.sp
.ne 2
.mk
.na
.B RCTL_LOCAL_DENY
.ad
.RS 23n
.rt
When this resource control value is encountered, the request for the
resource will be denied. Set on all values if
.B RCTL_GLOBAL_DENY_ALWAYS
is set for this control; cleared on all values if
.B RCTL_GLOBAL_DENY_NEVER
is set for this control.
.RE

.sp
.ne 2
.mk
.na
.B RCTL_LOCAL_MAXIMAL
.ad
.RS 23n
.rt
This resource control value represents a request for the maximum amount of
resource for this control. If
.B RCTL_GLOBAL_INFINITE
is set for this
resource control,
.B RCTL_LOCAL_MAXIMAL
indicates an unlimited resource
control value, one that will never be exceeded.
.RE

.sp
.ne 2
.mk
.na
.B RCTL_LOCAL_NOACTION
.ad
.RS 23n
.rt
No local action will be taken when this resource control value is
exceeded.
.RE

.sp
.ne 2
.mk
.na
.B RCTL_LOCAL_SIGNAL
.ad
.RS 23n
.rt
The specified signal, sent by
.BR rctlblk_set_local_action() ,
will be
sent to the process that placed this resource control value in the value
sequence. This behavior is also true for signal actions on project and task
resource controls. The specified signal is sent only to the recipient
process, not all processes within the project or task.
.RE

.sp
.LP
The
.B rctlblk_get_recipient_pid()
function returns the value of the
process ID that placed the resource control value for basic rctls. For
privileged or system rctls,
.B rctlblk_get_recipient_pid()
returns -1.
.sp
.LP
The
.B rctlblk_set_recipient_pid()
function sets the recipient
.IR pid
for a basic rctl. When
.BR setrctl (2)
is called with the flag
.BR RCTL_USE_RECIPIENT_PID ,
this
.I pid
is used. Otherwise, the PID of
the calling process is used. Only privileged users can set the recipient PID
to one other than the PID of the calling process.  Process-scoped rctls must
have a recipient PID that matches the PID of the calling process.
.sp
.LP
The
.B rctlblk_get_privilege()
function returns the privilege of the
resource control block. Valid privileges are
.BR RCPRIV_BASIC ,
.BR RCPRIV_PRIVILEGED ,
and
.BR RCPRIV_SYSTEM .
System resource controls
are read-only. Privileged resource controls require the
.RB { PRIV_SYS_RESOURCE }
privilege to write, unless the
.B RCTL_GLOBAL_LOWERABLE
global flag is set, in which case unprivileged
applications can lower the value of a privileged control.
.sp
.LP
The
.B rctlblk_get_value()
and
.B rctlblk_set_value()
functions
return or establish the enforced value associated with the resource control.
In cases where the process, task, or project associated with the control
possesses fewer capabilities than allowable by the current value, the value
returned by
.B rctlblk_get_enforced_value()
will differ from that
returned by
.BR rctlblk_get_value() .
This capability difference arises
with processes using an address space model smaller than the maximum address
space model supported by the system.
.sp
.LP
The
.B rctlblk_size()
function returns the size of a resource control
block for use in memory allocation. The
.B "rctlblk_t *"
type is an opaque
pointer whose size is not connected with that of the resource control block
itself. Use of
.B rctlblk_size()
is illustrated in the example below.
.SH RETURN VALUES
.sp
.LP
The various set routines have no return values. Incorrectly composed
resource control blocks will generate errors when used with
.BR setrctl (2)
or
.BR getrctl (2).
.SH ERRORS
.sp
.LP
No error values are returned. Incorrectly constructed resource control
blocks will be rejected by the system calls.
.SH EXAMPLES
.LP
.B Example 1
Display the contents of a fetched resource control block.
.sp
.LP
The following example displays the contents of a fetched resource control
block.

.sp
.in +2
.nf
#include <rctl.h>
#include <stdio.h>
#include <stdlib.h>

rctlblk_t *rblk;
int rsignal;
int raction;

if ((rblk = malloc(rctlblk_size())) == NULL) {
       (void) perror("rblk malloc");
       exit(1);
}

if (getrctl("process.max-cpu-time", NULL, rblk, RCTL_FIRST) == -1) {
       (void) perror("getrctl");
       exit(1);
}

main()
{
    raction = rctlblk_get_local_action(rblk, &rsignal),
    (void) printf("Resource control for %s\en",
        "process.max-cpu-time");
    (void) printf("Process ID:     %d\en",
        rctlblk_get_recipient_pid(rblk));
    (void) printf("Privilege:      %x\en"
        rctlblk_get_privilege(rblk));
    (void) printf("Global flags:   %x\en"
        rctlblk_get_global_flags(rblk));
    (void) printf("Global actions: %x\en"
        rctlblk_get_global_action(rblk));
    (void) printf("Local flags:    %x\en"
        rctlblk_get_local_flags(rblk));
    (void) printf("Local action:   %x (%d)\en"
        raction, raction == RCTL_LOCAL_SIGNAL ? rsignal : 0);
    (void) printf("Value:          %llu\en",
        rctlblk_get_value(rblk));
    (void) printf("\tEnforced value: %llu\en",
        rctlblk_get_enforced_value(rblk));
}
.fi
.in -2

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityEvolving
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR rctladm (1M),
.BR getrctl (2),
.BR setrctl (2),
.BR gethrtime (3C),
.BR attributes (5)
