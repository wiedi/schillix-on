'\" te
.\" Copyright (c) 2008, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright 1989 AT&T
.\" Portions Copyright (c) 1992, X/Open Company Limited.  All Rights Reserved.
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH sigwaitinfo 3C "5 Feb 2008" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
sigwaitinfo, sigtimedwait \- wait for queued signals
.SH SYNOPSIS
.LP
.nf
#include <signal.h>

\fBint\fR \fBsigwaitinfo\fR(\fBconst sigset_t *restrict\fR \fIset\fR,
     \fBsiginfo_t *restrict\fR \fIinfo\fR);
.fi

.LP
.nf
\fBint\fR \fBsigtimedwait\fR(\fBconst sigset_t *restrict\fR \fIset\fR,
     \fBsiginfo_t *restrict\fR \fIinfo\fR,
     \fBconst struct timespec *restrict\fR \fItimeout\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B sigwaitinfo()
function selects the pending signal from the set
specified by
.BR set .
Should any of multiple pending signals in the range
.B SIGRTMIN
to
.B SIGRTMAX
be selected, it will be the lowest numbered
one. The selection order between realtime and non-realtime signals, or
between multiple pending non-realtime signals, is unspecified. If no signal
in
.B set
is pending at the time of the call, the calling thread is
suspended until one or more signals in
.B set
become pending or until it
is interrupted by an unblocked, caught signal.
.sp
.LP
The
.B sigwaitinfo()
function behaves the same as the
.BR sigwait (2)
function if the
.I info
argument is
.IR NULL .
If the \fIinfo\fR
argument is non-\fINULL\fR, the \fBsigwaitinfo()\fR function behaves the
same as
.BR sigwait (2),
except that the selected signal number is stored
in the
.I si_signo
member, and the cause of the signal is stored in the
.I si_code
member. If any value is queued to the selected signal, the
first such queued value is dequeued and, if the
.I info
argument is
non-\fINULL\fR, the value is stored in the \fIsi_value\fR member of
.IR info .
The system resource used to queue the signal will be released
and made available to queue other signals. If no value is queued, the
content of the
.I si_value
member is undefined. If no further signals are
queued for the selected signal, the pending indication for that signal will
be reset. If the value of the
.B si_code
member is
.BR SI_NOINFO ,
only
the
.B si_signo
member of
.B siginfo_t
is meaningful, and the value of
all other members is unspecified.
.sp
.LP
The
.B sigtimedwait()
function behaves the same as \fBsigwaitinfo()\fR
except that if none of the signals specified by
.B set
are pending,
.B sigtimedwait()
waits for the time interval specified in the
.B timespec
structure referenced by
.IR timeout .
If the
.BR timespec
structure pointed to by
.I timeout
is zero-valued and if none of the
signals specified by
.B set
.RB "are pending, then" " sigtimedwait()"
returns immediately with an error. If
.I timeout
is the
.IR NULL
pointer, the behavior is unspecified.
.sp
.LP
If, while
.B sigwaitinfo()
or
.B sigtimedwait()
is waiting, a signal
occurs which is eligible for delivery (that is, not blocked by the process
signal mask), that signal is handled asynchronously and the wait is
interrupted.
.SH RETURN VALUES
.sp
.LP
Upon successful completion (that is, one of the signals specified by
.I set
is pending or is generated)
.B sigwaitinfo()
and
.B sigtimedwait()
will return the selected signal number. Otherwise, the
function returns \fB\(mi1\fR and sets
.B errno
to indicate the error.
.SH ERRORS
.sp
.LP
The \fBsigwaitinfo()\fR and \fBsigtimedwait()\fR functions will fail if:
.sp
.ne 2
.mk
.na
.B EINTR
.ad
.RS 10n
.rt
The wait was interrupted by an unblocked, caught signal.
.RE

.sp
.ne 2
.mk
.na
.B ENOSYS
.ad
.RS 10n
.rt
The \fBsigwaitinfo()\fR and \fBsigtimedwait()\fR functions are not
supported.
.RE

.sp
.LP
The
.B sigtimedwait()
function will fail if:
.sp
.ne 2
.mk
.na
.B EAGAIN
.ad
.RS 10n
.rt
No signal specified by
.B set
was generated within the specified timeout
period.
.RE

.sp
.LP
The \fBsigwaitinfo()\fR and \fBsigtimedwait()\fR functions may fail if:
.sp
.ne 2
.mk
.na
.B EFAULT
.ad
.RS 10n
.rt
The
.IR set ,
.IR info ,
or
.I timeout
argument points to an invalid
address.
.RE

.sp
.LP
The
.B sigtimedwait()
function may fail if:
.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The
.I timeout
argument specified a
.B tv_nsec
value less than zero
or greater than or equal to 1000 million. The system only checks for this
error if no signal is pending in
.I set
and it is necessary to wait.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
lw(2.75i) |lw(2.75i)
lw(2.75i) |lw(2.75i)
.
\fBATTRIBUTE TYPE\fR\fBATTRIBUTE VALUE\fR
_
Interface StabilityCommitted
_
MT-LevelAsync-Safe
_
StandardSee \fBstandards\fR(5).
.TE

.SH SEE ALSO
.sp
.LP
.BR time (2),
.BR sigqueue (3C),
.BR siginfo.h (3HEAD),
.BR signal.h (3HEAD),
.BR time.h (3HEAD),
.BR attributes (5),
.BR standards (5)
