'\" te
.\" Copyright (c) 2002, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright 1989 AT&T
.\" Portions Copyright (c) 2001, the Institute of Electrical and Electronics Engineers, Inc. and The Open Group. All Rights Reserved.
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH localeconv 3C "12 Dec 2003" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
localeconv \- get numeric formatting information
.SH SYNOPSIS
.LP
.nf
#include <locale.h>

\fBstruct lconv *\fBlocaleconv\fR(\fBvoid\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B localeconv()
function sets the components of an object with type
\fBstruct lconv\fR (defined in
.BR <locale.h> )
with the values appropriate
for the formatting of numeric quantities (monetary and otherwise) according
to the rules of the current locale (see \fBsetlocale\fR(3C)). The definition
of \fBstruct lconv\fR is given  below (the values for the fields in the "C"
locale are given in comments).
.sp
.in +2
.nf
char *decimal_point;        /* "." */
char *thousands_sep;        /* "" (zero length string) */
char *grouping;             /* "" */
char *int_curr_symbol;      /* "" */
char *currency_symbol;      /* "" */
char *mon_decimal_point;    /* "" */
char *mon_thousands_sep;    /* "" */
char *mon_grouping;         /* "" */
char *positive_sign;        /* "" */
char *negative_sign;        /* "" */
char int_frac_digits;       /* CHAR_MAX */
char frac_digits;           /* CHAR_MAX */
char p_cs_precedes;         /* CHAR_MAX */
char p_sep_by_space;        /* CHAR_MAX */
char n_cs_precedes;         /* CHAR_MAX */
char n_sep_by_space;        /* CHAR_MAX */
char p_sign_posn;           /* CHAR_MAX*/
char n_sign_posn;           /* CHAR_MAX */
.fi
.in -2

.sp
.LP
The following members are also available to SUSv3-conforming applications.
See
.BR standards (5)
.sp
.in +2
.nf
char int_p_cs_precedes;     /* CHAR_MAX */
char int_p_sep_by_space;    /* CHAR_MAX */
char int_n_cs_precedes;     /* CHAR_MAX */
char int_n_sep_by_space;    /* CHAR_MAX */
char int_p_sign_posn;       /* CHAR_MAX */
char int_n_sign_posn;       /* CHAR_MAX */
.fi
.in -2

.sp
.LP
The members of the structure with type
.B "char *"
are strings, any of
which (except \fBdecimal_point\fR) can point to a null string (""), to
indicate that the value is not available in the current locale or is of zero
length. The members with type
.B char
are non-negative numbers, any of
which can be
.B CHAR_MAX
(defined in the
.B <limits.h>
header) to
indicate that the value is not available in the current locale. The members
are the following:
.sp
.ne 2
.mk
.na
.B char *decimal_point
.ad
.RS 27n
.rt
The decimal-point character used to format non-monetary quantities.
.RE

.sp
.ne 2
.mk
.na
.B char *thousands_sep
.ad
.RS 27n
.rt
The character used to separate groups of digits to the left of the
decimal-point character in formatted non-monetary quantities.
.RE

.sp
.ne 2
.mk
.na
.B char *grouping
.ad
.RS 27n
.rt
A string whose elements taken as one-byte integer values indicate the size
of each group of digits in formatted non-monetary quantities.
.RE

.sp
.ne 2
.mk
.na
.B char *int_curr_symbol
.ad
.RS 27n
.rt
The international currency symbol applicable to the current locale. The
first three characters contain the alphabetic international currency symbol
in accordance with those specified in the ISO 4217: 1995 standard. The
fourth character (immediately preceding the null byte) is the character used
to separate the international currency symbol from the monetary quantity.
.RE

.sp
.ne 2
.mk
.na
.B char *currency_symbol
.ad
.RS 27n
.rt
The local currency symbol applicable to the current locale.
.RE

.sp
.ne 2
.mk
.na
.B char *mon_decimal_point
.ad
.RS 27n
.rt
The decimal point used to format monetary quantities.
.RE

.sp
.ne 2
.mk
.na
.B char *mon_thousands_sep
.ad
.RS 27n
.rt
The separator for groups of digits to the left of the decimal point in
formatted monetary quantities.
.RE

.sp
.ne 2
.mk
.na
.B char *mon_grouping
.ad
.RS 27n
.rt
A string whose elements taken as one-byte integer values indicate the size
of each group of digits in formatted monetary quantities.
.RE

.sp
.ne 2
.mk
.na
.B char *positive_sign
.ad
.RS 27n
.rt
The string used to indicate a non-negative-valued formatted monetary
quantity.
.RE

.sp
.ne 2
.mk
.na
.B char *negative_sign
.ad
.RS 27n
.rt
The string used to indicate a negative-valued formatted monetary
quantity.
.RE

.sp
.ne 2
.mk
.na
\fBchar int_frac_digits\fR
.ad
.RS 27n
.rt
The number of fractional digits (those to the right of the decimal point)
to be displayed in an internationally formatted monetary quantity.
.RE

.sp
.ne 2
.mk
.na
\fBchar frac_digits\fR
.ad
.RS 27n
.rt
The number of fractional digits (those to the right of the decimal point)
to be displayed in a formatted monetary quantity.
.RE

.sp
.ne 2
.mk
.na
.B char p_cs_precedes
.ad
.RS 27n
.rt
Set to 1 or 0 if the
.B currency_symbol
respectively precedes or
succeeds the value for a non-negative formatted monetary quantity.
.RE

.sp
.ne 2
.mk
.na
.B char p_sep_by_space
.ad
.RS 27n
.rt
Set to 0 if no space separates the
.B currency_symbol
or
\fBint_curr_symbol\fR from the value for a non-negative formatted monetary
quantity. Set to 1 if a space separates the symbol from the value; and set
to 2 if a space separates the symbol and the sign string, if adjacent.
.RE

.sp
.ne 2
.mk
.na
.B char n_cs_precedes
.ad
.RS 27n
.rt
Set to 1 or 0 if the
.B currency_symbol
respectively precedes or
succeeds the value for a negative formatted monetary quantity.
.RE

.sp
.ne 2
.mk
.na
.B char n_sep_by_space
.ad
.RS 27n
.rt
Set to 0 if no space separates the
.B currency_symbol
or
\fBint_curr_symbol\fR from the value for a negative formatted monetary
quantity. Set to 1 if a space separates the symbol from the value; and set
to 2 if a space separates the symbol and the sign string, if adjacent.
.RE

.sp
.ne 2
.mk
.na
.B char p_sign_posn
.ad
.RS 27n
.rt
Set to a value indicating the positioning of the
.B positive_sign
for a
non-negative formatted monetary quantity.
.RE

.sp
.ne 2
.mk
.na
.B char n_sign_posn
.ad
.RS 27n
.rt
Set to a value indicating the positioning of the
.B negative_sign
for a
negative formatted monetary quantity.
.RE

.sp
.ne 2
.mk
.na
.B char int_p_cs_precedes
.ad
.RS 27n
.rt
Set to 1 or 0 if the
.B int_curr_symbol
respectively precedes or
succeeds the value for a non-negative internationally formatted monetary
quantity.
.RE

.sp
.ne 2
.mk
.na
.B char int_n_cs_precedes
.ad
.RS 27n
.rt
Set to 1 or 0 if the
.B int_curr_symbol
respectively precedes or
succeeds the value for a negative internationally formatted monetary
quantity.
.RE

.sp
.ne 2
.mk
.na
.B char int_p_sep_by_space
.ad
.RS 27n
.rt
Set to a value indicating the separation of the
.BR int_curr_symbol ,
the
sign string, and the value for a non-negative internationally formatted
monetary quantity.
.RE

.sp
.ne 2
.mk
.na
.B char int_n_sep_by_space
.ad
.RS 27n
.rt
Set to a value indicating the separation of the
.BR int_curr_symbol ,
the
sign string, and the value for a negative internationally formatted monetary
quantity.
.RE

.sp
.ne 2
.mk
.na
.B char int_p_sign_posn
.ad
.RS 27n
.rt
Set to a value indicating the positioning of the
.B positive_sign
for a
non-negative internationally formatted monetary quantity.
.RE

.sp
.ne 2
.mk
.na
.B char int_n_sign_posn
.ad
.RS 27n
.rt
Set to a value indicating the positioning of the
.B negative_sign
for a
negative internationally formatted monetary quantity.
.RE

.sp
.LP
The elements of
.B grouping
and
.B mon_grouping
are interpreted
according to the following:
.sp
.ne 2
.mk
.na
\fB{\fBCHAR_MAX\fR}\fR
.ad
.RS 14n
.rt
No further grouping is to be performed.
.RE

.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 14n
.rt
The previous element is to be repeatedly used for the remainder of the
digits.
.RE

.sp
.ne 2
.mk
.na
.I other
.ad
.RS 14n
.rt
The integer value is the number of digits that comprise the current group.
The next element is examined to determine the size of the next group of
digits before the current group.
.RE

.sp
.LP
The values of
.BR p_sep_by_space ,
.BR n_sep_by_space ,
.BR int_p_sep_by_space ,
and
.B int_n_sep_by_space
are interpreted
according to the following:
.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 5n
.rt
No space separates the currency symbol and value.
.RE

.sp
.ne 2
.mk
.na
.B 1
.ad
.RS 5n
.rt
If the currency symbol and sign string are adjacent, a space separates them
from the value; otherwise, a space separates the currency symbol from the
value.
.RE

.sp
.ne 2
.mk
.na
.B 2
.ad
.RS 5n
.rt
If the currency symbol and sign string are adjacent, a space separates
them; otherwise, a space separates the sign string from the value.
.RE

.sp
.LP
In an SUSv3-conforming application, for
.B int_p_sep_by_space
and
.BR int_n_sep_by_space ,
the fourth character of
.B int_curr_symbol
is
used instead of a space.
.sp
.LP
The values of
.BR p_sign_posn ,
.BR n_sign_posn ,
.BR int_p_sign_posn ,
and
.B int_n_sign_posn
are interpreted according to the following:
.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 5n
.rt
Parentheses surround the quantity and
.B currency_symbol
or
.BR int_curr_symbol .
.RE

.sp
.ne 2
.mk
.na
.B 1
.ad
.RS 5n
.rt
The sign string precedes the quantity and
.B currency_symbol
or
.BR int_curr_symbol .
.RE

.sp
.ne 2
.mk
.na
.B 2
.ad
.RS 5n
.rt
The sign string succeeds the quantity and
.B currency_symbol
or
.BR int_curr_symbol .
.RE

.sp
.ne 2
.mk
.na
.B 3
.ad
.RS 5n
.rt
The sign string immediately precedes the
.B currency_symbol
or
.BR int_curr_symbol .
.RE

.sp
.ne 2
.mk
.na
.B 4
.ad
.RS 5n
.rt
The sign string immediately succeeds the
.B currency_symbol
or
.BR int_curr_symbol .
.RE

.SH RETURN VALUES
.sp
.LP
The
.B localeconv()
function returns a pointer to the filled-in object.
The structure pointed to by the return value may be overwritten  by a
subsequent call to
.BR localeconv() .
.SH EXAMPLES
.LP
\fBExample 1\fR Rules used by four countries to format monetary
quantities.
.sp
.LP
The following table illustrates the rules used by four countries to format
monetary quantities.

.sp

.sp
.TS
tab();
lw(1.38i) |lw(1.38i) |lw(1.38i) |lw(1.38i)
lw(1.38i) |lw(1.38i) |lw(1.38i) |lw(1.38i)
.
\fBCountry\fR\fBPositive\fR\fBNegative\fR\fBInternational\fR
_
Italy (IT)L.1.234\(miL.1.234ITL.1.234
_
Netherlands (NE)F 1.234,56F \(mi1.234,56NLG 1.234,56
_
Norway (NO)kr1.234,56kr1.234,56\(miNOK 1.234,56
_
Switzerland (SW)SFrs.1,234.56SFrs.1,234.56CCHF 1,234.56
.TE

.sp
.LP
For these four countries, the respective values for the monetary members of
the structure returned by
.B localeconv()
are as follows:

.sp

.sp
.TS
tab();
lw(5.5i) lw(0i) lw(0i) lw(0i) lw(0i)
lw(5.5i) lw(0i) lw(0i) lw(0i) lw(0i)
.
\fBIT\fR\fBNE\fR\fBNO\fR\fBSW\fR
\fBint_curr_symbol\fR"ITL.""NLG ""NOK ""CHF "
\fBcurrency_symbol\fR"L.""F""kr""SFrs."
\fBmon_decimal_point\fR""","",""."
\fBmon_thousands_sep\fR"."".""."","
\fBmon_grouping\fR"\e3""\e3""\e3""\e3"
\fBpositive_sign\fR""""""""
\fBnegative_sign\fR"-""-""-""C"
\fBint_frac_digits\fR0222
\fBfrac_digits\fR0222
\fBp_cs_precedes\fR1111
\fBp_sep_by_space\fR0100
\fBn_cs_precedes\fR1111
\fBn_sep_by_space\fR0100
\fBp_sign_posn\fR1111
\fBn_sign_posn\fR1422
\fBint_p_cs_precedes\fR1111
\fBint_n_cs_precedes\fR1111
\fBint_p_sep_by_space\fR0000
\fBint_n_sep_by_space\fR0000
\fBint_p_sign_posn\fR1111
\fBint_n_sign_posn\fR1442
.TE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
CSIEnabled
_
Interface StabilityStandard
_
MT-LevelMT-Safe with exceptions
.TE

.sp
.LP
The
.B localeconv()
function can be used safely in multithreaded
applications, as long as
.BR setlocale (3C)
is not being called to change
the locale.
.SH SEE ALSO
.sp
.LP
.BR setlocale (3C),
.BR attributes (5),
.BR environ (5),
.BR standards (5)
