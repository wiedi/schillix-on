'\" te
.\" Copyright (c) 1999, Sun Microsystems, Inc. All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH str2sig 3C "7 Oct 1999" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
str2sig, sig2str \- translation between signal name and signal number
.SH SYNOPSIS
.LP
.nf
#include <signal.h>

\fBint\fR \fBstr2sig\fR(\fBconst char *\fIstr\fR, \fBint\fR \fI*signum\fR);
.fi

.LP
.nf
\fBint\fR \fBsig2str\fR(\fBint\fR \fIsignum\fR, \fBchar *\fIstr\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B str2sig()
function translates the signal name
.I str
to a
signal number, and stores that result in the location referenced by
.IR signum .
The name in
.I str
can be either the symbol for that
signal, without the "SIG" prefix, or a decimal number.  All the signal
symbols defined in <\fBsys/signal.h\fR> are recognized.  This means that
both "CLD" and "CHLD" are recognized and return the same signal number, as
do both "POLL" and "IO".  For access to the signals in the range
\fBSIGRTMIN\fR to
.BR SIGRTMAX ,
the first four signals match the strings
"RTMIN", "RTMIN+1", "RTMIN+2", and "RTMIN+3" and the last four match the
strings "RTMAX-3", "RTMAX-2", "RTMAX-1", and "RTMAX".
.sp
.LP
The
.B sig2str()
function translates the signal number
.I signum
to
the symbol for that signal, without the "SIG" prefix, and stores that symbol
at the location specified by
.IR str .
The storage referenced by
.IR str
should be large enough to hold the symbol and a terminating null byte. The
symbol
.B SIG2STR_MAX
defined by
.B <signal.h>
gives the maximum size
in bytes required.
.SH RETURN VALUES
.sp
.LP
The
.B str2sig()
function returns
.B 0
if it recognizes the signal
name specified in
.IR str ;
otherwise, it returns \fB\(mi1\fR\&.
.sp
.LP
The
.B sig2str()
function returns
.B 0
if the value
.IR signum
corresponds to a valid signal number; otherwise, it returns \fB\(mi1\fR\&.
.SH EXAMPLES
.LP
\fBExample 1\fR A sample program using the \fBstr2sig()\fR function.
.sp
.in +2
.nf
int i;
char buf[SIG2STR_MAX];     /*storage for symbol */

str2sig("KILL",&i);        /*stores 9 in i */
str2sig("9", &i);          /* stores 9 in i */
sig2str(SIGKILL,buf);      /* stores "KILL" in buf */
sig2str(9,buf);            /* stores "KILL" in buf */
.fi
.in -2
.sp

.SH SEE ALSO
.sp
.LP
.BR kill (1),
.BR strsignal (3C)
