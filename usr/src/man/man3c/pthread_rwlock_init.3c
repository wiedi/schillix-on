'\" te
.\" Copyright (c) 2008, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright (c) 2001, the Institute of Electrical and Electronics Engineers,
.\" Inc. and The Open Group. All Rights Reserved.
.\" Copyright 1991, 1992, 1994, The X/Open Company Ltd.
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH pthread_rwlock_init 3C "23 mar 2005" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
pthread_rwlock_init, pthread_rwlock_destroy \- initialize or destroy
read-write lock object
.SH SYNOPSIS
.LP
.nf
cc -mt [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. -lpthread [ \fIlibrary\fR.\|.\|. ]
#include <pthread.h>

\fBint\fR \fBpthread_rwlock_init\fR(\fBpthread_rwlock_t *restrict\fR \fIrwlock\fR,
     \fBconst pthread_rwlockattr_t *restrict\fR \fIattr\fR);
.fi

.LP
.nf
\fBint\fR \fBpthread_rwlock_destroy\fR(\fBpthread_rwlock_t *\fI*rwlock\fR);
.fi

.LP
.nf
\fBpthread_rwlock_t\fR \fIrwlock\fR=\fBPTHREAD_RWLOCK_INITIALIZER\fR;
.fi

.SH DESCRIPTION
.sp
.LP
The
.B pthread_rwlock_init()
function initializes the read-write lock
referenced by
.I rwlock
with  the attributes referenced by
.IR attr .
If
.I attr
is NULL, the default  read-write lock attributes are used; the
effect is the same as  passing the address of a default read-write lock
attributes object.  Once initialized, the lock can be used any number of
times without being re-initialized.  Upon successful initialization, the
state of the read-write lock  becomes initialized and unlocked.  Results are
undefined if
.B pthread_rwlock_init()
is called specifying an already
initialized read-write lock.  Results are undefined if a read-write lock is
used without first being initialized.
.sp
.LP
If the
.B pthread_rwlock_init()
function fails,
.I rwlock
is not
initialized and the contents of
.I rwlock
are undefined.
.sp
.LP
The
.B pthread_rwlock_destroy()
function destroys the read-write lock
object referenced by
.I rwlock
and  releases any resources used by the
lock. The effect of subsequent use of the lock is undefined until the lock
is re-initialized by another call to
.BR pthread_rwlock_init() .
An
implementation may cause
.B pthread_rwlock_destroy()
to set the object
referenced by
.I rwlock
to an invalid value.  Results are undefined if
\fBpthread_rwlock_destroy()\fR is called when any thread holds \fIrwlock\fR.
Attempting to destroy an uninitialized  read-write lock results in undefined
behaviour. A destroyed read-write lock object can be re-initialized using
.BR pthread_rwlock_init() ;
the results of otherwise referencing the
read-write lock object after it  has been destroyed are undefined.
.sp
.LP
In cases where default read-write lock attributes are appropriate, the
macro
.B PTHREAD_RWLOCK_INITIALIZER
can be used to initialize read-write
locks that are statically allocated.  The effect is equivalent to dynamic
initialization by a call to
.B pthread_rwlock_init()
with the parameter
\fIattr\fR specified as NULL, except that no error  checks are performed.
.SH RETURN VALUES
.sp
.LP
If successful, the
.B pthread_rwlock_init()
and
\fBpthread_rwlock_destroy()\fR functions return
.BR 0 .
Otherwise, an
error number is returned to indicate the error.
.SH ERRORS
.sp
.LP
The
.B pthread_rwlock_init()
and
.BR pthread_rwlock_destroy()
functions will fail if:
.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The value specified by
.I attr
is invalid.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The value specified by
.I rwlock
is invalid.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR pthread_rwlock_rdlock (3C),
.BR pthread_rwlock_unlock (3C),
.BR pthread_rwlock_wrlock (3C),
.BR pthread_rwlockattr_init (3C),
.BR attributes (5),
.BR standards (5)
