'\" te
.\" Copyright (c) 2008 Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" Copyright 1989 AT&T
.\" Portions Copyright (c) 1992, X/Open Company Limited  All Rights Reserved
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH aio_cancel 3C "5 Feb 2008" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
aio_cancel \- cancel asynchronous I/O request
.SH SYNOPSIS
.LP
.nf
#include <aio.h>

\fBint\fR \fBaio_cancel\fR(\fBint\fR \fIfildes\fR, \fBstruct aiocb *\fIaiocbp\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B aio_cancel()
function attempts to cancel one or more asynchronous
I/O requests currently outstanding against file descriptor
.IR fildes .
The
.I aiocbp
argument points to the asynchronous I/O control block for a
particular request to be canceled. If
.I aiocbp
is
.IR NULL ,
then all
outstanding cancelable asynchronous I/O requests against
.I fildes
are
canceled.
.sp
.LP
Normal asynchronous notification occurs for asynchronous I/O operations
that are successfully canceled. If there are requests that cannot be
canceled, then the normal asynchronous completion process takes place for
those requests when they are completed.
.sp
.LP
For requested operations that are successfully canceled, the associated
error status is set to
.B ECANCELED
and the return status is
\fB\(mi1\fR\&. For requested operations that are not successfully canceled,
the
.I aiocbp
is not modified by
.BR aio_cancel() .
.sp
.LP
If
.I aiocbp
is not
.IR NULL ,
then if
.I fildes
does not have the
same value as the file descriptor with which the asynchronous operation was
initiated, unspecified results occur.
.SH RETURN VALUES
.sp
.LP
The
.B aio_cancel()
function returns the value
.B AIO_CANCELED
to the
calling process if the requested operation(s) were canceled. The value
.B AIO_NOTCANCELED
is returned if at least one of the requested
operation(s) cannot be canceled because it is in progress. In this case, the
state of the other operations, if any, referenced in the call to
.B aio_cancel()
is not indicated by the return value of
.BR aio_cancel() .
The application may determine the state of affairs for
these operations by using \fBaio_error\fR(3C). The value \fBAIO_ALLDONE\fR
is returned if all of the operations have already completed. Otherwise, the
function returns \fB\(mi1\fR and sets
.B errno
to indicate the error.
.SH ERRORS
.sp
.LP
The
.B aio_cancel()
function will fail if:
.sp
.ne 2
.mk
.na
.B EBADF
.ad
.RS 10n
.rt
The
.I fildes
argument is not a valid file descriptor.
.RE

.sp
.ne 2
.mk
.na
.B ENOSYS
.ad
.RS 10n
.rt
The
.B aio_cancel()
function is not supported.
.RE

.SH USAGE
.sp
.LP
The
.B aio_cancel()
function has a transitional interface for 64-bit
file offsets.  See
.BR lf64 (5).
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
\fBATTRIBUTE TYPE\fR\fBATTRIBUTE VALUE\fR
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
_
StandardSee \fBstandards\fR(5).
.TE

.SH SEE ALSO
.sp
.LP
.BR aio.h (3HEAD),
.BR signal.h (3HEAD),
.BR aio_read (3C),
.BR aio_return (3C),
.BR attributes (5),
.BR lf64 (5),
.BR standards (5)
.SH NOTES
.sp
.LP
Solaris 2.6 was the first release to support the Asynchronous Input and
Output option. Prior to this release, this function always returned
\fB\(mi1\fR and set \fBerrno\fR to
.BR ENOSYS .
