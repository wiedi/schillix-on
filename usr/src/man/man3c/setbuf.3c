'\" te
.\" Copyright 1989 AT&T  Copyright (c) 2002, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH setbuf 3C "14 Aug 2002" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
setbuf, setvbuf \- assign buffering to a stream
.SH SYNOPSIS
.LP
.nf
#include <stdio.h>

\fBvoid\fR \fBsetbuf\fR(\fBFILE *\fIstream\fR, \fBchar *\fIbuf\fR);
.fi

.LP
.nf
\fBint\fR \fBsetvbuf\fR(\fBFILE *\fIstream\fR, \fBchar *\fIbuf\fR, \fBint\fR \fItype\fR, \fBsize_t\fR \fIsize\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B setbuf()
function may be used after the stream pointed to by
.I stream
(see
.BR Intro (3))
is opened but before it is read or
written. It causes the array pointed to by
.I buf
to be used instead of
an automatically allocated buffer. If
.I buf
is the null pointer,
input/output will be completely unbuffered.  The constant
.BR BUFSIZ ,
defined in the <\fBstdio.h\fR> header, indicates the size of the array
pointed to by
.IR buf .
.sp
.LP
The
.B setvbuf()
function may be used after a stream is opened but
before it is read or written.  The
.I type
argument determines how
.I stream
will be buffered. Legal values for
.I type
(defined in
<\fBstdio.h\fR>) are:
.sp
.ne 2
.mk
.na
.B _IOFBF
.ad
.RS 10n
.rt
Input/output to be fully buffered.
.RE

.sp
.ne 2
.mk
.na
.B _IOLBF
.ad
.RS 10n
.rt
Output to be line buffered;  the buffer will be flushed when a
.B NEWLINE
is written, the buffer is full, or input is requested.
.RE

.sp
.ne 2
.mk
.na
.B _IONBF
.ad
.RS 10n
.rt
Input/output to be completely unbuffered.
.RE

.sp
.LP
If
.I buf
is not the null pointer, the array it points to will be used
for buffering, instead of an automatically allocated buffer.  The \fIsize\fR
argument specifies the size of the buffer to be used. If input/output is
unbuffered,
.I buf
and
.I size
are ignored.
.sp
.LP
For a further discussion of buffering, see
.BR stdio (3C).
.SH RETURN VALUES
.sp
.LP
If an illegal value for
.I type
is provided,
.B setvbuf()
returns a
non-zero value.   Otherwise, it returns
.BR 0 .
.SH USAGE
.sp
.LP
A common source of error is allocating buffer space as an "automatic"
variable in a code block, and then failing to close the stream in the same
block.
.sp
.LP
When using
.BR setbuf() ,
.I buf
should always be sized using
.BR BUFSIZ .
If the array pointed to by
.I buf
is larger than
.BR BUFSIZ ,
a portion of \fIbuf\fR will not be used.  If \fIbuf\fR is
smaller than
.BR BUFSIZ ,
other memory may be unexpectedly overwritten.
.sp
.LP
Parts of
.B buf
will be used for internal bookkeeping of the stream and,
therefore, \fBbuf\fR will contain less than \fIsize\fR bytes when full. It
is recommended that  \fBstdio\fR(3C) be used to handle buffer allocation
when using
.BR setvbuf() .
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR fopen (3C),
.BR getc (3C),
.BR malloc (3C),
.BR putc (3C),
.BR stdio (3C),
.BR attributes (5),
.BR standards (5)
