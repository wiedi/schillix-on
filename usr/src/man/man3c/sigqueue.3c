'\" te
.\" Copyright (c) 2008, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright 1989 AT&T
.\" Portions Copyright (c) 1992, X/Open Company Limited  All Rights Reserved
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH sigqueue 3C "5 Feb 2008" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
sigqueue \- queue a signal to a process
.SH SYNOPSIS
.LP
.nf
#include <sys/types.h>
#include <signal.h>

\fBint\fR \fBsigqueue\fR(\fBpid_t\fR \fIpid\fR, \fBint\fR \fIsigno\fR, \fBconst union sigval\fR \fIvalue\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B sigqueue()
function causes the signal specified by
.I signo
to
be sent with the value specified by
.I value
to the process specified by
.IR pid .
If
.I signo
is 0 (the null signal), error checking is
performed but no signal is actually sent. The null signal can be used to
check the validity of
.IR pid .
.sp
.LP
The conditions required for a process to have permission to queue a signal
to another process are the same as for the
.BR kill (2)
function.
.sp
.LP
The
.B sigqueue()
function returns immediately. If
.B SA_SIGINFO
is
set for
.I signo
and if the resources were available to queue the signal,
the signal is queued and sent to the receiving process. If \fBSA_SIGINFO\fR
is not set for
.IR signo ,
then
.I signo
is sent at least once to the
receiving process; it is unspecified whether
.I value
will be sent to the
receiving process as a result of this call.
.sp
.LP
If the value of
.I pid
causes
.I signo
to be generated for the
sending process, and if
.I signo
is not blocked for the calling thread
and if no other thread has
.I signo
unblocked or is waiting in a
.BR sigwait (2)
function for
.IR signo ,
either
.I signo
or at least
the pending, unblocked signal will be delivered to the calling thread before
the
.B sigqueue()
function returns. Should any of multiple pending
signals in the range
.B SIGRTMIN
to
.B SIGRTMAX
be selected for
delivery, it will be the lowest numbered one. The selection order between
realtime and non-realtime signals, or between multiple pending non-realtime
signals, is unspecified.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, the specified signal will have been queued, and
the
.B sigqueue()
function returns 
.BR 0 .
Otherwise, the function
returns \fB\(mi1\fR and sets
.B errno
to indicate the error.
.SH ERRORS
.sp
.LP
The
.B sigqueue()
function will fail if:
.sp
.ne 2
.mk
.na
.B EAGAIN
.ad
.RS 11n
.rt
No resources are available to queue the signal. The process has already
queued
.B SIGQUEUE_MAX
signals that are still pending at the receiver(s),
or a system wide resource limit has been exceeded.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 11n
.rt
The value of
.I signo
is an invalid or unsupported signal number.
.RE

.sp
.ne 2
.mk
.na
.B ENOSYS
.ad
.RS 11n
.rt
The
.B sigqueue()
function is not supported by the system.
.RE

.sp
.ne 2
.mk
.na
.B EPERM
.ad
.RS 11n
.rt
The process does not have the appropriate privilege to send the signal to
the receiving process.
.RE

.sp
.ne 2
.mk
.na
.B ESRCH
.ad
.RS 11n
.rt
The process
.I pid
does not exist.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
lw(2.75i) |lw(2.75i)
lw(2.75i) |lw(2.75i)
.
\fBATTRIBUTE TYPE\fR\fBATTRIBUTE VALUE\fR
_
Interface StabilityCommitted
_
MT-LevelAsync-Signal-Safe
_
StandardSee \fBstandards\fR(5).
.TE

.SH SEE ALSO
.sp
.LP
.BR kill (2),
\fBsiginfo.h\fR(3HEAD), \fBsignal.h\fR(3HEAD),
\fBsigwaitinfo\fR(3C),
.BR attributes (5),
.BR standards (5)
