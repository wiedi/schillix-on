'\" te
.\" Copyright (c) 2008, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright (c) 2001, the Institute of Electrical and Electronics Engineers,
.\" Inc. and The Open Group. All Rights Reserved.
.\" Portions Copyright (c) 1995 IEEE.  All Rights Reserved.
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH pthread_setcanceltype 3C "23 Mar 2005" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
pthread_setcanceltype \- set cancellation type of a thread
.SH SYNOPSIS
.LP
.nf
cc -mt [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. -lpthread [ \fIlibrary\fR.\|.\|. ]
#include <pthread.h>

\fBint\fR \fBpthread_setcanceltype\fR(\fBint\fR \fItype\fR, \fBint *\fIoldtype\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B pthread_setcanceltype()
function atomically sets the calling
thread's cancellation type to the specified
.B type
and, if
.I oldtype
is not
.I NULL,
stores the previous cancellation
.B type
in
.IR oldtype .
The
.B type
can be either of the
following:
.sp
.ne 2
.mk
.na
.B PTHREAD_CANCEL_DEFERRED
.ad
.sp .6
.RS 4n
This is the default. When cancellation is enabled (enabled cancellation is
also the default), cancellation occurs when the target thread reaches a
cancellation point and a cancel is pending. When cancellation is disabled,
all cancellation requests to the target thread are held pending.
.RE

.sp
.ne 2
.mk
.na
.B PTHREAD_CANCEL_ASYNCHRONOUS
.ad
.sp .6
.RS 4n
When cancellation is enabled, receipt of a
.BR pthread_cancel (3C)
call
causes immediate cancellation. When cancellation is disabled, all
cancellation requests to the target thread are held pending; as soon as
cancellation is re-enabled, pending cancellations are executed
immediately.
.RE

.sp
.LP
See
.BR cancellation (5)
for the definition of a cancellation point and a
discussion of cancellation concepts. See
.BR pthread_setcancelstate (3C)
for explanations of enabling and disabling cancellation.
.sp
.LP
The
.B pthread_setcanceltype()
function is a cancellation point if
.B type
is called with
.B PTHREAD_CANCEL_ASYNCHRONOUS
and the
cancellation state is
.BR PTHREAD_CANCEL_ENABLE.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, the
.B pthread_setcanceltype()
function
returns
.BR 0 .
Otherwise, an error number is returned to indicate the
error.
.SH ERRORS
.sp
.LP
The
.B pthread_setcanceltype()
function will fail if:
.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 11n
.rt
The specified
.B type
is not
.B PTHREAD_CANCEL_DEFERRED
or
.B PTHREAD_CANCEL_ASYNCHRONOUS.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR pthread_cancel (3C),
.BR pthread_cleanup_pop (3C),
.BR pthread_cleanup_push (3C),
.BR pthread_exit (3C),
.BR pthread_join (3C),
.BR pthread_setcancelstate (3C),
.BR pthread_testcancel (3C),
.BR setjmp (3C),
.BR attributes (5),
.BR cancellation (5),
.BR condition (5),
.BR standards (5)
