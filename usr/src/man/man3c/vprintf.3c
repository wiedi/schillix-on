'\" te
.\" Copyright (c) 2009, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright 1989 AT&T
.\" Portions Copyright (c) 2001, the Institute of Electrical and Electronics Engineers, Inc. and The Open Group. All Rights Reserved.
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH vprintf 3C "7 Jan 2009" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
vprintf, vfprintf, vsprintf, vsnprintf, vasprintf \- print formatted output of
a variable argument list
.SH SYNOPSIS
.LP
.nf
#include <stdio.h>
#include <stdarg.h>

\fBint\fR \fBvprintf\fR(\fBconst char *\fIformat\fR, \fBva_list\fR \fIap\fR);
.fi

.LP
.nf
\fBint\fR \fBvfprintf\fR(\fBFILE *\fIstream\fR, \fBconst char *\fIformat\fR, \fBva_list\fR \fIap\fR);
.fi

.LP
.nf
\fBint\fR \fBvsprintf\fR(\fBchar *\fIs\fR, \fBconst char *\fIformat\fR, \fBva_list\fR \fIap\fR);
.fi

.LP
.nf
\fBint\fR \fBvsnprintf\fR(\fBchar *\fIs\fR, \fBsize_t\fR \fIn\fR, \fBconst char *\fIformat\fR, \fBva_list\fR \fIap\fR);
.fi

.LP
.nf
\fBint\fR \fBvasprintf\fR(\fBchar **\fIret\fR, \fBconst char *\fIformat\fR, \fBva_list\fR \fIap\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.BR vprintf() ,
\fBvfprintf()\fR, \fBvsprintf()\fR,
.BR vsnprintf() ,
and
\fBvasprintf()\fR functions are the same as
.BR printf() ,
\fBfprintf()\fR,
\fBsprintf()\fR,
.BR snprintf() ,
and
.BR asprintf() ,
respectively, except
that instead of being called with a variable number of arguments, they are
called with an argument list as defined in the
.B <stdarg.h>
header. See
\fBprintf\fR(3C).
.sp
.LP
The
.B <stdarg.h>
header defines the type
.B va_list
and a set of macros
for advancing through a list of arguments whose number and types may vary. The
argument
.I ap
to the
.B vprint
family of functions is of type
.BR va_list .
This argument is used with the <\fBstdarg.h\fR> header file
macros
.BR va_start() ,
.BR va_arg() ,
and
.B va_end()
(see
.BR stdarg (3EXT)).
The
.B EXAMPLES
section below demonstrates the use of
\fBva_start()\fR and \fBva_end()\fR with \fBvprintf()\fR.
.sp
.LP
The macro
.B va_alist()
is used as the parameter list in a function
definition, as in the function called
.B error()
in the example below. The
macro \fBva_start(\fIap, name\fB),\fR where \fIap\fR is of type
\fBva_list\fR and \fIname\fR is the rightmost parameter (just before \|.\|.\|.),
must be called before any attempt to traverse and access unnamed arguments is
made. The  \fBva_end(\fIap\fB)\fR macro must be invoked when all desired
arguments have been accessed. The argument list in
.I ap
can be traversed
again if
.B va_start()
is called again after
.BR va_end() .
In the example
below, the
.B error()
arguments (\fIarg1\fR,
.IR arg2 ,
\&.\|.\|.) are
passed to \fBvfprintf()\fR in the argument \fIap\fR.
.SH RETURN VALUES
.sp
.LP
Refer to \fBprintf\fR(3C).
.SH ERRORS
.sp
.LP
The \fBvprintf()\fR and \fBvfprintf()\fR functions will fail if either the
\fIstream\fR is unbuffered or the \fIstream\fR's buffer needed to be flushed
and:
.sp
.ne 2
.mk
.na
.B EFBIG
.ad
.RS 9n
.rt
The file is a regular file and an attempt was made to write at or beyond the
offset maximum.
.RE

.SH EXAMPLES
.LP
\fBExample 1\fR Using \fBvprintf()\fR to write an error routine.
.sp
.LP
The following demonstrates how \fBvfprintf()\fR could be used to write an error
routine:

.sp
.in +2
.nf
#include <stdio.h>
#include <stdarg.h>
\&. . .
/*
 *   error should be called like
 *         error(function_name, format, arg1, \&.\|.\|.);
 */
void error(char *function_name, char *format, \&.\|.\|.)
{
        va_list ap;
        va_start(ap, format);
        /* print out name of function causing error */
        (void) fprintf(stderr, "ERR in %s: ", function_name);
        /* print out remainder of message */
        (void) vfprintf(stderr, format, ap);
        va_end(ap);
        (void) abort();
}
.fi
.in -2

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelSee below.
_
StandardSee below.
.TE

.sp
.LP
All of these functions can be used safely in multithreaded applications, as
long as
.BR setlocale "(3C) is not being called to change the locale."
.sp
.LP
See
.BR standards (5)
for the standards conformance of \fBvprintf()\fR,
\fBvfprintf()\fR,
.BR vsprintf() ,
and
.BR vsnprintf() .
The \fBvasprintf()\fR
function is modeled on the one that appears in the FreeBSD, NetBSD, and GNU C
libraries.
.SH SEE ALSO
.sp
.LP
\fBprintf\fR(3C),
.BR attributes (5),
.BR stdarg (3EXT),
.BR attributes (5),
.BR standards (5)
.SH NOTES
.sp
.LP
The \fBvsnprintf()\fR return value when
.I n
= 0 was changed in the Solaris
10 release. The change was based on the SUSv3 specification. The previous
behavior was based on the initial SUSv2 specification, where \fBvsnprintf()\fR
when
.I n
= 0 returns an unspecified value less than 1.
