'\" te
.\" Copyright 1989 AT&T.  Copyright (c) 2004, Sun Microsystems, Inc.  All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mlockall 3C "22 Mar 2004" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
mlockall, munlockall \- lock or unlock address space
.SH SYNOPSIS
.LP
.nf
#include <sys/mman.h>

\fBint\fR \fBmlockall\fR(\fBint\fR \fIflags\fR);
.fi

.LP
.nf
\fBint\fR \fBmunlockall\fR(\fBvoid\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B mlockall()
function locks in memory all pages mapped by an
address space.
.sp
.LP
The value of \fIflags\fR determines whether the pages to be locked are
those currently mapped by the address space, those that will be mapped in
the future, or both:
.sp
.in +2
.nf
       \fBMCL_CURRENT\fR  Lock current mappings
       \fBMCL_FUTURE\fR   Lock future mappings
.fi
.in -2

.sp
.LP
If
.B MCL_FUTURE
is specified for
.BR mlockall() ,
mappings are locked
as they are added to the address space (or replace existing mappings),
provided sufficient memory is available. Locking in this manner is not
persistent across the
.B exec
family of functions (see
.BR exec (2)).
.sp
.LP
Mappings locked using
.B mlockall()
with any option may be explicitly
unlocked with a
.B munlock()
call (see \fBmlock\fR(3C)).
.sp
.LP
The
.B munlockall()
function removes address space locks and locks on
mappings in the address space.
.sp
.LP
All conditions and constraints on the use of locked memory that apply to
.BR mlock (3C)
also apply to
.BR mlockall() .
.sp
.LP
Locks established with
.B mlockall()
are not inherited by a child
process after a
.BR fork (2)
call, and are not nested.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, the
.B mlockall()
and
.BR munlockall()
functions return
.BR 0 .
Otherwise, they return  \fB\(mi1\fR and set
\fBerrno\fR to indicate the error.
.SH ERRORS
.sp
.LP
The
.B mlockall()
and
.B munlockall()
functions will fail if:
.sp
.ne 2
.mk
.na
.B EAGAIN
.ad
.RS 10n
.rt
Some or all of the memory in the address space could not be locked due to
sufficient resources. This error condition applies to \fBmlockall()\fR
only.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The \fIflags\fR argument contains values other than
.B MCL_CURRENT
and
.BR MCL_FUTURE .
.RE

.sp
.ne 2
.mk
.na
.B EPERM
.ad
.RS 10n
.rt
The {\fBPRIV_PROC_LOCK_MEMORY\fR} privilege is not asserted in the
effective set of the calling process.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR exec (2),
.BR fork (2),
.BR memcntl (2),
.BR mmap (2),
.BR plock (3C),
.BR mlock (3C),
\fBsysconf\fR(3C), \fBattributes\fR(5),
.BR standards (5)
