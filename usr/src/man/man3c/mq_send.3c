'\" te
.\" Copyright (c) 2008, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" Copyright 1989 AT&T
.\" Portions Copyright (c) 1992, X/Open Company Limited.  All Rights Reserved.
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mq_send 3C "5 Feb 2008" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
mq_send, mq_timedsend, mq_reltimedsend_np \- send a message to a message
queue
.SH SYNOPSIS
.LP
.nf
#include <mqueue.h>

\fBint\fR \fBmq_send\fR(\fBmqd_t\fR \fImqdes\fR, \fBconst char *\fImsg_ptr\fR, \fBsize_t\fR \fImsg_len\fR,
     \fBunsigned\fR \fImsg_prio\fR);
.fi

.LP
.nf
#include <mqueue.h>
#include <time.h>

\fBint\fR \fBmq_timedsend\fR(\fBmqd_t\fR \fImqdes\fR, \fBconst char *\fImsg_ptr\fR,
     \fBsize_t\fR \fImsg_len\fR, \fBunsigned\fR \fImsg_prio\fR,
     \fBconst struct timespec *restrict\fR \fIabs_timeout\fR);
.fi

.LP
.nf
\fBint\fR \fBmq_reltimedsend_np\fR(\fBmqd_t\fR \fImqdes\fR, \fBconst char *\fImsg_ptr\fR,
     \fBsize_t\fR \fImsg_len\fR, \fBunsigned\fR \fImsg_prio\fR,
     \fBconst struct timespec *restrict\fR \fIrel_timeout\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B mq_send()
function adds the message pointed to by the argument
.I msg_ptr
to the message queue specified by
.IR mqdes .
The
.I msg_len
argument specifies the length of the message in bytes pointed
to by
.IR msg_ptr .
The value of
.I msg_len
is less than or equal to the
.I mq_msgsize
attribute of the message queue, or
.B mq_send()
fails.
.sp
.LP
If the specified message queue is not full,
.B mq_send()
behaves as if
the message is inserted into the message queue at the position indicated by
the
.I msg_prio
argument. A message with a larger numeric value of
.I msg_prio
is inserted before messages with lower values of
.IR msg_prio .
A message will be inserted after other messages in the
queue, if any, with equal
.IR msg_prio .
The value of
.I msg_prio
must
be greater than zero and less than or equal to
.BR MQ_PRIO_MAX .
.sp
.LP
If the specified message queue is full and
.B O_NONBLOCK
is not set in
the message queue description associated with
.I mqdes
(see
.BR mq_open (3C)
and
.BR mq_setattr (3C)),
.B mq_send()
blocks until
space becomes available to enqueue the message, or until
.B mq_send()
is
interrupted by a signal. If more than one thread is waiting to send when
space becomes available in the message queue, then the thread of the highest
priority which has been waiting the longest is unblocked to send its
message. Otherwise, it is unspecified which waiting thread is unblocked. If
the specified message queue is full and
.B O_NONBLOCK
is set in the
message queue description associated with
.IR mqdes ,
the message is not
queued and
.B mq_send()
returns an error.
.sp
.LP
The
.B mq_timedsend()
function adds a message to the message queue
specified by
.I mqdes
in the manner defined for the
.BR mq_send()
function. However, if the specified message queue is full and
.B O_NONBLOCK
is not set in the message queue description associated with
.IR mqdes ,
the wait for sufficient room in the queue is terminated when
the specified timeout expires. If
.B O_NONBLOCK
is set in the message
queue description, this function is equivalent to
.BR mq_send() .
.sp
.LP
The
.B mq_reltimedsend_np()
function is identical to the
.B mq_timedsend()
function, except that the timeout is specified as a
relative time interval.
.sp
.LP
For
.BR mq_timedsend() ,
the timeout expires when the absolute time
specified by
.I abs_timeout
passes, as measured by the
.B CLOCK_REALTIME
clock (that is, when the value of that clock equals or
exceeds
.IR abs_timeout ),
or if the absolute time specified by
.I abs_timeout
has already been passed at the time of the call.
.sp
.LP
For
.BR mq_reltimedsend_np() ,
the timeout expires when the time interval
specified by
.I rel_timeout
passes, as measured by the
.B CLOCK_REALTIME
clock, or if the time interval specified by
.I rel_timeout
is negative at the time of the call.
.sp
.LP
The resolution of the timeout is the resolution of the
.BR CLOCK_REALTIME
clock. The
.B timespec
argument is defined in the <\fBtime.h\fR>
header.
.sp
.LP
Under no circumstance does the operation fail with a timeout if there is
sufficient room in the queue to add the message immediately. The validity of
the timeout parameter need not be checked when there is sufficient room in
the queue.
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.BR mq_send() ,
.BR mq_timedsend() ,
and
.B mq_reltimedsend_np()
return
.BR 0 .
Otherwise, no message is
enqueued, the functions return \fB\(mi1\fR, and
.B errno
is set to
indicate the error.
.SH ERRORS
.sp
.LP
The
.BR mq_send() ,
.BR mq_timedsend() ,
and
.BR mq_reltimedsend_np()
functions will fail if:
.sp
.ne 2
.mk
.na
.B EAGAIN
.ad
.RS 13n
.rt
The
.B O_NONBLOCK
flag is set in the message queue description
associated with
.IR mqdes ,
and the specified message queue is full.
.RE

.sp
.ne 2
.mk
.na
.B EBADF
.ad
.RS 13n
.rt
The
.I mqdes
argument is not a valid message queue descriptor open for
writing.
.RE

.sp
.ne 2
.mk
.na
.B EINTR
.ad
.RS 13n
.rt
A signal interrupted the function call.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 13n
.rt
The value of
.I msg_prio
was outside the valid range.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 13n
.rt
The process or thread would have blocked, and the timeout parameter
specified a nanoseconds field value less than zero or greater than or equal
to 1,000 million.
.RE

.sp
.ne 2
.mk
.na
.B EMSGSIZE
.ad
.RS 13n
.rt
The specified message length,
.IR msg_len ,
exceeds the message size
attribute of the message queue.
.RE

.sp
.ne 2
.mk
.na
.B ETIMEDOUT
.ad
.RS 13n
.rt
The
.B O_NONBLOCK
flag was not set when the message queue was opened,
but the timeout expired before the message could be added to the queue.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
lw(2.75i) |lw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
_
StandardSee below.
.TE

.sp
.LP
For
.B mq_send()
and
.BR mq_timedsend() ,
see
.BR standards (5).
.SH SEE ALSO
.sp
.LP
.BR sysconf (3C),
.BR mqueue.h (3HEAD),
.BR mq_open (3C),
.BR mq_receive (3C),
.BR mq_setattr (3C),
.BR attributes (5),
.BR standards (5)
