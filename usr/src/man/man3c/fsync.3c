'\" te
.\" Copyright (c) 2008 Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright 1989 AT&T
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH fsync 3C "5 Feb 2008" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
fsync \- synchronize changes to a file
.SH SYNOPSIS
.LP
.nf
#include <unistd.h>

\fBint\fR \fBfsync\fR(\fBint\fR \fIfildes\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B fsync()
function moves all modified data and attributes of the
file descriptor \fIfildes\fR to a storage device. When \fBfsync()\fR
returns, all in-memory modified copies of buffers associated with
.I fildes
have been written to the physical medium. The \fBfsync()\fR
function is different from
.BR sync() ,
which schedules disk I/O for all
files but returns before the I/O completes. The
.B fsync()
function
forces all outstanding data operations to synchronized file integrity
completion (see \fBfcntl.h\fR(3HEAD) definition of
.BR O_SYNC .)
.sp
.LP
The
.B fsync()
function forces all currently queued I/O operations
associated with the file indicated by the file descriptor
.I fildes
to
the synchronized I/O completion state. All I/O operations are completed as
defined for synchronized I/O file integrity completion.
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B 0
is returned. Otherwise,
.B \(mi1
is
returned and
.B errno
is set to indicate the error. If the \fBfsync()\fR
function fails, outstanding I/O operations are not guaranteed to have been
completed.
.SH ERRORS
.sp
.LP
The
.B fsync()
function will fail if:
.sp
.ne 2
.mk
.na
.B EBADF
.ad
.RS 13n
.rt
The
.I fildes
argument is not a valid file descriptor.
.RE

.sp
.ne 2
.mk
.na
.B EINTR
.ad
.RS 13n
.rt
A signal was caught during execution of the
.B fsync()
function.
.RE

.sp
.ne 2
.mk
.na
.B EIO
.ad
.RS 13n
.rt
An I/O error occurred while reading from or writing to the file system.
.RE

.sp
.ne 2
.mk
.na
.B ENOSPC
.ad
.RS 13n
.rt
There was no free space remaining on the device containing the file.
.RE

.sp
.ne 2
.mk
.na
.B ETIMEDOUT
.ad
.RS 13n
.rt
Remote connection timed out. This occurs when the file is on an  \fBNFS\fR
file system mounted with the  \fIsoft\fR option. See  \fBmount_nfs\fR(1M).
.RE

.sp
.LP
In the event that any of the queued I/O operations fail, \fBfsync()\fR
returns the error conditions defined for
.BR read (2)
and
.BR write (2).
.SH USAGE
.sp
.LP
The
.B fsync()
function should be used by applications that require that
a file be in a known state. For example, an application that contains a
simple transaction facility might use
.B fsync()
to ensure that all
changes to a file or files caused by a given transaction were recorded on a
storage medium.
.sp
.LP
The manner in which the data reach the physical medium depends on both
implementation and hardware.  The
.B fsync()
function returns when
notified by the device driver that the write has taken place.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelAsync-Signal-Safe
_
StandardSee \fBstandards\fR(5).
.TE

.SH SEE ALSO
.sp
.LP
.BR mount_nfs (1M),
.BR read (2),
.BR sync (2),
.BR write (2),
.BR fcntl.h (3HEAD),
.BR fdatasync (3C),
.BR attributes (5),
.BR standards (5)
