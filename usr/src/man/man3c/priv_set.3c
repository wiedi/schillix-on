'\" te
.\" Copyright (c) 2003, Sun Microsystems, Inc. All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH priv_set 3C "25 Sep 2003" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
priv_set, priv_ineffect \- change privilege sets and check whether
privileges are set
.SH SYNOPSIS
.LP
.nf
#include <priv.h>

\fBint\fR \fBpriv_set\fR(\fBpriv_op_t\fR \fIop\fR, \fBpriv_ptype_t\fR  \fIwhich\fR.\|.\|.);
.fi

.LP
.nf
\fBboolean_t\fR \fBpriv_ineffect\fR(\fBconst char *\fIpriv\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B priv_set()
function is a convenient wrapper for the
.BR setppriv (2)
function. It takes three or more arguments. The operation
argument,
.IR op ,
can be one of
.BR PRIV_OFF ,
\fBPRIV_ON\fR or
.BR PRIV_SET .
The
.I which
argument is the name of the privilege set to
change. The third argument is a list of zero or more privilege names
terminated with a null pointer. If
.I which
is the special pseudo set
.BR PRIV_ALLSETS ,
the operation should be applied to all privilege sets.
.sp
.LP
The specified privileges are converted to a binary privilege set and
\fBsetppriv()\fR is called with the same \fIop\fR and \fIwhich\fR arguments.
When called with
.B PRIV_ALLSETS
as the value for the
.IR which
argument,
.B setppriv()
is called for each set in turn, aborting on the
first failed call.
.sp
.LP
The \fBpriv_ineffect()\fR function is a conventient wrapper for the
.BR getppriv (2)
function. The
.I priv
argument specifies the name of
the privilege for which this function checks its presence in the effective
set.
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B priv_set()
return 0. Otherwise, -1  is
returned and
.B errno
is set to indicate the error.
.sp
.LP
If
.I priv
is a valid privilege that is a member of the effective set,
\fBpriv_ineffect()\fR returns
.BR B_TRUE .
Otherwise, it returns
\fBB_FALSE\fR and sets \fBerrno\fR to incicate the error.
.SH ERRORS
.sp
.LP
The
.B priv_set()
function will fail if:
.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The value of
.I op
or
.I which
is out of range.
.RE

.sp
.ne 2
.mk
.na
.B ENOMEM
.ad
.RS 10n
.rt
Insufficient memory was allocated.
.RE

.sp
.ne 2
.mk
.na
.B EPERM
.ad
.RS 10n
.rt
The application attempted to add privileges to
.B PRIV_LIMIT
or
.BR PRIV_PERMITTED ,
or the application attempted to add privileges to
\fBPRIV_INHERITABLE\fR or \fBPRIV_EFFECTIVE\fR that were not in
.BR PRIV_PERMITTED .
.RE

.sp
.LP
The \fBpriv_ineffect()\fR function will fail if:
.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The privilege specified by
.I priv
is invalid.
.RE

.sp
.ne 2
.mk
.na
.B ENOMEM
.ad
.RS 10n
.rt
Insufficient memory was allocated.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityEvolving
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR setppriv (2),
.BR priv_str_to_set (3C),
.BR attributes (5),
.BR privileges (5)
