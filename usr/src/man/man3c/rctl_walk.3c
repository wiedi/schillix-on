'\" te
.\" Copyright (c) 2001, Sun Microsystems, Inc. All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH rctl_walk 3C " 2001" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
rctl_walk \- visit registered rctls on current system
.SH SYNOPSIS
.LP
.nf
#include <rctl.h>

\fBint\fR \fBrctl_walk\fR(\fBint (*\fIcallback\fR)(const char *\fIrctlname\fR, void *\fIwalk_data\fR),
     \fBvoid *\fIinit_data\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B rctl_walk()
function provides a mechanism for the application
author to examine all active resource controls (rctls) on the current
system. The
.I callback
function provided by the application is given the
name of an rctl at each invocation and can use the
.I walk_data
to record
its own state. The callback function should return non-zero if it encounters
an error condition or attempts to terminate the walk prematurely; otherwise
the callback function should return 0.
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B rctl_walk()
returns 0. It returns \(mi1
if the
.I callback
function returned a non-zero value or if the walk
encountered an error, in which case
.B errno
is set to indicate the
error.
.SH ERRORS
.sp
.LP
The
.B rctl_walk()
function will fail if:
.sp
.ne 2
.mk
.na
.B ENOMEM
.ad
.RS 10n
.rt
There is insufficient memory available to set up the initial data for the
walk.
.RE

.sp
.LP
Other returned error values are presumably caused by the
.IR callback
function.
.SH EXAMPLES
.LP
.B Example 1
Count the number of rctls available on the system.
.sp
.LP
The following example counts the number of resource controls on the
system.

.sp
.in +2
.nf
#include <sys/types.h>
#include <rctl.h>
#include <stdio.h>

typedef struct wdata {
     uint_t count;
} wdata_t;

wdata_t total_count;

int
simple_callback(const char *name, void *pvt)
{
     wdata_t *w = (wdata_t *)pvt;
     w->count++;
     return (0);
}

\&...

total_count.count = 0;
errno = 0;
if (rctl_walk(simple_callback, &total_count)) == 0)
     (void) printf("count = %u\en", total_count.count);
.fi
.in -2

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityEvolving
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR setrctl (2),
.BR attributes (5)
