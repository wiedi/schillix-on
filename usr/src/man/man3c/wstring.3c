'\" te
.\" Copyright (c) 1996, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH wstring 3C "29 Dec 1996" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
wstring, wscasecmp, wsncasecmp, wsdup, wscol \- Process Code string
operations
.SH SYNOPSIS
.LP
.nf
#include <widec.h>

\fBint\fR \fBwscasecmp\fR(\fBconst wchar_t *\fIs1\fR, \fBconst wchar_t *\fIs2\fR);
.fi

.LP
.nf
\fBint\fR \fBwsncasecmp\fR(\fBconst wchar_t *\fIs1\fR, \fBconst wchar_t *\fIs2\fR, \fBint\fR \fIn\fR);
.fi

.LP
.nf
\fBwchar_t *\fBwsdup\fR(\fBconst wchar_t *\fIs\fR);
.fi

.LP
.nf
\fBint\fR \fBwscol\fR(\fBconst wchar_t *\fIs\fR);
.fi

.SH DESCRIPTION
.sp
.LP
These functions operate on Process Code strings terminated by
.BR wchar_t
null characters.  During appending or copying, these routines do not check
for an overflow condition of the receiving string. In the following,
.IR s ,
.IR s1 ,
and
.I s2
point to Process Code strings terminated by
a
.B wchar_t
null.
.SS "wscasecmp(\|), wsncasecmp(\|)"
.sp
.LP
The
.B wscasecmp()
function compares its arguments, ignoring case, and
returns an integer greater than, equal to, or less than 0, depending upon
whether
.I s1
is lexicographically greater than, equal to, or less than
.IR s2 .
It makes the same comparison but compares at most
.I n
Process
Code characters. The four Extended Unix Code (EUC) codesets are ordered from
lowest to highest as 0, 2, 3, 1 when characters from different codesets are
compared.
.SS "wsdup(\|)"
.sp
.LP
The
.B wsdup()
function returns a pointer to a new Process Code string,
which is a duplicate of the string pointed to by
.IR s .
The space for the
new string is obtained using
.BR malloc (3C).
If the new string cannot be
created, a null pointer is returned.
.SS "wscol(\|)"
.sp
.LP
The
.B wscol()
function returns the screen display width (in columns) of
the Process Code string
.IR s .
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
lw(2.75i) lw(2.75i)
lw(2.75i) lw(2.75i)
.
\fBATTRIBUTE TYPE\fR\fBATTRIBUTE VALUE\fR
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR malloc (3C),
.BR string (3C),
.BR wcstring (3C),
.BR attributes (5)
