'\" te
.\" Copyright (c) 2001, the Institute of Electrical and Electronics Engineers,
.\" Inc. and The Open Group. All Rights Reserved.
.\" Portions Copyright (c) 2008, Sun Microsystems, Inc. All Rights Reserved.
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH clock_nanosleep 3C "5 Feb 2008" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
clock_nanosleep \- high resolution sleep with specifiable clock
.SH SYNOPSIS
.LP
.nf
#include <time.h>

\fBint\fR \fBclock_nanosleep\fR(\fBclockid_t\fR \fIclock_id\fR, \fBint\fR \fIflags\fR,
     \fBconst struct timespec *\fIrqtp\fR, \fBstruct timespec *\fIrmtp\fR);
.fi

.SH DESCRIPTION
.sp
.LP
If the flag
.B TIMER_ABSTIME
is not set in the
.I flags
argument, the
.B clock_nanosleep()
function causes the current thread to be suspended
from execution until either the time interval specified by the
.IR rqtp
argument has elapsed, or a signal is delivered to the calling thread and its
action is to invoke a signal-catching function, or the process is
terminated. The clock used to measure the time is the clock specified by
.IR clock_id .
.sp
.LP
If the flag
.B TIMER_ABSTIME
is set in the
.I flags
argument, the
.B clock_nanosleep()
function causes the current thread to be suspended
from execution until either the time value of the clock specified by
.I clock_id
reaches the absolute time specified by the
.IR rqtp
argument, or a signal is delivered to the calling thread and its action is
to invoke a signal-catching function, or the process is terminated. If, at
the time of the call, the time value specified by
.I rqtp
is less than or
equal to the time value of the specified clock, then \fBclock_nanosleep()\fR
returns immediately and the calling process is not suspended.
.sp
.LP
The suspension time caused by this function can be longer than requested
because the argument value is rounded up to an integer multiple of the sleep
resolution, or because of the scheduling of other activity by the system.
But, except for the case of being interrupted by a signal, the suspension
time for the relative
.B clock_nanosleep()
function (that is, with the
.B TIMER_ABSTIME
flag not set) will not be less than the time interval
specified by rqtp, as measured by the corresponding clock. The suspension
for the absolute
.B clock_nanosleep()
function (that is, with the
.B TIMER_ABSTIME
flag set) will be in effect at least until the value of
the corresponding clock reaches the absolute time specified by
.IR rqtp ,
except for the case of being interrupted by a signal.
.sp
.LP
The use of the
.B clock_nanosleep()
function has no effect on the action
or blockage of any signal.
.sp
.LP
The
.B clock_nanosleep()
function fails if the
.I clock_id
argument
refers to the CPU-time clock of the calling thread. It is unspecified if
.I clock_id
values of other CPU-time clocks are allowed.
.SH RETURN VALUES
.sp
.LP
If the
.B clock_nanosleep()
function returns because the requested time
has elapsed, its return value is 0.
.sp
.LP
If the
.B clock_nanosleep()
function returns because it has been
interrupted by a signal, it returns the corresponding error value. For the
relative
.B clock_nanosleep()
function, if the
.I rmtp
argument is
non-null, the timespec structure referenced by it is updated to contain the
amount of time remaining in the interval (the requested time minus the time
actually slept). If the
.I rmtp
argument is NULL, the remaining time is
not returned. The absolute
.B clock_nanosleep()
function has no effect on
the structure referenced by
.IR rmtp .
.sp
.LP
If
.B clock_nanosleep()
fails, it shall return the corresponding error
value.
.SH ERRORS
.sp
.LP
The
.B clock_nanosleep()
function will fail if:
.sp
.ne 2
.mk
.na
.B EINTR
.ad
.RS 11n
.rt
The
.B clock_nanosleep()
function was interrupted by a signal.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 11n
.rt
The
.I rqtp
argument specified a nanosecond value less than zero or
greater than or equal to 1,000 million; or the TIMER_ABSTIME flag was
specified in
.I flags
and the
.I rqtp
argument is outside the range
for the clock specified by
.IR clock_id ;
or the
.I clock_id
argument
does not specify a known clock, or specifies the CPU-time clock of the
calling thread.
.RE

.sp
.ne 2
.mk
.na
.B ENOTSUP
.ad
.RS 11n
.rt
The
.I clock_id
argument specifies a clock for which
.B clock_nanosleep()
is not supported, such as a CPU-time clock.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
_
StandardSee \fBstandards\fR(5).
.TE

.SH SEE ALSO
.sp
.LP
.BR clock_getres (3C),
.BR nanosleep (3C),
.BR pthread_cond_timedwait (3C),
.BR sleep (3C),
.BR attributes (5),
.BR standards (5)
