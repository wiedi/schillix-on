'\" te
.\" Copyright 1989 AT&T  Copyright (c) 1998, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH isaexec 3C "20 Mar 1998" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
isaexec \- invoke isa-specific executable
.SH SYNOPSIS
.LP
.nf
#include <unistd.h>

\fBint\fR \fBisaexec\fR(\fBconst char *\fIpath\fR, \fBchar *const\fR \fIargv[]\fR, \fBchar *const\fR \fIenvp[]\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B isaexec()
function takes the path specified as
.I path
and
breaks it into directory and file name components. It enquires from the
running system the list of supported instruction set architectures; see
.BR isalist (5).
The function traverses the list for an executable file in
named subdirectories of the original directory.  When such a file is
located, \fBexecve()\fR is invoked with \fIargv\fB[\|]\fR and
\fIenvp\fB[\|]\fR. See \fBexec\fR(2).
.SH RETURN VALUES
.sp
.LP
If no file is located,
.B isaexec()
returns
.BR ENOENT .
Other return
values are the same as for
.BR execve() .
.SH EXAMPLES
.LP
.B Example 1
Example of
.B isaexec()
function.
.sp
.LP
On a system whose
.B isalist
is

.sp
.in +2
.nf
sparcv7 sparc
.fi
.in -2

.sp
.LP
the program

.sp
.in +2
.nf
int
main(int argc, char *argv[], char *envp[])
{
        return (isaexec("/bin/thing", argv, envp));
}
.fi
.in -2

.sp
.LP
will look first for an executable file named
.BR /bin/sparcv7/thing ,
then
for an executable file named
.BR /bin/sparc/thing .
It will invoke
.B execve()
on the first executable file it finds named
.BR thing .

.sp
.LP
On that same system, a program called
.B /u/bin/tofu
can cause either
.B /u/bin/sparcv7/tofu
or
.B /u/bin/sparc/tofu
to be invoked using the
following code:

.sp
.in +2
.nf
int
main(int argc, char *argv[], char *envp[])
{
              return (isaexec(getexecname(), argv, envp));
}
.fi
.in -2

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelSafe
_
Interface StabilityStable
.TE

.SH SEE ALSO
.sp
.LP
.BR exec (2),
.BR getexecname (3C),
.BR attributes (5),
.BR isalist (5)
