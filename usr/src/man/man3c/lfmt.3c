'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" Copyright 1989 AT&T
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH lfmt 3C "29 Dec 1996" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
lfmt \- display error message in standard format and pass to logging and
monitoring services
.SH SYNOPSIS
.LP
.nf
#include <pfmt.h>

\fBint\fR \fBlfmt\fR(\fBFILE *\fIstream\fR, \fBlong\fR \fIflags\fR, \fBchar *\fIformat\fR, \fB\&.\|.\|. /*\fR \fIarg\fR*/);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B lfmt()
function retrieves a format string from a locale-specific
message database (unless
.B MM_NOGET
is specified) and uses it for
.BR printf (3C)
style formatting of
.IR args .
The output is displayed on
.IR stream .
If
.I stream
is
.I NULL
no output is displayed.
.sp
.LP
The
.B lfmt()
function encapsulates the output in the standard error
message format (unless
.B MM_NOSTD
is specified, in which case the
output is like that of
.BR printf() .
It forwards its output to the logging
and monitoring facility, even if
.I stream
is
.IR NULL .
Optionally,
.B lfmt()
displays the output on the console with a date and time
stamp.
.sp
.LP
If the
.B printf()
format string is to be retrieved from a message
database, the
.B format
argument must have the following structure:
.sp
.LP
\fI<catalog>\fB:\fI<msgnum>\fB:\fI<defmsg>\fR\&.
.sp
.LP
If
.B MM_NOGET
is specified,  only the
.I <defmsg>
field must be
specified.
.sp
.LP
The
.I <catalog>
field indicates the message database that contains the
localized version of the format string. This field is limited to 14
characters selected from a set of all characters values, excluding the null
character (\fB\e0\fR) and the ASCII codes for slash (\fB/\fR) and colon
.RB ( : ).
.sp
.LP
The
.I <msgnum>
field is a positive number that indicates the index of
the string into the message database.
.sp
.LP
If the catalog does not exist in the locale (specified by the last call to
.BR setlocale (3C)
using the
.B LC_ALL
or
.BR LC_MESSAGES
categories), or if the message number is out of bound,
.B lfmt()
will
attempt to retrieve the message from the C locale. If this second retrieval
fails, \fBlfmt()\fR uses the
.I <defmsg>
field of the \fBformat\fR
argument.
.sp
.LP
If
.I <catalog>
is omitted,
.B lfmt()
will attempt to retrieve the
string from the default catalog specified by the last call to
.BR setcat (3C).
In this case, the
.B format
argument has the following
structure:
.sp
.LP
\fB:\fI<msgnum>\fB:\fI<defmsg>\fR\&.
.sp
.LP
The
.B lfmt()
function will output the message
.sp
.LP
\fBMessage not found!!\en\fR
.sp
.LP
as the format string if
.I <catalog>
is not a valid catalog name, if no
catalog is specified (either explicitly or with
.BR setcat() ),
if
.I <msgnum>
is not a valid number, or if no message could be retrieved
from the message databases and
.I <defmsg>
was omitted.
.sp
.LP
The
.I flags
argument determines the type of output (whether the
.B format
should be interpreted as it is or be encapsulated in the
standard message format) and the access to message catalogs to retrieve a
localized version of
.BR format .
.sp
.LP
The
.I flags
argument is composed of several groups, and can take the
following values (one from each group):
.sp
.ne 2
.mk
.na
.I Output format control
.ad
.sp .6
.RS 4n
.sp
.ne 2
.mk
.na
.B MM_NOSTD
.ad
.RS 12n
.rt
Do not use the standard message format but interpret
.B format
as a
.BR "printf() format" .
Only
.IR "catalog access control flags" ,
.I console display control
and
.I "logging information"
should be
specified if
.B MM_NOSTD
is used; all other flags will be ignored.
.RE

.sp
.ne 2
.mk
.na
.B MM_STD
.ad
.RS 12n
.rt
Output using the standard message format (default value is 0).
.RE

.RE

.sp
.ne 2
.mk
.na
.I Catalog access control
.ad
.sp .6
.RS 4n
.sp
.ne 2
.mk
.na
.B MM_NOGET
.ad
.RS 12n
.rt
Do not retrieve a localized version of
.BR format .
In this case, only the
.I <defmsg>
field of
.B format
is specified.
.RE

.sp
.ne 2
.mk
.na
.B MM_GET
.ad
.RS 12n
.rt
Retrieve a localized version of
.B format
from
.IR <catalog> ,
using
.I <msgid>
as the index and
.I <defmsg>
as the default message
(default value is 0).
.RE

.RE

.sp
.ne 2
.mk
.na
.I Severity (standard message format only)
.ad
.sp .6
.RS 4n
.sp
.ne 2
.mk
.na
.B MM_HALT
.ad
.RS 14n
.rt
Generate a localized version of
.B HALT,
but donot halt the machine.
.RE

.sp
.ne 2
.mk
.na
.B MM_ERROR
.ad
.RS 14n
.rt
Generate a localized version of
.B ERROR
(default value is 0).
.RE

.sp
.ne 2
.mk
.na
.B MM_WARNING
.ad
.RS 14n
.rt
Generate a localized version of
.BR WARNING .
.RE

.sp
.ne 2
.mk
.na
.B MM_INFO
.ad
.RS 14n
.rt
Generate a localized version of
.BR INFO .
.RE

Additional severities can be defined with the
.BR addsev (3C)
function,
using number-string pairs with numeric values in the range [5-255]. The
specified severity is formed by the bitwise
.B OR
operation of the
numeric value and other
.I flags
arguments.
.sp
If the severity is not defined,
.B lfmt()
uses the string
.BI SEV= N
where \fIN\fR is the integer severity value passed in
.IR flags .
.sp
Multiple severities passed in
.I flags
will not be detected as an error.
Any combination of severities will be summed and the numeric value will
cause the display of either a severity string (if defined) or the string
.BI SEV= N
(if undefined).
.RE

.sp
.ne 2
.mk
.na
.I Action
.ad
.sp .6
.RS 4n
.sp
.ne 2
.mk
.na
.B MM_ACTION
.ad
.RS 13n
.rt
Specify an action message. Any severity value is superseded and replaced by
a localized version of
.BR "TO FIX" .
.RE

.RE

.sp
.ne 2
.mk
.na
.I Console display control
.ad
.sp .6
.RS 4n
.sp
.ne 2
.mk
.na
.B MM_CONSOLE
.ad
.RS 16n
.rt
Display the message to the console in addition to the specified
.IR stream .
.RE

.sp
.ne 2
.mk
.na
.B MM_NOCONSOLE
.ad
.RS 16n
.rt
Do not display the message to the console in addition to the specified
.I stream
(default value is 0).
.RE

.RE

.sp
.ne 2
.mk
.na
.I Logging information
.ad
.sp .6
.RS 4n
.sp
.ne 2
.mk
.na
.I Major classification
.ad
.sp .6
.RS 4n
Identify the source of the condition. Identifiers are:
.B MM_HARD
(hardware),
.B MM_SOFT
(software), and
.B MM_FIRM
(firmware).
.RE

.sp
.ne 2
.mk
.na
.I Message source subclassification
.ad
.sp .6
.RS 4n
Identify the type of software in which the problem is spotted. Identifiers
are:
.B MM_APPL
(application),
.B MM_UTIL
(utility), and
.B MM_OPSYS
(operating system).
.RE

.RE

.SH STANDARD ERROR MESSAGE FORMAT
.sp
.LP
The
.B lfmt()
function displays error messages in the following
format:
.sp
.in +2
.nf
\fIlabel\fB:\fR \fIseverity\fB:\fR \fItext\fR
.fi
.in -2

.sp
.LP
If no
.I label
was defined by a call to
.BR setlabel "(3C), the message"
is displayed in the format:
.sp
.in +2
.nf
\fIseverity\fB:\fR \fItext\fR
.fi
.in -2

.sp
.LP
If
.B lfmt()
is called twice to display an error message and a helpful
.I action
or recovery message, the output may appear as follows:
.sp
.in +2
.nf
\fIlabel\fB: \fIseverity\fB: \fItext\fR
\fIlabel\fB: \fR \fBTO FIX:\fR \fItext\fR
.fi
.in -2

.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B lfmt()
returns the number of bytes
transmitted. Otherwise, it returns a negative value:
.sp
.ne 2
.mk
.na
\fB\(mi1\fR
.ad
.RS 9n
.rt
Write the error to
.IR stream .
.RE

.sp
.ne 2
.mk
.na
\fB\(mi2\fR
.ad
.RS 9n
.rt
Cannot log and/or display at console.
.RE

.SH USAGE
.sp
.LP
Since
.B lfmt()
uses
.BR gettxt (3C),
it is recommended that
.B lfmt()
not be used.
.SH EXAMPLES
.LP
.B Example 1
The following example
.sp
.in +2
.nf
setlabel("UX:test");
lfmt(stderr, MM_ERROR|MM_CONSOLE|MM_SOFT|MM_UTIL,
     "test:2:Cannot open file: %s\en", strerror(errno));
.fi
.in -2

.sp
.LP
displays the message to
.B stderr
and to the console and makes it
available for logging:

.sp
.in +2
.nf
UX:test: ERROR: Cannot open file: No such file or directory
.fi
.in -2

.LP
.B Example 2
The following example
.sp
.in +2
.nf
setlabel("UX:test");
lfmt(stderr, MM_INFO|MM_SOFT|MM_UTIL,
        "test:23:test facility is enabled\en");
.fi
.in -2

.sp
.LP
displays the message to
.B stderr
and makes it available for logging:

.sp
.in +2
.nf
UX:test: INFO: test facility enabled
.fi
.in -2

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR addsev (3C),
.BR gettxt (3C),
.BR pfmt (3C),
.BR printf (3C),
.BR setcat (3C),
.BR setlabel (3C),
.BR setlocale (3C),
.BR attributes (5),
.BR environ (5)
