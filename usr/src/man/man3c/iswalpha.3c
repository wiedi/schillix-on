'\" te
.\" Copyright (c) 1992, X/Open Company Limited.  All Rights Reserved.
.\" Portions Copyright (c) 2004, Sun Microsystems, Inc.  All Rights Reserved.
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH iswalpha 3C "19 Apr 2004" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
iswalpha, isenglish, isideogram, isnumber, isphonogram, isspecial,
iswalnum, iswascii, iswblank, iswcntrl, iswdigit, iswgraph, iswlower,
iswprint, iswpunct, iswspace, iswupper, iswxdigit \- wide-character code
classification functions
.SH SYNOPSIS
.LP
.nf
#include <wchar.h>
#include <wctype.h>

\fBint\fR \fBiswalpha\fR(\fBwint_t\fR \fIwc\fR);
.fi

.LP
.nf
\fBint\fR \fBisenglish\fR(\fBwint_t\fR \fIwc\fR);
.fi

.LP
.nf
\fBint\fR \fBisideogram\fR(\fBwint_t\fR \fIwc\fR);
.fi

.LP
.nf
\fBint\fR \fBisnumber\fR(\fBwint_t\fR \fIwc\fR);
.fi

.LP
.nf
\fBint\fR \fBisphonogram\fR(\fBwint_t\fR \fIwc\fR);
.fi

.LP
.nf
\fBint\fR \fBisspecial\fR(\fBwint_t\fR \fIwc\fR);
.fi

.LP
.nf
\fBint\fR \fBiswalnum\fR(\fBwint_t\fR \fIwc\fR);
.fi

.LP
.nf
\fBint\fR \fBiswascii\fR(\fBwint_t\fR \fIwc\fR);
.fi

.LP
.nf
\fBint\fR \fBiswblank\fR(\fBwint_t\fR \fIwc\fR);
.fi

.LP
.nf
\fBint\fR \fBiswcntrl\fR(\fBwint_t\fR \fIwc\fR);
.fi

.LP
.nf
\fBint\fR \fBiswdigit\fR(\fBwint_t\fR \fIwc\fR);
.fi

.LP
.nf
\fBint\fR \fBiswgraph\fR(\fBwint_t\fR \fIwc\fR);
.fi

.LP
.nf
\fBint\fR \fBiswlower\fR(\fBwint_t\fR \fIwc\fR);
.fi

.LP
.nf
\fBint\fR \fBiswprint\fR(\fBwint_t\fR \fIwc\fR);
.fi

.LP
.nf
\fBint\fR \fBiswpunct\fR(\fBwint_t\fR \fIwc\fR);
.fi

.LP
.nf
\fBint\fR \fBiswspace\fR(\fBwint_t\fR \fIwc\fR);
.fi

.LP
.nf
\fBint\fR \fBiswupper\fR(\fBwint_t\fR \fIwc\fR);
.fi

.LP
.nf
\fBint\fR \fBiswxdigit\fR(\fBwint_t\fR \fIwc\fR);
.fi

.SH DESCRIPTION
.sp
.LP
These functions test whether
.I wc
is a wide-character code representing
a character of a particular class defined in the
.B LC_CTYPE
category of
the current locale.
.sp
.LP
In all cases,
.I wc
is a
.BR wint_t ,
the value of which must be a
wide-character code corresponding to a valid character in the current locale
or must equal the value of the macro
.BR WEOF .
If the argument has any
other values, the behavior is undefined.
.sp
.ne 2
.mk
.na
\fBiswalpha(\fIwc\fB)\fR
.ad
.RS 19n
.rt
Tests whether
.I wc
is a wide-character code representing a character of
class "alpha" in the program's current locale.
.RE

.sp
.ne 2
.mk
.na
\fBisenglish(\fIwc\fB)\fR
.ad
.RS 19n
.rt
Tests whether
.I wc
is a wide-character code representing an English
language character, excluding
.B ASCII
characters.
.RE

.sp
.ne 2
.mk
.na
\fBisideogram(\fIwc\fB)\fR
.ad
.RS 19n
.rt
Tests whether
.I wc
is a wide-character code representing an ideographic
language character, excluding
.B ASCII
characters.
.RE

.sp
.ne 2
.mk
.na
\fBisnumber(\fIwc\fB)\fR
.ad
.RS 19n
.rt
Tests whether
.I wc
is a wide-character code representing digit
[0\(mi9], excluding \fBASCII\fR characters.
.RE

.sp
.ne 2
.mk
.na
\fBisphonogram(\fIwc\fB)\fR
.ad
.RS 19n
.rt
Tests whether
.I wc
is a wide-character code representing a phonetic
language character, excluding
.B ASCII
characters.
.RE

.sp
.ne 2
.mk
.na
\fBisspecial(\fIwc\fB)\fR
.ad
.RS 19n
.rt
Tests whether
.I wc
is a wide-character code representing a special
language character, excluding
.B ASCII
characters.
.RE

.sp
.ne 2
.mk
.na
\fBiswalnum(\fIwc\fB)\fR
.ad
.RS 19n
.rt
Tests whether
.I wc
is a wide-character code representing a character of
class "alpha" or "digit" in the program's current locale.
.RE

.sp
.ne 2
.mk
.na
\fBiswascii(\fIwc\fB)\fR
.ad
.RS 19n
.rt
Tests whether
.I wc
.RB "is a wide-character code representing an" " ASCII"
character.
.RE

.sp
.ne 2
.mk
.na
\fBiswblank(\fIwc\fB)\fR
.ad
.RS 19n
.rt
Tests whether
.I wc
is a wide-character code representing a character of
class "blank" in the program's current locale. This function is not
available to applications conforming to standards prior to SUSv3. See
.BR standards (5).
.RE

.sp
.ne 2
.mk
.na
\fBiswlower(\fIwc\fB)\fR
.ad
.RS 19n
.rt
Tests whether
.I wc
is a wide-character code representing a character of
class "lower" in the program's current locale.
.RE

.sp
.ne 2
.mk
.na
\fBiswcntrl(\fIwc\fB)\fR
.ad
.RS 19n
.rt
Tests whether
.I wc
is a wide-character code representing a character of
class "cntrl" in the program's current locale.
.RE

.sp
.ne 2
.mk
.na
\fBiswdigit(\fIwc\fB)\fR
.ad
.RS 19n
.rt
Tests whether
.I wc
is a wide-character code representing a character of
class "digit" in the program's current locale.
.RE

.sp
.ne 2
.mk
.na
\fBiswgraph(\fIwc\fB)\fR
.ad
.RS 19n
.rt
Tests whether
.I wc
is a wide-character code representing a character of
class "graph" in the program's current locale.
.RE

.sp
.ne 2
.mk
.na
\fBiswprint(\fIwc\fB)\fR
.ad
.RS 19n
.rt
Tests whether
.I wc
is a wide-character code representing a character of
class "print" in the program's current locale.
.RE

.sp
.ne 2
.mk
.na
\fBiswpunct(\fIwc\fB)\fR
.ad
.RS 19n
.rt
Tests whether
.I wc
is a wide-character code representing a character of
class "punct" in the program's current locale.
.RE

.sp
.ne 2
.mk
.na
\fBiswspace(\fIwc\fB)\fR
.ad
.RS 19n
.rt
Tests whether
.I wc
is a wide-character code representing a character of
class "space" in the program's current locale.
.RE

.sp
.ne 2
.mk
.na
\fBiswupper(\fIwc\fB)\fR
.ad
.RS 19n
.rt
Tests whether
.I wc
is a wide-character code representing a character of
class "upper" in the program's current locale.
.RE

.sp
.ne 2
.mk
.na
\fBiswxdigit(\fIwc\fB)\fR
.ad
.RS 19n
.rt
Tests whether
.I wc
is a wide-character code representing a character of
class "xdigit" in the program's current locale.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
lw(2.75i) |lw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
CSIEnabled
_
Interface StabilitySee  below.
_
MT-LevelMT-Safe with exceptions
.TE

.sp
.LP
The
.BR iswalpha() ,
.BR iswalnum() ,
.BR iswblank() ,
.BR iswcntrl() ,
.BR iswdigit() ,
.BR iswgraph() ,
.BR iswlower() ,
.BR iswprint() ,
.BR iswpunct() ,
.BR iswspace() ,
.BR iswupper() ,
and
.BR iswxdigit()
functions are Standard.
.SH SEE ALSO
.sp
.LP
.BR localedef (1),
.BR setlocale (3C),
.BR stdio (3C),
.BR ascii (5),
.BR attributes (5),
.BR standards (5)
