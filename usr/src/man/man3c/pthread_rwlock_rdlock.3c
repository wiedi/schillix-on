'\" te
.\" Copyright (c) 2008, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright (c) 2001, the Institute of Electrical and Electronics Engineers,
.\" Inc. and The Open Group. All Rights Reserved.
.\" Copyright 1991, 1992, 1994, The X/Open Company Ltd.
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH pthread_rwlock_rdlock 3C "23 Mar 2005" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
pthread_rwlock_rdlock, pthread_rwlock_tryrdlock \- lock or attempt to lock
read-write lock object for reading
.SH SYNOPSIS
.LP
.nf
cc -mt [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. -lpthread [ \fIlibrary\fR.\|.\|. ]
#include <pthread.h>

\fBint\fR \fBpthread_rwlock_rdlock\fR(\fBpthread_rwlock_t\fR \fI*rwlock\fR);
.fi

.LP
.nf
\fBint\fR \fBpthread_rwlock_tryrdlock\fR(\fBpthread_rwlock_t\fR \fI*rwlock\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B pthread_rwlock_rdlock()
function applies a read lock to the
read-write lock referenced by
.IR rwlock .
The calling thread acquires the
read lock if a writer does not hold the lock and there are no writers
blocked on the lock.
.sp
.LP
The calling thread does not acquire the lock if a writer holds the lock or
if writers of higher or equal priority are blocked on the lock; otherwise,
the calling thread acquires the lock. If the read lock is not acquired, the
calling thread blocks until it can acquire the lock.
.sp
.LP
A thread can hold multiple concurrent read locks on
.I rwlock
(that is,
successfully call the
.B pthread_rwlock_rdlock()
function
.I n
times).
If so, the thread must perform matching unlocks (that is, it must call the
\fBpthread_rwlock_unlock()\fR function \fIn\fR times).
.sp
.LP
The maximum number of concurrent read locks that a thread can hold on one
read-write lock is currently set at 100,000, though this number could change
in a future release. There is no imposed limit on the number of different
threads that can apply a read lock to one read-write lock.
.sp
.LP
The
.B pthread_rwlock_tryrdlock()
function applies a read lock like the
\fBpthread_rwlock_rdlock()\fR function, with the exception that the function
fails if the equivalent
.B pthread_rwlock_rdlock()
call would have
blocked the calling thread.  In no case will the
\fBpthread_rwlock_tryrdlock()\fR function ever bloc. It always either
acquires the lock or fails and returns immediately.
.sp
.LP
Results are undefined if any of these functions are called with an
uninitialized read-write lock.
.sp
.LP
If a signal is delivered to a thread waiting for a read-write lock for
reading, upon return from the signal handler the thread resumes waiting for
the read-write lock for reading as if it was not interrupted.
.SH RETURN VALUES
.sp
.LP
If successful, the
.B pthread_rwlock_rdlock()
function returns
.BR 0 .
Otherwise, an error number is returned to indicate the error.
.sp
.LP
The
.B pthread_rwlock_tryrdlock()
function returns
.B 0
if the lock
for reading on the read-write lock object referenced by
.I rwlock
is
acquired. Otherwise an error number  is returned to indicate the error.
.SH ERRORS
.sp
.LP
The
.B pthread_rwlock_rdlock()
and
.BR pthread_rwlock_tryrdlock()
functions will fail if:
.sp
.ne 2
.mk
.na
.B EAGAIN
.ad
.RS 10n
.rt
The read lock could not be acquired because the maximum number of read
locks by the current thread for
.I rwlock
has been exceeded.
.RE

.sp
.LP
The
.B pthread_rwlock_rdlock()
function will fail if:
.sp
.ne 2
.mk
.na
.B EDEADLK
.ad
.RS 11n
.rt
The current thread already owns the read-write lock for writing.
.RE

.sp
.LP
The
.B pthread_rwlock_tryrdlock()
function will fail if:
.sp
.ne 2
.mk
.na
.B EBUSY
.ad
.RS 9n
.rt
The read-write lock could not be acquired for reading because a writer
holds the lock or a writer with the appropriate priority was blocked on
it.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR pthread_rwlock_init (3C),
.BR pthread_rwlock_wrlock (3C),
.BR pthread_rwlockattr_init (3C),
.BR pthread_rwlock_unlock (3C),
.BR attributes (5),
.BR standards (5)
