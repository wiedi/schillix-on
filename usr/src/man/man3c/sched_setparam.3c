'\" te
.\" Copyright (c) 2008, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" Portions Copyright (c) 1992, X/Open Company Limited  All Rights Reserved
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH sched_setparam 3C "1 Apr 2008" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
sched_setparam \- set scheduling parameters
.SH SYNOPSIS
.LP
.nf
#include <sched.h>

\fBint\fR \fBsched_setparam\fR(\fBpid_t\fR \fIpid\fR, \fBconst struct sched_param *\fIparam\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B sched_setparam()
function sets the scheduling parameters of the
process specified by
.I pid
to the values specified by the
.B sched_param
structure pointed to by
.IR param .
The value of the
.I sched_priority
member in the
.B sched_param
structure is any
integer within the inclusive priority range for the current scheduling
policy of the process specified by
.IR pid .
Higher numerical values for
the priority represent higher priorities. If the value of
.I pid
is
negative, the behavior of the
.B sched_setparam()
function is
unspecified.
.sp
.LP
If a process specified by
.I pid
exists and if the calling process has
permission, the scheduling parameters will be set for the process whose
process
.B ID
is equal to
.IR pid .
The real or effective user
.BR ID
of the calling process must match the  real or saved (from
.BR exec (2))
user
.B ID
of the target process unless the effective user
.B ID
of
the calling process is
.BR 0 .
See
.BR Intro (2).
.sp
.LP
If
.I pid
is zero, the scheduling parameters will be set for the calling
process.
.sp
.LP
The target process, whether it is running or not running, resumes execution
after all other runnable processes of equal or greater priority have been
scheduled to run.
.sp
.LP
If the priority of the process specified by the
.I pid
argument is set
higher than that of the lowest priority running process and if the specified
process is ready to run, the process specified by the
.I pid
argument
preempts a lowest priority running process. Similarly, if the process
calling
.B sched_setparam()
sets its own priority lower than that of one
or more other non-empty process lists, then the process that is the head of
the highest priority list also preempts the calling process. Thus, in either
case, the originating process might not receive notification of the
completion of the requested priority change until the higher priority
process has executed.
.SH RETURN VALUES
.sp
.LP
If successful, the
.B sched_setparam()
function returns
.BR 0 .
.sp
.LP
If the call to
.B sched_setparam()
is unsuccessful, the priority remains
unchanged, and the function returns \fB\(mi1\fR and sets
.B errno
to
indicate the error.
.SH ERRORS
.sp
.LP
The
.B sched_setparam()
function will fail if:
.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
One or more of the requested scheduling parameters is outside the range
defined for the scheduling policy of the specified
.IR pid .
.RE

.sp
.ne 2
.mk
.na
.B EPERM
.ad
.RS 10n
.rt
The requesting process does not have permission to set the scheduling
parameters for the specified process, or does not have the appropriate
privilege to invoke
.BR sched_setparam() .
.RE

.sp
.ne 2
.mk
.na
.B ESRCH
.ad
.RS 10n
.rt
No process can be found corresponding to that specified by
.IR pid .
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
lw(2.75i) |lw(2.75i)
lw(2.75i) |lw(2.75i)
.
\fBATTRIBUTE TYPE\fR\fBATTRIBUTE VALUE\fR
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
_
StandardSee \fBstandards\fR(5).
.TE

.SH SEE ALSO
.sp
.LP
.BR Intro (2),
.BR exec (2),
.BR librt (3LIB),
.BR sched.h (3HEAD),
.BR sched_getparam (3C),
.BR sched_getscheduler (3C),
.BR sched_setscheduler (3C),
.BR attributes (5),
.BR standards (5)
