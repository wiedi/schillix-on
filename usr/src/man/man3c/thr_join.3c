'\" te
.\" Copyright (c) 2000 Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" Portions Copyright (c) 2001, the Institute of Electrical and Electronics Engineers, Inc. and The Open Group. All Rights Reserved.
.\" Portions Copyright (c) 1995 IEEE  All Rights Reserved
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH thr_join 3C "27 Mar 2000" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
thr_join \- wait for thread termination
.SH SYNOPSIS
.LP
.nf
cc -mt [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|.[ \fIlibrary\fR.\|.\|. ]
#include <thread.h>

\fBint\fR \fBthr_join\fR(\fBthread_t\fR \fIthread\fR, \fBthread_t *\fIdeparted\fR, \fBvoid **\fIstatus\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B thr_join()
function suspends processing of the calling thread
until the target
.I thread
completes. The
.I thread
argument must be a
member of the current process and cannot be a detached thread. See
.BR thr_create (3C).
.sp
.LP
If two or more threads wait for the same thread to complete, all will
suspend processing until the thread has terminated, and then one thread will
return successfully and the others will return with an error of
.BR ESRCH .
The
.B thr_join()
function will not block processing of the calling
thread if the target
.I thread
has already terminated.
.sp
.LP
If a
.B thr_join()
call returns successfully with a non-null
.I status
argument, the value passed to
.BR thr_exit (3C)
by the
terminating thread will be placed in the location referenced by
.IR status .
.sp
.LP
If the target
.I thread
.B ID
is
.BR 0 ,
.B thr_join()
finds and
returns the status of a terminated undetached thread in the process. If no
such thread exists, it suspends processing of the calling thread until a
thread for which no other thread is waiting enters that state, at which time
it returns successfully, or until all other threads in the process are
either daemon threads or threads waiting in
.BR thr_join() ,
in which case
it returns
.BR EDEADLK .
See
.BR NOTES .
.sp
.LP
If
.I departed
is not
.IR NULL ,
it points to a location that is set to
the ID of the terminated thread if
.B thr_join()
returns successfully.
.SH RETURN VALUES
.sp
.LP
If successful,
.B thr_join()
returns
.BR 0 .
Otherwise, an error number
is returned to indicate the error.
.SH ERRORS
.sp
.ne 2
.mk
.na
.B EDEADLK
.ad
.RS 12n
.rt
A joining deadlock would occur, such as when a thread attempts to wait for
itself, or the calling thread is waiting for any thread to exit and only
daemon threads or waiting threads exist in the process.
.RE

.sp
.ne 2
.mk
.na
.B ESRCH
.ad
.RS 12n
.rt
No undetached thread could be found corresponding to the given thread ID.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR thr_create (3C),
.BR thr_exit (3C),
.BR wait (3C),
.BR attributes (5),
.BR standards (5)
.SH NOTES
.sp
.LP
Using thr_join(3C) in the following syntax,
.sp
.in +2
.nf
while (thr_join(0, NULL, NULL) == 0);
.fi
.in -2

.sp
.LP
will wait for the termination of all non-daemon threads, excluding threads
that are themselves waiting in
.BR thr_join() .
