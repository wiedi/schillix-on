'\" te
.\" Copyright (c) 2004 Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright 1989 AT&T
.\" Portions Copyright (c) 1992, X/Open Company Limited.  All Rights Reserved.
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH getlogin 3C "18 May 2004" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
getlogin, getlogin_r \- get login name
.SH SYNOPSIS
.LP
.nf
#include <unistd.h>

\fBchar *\fBgetlogin\fR(\fBvoid\fR);
.fi

.LP
.nf
\fBchar *\fBgetlogin_r\fR(\fBchar *\fIname\fR, \fBint\fR \fInamelen\fR);
.fi

.SS "Standard conforming"
.LP
.nf
cc [ \fIflag \fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-D_POSIX_PTHREAD_SEMANTICS\fR [ \fIlibrary \fR.\|.\|. ]

\fBint\fR \fBgetlogin_r\fR(\fBchar *\fIname\fR, \fBsize_t\fR \fInamesize\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B getlogin()
function returns a pointer to the login name as found
in
.BR /var/adm/utmpx .
It can be used in conjunction with
.BR getpwnam (3C)
to locate the correct password file entry when the same
user
.B ID
is shared by several login names.
.sp
.LP
If
.B getlogin()
is called within a process that is not attached to a
terminal, it returns a null pointer. The correct procedure for determining
the login name is to call
.BR cuserid "(3C), or to call"
.B getlogin()
and
if it fails to call
.BR getpwuid (3C).
.sp
.LP
The
.B getlogin_r()
function has the same functionality as
\fBgetlogin()\fR except that the caller must supply a buffer \fIname\fR with
length
.I namelen
to store the result.  The
.I name
buffer must be at
least
.B _POSIX_LOGIN_NAME_MAX
bytes in size (defined in
<\fBlimits.h\fR>). The POSIX version (see
.BR standards (5))
of
\fBgetlogin_r()\fR takes a \fInamesize\fR parameter of type
.BR size_t .
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B getlogin()
returns a pointer to the login
name or a null pointer if the user's login name cannot be found.  Otherwise
it returns a null pointer and sets
.B errno
to indicate the error.
.sp
.LP
The standard-conforming
.B getlogin_r()
returns
.B 0
if successful,
or the error number upon failure.
.SH ERRORS
.sp
.LP
The
.B getlogin_r()
function will fail if:
.sp
.ne 2
.mk
.na
.B ERANGE
.ad
.RS 10n
.rt
The size of the buffer is smaller than the result to be returned.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
And entry for the current user was not found in the
.BR /var/adm/utmpx
file.
.RE

.sp
.LP
The
.B getlogin()
and
.B getlogin_r()
functions may fail if:
.sp
.ne 2
.mk
.na
.B EMFILE
.ad
.RS 10n
.rt
There are {\fBOPEN_MAX\fR} file descriptors currently open in the calling
process.
.RE

.sp
.ne 2
.mk
.na
.B ENFILE
.ad
.RS 10n
.rt
The maximum allowable number of files is currently open in the system.
.RE

.sp
.ne 2
.mk
.na
.B ENXIO
.ad
.RS 10n
.rt
The calling process has no controlling terminal.
.RE

.sp
.LP
The
.B getlogin_r()
function may fail if:
.sp
.ne 2
.mk
.na
.B ERANGE
.ad
.RS 10n
.rt
The size of the buffer is smaller than the result to be returned.
.RE

.SH USAGE
.sp
.LP
The return value of
.B getlogin()
points to thread-specific data whose
content is overwritten on each call by the same thread.
.sp
.LP
Three names associated with the current process can be determined:
\fBgetpwuid(geteuid())\fR returns the name associated with the
effective user ID of the process;
.B getlogin()
returns the name
associated with the current login activity; and
\fBgetpwuid(getuid())\fR returns the name associated with the
real user ID of the process.
.SH FILES
.sp
.ne 2
.mk
.na
.B /var/adm/utmpx
.ad
.RS 18n
.rt
user access and administration information
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard
_
MT-LevelSee below.
.TE

.SH SEE ALSO
.sp
.LP
.BR geteuid (2),
.BR getuid (2),
.BR cuserid (3C),
.BR getgrnam (3C),
.BR getpwnam (3C),
.BR getpwuid (3C),
.BR utmpx (4),
.BR attributes (5),
.BR standards (5)
.SH NOTES
.sp
.LP
When compiling multithreaded programs, see
.BR Intro (3).
.sp
.LP
The
.B getlogin()
function is safe to use in multithreaded applications,
but is discouraged. The
.B getlogin_r()
function should be used
instead.
.sp
.LP
Solaris 2.4 and earlier releases provided a
.B getlogin_r()
as specified
in POSIX.1c Draft 6. The final POSIX.1c standard changed the interface as
described above. Support for the Draft 6 interface is provided for
compatibility only and may not be supported in future releases. New
applications and libraries should use the standard-conforming interface.
