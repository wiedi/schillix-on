'\" te
.\" Copyright (c) 2002, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright 1989 AT&T
.\" Portions Copyright (c) 2001, the Institute of Electrical and Electronics Engineers, Inc. and The Open Group. All Rights Reserved.
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mkfifo 3C "24 Apr 2002" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
mkfifo \- make a FIFO special file
.SH SYNOPSIS
.LP
.nf
#include <sys/types.h>
#include <sys/stat.h>

\fBint\fR \fBmkfifo\fR(\fBconst char *\fIpath\fR, \fBmode_t\fR \fImode\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B mkfifo()
function creates a new FIFO special file named by the
pathname pointed to by
.IR path .
The file permission bits of the new FIFO
are initialized from
.IR mode .
The file permission bits of the
.IR mode
argument are modified by the process's file creation mask (see
.BR umask (2)).
Bits other than the file permission bits in
.I mode
are
ignored.
.sp
.LP
If
.I path
names a symbolic link,
.B mkfifo()
fails and sets
.B errno
to
.BR EEXIST .
.sp
.LP
The FIFO's user ID is set to the process's effective user ID. The FIFO's
group ID is set to the group ID of the parent directory or to the effective
group ID of the process.
.sp
.LP
The
.B mkfifo()
function calls
.BR mknod (2)
to create the file.
.sp
.LP
Upon successful completion,
.B mkfifo()
marks for update the
.BR st_atime ,
.BR st_ctime ,
and
.B st_mtime
fields of the file. Also,
the
.B st_ctime
and
.B st_mtime
fields of the directory that contains
the new entry are marked for update.
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B 0
is returned.  Otherwise,
.B \(mi1
is
returned and
.B errno
is set to indicate the error.
.SH ERRORS
.sp
.LP
The
.B mkfifo()
function will fail if:
.sp
.ne 2
.mk
.na
.B EACCES
.ad
.RS 16n
.rt
A component of the path prefix denies search permission, or write
permission is denied on the parent directory of the FIFO to be created.
.RE

.sp
.ne 2
.mk
.na
.B EEXIST
.ad
.RS 16n
.rt
The named file already exists.
.RE

.sp
.ne 2
.mk
.na
.B ELOOP
.ad
.RS 16n
.rt
A loop exists in symbolic links encountered during resolution of the
.I path
argument.
.RE

.sp
.ne 2
.mk
.na
.B ENAMETOOLONG
.ad
.RS 16n
.rt
The length of the
.I path
argument exceeds {\fBPATH_MAX\fR} or a
pathname component is longer than {\fBNAME_MAX\fR}.
.RE

.sp
.ne 2
.mk
.na
.B ENOENT
.ad
.RS 16n
.rt
A component of the path prefix specified by
.I path
does not name an
existing directory or
.I path
is an empty string.
.RE

.sp
.ne 2
.mk
.na
.B ENOSPC
.ad
.RS 16n
.rt
The directory that would contain the new file cannot be extended or the
file system is out of file-allocation resources.
.RE

.sp
.ne 2
.mk
.na
.B ENOTDIR
.ad
.RS 16n
.rt
A component of the path prefix is not a directory.
.RE

.sp
.ne 2
.mk
.na
.B EROFS
.ad
.RS 16n
.rt
The named file resides on a read-only file system.
.RE

.sp
.LP
The
.B mkfifo()
function may fail if:
.sp
.ne 2
.mk
.na
.B ELOOP
.ad
.RS 16n
.rt
Too many symbolic links were encountered in resolving
.IR path .
.RE

.sp
.ne 2
.mk
.na
.B ENAMETOOLONG
.ad
.RS 16n
.rt
The length of the
.I path
argument exceeds {\fBPATH_MAX\fR} or a
pathname component is longer than {\fBNAME_MAX\fR}.
.RE

.SH EXAMPLES
.LP
.B Example 1
Create a FIFO File
.sp
.LP
The following example demonstrates how to create a FIFO file named
.B /home/cnd/mod_done
with read and write permissions for the owner and
read permissions for the group and others.

.sp
.in +2
.nf
#include sys/types.h>
#include sys/stat.h>
int status;
\&...
status = mkfifo("/home/cnd/mod_done", S_IWUSR | S_IRUSR |
        S_IRGRP | S_IROTH);
.fi
.in -2

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR mkdir (1),
.BR chmod (2),
.BR exec (2),
.BR mknod (2),
.BR umask (2),
.BR stat.h (3HEAD),
.BR ufs (7FS),
.BR attributes (5),
.BR standards (5)
