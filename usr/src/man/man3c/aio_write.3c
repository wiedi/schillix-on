'\" te
.\" Copyright (c) 2008, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" Portions Copyright (c) 1992, X/Open Company Limited.  All Rights Reserved.
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH aio_write 3C "5 Feb 2008" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
aio_write \- asynchronous write to a file
.SH SYNOPSIS
.LP
.nf
#include <aio.h>

\fBint\fR \fBaio_write\fR(\fBstruct aiocb *\fIaiocbp\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B aio_write()
function allows the calling process to write
\fIaiocbp\fR\(->\fBaio_nbytes\fR to the file associated with
\fIaiocbp\fR\(->\fBaio_fildes\fR from the buffer pointed to by
\fIaiocbp\fR\(->\fBaio_buf\fR. The function call returns when the write
request has been initiated or, at a minimum, queued to the file or device.
If
.B _POSIX_PRIORITIZED_IO
is defined and prioritized I/O is supported
for this file, then the asynchronous operation is submitted at a priority
equal to the scheduling priority of the process minus
\fIaiocbp\fR\(->\fBaio_reqprio\fR. The
.I aiocbp
may be used as an
argument to
.BR aio_error "(3C) and"
.BR aio_return (3C)
in order to
determine the error status and return status, respectively, of the
asynchronous operation while it is proceeding.
.sp
.LP
The
.I aiocbp
argument points to an
.B aiocb
structure. If the buffer
pointed to by \fIaiocbp\fR\(->\fBaio_buf\fR or the control block pointed to
by
.I aiocbp
becomes an illegal address prior to asynchronous I/O
completion, then the behavior is undefined.
.sp
.LP
If
.B O_APPEND
is not set for the file descriptor
.IR aio_fildes ,
then
the requested operation takes place at the absolute position in the file as
given by
.IR aio_offset ,
as if
.BR lseek (2)
were called immediately
prior to the operation with an
.IR offset " equal to "
.I aio_offset
and a
.I whence
equal to
.BR SEEK_SET .
If
.B O_APPEND
is set for the file
descriptor, write operations append to the file in the same order as the
calls were made. After a successful call to enqueue an asynchronous I/O
operation, the value of the file offset for the file is unspecified.
.sp
.LP
The \fIaiocbp\fR\(->\fBaio_sigevent\fR structure defines what asynchronous
notification is to occur when the asynchronous operation completes, as
specified in
.BR signal.h (3HEAD).
.sp
.LP
The \fIaiocbp\fR\(->\fBaio_lio_opcode\fR field is ignored by
.BR aio_write() .
.sp
.LP
Simultaneous asynchronous operations using the same
.I aiocbp
produce
undefined results.
.sp
.LP
If
.B _POSIX_SYNCHRONIZED_IO
is defined and synchronized I/O is enabled
on the file associated with \fIaiocbp\fR\(->\fBaio_fildes\fR, the behavior
of this function shall be according to the definitions of synchronized I/O
data integrity completion and synchronized I/O file integrity completion.
.sp
.LP
For any system action that changes the process memory space while an
asynchronous I/O is outstanding to the address range being changed, the
result of that action is undefined.
.sp
.LP
For regular files, no data transfer will occur past the offset maximum
established in the open file description associated with
.IR aiocbp \(->\fBaio_fildes\fR.
.SH RETURN VALUES
.sp
.LP
The
.B aio_write()
function returns
.B 0
to the calling process if
the I/O operation is successfully queued; otherwise, the function returns
\fB\(mi1\fR and sets
.B errno
to indicate the error.
.SH ERRORS
.sp
.LP
The
.B aio_write()
function will fail if:
.sp
.ne 2
.mk
.na
.B EAGAIN
.ad
.RS 10n
.rt
The requested asynchronous I/O operation was not queued due to system
resource limitations.
.RE

.sp
.LP
Each of the following conditions may be detected synchronously at the time
of the call to
.BR aio_write() ,
or asynchronously. If any of the
conditions below are detected synchronously, the
.B aio_write()
function
returns \fB\(mi1\fR and sets
.B errno
to the corresponding value. If any
of the conditions below are detected asynchronously, the return status of
the asynchronous operation is set to \fB\(mi1\fR, and the error status of
the asynchronous operation will be set to the corresponding value.
.sp
.ne 2
.mk
.na
.B EBADF
.ad
.RS 10n
.rt
The \fIaiocbp\fR\(->\fBaio_fildes\fR argument is not a valid file
descriptor open for writing.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The file offset value implied by \fIaiocbp\fR->\fBaio_offset\fR would be
invalid,
.IB aiocbp-> aio_reqprio
is not a valid value, or
\fIaiocbp\fR\(->\fBaio_nbytes\fR is an invalid value.
.RE

.sp
.LP
In the case that the
.B aio_write()
successfully queues the I/O
operation, the return status of the asynchronous operation will be one of
the values normally returned by the
.BR write (2)
function call. If the
operation is successfully queued but is subsequently canceled or encounters
an error, the error status for the asynchronous operation contains one of
the values normally set by the
.B write()
function call, or one of the
following:
.sp
.ne 2
.mk
.na
.B EBADF
.ad
.RS 13n
.rt
The \fIaiocbp\fR\(->\fBaio_fildes\fR argument is not a valid file
descriptor open for writing.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 13n
.rt
The file offset value implied by \fIaiocbp\fR->\fBaio_offset\fR would be
invalid.
.RE

.sp
.ne 2
.mk
.na
.B ECANCELED
.ad
.RS 13n
.rt
The requested I/O was canceled before the I/O completed due to an explicit
.BR aio_cancel (3C)
request.
.RE

.sp
.LP
The following condition may be detected synchronously or asynchronously:
.sp
.ne 2
.mk
.na
.B EFBIG
.ad
.RS 9n
.rt
The file is a regular file, \fIaiobcp\fR\(->\fBaio_nbytes\fR is greater
than 0 and the starting offset in \fIaiobcp\fR\(->\fBaio_offset\fR is at or
beyond the offset maximum in the open file description associated with
.IR aiocbp \(->\fBaio_fildes\fR.
.RE

.SH USAGE
.sp
.LP
The
.B aio_write()
function has a transitional interface for 64-bit file
offsets. See
.BR lf64 (5).
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
_
StandardSee \fBstandards\fR(5).
.TE

.SH SEE ALSO
.sp
.LP
.BR aio_cancel (3C),
.BR aio_error (3C),
.BR aio_read (3C),
.BR aio_return (3C),
.BR lio_listio (3C),
.BR close (2),
.BR _Exit (2),
.BR fork (2),
.BR lseek (2),
.BR write (2),
.BR aio.h (3HEAD),
.BR signal.h (3HEAD),
.BR attributes (5),
.BR lf64 (5),
.BR standards (5)
