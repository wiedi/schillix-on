'\" te
.\" Copyright (c) 2004, Sun Microsystems, Inc.  All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH getnetgrent 3C "5 Apr 2004" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
getnetgrent, getnetgrent_r, setnetgrent, endnetgrent, innetgr \- get
network group entry
.SH SYNOPSIS
.LP
.nf
#include <netdb.h>

\fBint\fR \fBgetnetgrent\fR(\fBchar **\fImachinep\fR, \fBchar **\fIuserp\fR, \fBchar **\fIdomainp\fR);
.fi

.LP
.nf
\fBint\fR \fBgetnetgrent_r\fR(\fBchar **\fImachinep\fR, \fBchar **\fIuserp\fR, \fBchar **\fIdomainp\fR,
     \fBchar *\fIbuffer\fR, \fBint\fIbuflen\fR);
.fi

.LP
.nf
\fBint\fR \fBsetnetgrent\fR(\fBconst char *\fInetgroup\fR);
.fi

.LP
.nf
\fBint\fR \fBendnetgrent\fR(\fBvoid\fR);
.fi

.LP
.nf
\fBint\fR \fBinnetgr\fR(\fBconst char *\fInetgroup\fR, \fBconst char *\fImachine\fR,
     \fBconst char *\fIuser\fR, \fBconst char *\fIdomain\fR);
.fi

.SH DESCRIPTION
.sp
.LP
These functions are used to test membership in and enumerate members of
``netgroup'' network groups defined in a system database.  Netgroups are
sets of (machine,user,domain) triples (see
.BR netgroup (4)).
.sp
.LP
These functions consult the source specified for
.B netgroup
in the
.B /etc/nsswitch.conf
file (see \fBnsswitch.conf\fR(4)).
.sp
.LP
The function
.B innetgr()
returns
.B 1
if there is a netgroup
.I netgroup
that contains the specified
.IR "machine, user,"
.I domain
triple as a member; otherwise it returns
.BR 0 .
Any of the
supplied pointers
.IR machine ,
.IR user ,
and
.I domain
may be
\fINULL,\fR signifying a "wild card" that matches all values in that
position of the triple.
.sp
.LP
The
.B innetgr()
function is safe for use in single-threaded and
multithreaded applications.
.sp
.LP
The functions
.BR setnetgrent() ,
.BR getnetgrent() ,
and
.B endnetgrent()
are used to enumerate the members of a given network
group.
.sp
.LP
The function
.B setnetgrent()
establishes the network group specified in
the parameter
.I netgroup
as the current group whose members are to be
enumerated.
.sp
.LP
Successive calls to the function
.B getnetgrent()
will enumerate the
members of the group established by calling
.BR setnetgrent() ;
each call
returns
.B 1
if it succeeds in obtaining another member of the network
group, or
.B 0
if there are no further members of the group.
.sp
.LP
When calling either
.B getnetgrent()
or
.BR getnetgrent_r() ,
addresses
of the three character pointers are used as arguments, for example:
.sp
.in +2
.nf
char \fI*mp\fR, \fI*up\fR, \fI*dp\fR;
getnetgrent(\fI&mp\fR, \fI&up\fR, \fI&dp\fR);
.fi
.in -2

.sp
.LP
Upon successful return from
.BR getnetgrent() ,
the pointer
.IR mp
points to a string containing the name of the machine part of the member
triple,
.I up
points to a string containing the user name and
.IR dp
points to a string containing the domain name. If the pointer returned for
.IR mp ,
.IR up ,
or
.I dp
is
.I NULL,
it signifies that the element
of the netgroup contains wild card specifier in that position of the
triple.
.sp
.LP
The pointers returned by
.B getnetgrent()
point into a buffer allocated
by
.B setnetgrent()
that is reused by each call. This space is released
when an
.B endnetgrent()
call is made, and should not be released by the
caller. This implementation is not safe for use in multi-threaded
applications.
.sp
.LP
The function
.B getnetgrent_r()
is similar to
.BR getnetgrent()
function, but it uses a buffer supplied by the caller for the space needed
to store the results.   The parameter
.I buffer
should be a pointer to a
buffer allocated by the caller and the length of this buffer should be
specified by the parameter
.IR buflen .
The buffer must be large enough to
hold the data associated with the triple. The
.B getnetgrent_r()
function
is safe for use both in single-threaded and multi-threaded applications.
.sp
.LP
The function
.B endnetgrent()
frees the space allocated by the previous
.B setnetgrent()
call.  The equivalent of an \fBendnetgrent()\fR
implicitly performed whenever a
.B setnetgrent()
call is made to a new
network group.
.sp
.LP
Note that while
.B setnetgrent()
and
.B endnetgrent()
are safe for
use in multi-threaded applications, the effect of each is process-wide.
Calling
.B setnetgrent()
resets the enumeration position for all threads.
If multiple threads interleave calls to
.B getnetgrent_r()
each will
enumerate a disjoint subset of the netgroup. Thus the effective use of these
functions in multi-threaded applications may require coordination by the
caller.
.SH ERRORS
.sp
.LP
The function
.B getnetgrent_r()
will return
.B 0
and set
.BR errno
to
.B ERANGE
if the length of the buffer supplied by caller is not large
enough to store the result.  See
.BR Intro (2)
for the proper usage and
interpretation of
.B errno
in multi-threaded applications.
.sp
.LP
The functions
.B setnetgrent()
and
.B endnetgrent()
return
.BR 0
upon success.
.SH FILES
.sp
.ne 2
.mk
.na
.B /etc/nsswitch.conf
.ad
.RS 22n
.rt

.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelSee \fBDESCRIPTION\fR section.
.TE

.SH SEE ALSO
.sp
.LP
.BR Intro (2),
.BR Intro (3),
.BR netgroup (4),
.BR nsswitch.conf (4),
.BR attributes (5)
.SH WARNINGS
.sp
.LP
The function
.B getnetgrent_r()
is included in this release on an
uncommitted basis only, and is subject to change or removal in future minor
releases.
.SH NOTES
.sp
.LP
Only the Network Information Services,
.B NIS
and
.B NIS+,
are
supported as sources for the
.B netgroup
database.
.sp
.LP
When compiling multi-threaded applications, see
.BR Intro (3),
\fINotes
On Multithread Applications\fR, for information about the use of the
.B _REENTRANT
flag.
