'\" te
.\" Copyright 1989 AT&T.  Copyright (c) 2004, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH tmpnam 3C "18 May 2004" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
tmpnam, tmpnam_r, tempnam \- create a name for a temporary file
.SH SYNOPSIS
.LP
.nf
#include <stdio.h>

\fBchar *\fBtmpnam\fR(\fBchar *\fIs\fR);
.fi

.LP
.nf
\fBchar *\fBtmpnam_r\fR(\fBchar *\fIs\fR);
.fi

.LP
.nf
\fBchar *\fBtempnam\fR(\fBconst char *\fIdir\fR, \fBconst char *\fIpfx\fR);
.fi

.SH DESCRIPTION
.sp
.LP
These functions generate file names that can be used safely for a temporary
file.
.SS "\fBtmpnam()\fR"
.sp
.LP
The
.B tmpnam()
function always generates a file name using the path
prefix defined as
.B P_tmpdir
in the
.RB < stdio.h >
header. On Solaris
systems, the default value for
.B P_tmpdir
is
.BR /var/tmp .
If
.IR s
is
.IR NULL ,
.B tmpnam()
leaves its result in a thread-specific data
area and returns a pointer to that area. The next call to
.B tmpnam()
by
the same thread will destroy the contents of the area. If
.I s
is not
.IR NULL ,
it is assumed to be the address of an array of at least
.B L_tmpnam
bytes, where
.B L_tmpnam
is a constant defined through
.RB "inclusion of <" stdio.h ">. The " " tmpnam()" " function places its result"
in that array and returns
.IR s .
.SS "\fBtmpnam_r()\fR"
.sp
.LP
The
.B tmpnam_r()
function has the same functionality as
.BR tmpnam()
except that if
.I s
is a null pointer, the function returns
.IR NULL .
.SS "\fBtempnam()\fR"
.sp
.LP
The
.B tempnam()
function allows the user to control the choice of a
directory. The argument
.I dir
points to the name of the directory in
which the file is to be created. If
.I dir
is
.I NULL
or points to a
string that is not a name for an appropriate directory, the path prefix
defined as
.B P_tmpdir
in the
.RB < stdio.h >
header is used. If that
directory is not accessible,
.B /tmp
is used. If, however, the
.B TMPDIR
environment variable is set in the user's environment, its
value is used as the temporary-file directory.
.sp
.LP
Many applications prefer that temporary files have certain initial
.RI "character sequences in their names. The " pfx " argument may be " NULL 
or point to a string of up to five characters to be used as the initial
characters of the temporary-file name.
.sp
.LP
Upon successful completion,
.B tempnam()
uses
.BR malloc "(3C) to"
allocate space for a string, puts the generated pathname in that space, and
returns a pointer to it. The pointer is suitable for use in a subsequent
call to
.BR free() .
If
.B tempnam()
cannot return the expected result
for any reason (for example,
.B malloc()
failed), or if none of the
above-mentioned attempts to find an appropriate directory was successful, a
null pointer is returned and
.B errno
is set to indicate the error.
.SH ERRORS
.sp
.LP
The
.B tempnam()
function will fail if:
.sp
.ne 2
.mk
.na
.B ENOMEM
.ad
.RS 10n
.rt
Insufficient storage space is available.
.RE

.SH USAGE
.sp
.LP
These functions generate a different file name each time they are called.
.sp
.LP
Files created using these functions and either
.BR fopen (3C)
or
.BR creat (2)
are temporary only in the sense that they reside in a
directory intended for temporary use, and their names are unique. It is the
user's responsibility to remove the file when its use is ended.
.sp
.LP
If called more than
.B TMP_MAX
(defined in
.RB < stdio.h >)
times in a
single process, these functions start recycling previously used names.
.sp
.LP
Between the time a file name is created and the file is opened, it is
possible for some other process to create a file with the same name. This
can never happen if that other process is using these functions or
.BR mktemp (3C)
and the file names are chosen to render duplication by
other means unlikely.
.sp
.LP
The
.B tmpnam()
function is safe to use in multithreaded applications
because it employs thread-specific data if it is passed a NULL pointer.
However, its use is discouraged. The
.B tempnam()
function is safe in
multithreaded applications and should be used instead.
.sp
.LP
When compiling multithreaded applications, the
.B _REENTRANT
flag must
be defined on the compile line.  This flag should be used only with
multithreaded applications.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface Stability\fBtmpnam()\fR and \fBtempnam()\fR are Standard.
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR creat (2),
.BR unlink (2),
.BR fopen (3C),
.BR free (3C),
.BR malloc (3C),
.BR mktemp (3C),
.BR mkstemp (3C),
.BR tmpfile (3C),
.BR attributes (5),
.BR standards (5)
