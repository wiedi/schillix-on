'\" te
.\" Copyright 1989 AT&T  Copyright (c) 2002, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH fmtmsg 3C "24 Jul 2002" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
fmtmsg \- display a message on stderr or system console
.SH SYNOPSIS
.LP
.nf
#include <fmtmsg.h>

\fBint\fR \fBfmtmsg\fR(\fBlong\fR \fIclassification\fR, \fBconst  char *\fIlabel\fR, \fBint\fR \fIseverity\fR,
\fBconst char *\fItext\fR, \fBconst char *\fIaction\fR, \fBconst char *\fItag\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The \fBfmtmsg()\fR function writes a formatted message to
.BR stderr ,
to
the console, or to both, on a message's classification component. It can be
used instead of the traditional \fBprintf\fR(3C) interface to display
messages to
.BR stderr ,
and in conjunction with
.BR gettxt "(3C), provides"
a simple interface for producing language-independent applications.
.sp
.LP
A formatted message consists of up to five standard components (
.IR label ,
.IR severity ,
.IR text ,
.IR action ,
and
.IR tag )
as
described below. The \fIclassification\fR component is not part of the
standard message displayed to the user, but rather defines the source of the
message and directs the display of the formatted message.
.sp
.ne 2
.mk
.na
\fIclassification\fR
.ad
.RS 18n
.rt
Contains identifiers from the following groups of major classifications and
subclassifications. Any one identifier from a subclass may be used in
combination by ORing the values together with a single identifier from a
different subclass. Two or more identifiers from the same subclass should
not be used together, with the exception of identifiers from the display
subclass. (Both display subclass identifiers may be used so that messages
can be displayed to both
.B stderr
and the system console).
.RS +4
.TP
.ie t \(bu
.el o
"Major classifications" identify the source of the condition. Identifiers
are:
.B MM_HARD
(hardware),
.B MM_SOFT
(software), and \fBMM_FIRM\fR
(firmware).
.RE
.RS +4
.TP
.ie t \(bu
.el o
"Message source subclassifications" identify the type of software in which
the problem is spotted. Identifiers are:
.B MM_APPL
(application),
\fBMM_UTIL\fR (utility), and \fBMM_OPSYS\fR (operating system).
.RE
.RS +4
.TP
.ie t \(bu
.el o
"Display subclassifications" indicate where the message is to be displayed.
Identifiers are:
.B MM_PRINT
to display the message on the standard error
stream,
.B MM_CONSOLE
to display the message on the system console.
Neither, either, or both identifiers may be used.
.RE
.RS +4
.TP
.ie t \(bu
.el o
"Status subclassifications" indicate whether the application will recover
from the condition. Identifiers are:
.B MM_RECOVER
(recoverable) and
\fBMM_NRECOV\fR (non-recoverable).
.RE
.RS +4
.TP
.ie t \(bu
.el o
An additional identifier,
.BR MM_NULLMC ,
indicates that no classification
component is supplied for the message.
.RE
.RE

.sp
.ne 2
.mk
.na
.I label
.ad
.RS 18n
.rt
Identifies the source of the message. The format of this component is two
fields separated by a colon. The first field is up to 10 characters long;
.RI "the second is up to 14 characters. Suggested usage is that" " label"
identifies the package in which the application resides as well as the
program or application name. For example, the
.I label
.B UX:cat
indicates the
.B UNIX
System V package and the
.BR cat (1)
utility.
.RE

.sp
.ne 2
.mk
.na
.I severity
.ad
.RS 18n
.rt
Indicates the seriousness of the condition. Identifiers for the standard
levels of
.I severity
are:
.RS +4
.TP
.ie t \(bu
.el o
\fBMM_HALT\fR indicates that the application has encountered a severe fault
and is halting. Produces the print string
.BR HALT .
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fBMM_ERROR\fR indicates that the application has detected a fault.
Produces the print string
.BR ERROR .
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fBMM_WARNING\fR indicates a condition out of the ordinary that might be a
problem and should be watched. Produces the print string
.BR WARNING .
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fBMM_INFO\fR provides information about a condition that is not in error.
Produces the print string
.BR INFO .
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fBMM_NOSEV\fR indicates that no severity level is supplied for the
message.
.RE
Other severity levels may be added by using the
.BR addseverity()
routine.
.RE

.sp
.ne 2
.mk
.na
.I text
.ad
.RS 18n
.rt
Describes the condition that produced the message. The
.I text
string is
not limited to a specific size.
.RE

.sp
.ne 2
.mk
.na
.I action
.ad
.RS 18n
.rt
Describes the first step to be taken in the error recovery process.
\fBfmtmsg()\fR precedes each action string with the prefix:
\fBTO\fRFIX\fB:.\fR The \fIaction\fR string is not limited to a specific
size.
.RE

.sp
.ne 2
.mk
.na
.I tag
.ad
.RS 18n
.rt
An identifier which references on-line documentation for the message.
Suggested usage is that
.I tag
includes the
.I label
and a unique
identifying number. A sample
.I tag
is
.BR UX:cat:146 .
.RE

.SS "Environment Variables"
.sp
.LP
The
.B MSGVERB
and
.B SEV_LEVEL
environment variables control the
behavior of \fBfmtmsg()\fR as follows:
.sp
.ne 2
.mk
.na
.B MSGVERB
.ad
.RS 13n
.rt
This variable determines which message components \fBfmtmsg()\fR selects
when writing messages to
.BR stderr .
Its value is a colon-separated list
of optional keywords and can be set as follows:
.sp
.in +2
.nf
\fBMSGVERB=\fR[\fIkeyword\fR[\fB:\fIkeyword\fR[\fB:\fR\|.\|.\|.]]]
\fBexport MSGVERB\fR
.fi
.in -2

Valid
.I keywords
are:
.BR label ,
.BR severity ,
.BR text ,
.BR action ,
and
.BR tag .
If
.B MSGVERB
contains a keyword for a
component and the component's value is not the component's null value,
\fBfmtmsg()\fR includes that component in the message when writing the
message to
.BR stderr .
If
.B MSGVERB
does not include a keyword for a
message component, that component is not included in the display of the
message. The keywords may appear in any order. If
.B MSGVERB
is not
defined, if its value is the null string, if its value is not of the correct
format, or if it contains keywords other than the valid ones listed above,
\fBfmtmsg()\fR selects all components.
.sp
The first time \fBfmtmsg()\fR is called, it examines
.B MSGVERB
to
determine which message components are to be selected when generating a
message to write to the standard error stream,
.BR stderr .
The values
accepted on the initial call are saved for future calls.
.sp
The
.B MSGVERB
environment variable affects only those components that
are selected for display to the standard error stream. All message
components are included in console messages.
.RE

.sp
.ne 2
.mk
.na
.B SEV_LEVEL
.ad
.RS 13n
.rt
This variable defines severity levels and associates print strings with
them for use by
.BR fmtmsg() .
The standard severity levels listed below
cannot be modified. Additional severity levels can also be defined,
redefined, and removed using
.B addseverity()
(see
.BR addseverity (3C)).
If the same severity level is defined by both
\fBSEV_LEVEL\fR and
.BR addseverity() ,
the definition by
\fBaddseverity()\fR takes precedence.
.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 5n
.rt
(no severity is used)
.RE

.sp
.ne 2
.mk
.na
.B 1
.ad
.RS 5n
.rt
.B HALT
.RE

.sp
.ne 2
.mk
.na
.B 2
.ad
.RS 5n
.rt
.B ERROR
.RE

.sp
.ne 2
.mk
.na
.B 3
.ad
.RS 5n
.rt
.B WARNING
.RE

.sp
.ne 2
.mk
.na
.B 4
.ad
.RS 5n
.rt
.B INFO
.RE

The
.B SEV_LEVEL
variable can be set as follows:
.sp
.in +2
.nf
\fBSEV_LEVEL=\fR[\fIdescription\fR[\fB:\fIdescription\fR[\fB:\fR\|.\|.\|.]]]
\fBexport SEV_LEVEL\fR
.fi
.in -2

where
.I description
is a comma-separated list containing three
fields:
.sp
\fIdescription\fR=\fIseverity_keyword\fR,\fIlevel\fR,\fIprintstring\fR
.sp
The
.I severity_keyword
field is a character string that is used as the
keyword on the \fB-s
.I severity
option to the
\fBfmtmsg\fR(1) utility. (This field is not used by the \fBfmtmsg()\fR
function.)
.sp
The
.I level
field is a character string that evaluates to a positive
integer (other than 0, 1, 2, 3, or 4, which are reserved for the standard
severity levels). If the keyword
.I severity_keyword
.RI "is used," " level"
is the severity value passed on to the \fBfmtmsg()\fR function.
.sp
The
.I printstring
field is the character string used by \fBfmtmsg()\fR
in the standard message format whenever the severity value
.I level
is
used.
.sp
If a
.I description
in the colon list is not a three-field comma list,
or if the second field of a comma list does not evaluate to a positive
integer, that
.I description
in the colon list is ignored.
.sp
The first time \fBfmtmsg()\fR is called, it examines the \fBSEV_LEVEL\fR
environment variable, if defined, to determine whether the environment
expands the levels of severity beyond the five standard levels and those
defined using
.BR addseverity() .
The values accepted on the initial call
are saved for future calls.
.RE

.SS "Use in Applications"
.sp
.LP
One or more message components may be systematically omitted from messages
generated by an application by using the null value of the argument for that
component.
.sp
.LP
The table below indicates the null values and identifiers for
\fBfmtmsg()\fR arguments.
.sp

.sp
.TS
tab() box;
lw(1.38i) lw(1.38i) lw(1.38i) lw(1.38i)
lw(1.38i) lw(1.38i) lw(1.38i) lw(1.38i)
.
ArgumentTypeNull-ValueIdentifier
\fIlabel\fR\fBchar*\fR\fB(char*) NULL\fR\fBMM_NULLLBL\fR
\fIseverity\fR\fBint\fR\fB0\fR\fBMM_NULLSEV\fR
\fIclass\fR\fBlong\fR\fB0L\fR\fBMM_NULLMC\fR
\fItext\fR\fBchar*\fR\fB(char*) NULL\fR\fBMM_NULLTXT\fR
\fIaction\fR\fBchar*\fR\fB(char*) NULL\fR\fBMM_NULLACT\fR
\fItag\fR\fBchar*\fR\fB(char*) NULL\fR\fBMM_NULLTAG\fR
.TE

.sp
.LP
Another means of systematically omitting a component is by omitting the
component keyword(s) when defining the
.B MSGVERB
environment variable
(see the
.B "Environment Variables"
section above).
.SH RETURN VALUES
.sp
.LP
The \fBfmtmsg()\fR returns the following values:
.sp
.ne 2
.mk
.na
.B MM_OK
.ad
.RS 12n
.rt
The function succeeded.
.RE

.sp
.ne 2
.mk
.na
.B MM_NOTOK
.ad
.RS 12n
.rt
The function failed completely.
.RE

.sp
.ne 2
.mk
.na
.B MM_NOMSG
.ad
.RS 12n
.rt
The function was unable to generate a message on the standard error stream,
but otherwise succeeded.
.RE

.sp
.ne 2
.mk
.na
.B MM_NOCON
.ad
.RS 12n
.rt
The function was unable to generate a console message, but otherwise
succeeded.
.RE

.SH EXAMPLES
.LP
\fBExample 1\fR The following example of \fBfmtmsg()\fR:
.sp
.in +2
.nf
fmtmsg(MM_PRINT, "UX:cat", MM_ERROR, "invalid syntax",
"refer to manual", "UX:cat:001")
.fi
.in -2

.sp
.LP
produces a complete message in the standard message format:

.sp
.in +2
.nf
UX:cat: ERROR: invalid syntax
TO FIX: refer to manual   UX:cat:001
.fi
.in -2

.LP
\fBExample 2\fR When the environment variable \fBMSGVERB\fR is set as
follows:
.sp
.in +2
.nf
MSGVERB=severity:text:action
.fi
.in -2

.sp
.LP
and the Example 1 is used, \fBfmtmsg()\fR produces:

.sp
.in +2
.nf
ERROR: invalid syntax
TO FIX: refer to manual
.fi
.in -2

.LP
\fBExample 3\fR When the environment variable \fBSEV_LEVEL\fR is set as
follows:
.sp
.in +2
.nf
SEV_LEVEL=note,5,NOTE
.fi
.in -2

.sp
.LP
the following call to \fBfmtmsg()\fR

.sp
.in +2
.nf
fmtmsg(MM_UTIL | MM_PRINT, "UX:cat", 5, "invalid syntax",
"refer to manual", "UX:cat:001")
.fi
.in -2

.sp
.LP
produces

.sp
.in +2
.nf
UX:cat: NOTE: invalid syntax
TO FIX: refer to manual   UX:cat:001
.fi
.in -2

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
\fBfmtmsg\fR(1), \fBaddseverity\fR(3C), \fBgettxt\fR(3C), \fBprintf\fR(3C),
.BR attributes (5),
.BR standards (5)
