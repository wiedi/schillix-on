'\" te
.\" Copyright 1989 AT&T  Copyright (c) 1997, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH addseverity 3C "29 Dec 1996" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
addseverity \- build a list of severity levels for an application for use with
fmtmsg
.SH SYNOPSIS
.LP
.nf
#include <fmtmsg.h>

\fBint\fR \fBaddseverity\fR(\fBint\fR \fIseverity\fR, \fBconst char *\fIstring\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B addseverity()
function builds a list of severity levels for an
application to be used with the message formatting facility
.BR fmtmsg() .
The
.I severity
argument is an integer value indicating the seriousness of the
condition. The
.I string
argument is a pointer to a string describing the
condition (string is not limited to a specific size).
.sp
.LP
If
.B addseverity()
is called with an integer value that has not been
previously defined, the function adds that new severity value and print string
to the existing set of standard severity levels.
.sp
.LP
If
.B addseverity()
is called with an integer value that has been
previously defined, the function redefines that value with the new print
string. Previously defined severity levels may be removed by supplying the null
string. If
.B addseverity()
is called with a negative number or an integer
.RB "value of 0, 1, 2, 3, or 4, the function fails and returns " \(mi1 \&.
The
values 0\(mi4 are reserved for the standard severity levels and cannot be
modified. Identifiers for the standard levels of severity are:
.sp
.ne 2
.mk
.na
.B MM_HALT
.ad
.RS 14n
.rt
Indicates that the application has encountered a severe fault and is halting.
Produces the print string
.BR HALT .
.RE

.sp
.ne 2
.mk
.na
.B MM_ERROR
.ad
.RS 14n
.rt
Indicates that the application has detected a fault. Produces the print string
.BR ERROR .
.RE

.sp
.ne 2
.mk
.na
.B MM_WARNING
.ad
.RS 14n
.rt
Indicates a condition that is out of the ordinary, that might be a problem,
and should be watched. Produces the print string
.BR WARNING .
.RE

.sp
.ne 2
.mk
.na
.B MM_INFO
.ad
.RS 14n
.rt
Provides information about a condition that is not in error. Produces the
print string
.BR INFO .
.RE

.sp
.ne 2
.mk
.na
.B MM_NOSEV
.ad
.RS 14n
.rt
Indicates that no severity level is supplied for the message.
.RE

.sp
.LP
Severity levels may also be defined at run time using the
.BR SEV_LEVEL
environment variable (see
.BR fmtmsg (3C)).
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B addseverity()
returns
.BR MM_OK .
Otherwise
it returns
.BR MM_NOTOK .
.SH EXAMPLES
.LP
.B Example 1
Example of
.B addseverity()
function.
.sp
.LP
When the function call

.sp
.in +2
.nf
addseverity(7,"ALERT")
.fi
.in -2

.sp
.LP
is followed by the call

.sp
.in +2
.nf
fmtmsg(MM_PRINT, "UX:cat", 7, "invalid syntax", "refer to manual",
"UX:cat:001")
.fi
.in -2

.sp
.LP
the resulting output is

.sp
.in +2
.nf
UX:cat: ALERT: invalid syntax
TO FIX: refer to manual   UX:cat:001
.fi
.in -2

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR fmtmsg (1),
.BR fmtmsg (3C),
.BR gettxt (3C),
.BR printf (3C),
.BR attributes (5)
