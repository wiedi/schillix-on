'\" te
.\" Copyright (c) 2008, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" Copyright (c) 2001, the Institute of Electrical and Electronics Engineers,
.\" Inc. and The Open Group. All Rights Reserved.
.\" Portions Copyright (c) 1995 IEEE  All Rights Reserved.
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH pthread_setcancelstate 3C "22 Jan 2008" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
pthread_setcancelstate \- enable or disable cancellation
.SH SYNOPSIS
.LP
.nf
cc -mt [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. -lpthread [ \fIlibrary\fR.\|.\|. ]
#include <pthread.h>

\fBint\fR \fBpthread_setcancelstate\fR(\fBint\fR \fIstate\fR, \fBint *\fIoldstate\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B pthread_setcancelstate()
function atomically sets the calling
thread's cancellation state to the specified
.I state
and if
.I oldstate
is not
.IR NULL ,
stores the previous cancellation
.I state
in
.IR oldstate .
.sp
.LP
The
.I state
can be either of the following:
.sp
.ne 2
.mk
.na
.B PTHREAD_CANCEL_ENABLE
.ad
.sp .6
.RS 4n
This is the default. When cancellation is deferred (deferred cancellation
is also the default), cancellation occurs when the target thread reaches a
cancellation point and a cancel is pending. When cancellation is
asynchronous, receipt of a
.BR pthread_cancel (3C)
call causes immediate
cancellation.
.RE

.sp
.ne 2
.mk
.na
.B PTHREAD_CANCEL_DISABLE
.ad
.sp .6
.RS 4n
When cancellation is deferred, all cancellation requests to the target
thread are held pending. When cancellation is asynchronous, all cancellation
requests to the target thread are held pending; as soon as cancellation is
re-enabled, pending cancellations are executed immediately.
.RE

.sp
.LP
See
.BR cancellation (5)
for the definition of a cancellation point and a
discussion of cancellation concepts. See \fBpthread_setcanceltype\fR(3C) for
explanations of deferred and asynchronous cancellation.
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.BR pthread_setcancelstate() ,
returns
.BR 0 .
Otherwise, an error number is returned to indicate the error.
.SH ERRORS
.sp
.LP
The
.B pthread_setcancelstate()
function will fail if:
.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The specified
.I state
is not
.B PTHREAD_CANCEL_ENABLE
or
.BR PTHREAD_CANCEL_DISABLE .
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
_
StandardSee \fBstandards\fR(5).
.TE

.SH SEE ALSO
.sp
.LP
.BR pthread_cancel (3C),
.BR pthread_cleanup_pop (3C),
.BR pthread_cleanup_push (3C),
.BR pthread_exit (3C),
.BR pthread_join (3C),
.BR pthread_setcanceltype (3C),
.BR pthread_testcancel (3C),
.BR setjmp (3C),
.BR attributes (5),
.BR cancellation (5),
.BR condition (5),
.BR standards (5)
