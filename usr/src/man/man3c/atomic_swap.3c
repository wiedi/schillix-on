'\" te
.\" Copyright (c) 2005, Sun Microsystems, Inc. All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH atomic_swap 3C "13 May 2005" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
atomic_swap, atomic_swap_8, atomic_swap_uchar, atomic_swap_16,
atomic_swap_ushort, atomic_swap_32, atomic_swap_uint, atomic_swap_ulong,
atomic_swap_64, atomic_swap_ptr \- atomic swap operations
.SH SYNOPSIS
.LP
.nf
#include <atomic.h>

\fBuint8_t\fR \fBatomic_swap_8\fR(\fBvolatile uint8_t *\fItarget\fR, \fBuint8_t\fR \fInewval\fR);
.fi

.LP
.nf
\fBuchar_t\fR \fBatomic_swap_uchar\fR(\fBvolatile uchar_t *\fItarget\fR, \fBuchar_t\fR \fInewval\fR);
.fi

.LP
.nf
\fBuint16_t\fR \fBatomic_swap_16\fR(\fBvolatile uint16_t *\fItarget\fR, \fBuint16_t\fR \fInewval\fR);
.fi

.LP
.nf
\fBushort_t\fR \fBatomic_swap_ushort\fR(\fBvolatile ushort_t *\fItarget\fR, \fBushort_t\fR \fInewval\fR);
.fi

.LP
.nf
\fBuint32_t\fR \fBatomic_swap_32\fR(\fBvolatile uint32_t *\fItarget\fR, \fBuint32_t\fR \fInewval\fR);
.fi

.LP
.nf
\fBuint_t\fR \fBatomic_swap_uint\fR(\fBvolatile uint_t *\fItarget\fR, \fBuint_t\fR \fInewval\fR);
.fi

.LP
.nf
\fBulong_t\fR \fBatomic_swap_ulong\fR(\fBvolatile ulong_t *\fItarget\fR, \fBulong_t\fR \fInewval\fR);
.fi

.LP
.nf
\fBuint64_t\fR \fBatomic_swap_64\fR(\fBvolatile uint64_t *\fItarget\fR, \fBuint64_t\fR \fInewval\fR);
.fi

.LP
.nf
\fBvoid *\fBatomic_swap_ptr\fR(\fBvolatile void *\fItarget\fR, \fBvoid *\fInewval\fR);
.fi

.SH DESCRIPTION
.sp
.LP
These functions enable a swap operation to occur atomically. The value
stored in
.I target
is replaced with
.IR newval .
The old value is
returned by the function.
.SH RETURN VALUES
.sp
.LP
These functions return the old of *\fItarget\fR.
.SH ERRORS
.sp
.LP
No errors are defined.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStable
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR atomic_add (3C),
.BR atomic_and (3C),
.BR atomic_bits (3C),
.BR atomic_dec (3C),
.BR atomic_inc (3C),
.BR atomic_or (3C),
.BR atomic_cas (3C),
.BR membar_ops (3C),
.BR attributes (5),
.BR atomic_ops (9F)
