'\" te
.\" Copyright (c) 2002, Sun Microsystems, Inc. All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" Copyright 1989 AT&T
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH div 3C "24 Jul 2002" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
div, ldiv, lldiv \- compute the quotient and remainder
.SH SYNOPSIS
.LP
.nf
#include <stdlib.h>

\fBdiv_t\fR \fBdiv\fR(\fBint\fR \fInumer\fR, \fBint\fR \fIdenom\fR);
.fi

.LP
.nf
\fBldiv_t\fR \fBldiv\fR(\fBlong int\fR \fInumer\fR, \fBlong int\fR \fIdenom\fR);
.fi

.LP
.nf
\fBlldiv_t\fR \fBlldiv\fR(\fBlong long\fR \fInumer\fR, \fBlong long\fR \fIdenom\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B div()
function computes the quotient and remainder of the
division of the numerator
.I numer
by the denominator
.IR denom .
It
provides a well-defined semantics for the signed integral division and
remainder operations, unlike the implementation-defined semantics of the
built-in operations.   The sign of the resulting quotient is that of the
algebraic quotient, and if the division is inexact, the magnitude of the
resulting quotient is the largest integer less than the magnitude of the
algebraic quotient. If the result cannot be  represented, the behavior is
undefined; otherwise,
.I quotient
*
.I denom
+
.I remainder
will
equal
.IR numer .
.sp
.LP
The
.B ldiv()
and
.B lldiv()
functions are similar to
.BR div() ,
except that the arguments and the members of the returned structure are
different. The
.B ldiv()
function returns a structure of type
.B ldiv_t
and has type
.BR "long int" .
The
.B lldiv()
function
returns a structure of type
.B lldiv_t
and has type
.BR "long long" .
.SH RETURN VALUES
.sp
.LP
The
.B div()
function returns a structure of type
.BR div_t ,
comprising both the quotient and remainder:
.sp
.in +2
.nf
int   quot;   /*quotient*/
int   rem;    /*remainder*/
.fi
.in -2

.sp
.LP
The
.B ldiv()
function returns a structure of type
.B ldiv_t
and
.B lldiv()
returns a structure of type
.BR lldiv_t ,
comprising both the
quotient and remainder:
.sp
.in +2
.nf
long int   quot;   /*quotient*/
long int   rem;    /*remainder*/
.fi
.in -2

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR attributes (5),
.BR standards (5)
