'\" te
.\" Copyright (c) 2009, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright 1989 AT&T
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH dladdr 3C "4 Feb 2009" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
dladdr, dladdr1 \- translate address to symbolic information
.SH SYNOPSIS
.LP
.nf
#include <dlfcn.h>

\fBint\fR \fBdladdr\fR(\fBvoid *\fIaddress\fR, \fBDl_info_t *\fIdlip\fR);
.fi

.LP
.nf
\fBint\fR \fBdladdr1\fR(\fBvoid *\fIaddress\fR, \fBDl_info_t *\fIdlip\fR, \fBvoid **\fIinfo\fR, \fBint\fR \fIflags\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B dladdr()
and
.B dladdr1()
functions determine if the specified
\fIaddress\fR is located within one of the mapped objects that make up the
current applications address space. An address is deemed to fall within a
.RI "mapped object when it is between the base address, and the" " _end"
address of that object. See NOTES. If a mapped object fits this criteria,
the symbol table made available to the runtime linker is searched to locate
the nearest symbol to the specified address.  The nearest symbol is one that
has a value less than or equal to the required address.
.sp
.LP
The \fBDl_info_t\fR structure must be preallocated by the user. The
structure members are filled in by
.BR dladdr() ,
based on the specified
.IR address .
The \fBDl_info_t\fR structure includes the following
members:
.sp
.in +2
.nf
    const char    *dli_fname;
    void          *dli_fbase;
    const char    *dli_sname;
    void          *dli_saddr;
.fi
.in -2

.sp
.LP
The \fBDl_info_t\fR members provide the following information.
.sp
.ne 2
.mk
.na
\fBdli_fname\fR
.ad
.RS 13n
.rt
Contains a pointer to the filename of the containing object.
.RE

.sp
.ne 2
.mk
.na
\fBdli_fbase\fR
.ad
.RS 13n
.rt
Contains the base address of the containing object.
.RE

.sp
.ne 2
.mk
.na
.B dli_sname
.ad
.RS 13n
.rt
Contains a pointer to the symbol name that is nearest to the specified
address. This symbol either represents the exact address that was specified,
or is the nearest symbol with a lower address.
.RE

.sp
.ne 2
.mk
.na
.B dli_saddr
.ad
.RS 13n
.rt
Contains the actual address of the symbol pointed to by
.BR dli_sname .
.RE

.sp
.LP
The
.B dladdr1()
function provides for addition information to be
returned as specified by the \fIflags\fR argument:
.sp
.ne 2
.mk
.na
.B RTLD_DL_SYMENT
.ad
.RS 19n
.rt
Obtain the
.B ELF
symbol table entry for the matched symbol. The
\fIinfo\fR argument points to a symbol pointer as defined in
<\fBsys/elf.h\fR> (\fBElf32_Sym **\fIinfo\fR or \fBElf64_Sym
**\fIinfo\fR). Most of the information found in an ELF symbol can only be
properly interpreted by the runtime linker. However, there are two fields
that contain information useful to the caller of
.BR dladdr1() :
The
\fBst_size\fR field contains the size of the referenced item. The
\fBst_info\fR field provides symbol type and binding attributes. See the
\fILinker and Libraries Guild\fR for more information.
.RE

.sp
.ne 2
.mk
.na
.B RTLD_DL_LINKMAP
.ad
.RS 19n
.rt
Obtain the
.B Link_map
for the matched file. The \fIinfo\fR argument
points to a
.B Link_map
pointer as defined in <\fBsys/link.h\fR>
(\fBLink_map **\fIinfo\fR).
.RE

.SH RETURN VALUES
.sp
.LP
If the specified
.I address
cannot be matched to a mapped object, a
\fB0\fR is returned. Otherwise, a non-zero return is made and the associated
\fBDl_info_t\fR elements are filled.
.SH USAGE
.sp
.LP
The
.B dladdr()
and
.B dladdr1()
functions are one of a family of
functions that give the user direct access to the dynamic linking
facilities. These facilities are available to dynamically-linked processes
only. See
.IR "Linker and Libraries Guide" .
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR ld (1),
.BR dlclose (3C),
.BR dldump (3C),
.BR dlerror (3C),
.BR dlopen (3C),
.BR dlsym (3C),
.BR attributes (5)
.sp
.LP
.I Linker and Libraries Guide
.SH NOTES
.sp
.LP
The \fBDl_info_t\fR pointer elements point to addresses within the mapped
objects. These pointers can become invalid if objects are removed prior to
these elements use. See
.BR dlclose (3C).
.sp
.LP
If no symbol is found to describe the specified address, both the
\fBdli_sname\fR and \fBdli_saddr\fR members are set to
.BR 0 .
.sp
.LP
If the address specified exists within a mapped object in the range between
the base address and the address of the first global symbol in the object,
the reserved local symbol
.B _START_
is returned. This symbol acts as a
label representing the start of the mapped object. As a label, this symbol
has no size. The
.B dli_saddr
member is set to the base address of the
associated object. The
.B dli_sname
member is set to the symbol name
.BR _START_ .
If the flag argument is set to
.BR RTLD_DL_SYMENT ,
symbol
information for
.B _START_
is returned.
.sp
.LP
If an object is acting as a filter, care should be taken when interpreting
the address of any symbol obtained using a handle to this object. For
example, using \fBdlsym\fR(3C) to obtain the symbol \fI_end\fR for this
object, results in returning the address of the symbol
.I _end
within the
filtee, not the filter. For more information on filters see the \fILinker
and Libraries Guide\fR.
