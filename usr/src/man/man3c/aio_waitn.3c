'\" te
.\" Copyright (c) 2008, Sun Microsystems, Inc.  All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH aio_waitn 3C "18 Dec 2008" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
aio_waitn \- wait for completion of asynchronous I/O operations
.SH SYNOPSIS
.LP
.nf
#include <aio.h>

\fBint\fR \fBaio_waitn\fR(\fBstruct aiocb *\fIlist\fR[], \fBuint_t\fR \fInent\fR,
     \fBuint_t *\fInwait\fR, \fBconst struct timespec *\fItimeout\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B aio_waitn()
function suspends the calling thread until at least
the number of requests specified by
.I nwait
have completed, until a
signal interrupts the function, or if
.I timeout
is not
.IR NULL ,
until
the time interval specified by
.I timeout
has passed.
.sp
.LP
To effect a poll, the
.I timeout
argument should be non-zero, pointing
to a zero-valued
.B timespec
structure.
.sp
.LP
The
.I list
argument is an array of uninitialized I/O completion block
pointers to be filled in by the system before
.B aio_waitn()
returns. The
\fInent\fR argument indicates the maximum number of elements that can be
placed in
.IR list []
and is limited to
.B _AIO_LISTIO_MAX
= 4096.
.sp
.LP
The
.I nwait
argument points to the minimum number of requests
\fBaio_waitn()\fR should wait for. Upon returning, the content of
\fInwait\fR is set to the actual number of requests in the \fBaiocb\fR list,
which can be greater than the initial value specified in
.IR nwait .
The
\fBaio_waitn()\fR function attempts to return as many requests as possible,
up to the number of outstanding asynchronous I/Os but less than or equal to
the maximum specified by the
.I nent
argument. As soon as the number of
outstanding asynchronous I/O requests becomes 0,
.B aio_waitn()
returns
with the current list of completed requests.
.sp
.LP
The
.B aiocb
structures returned will have been used in initiating an
asynchronous I/O request from any thread in the process with
.BR aio_read (3C),
.BR aio_write (3C),
or
.BR lio_listio (3C).
.sp
.LP
If the time interval expires before the expected number of I/O operations
specified by
.I nwait
are completed,
.B aio_waitn()
returns the number
of completed requests and the content of the
.I nwait
pointer is updated
with that number.
.sp
.LP
If
.B aio_waitn()
is interrupted by a signal,
.I nwait
is set to the
number of completed requests.
.sp
.LP
The application can determine the status of the completed asynchronous I/O
by checking the associated error and return status using
.BR aio_error (3C)
and
.BR aio_return "(3C), respectively."
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B aio_waitn()
returns 0. Otherwise, it
returns -1 and sets
.B errno
to indicate the error.
.SH ERRORS
.sp
.LP
The
.B aio_waitn()
function will fail if:
.sp
.ne 2
.mk
.na
.B EAGAIN
.ad
.RS 10n
.rt
There are no outstanding asynchronous I/O requests.
.RE

.sp
.ne 2
.mk
.na
.B EFAULT
.ad
.RS 10n
.rt
The
.IR list [],
.IR nwait ,
or
.I timeout
argument points to an
address outside the address space of the process. The
.B errno
variable
is set to
.B EFAULT
only if this condition is detected by the application
process.
.RE

.sp
.ne 2
.mk
.na
.B EINTR
.ad
.RS 10n
.rt
The execution of
.B aio_waitn()
was interrupted by a signal.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The
.I timeout
element
.I tv_sec
or
.I tv_nsec
.RI "is < 0," " nent"
is set to 0 or >
.BR _AIO_LISTIO_MAX ,
or
.I nwait
is either set to 0 or
is > \fInent\fR.
.RE

.sp
.ne 2
.mk
.na
.B ENOMEM
.ad
.RS 10n
.rt
There is currently not enough available memory. The application can try
again later.
.RE

.sp
.ne 2
.mk
.na
.B ETIME
.ad
.RS 10n
.rt
The time interval expired before
.I nwait
outstanding requests have
completed.
.RE

.SH USAGE
.sp
.LP
The
.B aio_waitn()
function has a transitional interface for 64-bit file
offsets. See \fBlf64\fR(5).
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR aio.h (3HEAD),
.BR aio_error (3C),
.BR aio_read (3C),
.BR aio_write (3C),
.BR lio_listio (3C),
.BR aio_return (3C),
.BR attributes (5),
\fBlf64\fR(5)
