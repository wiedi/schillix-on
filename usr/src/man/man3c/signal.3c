'\" te
.\" Copyright (c) 2007 Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright 1989 AT&T
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH signal 3C "6 Sep 2007" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
signal, sigset, sighold, sigrelse, sigignore, sigpause \- simplified signal
management for application processes
.SH SYNOPSIS
.LP
.nf
#include <signal.h>

\fBvoid\fR \fR(\fB*signal(int\fR \fIsig\fR, \fBvoid (*\fIdisp\fR)(int)))(int);
.fi

.LP
.nf
\fBvoid (*\fBsigset\fR(\fBint\fR \fIsig\fR, \fBvoid (*\fIdisp\fR)(int)))(int);
.fi

.LP
.nf
\fBint\fR \fBsighold\fR(\fBint\fR \fIsig\fR);
.fi

.LP
.nf
\fBint\fR \fBsigrelse\fR(\fBint\fR \fIsig\fR);
.fi

.LP
.nf
\fBint\fR \fBsigignore\fR(\fBint\fR \fIsig\fR);
.fi

.LP
.nf
\fBint\fR \fBsigpause\fR(\fBint\fR \fIsig\fR);
.fi

.SH DESCRIPTION
.sp
.LP
These functions provide simplified signal management for application
processes. See \fBsignal.h\fR(3HEAD) for an explanation of general signal
concepts.
.sp
.LP
The
.B signal()
and
.B sigset()
functions modify signal dispositions.
The
.I sig
argument specifies the signal, which may be any signal except
.B SIGKILL
and
.B SIGSTOP.
The
.I disp
argument specifies the
signal's disposition, which may be
.B "SIG_DFL, SIG_IGN,"
or the
address of a signal handler. If
.B signal()
is used,
.I disp
is the
address of a signal handler, and
.I sig
is not
.BR SIGILL,
.BR SIGTRAP ,
or
.BR SIGPWR ,
the system first sets the signal's
disposition to
.B SIG_DFL
before executing the signal handler. If
.B sigset()
is used and
.I disp
is the address of a signal handler,
the system adds
.I sig
to the calling process's signal  mask before
executing the signal handler; when the signal handler returns, the system
restores the calling process's signal mask to its state prior to the
delivery of the signal. In addition, if
.B sigset()
is used and
.I disp
is equal to
.BR SIG_HOLD ,
.I sig
is added to the calling
process's signal mask and the signal's disposition remains unchanged.
.sp
.LP
The
.B sighold()
function adds
.I sig
to the calling process's signal
mask.
.sp
.LP
The
.B sigrelse()
function removes
.I sig
from the calling process's
signal mask.
.sp
.LP
The
.B sigignore()
function sets the disposition of
.I sig
to
.B SIG_IGN.
.sp
.LP
The
.B sigpause()
function removes
.I sig
from the calling process's
signal mask  and suspends the calling process until a signal is received.
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B signal()
returns the signal's previous
disposition. Otherwise, it returns
.B SIG_ERR
and sets
.B errno
to
indicate the error.
.sp
.LP
Upon successful completion,
.B sigset()
returns
.B SIG_HOLD
if the
signal had been blocked or the signal's previous disposition if it had not
been blocked. Otherwise, it returns
.B SIG_ERR
and sets
.B errno
to
indicate the error.
.sp
.LP
Upon successful completion,
.BR sighold() ,
.BR sigrelse() ,
.BR sigignore() ,
and
.BR sigpause() ,
return
.BR 0 .
Otherwise, they
return \fB\(mi1\fR and set
.B errno
to indicate the error.
.SH ERRORS
.sp
.LP
These functions fail if:
.sp
.ne 2
.mk
.na
.B EINTR
.ad
.RS 10n
.rt
A signal was caught during the execution
.BR sigpause() .
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The value of the
.I sig
argument is not a valid signal or is equal to
.B SIGKILL
or
.BR SIGSTOP .
.RE

.SH USAGE
.sp
.LP
The
.B sighold()
function used in conjunction with
.B sigrelse()
or
.B sigpause()
may be used to establish critical regions of code that
require the delivery of a signal to be temporarily deferred.
.sp
.LP
If
.B signal()
or
.B sigset()
is used to set
.BR SIGCHLD 's
disposition to a signal handler,
.B SIGCHLD
will not be sent when the
calling process's children are stopped or continued.
.sp
.LP
If any of the above functions are used to set
.BR SIGCHLD "'s disposition"
to
.B SIG_IGN,
the calling process's child processes will not create
zombie processes when they terminate (see
.BR exit (2)).
If the calling
process subsequently waits for its children, it blocks until all of its
children terminate; it then returns \fB\(mi1\fR with
.B errno
set to
.B ECHILD
(see \fBwait\fR(3C) and
.BR waitid (2)).
.sp
.LP
The system guarantees that if more than one instance of the same signal is
generated to a process, at least one signal will be received.  It does not
guarantee the reception of every generated signal.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR exit (2),
.BR kill (2),
.BR pause (2),
.BR sigaction (2),
.BR sigsend (2),
.BR waitid (2),
.BR signal.h (3HEAD),
.BR wait (3C),
.BR attributes (5),
.BR standards (5)
