'\" te
.\" Copyright (c) 2008, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH gettext 3C "4 Jun 2008" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
gettext, dgettext, dcgettext, ngettext, dngettext, dcngettext, textdomain,
bindtextdomain, bind_textdomain_codeset \- message handling functions
.SH SYNOPSIS
.SS "Solaris and GNU-compatible"
.LP
.nf
#include <libintl.h>

\fBchar *\fBgettext\fR(\fBconst char *\fImsgid\fR);
.fi

.LP
.nf
\fBchar *\fBdgettext\fR(\fBconst char *\fIdomainname\fR, \fBconst char *\fImsgid\fR);
.fi

.LP
.nf
\fBchar *\fBtextdomain\fR(\fBconst char *\fIdomainname\fR);
.fi

.LP
.nf
\fBchar *\fBbindtextdomain\fR(\fBconst char *\fIdomainname\fR, \fBconst char *\fIdirname\fR);
.fi

.LP
.nf
#include <libintl.h>
#include <locale.h>

\fBchar *\fBdcgettext\fR(\fBconst char *\fIdomainname\fR, \fBconst char *\fImsgid\fR,
     \fBint\fR \fIcategory\fR);
.fi

.SS "GNU-compatible"
.LP
.nf
#include <libintl.h>

\fBchar *\fBngettext\fR(\fBconst char *\fImsgid1\fR, \fBconst char *\fImsgid2\fR,
     \fBunsigned long int\fR \fIn\fR);
.fi

.LP
.nf
\fBchar *\fBdngettext\fR(\fBconst char *\fIdomainname\fR, \fBconst char *\fImsgid1\fR,
     \fBconst char *\fImsgid2\fR, \fBunsigned long int\fR \fIn\fR);
.fi

.LP
.nf
\fBchar *\fBbind_textdomain_codeset\fR(\fBconst char *\fIdomainname\fR,
     \fBconst char *\fIcodeset\fR);
.fi

.LP
.nf
extern int _nl_msg_cat_cntr;
extern int *_nl_domain_bindings;
.fi

.LP
.nf
#include <libintl.h>
#include <locale.h>

\fBchar *\fBdcngettext\fR(\fBconst char *\fIdomainname\fR, \fBconst char *\fImsgid1\fR,
     \fBconst char *\fImsgid2\fR, \fBunsigned long int\fR \fIn\fR, \fBint\fR \fIcategory\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.BR gettext() ,
.BR dgettext() ,
and
.B dcgettext()
functions
attempt to retrieve a target string based on the specified
.IR msgid
argument within the context of a specific domain and the current locale. The
length of strings returned by
.BR gettext() ,
.BR dgettext() ,
and
.B dcgettext()
is undetermined until the function is called. The
.I msgid
argument is a null-terminated string.
.sp
.LP
The
.BR ngettext() ,
.BR dngettext() ,
and
.B dcngettext()
functions are
equivalent to
.BR gettext() ,
.BR dgettext() ,
and
.BR dcgettext() ,
respectively, except for the handling of plural forms.  These functions work
only with GNU-compatible message catalogues.  The
.BR ngettext() ,
.BR dngettext() ,
and
.B dcngettext()
functions search for the message
string using the
.I msgid1
argument as the key and the
.I n
argument to
determine the plural form.  If no message catalogues are found,
.I msgid1
is returned if
.I n
== 1, otherwise
.I msgid2
is returned.
.sp
.LP
The
.B NLSPATH
environment variable (see
.BR environ (5))
is searched
first for the location of the
.B LC_MESSAGES
catalogue. The setting of the
.B LC_MESSAGES
category of the current locale determines the locale used by
.B gettext()
and
.B dgettext()
for string retrieval. The
.I category
argument determines the locale used by \fBdcgettext(\|).\fR If \fBNLSPATH\fR
is not defined and the current locale is "C", \fBgettext()\fR,
.BR dgettext() ,
and
.B dcgettext()
simply return the message string that
was passed.  In a locale  other than "C", if \fBNLSPATH\fR is not defined or
if a message catalogue is not found in any of the components specified by
.BR NLSPATH ,
the routines search for the message catalogue using the scheme
described in the following paragraph.
.sp
.LP
The
.B LANGUAGE
environment variable is examined to determine the
GNU-compatible message catalogues to be used. The value of
.B LANGUAGE
is a
list of locale names separated by a colon (':') character.  If
.B LANGUAGE
is defined, each locale name is tried in the specified order and if a
GNU-compatible message catalogue is found, the message is returned.  If a
GNU-compatible message catalogue is found but failed to find a corresponding
.IR msgid ,
the
.I msgid
string is return. If
.B LANGUAGE
is not
defined or if a Solaris message catalogue is found or no GNU-compatible
message catalogue is found in processing
.BR LANGUAGE ,
the pathname used to
locate the message catalogue is
\fIdirname\fR/\fIlocale\fR/\fIcategory\fR/\fIdomainname\fR.mo,
where
.I dirname
is the directory specified by
.BR bindtextdomain() ,
.I locale
is a locale name, and
.I category
is either
.BR LC_MESSAGES
if
.BR gettext() ,
.BR dgettext() ,
.BR ngettext() ,
or
.BR dngettext()
is called, or
.B LC_XXX
where the name is the same as the locale category
name specified by the
.I category
argument to
.B dcgettext()
or
.BR dcngettext() .
.sp
.LP
For
.B gettext()
and
.BR ngettext() ,
the domain used is set by the last
valid call to
.BR textdomain() .
If a valid call to
.B textdomain()
has
not been made, the default domain  (called
.BR messages )
is used.
.sp
.LP
For
.BR dgettext() ,
.BR dcgettext() ,
.BR dngettext() ,
and
.BR dcngettext() ,
the domain used is specified by the
.IR domainname
argument. The
.I domainname
argument is equivalent in syntax and meaning to
the
.I domainname
argument to
.BR textdomain() ,
except that the selection
of the domain is valid only for the duration of the
.BR dgettext() ,
.BR dcgettext() ,
.BR dngettext() ,
or
.B dcngettext()
function call.
.sp
.LP
The
.B textdomain()
function sets or queries the name of the current
domain of the active
.B LC_MESSAGES
.RI "locale category. The" " domainname"
argument is a null-terminated string that can contain only the characters
allowed in legal filenames.
.sp
.LP
The
.I domainname
argument is the unique name of a domain on the system.
If there are multiple versions of the same domain on one system, namespace
collisions can be avoided by using
.BR bindtextdomain() .
If
.B textdomain()
is not called, a default domain is selected. The setting of
domain made by the last valid call to
.B textdomain()
remains valid across
subsequent calls to
.BR setlocale "(3C), and"
.BR gettext() .
.sp
.LP
The
.I domainname
argument is applied to the currently active
.B LC_MESSAGES
locale.
.sp
.LP
The current setting of the domain can be queried without affecting the
current state of the domain by calling
.B textdomain()
with
.I domainname
set to the null pointer. Calling
.B textdomain()
with a
.I domainname
argument of a null string sets the domain to the default
domain
.RB ( messages ).
.sp
.LP
The
.B bindtextdomain()
function binds the path predicate for a message
domain
.I domainname
to the value contained in
.IR dirname .
If
.I domainname
is a non-empty string and has not been bound previously,
.B bindtextdomain()
binds
.I domainname
with
.IR dirname .
.sp
.LP
If
.I domainname
is a non-empty string and has been bound previously,
.B bindtextdomain()
replaces the old binding with
.IR dirname .
The
.I dirname
argument can be an absolute or relative pathname being resolved
when
.BR gettext() ,
.BR dgettext() ,
or
.B dcgettext()
are called. If
.I domainname
is a null pointer or an empty string,
.B bindtextdomain()
returns
.I NULL.
User defined domain names cannot begin with the string
.BR SYS_ .
Domain names beginning with this string are reserved for system
use.
.sp
.LP
The
.B bind_textdomain_codeset()
function can be used to specify the
output codeset for message catalogues for domain
.IR domainname .
The
.I codeset
argument must be a valid codeset name that can be used for the
.BR iconv_open (3C)
function, or a null pointer. If the
.I codeset
argument is the null pointer,
.B bind_textdomain_codeset()
returns the
currently selected codeset for the domain with the name
.IR domainname .
It
returns a null pointer if a codeset has not yet been selected. The
.B bind_textdomain_codeset()
function can be used multiple times.  If used
multiple times with the same
.I domainname
argument, the later call
overrides the settings made by the earlier one. The
.B bind_textdomain_codeset()
function returns a pointer to a string
containing the name of the selected codeset. The string is allocated
internally in the function and must not be changed by the user.
.sp
.LP
The external variables
.B _nl_msg_cat_cntr
and
.BR _nl_domain_bindings
are provided for the compatibility with the GNU
.BR gettext()
implementation.
.SH RETURN VALUES
.sp
.LP
The
.BR gettext() ,
.BR dgettext() ,
and
.B dcgettext()
functions return
the message string if the search succeeds. Otherwise they return the
.I msgid
string.
.sp
.LP
The
.BR ngettext() ,
.BR dngettext() ,
and
.B dcngettext()
functions
return the message string if the search succeeds.  If the search fails,
.I msgid1
is returned if
.I n
== 1. Otherwise
.I msgid2
is
returned.
.sp
.LP
The individual bytes of the string returned by
.BR gettext() ,
.BR dgettext() ,
.BR dcgettext() ,
.BR ngettext() ,
.BR dngettext() ,
or
.B dcngettext()
can contain any value other than
.IR NULL .
If
.IR msgid
is a null pointer, the return value is undefined. The string returned must not
be modified by the program and can be invalidated by a subsequent call to
.B bind_textdomain_codeset()
or
.BR setlocale (3C).
If the
\fIdomainname\fR argument to  \fBdgettext()\fR,\fBdcgettext()\fR,
.BR dngettext() ,
or
.B dcngettext()
is a null pointer, the the domain
currently bound by
.B textdomain()
is used.
.sp
.LP
The normal return value from
.B textdomain()
is a pointer to a string
containing the current setting of the domain. If
.I domainname
is a null
pointer,
.B textdomain()
returns a pointer to the string containing the
current domain. If
.B textdomain()
was not previously called and
.I domainname
is a null string, the name of the default domain is returned.
The name of the default domain is
.BR messages .
If
.B textdomain()
fails,
a null pointer is returned.
.sp
.LP
The return value from
.B bindtextdomain()
is a null-terminated string
containing
.I dirname
or the directory binding associated with
.I domainname
if
.I dirname
is
.I NULL.
If no binding is found, the
default return value is
.BR /usr/lib/locale .
If
.I domainname
is a null
pointer or an empty string,
.B bindtextdomain()
takes no action and returns
a null pointer. The string returned must not be modified by the caller. If
.B bindtextdomain()
fails, a null pointer is returned.
.SH USAGE
.sp
.LP
These functions impose no limit on message length. However, a text
.I domainname
is limited to
.B TEXTDOMAINMAX
(256) bytes.
.sp
.LP
The
.BR gettext() ,
.BR dgettext() ,
.BR dcgettext() ,
.BR ngettext() ,
.BR dngettext() ,
.BR dcngettext() ,
.BR textdomain() ,
and
.B bindtextdomain()
functions can be used safely in multithreaded
applications, as long as
.BR setlocale (3C)
is not being called to change the
locale.
.sp
.LP
The
.BR gettext() ,
.BR dgettext() ,
.BR dcgettext() ,
.BR textdomain() ,
and
.B bindtextdomain()
functions work with both Solaris message catalogues
and GNU-compatible message catalogues.  The
.BR ngettext() ,
.BR dngettext() ,
.BR dcngettext() ,
and
.BR bind_textdomain_codeset()
functions work only with GNU-compatible message catalogues.  See
.BR msgfmt (1)
for information about Solaris message catalogues and
GNU-compatible message catalogues.
.SH FILES
.sp
.ne 2
.mk
.na
.B /usr/lib/locale
.ad
.sp .6
.RS 4n
default path predicate for message domain files
.RE

.sp
.ne 2
.mk
.na
\fB/usr/lib/locale/\fIlocale\fB/LC_MESSAGES/\fIdomainname\fB\&.mo\fR
.ad
.sp .6
.RS 4n
system default location for file containing messages for language
.I locale
and
.IR domainname
.RE

.sp
.ne 2
.mk
.na
\fB/usr/lib/locale/\fIlocale\fB/LC_XXX/\fIdomainname\fB\&.mo\fR
.ad
.sp .6
.RS 4n
system default location for file containing messages for language
.I locale
and
.I domainname
for
.B dcgettext()
calls where
.B LC_XXX
is
.BR LC_CTYPE ,
.BR LC_NUMERIC ,
.BR LC_TIME ,
.BR LC_COLLATE ,
.BR LC_MONETARY ,
or
.BR LC_MESSAGES
.RE

.sp
.ne 2
.mk
.na
\fIdirname\fB/\fIlocale\fB/LC_MESSAGES/\fIdomainname\fB\&.mo\fR
.ad
.sp .6
.RS 4n
location for file containing messages for domain
.I domainname
and path
predicate
.I dirname
after a successful call to
.BR bindtextdomain()
.RE

.sp
.ne 2
.mk
.na
\fIdirname\fB/\fIlocale\fB/LC_XXX/\fIdomainname\fB\&.mo\fR
.ad
.sp .6
.RS 4n
location for files containing messages for domain
.I domainname,
language
.I locale,
and path predicate
.I dirname
after a successful call to
.B bindtextdomain()
for
.B dcgettext()
calls where
.B LC_XXX
is one
of
.BR LC_CTYPE ,
.BR LC_NUMERIC ,
.BR LC_TIME ,
.BR LC_COLLATE ,
.BR LC_MONETARY ,
or
.BR LC_MESSAGES
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
lw(2.75i) |lw(2.75i)
lw(2.75i) |lw(2.75i)
.
\fBATTRIBUTE TYPE\fR\fBATTRIBUTE VALUE\fR
_
Interface StabilitySee below.
_
MT-LevelSafe with exceptions
.TE

.sp
.LP
The external variables
.B _nl_msg_cat_cntr
and
.BR _nl_domain_bindings
are Uncommitted.
.SH SEE ALSO
.sp
.LP
.BR msgfmt (1),
.BR xgettext (1),
.BR iconv_open (3C),
.BR libintl.h (3HEAD),
.BR setlocale (3C),
.BR attributes (5),
.BR environ (5)
