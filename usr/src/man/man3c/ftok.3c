'\" te
.\" Copyright 1989 AT&T
.\" Copyright (c) 2002, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" Portions Copyright (c) 1992, X/Open Company Limited  All Rights Reserved
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH ftok 3C "24 Jul 2002" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
ftok \- generate an IPC key
.SH SYNOPSIS
.LP
.nf
#include <sys/ipc.h>

\fBkey_t\fR \fBftok\fR(\fBconst char *\fIpath\fR, \fBint\fR \fIid\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B ftok()
function returns a key based on
.I path
and
.I id
that
is usable in subsequent calls to
.BR msgget (2),
.BR semget (2)
and
.BR shmget (2).
The
.I path
argument must be the pathname of an existing
file that the process is able to
.BR stat (2).
.sp
.LP
The
.B ftok()
function will return the same key value for all paths that
name the same file, when called with the same
.I id
value, and will return
different key values when called with different
.I id
values.
.sp
.LP
If the file named by
.I path
is removed while still referred to by a key, a
call to \fBftok()\fR with the same \fIpath\fR and \fIid\fR returns an error. If
the same file is recreated, then a call to \fBftok()\fR with the same \fIpath\fR
and
.I id
is likely to return a different key.
.sp
.LP
Only the low order 8-bits of
.B id
are significant.  The behavior of
.B ftok()
is unspecified if these bits are 0.
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B ftok()
returns a key.  Otherwise,
.B ftok()
returns \fB(key_t)\(mi1\fR and sets
.B errno
to indicate the
error.
.SH ERRORS
.sp
.LP
The
.B ftok()
function will fail if:
.sp
.ne 2
.mk
.na
.B EACCES
.ad
.RS 16n
.rt
Search permission is denied for a component of the path prefix.
.RE

.sp
.ne 2
.mk
.na
.B ELOOP
.ad
.RS 16n
.rt
Too many symbolic links were encountered in resolving
.IR path .
.RE

.sp
.ne 2
.mk
.na
.B ENAMETOOLONG
.ad
.RS 16n
.rt
The length of the
.I path
argument exceeds
.B {PATH_MAX}
or
a pathname component is longer than
.BR {NAME_MAX} .
.RE

.sp
.ne 2
.mk
.na
.B ENOENT
.ad
.RS 16n
.rt
A component of
.I path
does not name an existing file or
.I path
is an
empty string.
.RE

.sp
.ne 2
.mk
.na
.B ENOTDIR
.ad
.RS 16n
.rt
A component of the path prefix is not a directory.
.RE

.sp
.LP
The
.B ftok()
function may fail if:
.sp
.ne 2
.mk
.na
.B ENAMETOOLONG
.ad
.RS 16n
.rt
Pathname resolution of a symbolic link produced an intermediate result whose
length exceeds
.B "{PATH_MAX} "
\&.
.RE

.SH USAGE
.sp
.LP
For maximum portability,
.I id
should be a single-byte character.
.sp
.LP
Another way to compose keys is to include the project ID in the most
significant byte and to use the remaining portion as a sequence number. There
are many other ways to form keys, but it is necessary for each system to define
standards for forming them. If some standard is not adhered to, it will be
possible for unrelated processes to unintentionally interfere with each other's
operation. It is still possible to interfere intentionally. Therefore, it is
strongly suggested that the most significant byte of a key in some sense refer
to a project so that keys do not conflict across a given system.
.SH NOTES
.sp
.LP
Since the
.B ftok()
function returns a value based on the
.I id
given and
the file serial number of the file named by
.I path
in a type that is no
longer large enough to hold all file serial numbers, it may return the same key
for paths naming different files on large filesystems.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR msgget (2),
.BR semget (2),
.BR shmget (2),
.BR stat (2),
.BR attributes (5),
.BR standards (5)
