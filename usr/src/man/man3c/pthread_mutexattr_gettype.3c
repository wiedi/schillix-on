'\" te
.\" Copyright (c) 2008, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" Copyright (c) 2001, the Institute of Electrical and Electronics Engineers,
.\" Inc. and The Open Group. All Rights Reserved.
.\" Copyright 1991, 1992, 1994, The X/Open Company Ltd.
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH pthread_mutexattr_gettype 3C "23 Mar 2005" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
pthread_mutexattr_gettype, pthread_mutexattr_settype \- get or set mutex
type
.SH SYNOPSIS
.LP
.nf
cc -mt [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. -lpthread [ \fIlibrary\fR.\|.\|. ]
#include <pthread.h>

\fBint\fR \fBpthread_mutexattr_gettype\fR(\fBpthread_mutexattr_t *restrict\fR \fIattr\fR,
     \fBint *restrict\fR \fItype\fR);
.fi

.LP
.nf
\fBint\fR \fBpthread_mutexattr_settype\fR(\fBpthread_mutexattr_t *\fIattr\fR, \fBint\fR \fItype\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B pthread_mutexattr_gettype()
and
.BR pthread_mutexattr_settype()
functions respectively get and set the mutex
.I type
attribute. This
attribute is set in the
.I type
parameter to these functions. The default
value of the
.I type
attribute is
.BR PTHREAD_MUTEX_DEFAULT .
.sp
.LP
The type of mutex is contained in the
.I type
attribute of the mutex
attributes. Valid mutex types include:
.sp
.ne 2
.mk
.na
.B PTHREAD_MUTEX_NORMAL
.ad
.RS 28n
.rt
This type of mutex does not detect deadlock. A thread attempting to relock
this mutex without first unlocking it will deadlock. Attempting to unlock a
mutex locked by a different thread results in undefined behavior. Attempting
to unlock an unlocked mutex results in undefined behavior.
.RE

.sp
.ne 2
.mk
.na
.B PTHREAD_MUTEX_ERRORCHECK
.ad
.RS 28n
.rt
This type of mutex provides error checking. A thread attempting to relock
this mutex without first unlocking it will return with an error. A thread
attempting to unlock a mutex that another thread has locked will return with
an error. A thread attempting to unlock an unlocked mutex will return with
an error.
.RE

.sp
.ne 2
.mk
.na
.B PTHREAD_MUTEX_RECURSIVE
.ad
.RS 28n
.rt
A thread attempting to relock this mutex without first unlocking it will
succeed in locking the mutex. The relocking deadlock that can occur with
mutexes of type
.B PTHREAD_MUTEX_NORMAL
cannot occur with this type of
mutex. Multiple locks of this mutex require the same number of unlocks to
release the mutex before another thread can acquire the mutex. A thread
attempting to unlock a mutex that another thread has locked will return with
an error. A thread attempting to unlock an unlocked mutex will return with
an error. This type of mutex is only supported for mutexes whose process
shared attribute is
.BR PTHREAD_PROCESS_PRIVATE .
.RE

.sp
.ne 2
.mk
.na
.B PTHREAD_MUTEX_DEFAULT
.ad
.RS 28n
.rt
Attempting to recursively lock a mutex of this type results in undefined
behavior. Attempting to unlock a mutex of this type that was not locked by
the calling thread results in undefined behavior. Attempting to unlock a
mutex of this type that is not locked results in undefined behavior. An
implementation is allowed to map this mutex to one of the other mutex
types.
.RE

.SH RETURN VALUES
.sp
.LP
Upon successful completion, the
.B pthread_mutexattr_settype()
function
returns
.BR 0 .
Otherwise, an error number is returned to indicate the
error.
.sp
.LP
Upon successful completion, the
.B pthread_mutexattr_gettype()
function
returns
.B 0
and stores the value of the
.I type
attribute of
.I attr
in the object referenced by the
.I type
parameter. Otherwise
an error number is returned to indicate the error.
.SH ERRORS
.sp
.LP
The
.B pthread_mutexattr_gettype()
and
.BR pthread_mutexattr_settype()
functions will fail if:
.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The value
.B type
is invalid.
.RE

.sp
.LP
The
.B pthread_mutexattr_gettype()
and
.BR pthread_mutexattr_settype()
functions may fail if:
.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The value specified by
.I attr
is invalid.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR pthread_cond_timedwait (3C),
.BR pthread_cond_wait (3C),
.BR attributes (5),
.BR standards (5)
.SH NOTES
.sp
.LP
Application should not use a
.B PTHREAD_MUTEX_RECURSIVE
mutex with
condition variables because the implicit unlock performed for
.B pthread_cond_wait()
or
.B pthread_cond_timedwait()
will not
actually release the mutex (if it had been locked multiple times). If this
occurs, no other thread can satisfy the condition of the predicate.
