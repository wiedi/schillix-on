'\" te
.\" Copyright (c) 2001 Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH thr_suspend 3C "22 Mar 2002" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
thr_suspend, thr_continue \- suspend or continue thread execution
.SH SYNOPSIS
.LP
.nf
cc -mt [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|.[ \fIlibrary\fR.\|.\|. ]
#include <thread.h>

\fBint\fR \fBthr_suspend\fR(\fBthread_t\fR \fItarget_thread\fR);
.fi

.LP
.nf
\fBint\fR \fBthr_continue\fR(\fBthread_t\fR \fItarget_thread\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B thr_suspend()
function immediately suspends the execution of the
thread specified by
.IR target_thread .
On successful return from
.BR thr_suspend() ,
the suspended thread is no longer executing. Once a
thread is suspended, subsequent calls to
.B thr_suspend()
have no
effect.
.sp
.LP
The
.B thr_continue()
function resumes the execution of a suspended
thread. Once a suspended thread is continued, subsequent calls to
.B thr_continue()
have no effect.
.sp
.LP
A suspended thread will not be awakened by any mechanism other than a call
to
.BR thr_continue() .
Signals and the effect of calls
to\fBmutex_unlock\fR(3C),
.BR rw_unlock (3C),
.BR sema_post (3C),
.BR cond_signal (3C),
and
.BR cond_broadcast "(3C) remain pending until the"
execution of the thread is resumed by
.BR thr_continue() .
.SH RETURN VALUES
.sp
.LP
If successful, the
.B thr_suspend()
and
.B thr_continue()
functions
return
.BR 0 .
Otherwise, a non-zero value is returned to indicate the
error.
.SH ERRORS
.sp
.LP
The
.B thr_suspend()
and
.B thr_continue()
functions will fail if:
.sp
.ne 2
.mk
.na
.B ESRCH
.ad
.RS 10n
.rt
The
.I target_thread
cannot be found in the current process.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR thr_create (3C),
.BR thr_join (3C),
.BR attributes (5),
.BR standards (5)
.SH WARNINGS
.sp
.LP
The
.B thr_suspend()
function is extremely difficult to use safely
because it suspends the target thread with no concern for the target
thread's state. The target thread could be holding locks, waiting for a
lock, or waiting on a condition variable when it is unconditionally
suspended. The thread will not run until
.B thr_continue()
is applied,
regardless of any calls to
.BR mutex_unlock() ,
.BR cond_signal() ,
or
.B cond_broadcast()
by other threads. Its existence on a sleep queue can
interfere with the waking up of other threads that are on the same sleep
queue.
.sp
.LP
The
.B thr_suspend()
and
.B thr_continue()
functions should be
avoided. Mechanisms that involve the cooperation of the targeted thread,
such as mutex locks and condition variables, should be employed instead.
