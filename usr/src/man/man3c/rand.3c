'\" te
.\" Copyright 1989 AT&T.  Copyright (c) 2004, Sun Microsystems, Inc.  All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH rand 3C "19 May 2004" "SunOS 5.11" "Standard C Library Functions"
.SH NAME
rand, srand, rand_r \- simple random-number generator
.SH SYNOPSIS
.LP
.nf
#include <stdlib.h>

\fBint\fR \fBrand\fR(\fBvoid\fR);
.fi

.LP
.nf
\fBvoid\fR \fBsrand\fR(\fBunsigned int\fR \fIseed\fR);
.fi

.LP
.nf
\fBint\fR \fBrand_r\fR(\fBunsigned int *\fIseed\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B rand()
function uses a multiplicative congruential random-number
generator with period 2^32 that returns successive pseudo-random numbers in
the range of 0 to
.B RAND_MAX
(defined in <\fBstdlib.h\fR>).
.sp
.LP
The 
.B srand()
function uses the argument
.I seed
as a seed for a
new sequence of pseudo-random numbers to be returned by subsequent calls to
.BR rand() .
If
.B srand()
is then called with the same
.IR seed
value, the sequence of pseudo-random numbers will be repeated.  If
\fBrand()\fR is called before any calls to \fBsrand()\fR have been made, the
same sequence will be generated as when
.B srand()
is first called with a
\fIseed\fR value of 1.
.sp
.LP
The
.B rand_r()
function has the same functionality as
.BR rand()
except that a pointer to a seed 
.I seed
must be supplied by the caller.
If
.B rand_r()
is called with the same initial value for the object
pointed to by seed and that object is not modified between successive calls
to
.BR rand_r() ,
the same sequence as that produced by calls to
\fBrand()\fR will be generated.
.sp
.LP
The
.B rand()
and
.B srand()
functions provide per-process
pseudo-random streams shared by all threads. The same effect can be achieved
if all threads call
.B rand_r()
with a pointer to the same seed object.
The
.B rand_r()
function allows a thread to generate a private
pseudo-random stream by having the seed object be private to the thread.
.SH USAGE
.sp
.LP
The spectral properties of
.B rand()
are limited.  The \fBdrand48\fR(3C)
function provides a better, more elaborate random-number generator.
.sp
.LP
When compiling multithreaded applications, the 
.B _REENTRANT
flag must
be defined on the compile line.  This flag should be used only in
multithreaded applications.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR drand48 (3C),
.BR attributes (5),
.BR standards (5)
