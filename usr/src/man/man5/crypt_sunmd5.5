'\" te
.\" Copyright (c) 2002, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH crypt_sunmd5 5 "23 Dec 2003" "SunOS 5.11" "Standards, Environments, and Macros"
.SH NAME
crypt_sunmd5 \- password hashing module using MD5 message hash algorithm
.SH SYNOPSIS
.LP
.nf
\fB/usr/lib/security/$ISA/crypt_sunmd5.so\fR
.fi

.SH DESCRIPTION
.sp
.LP
The
.B crypt_sunmd5
module is a one-way password hashing module for use
with
.BR crypt "(3C) that uses the MD5 message hash algorithm. The algorithm"
identifier for
.BR crypt.conf (4)
and
.BR policy.conf (4)
is
.BR md5 .
.sp
.LP
This module is designed to make it difficult to crack passwords that use
brute force attacks based on high speed MD5 implementations that use code
inlining, unrolled loops, and table lookup.
.sp
.LP
The maximum password length for
.B crypt_sunmd5
is 255 characters.
.sp
.LP
The following options can be passed to the module by means of
.BR crypt.conf (4):
.sp
.ne 2
.mk
.na
.BI rounds= <positive_number>
.ad
.RS 28n
.rt
Specifies the number of additional rounds of MD5 to use in generation of
the salt; the default number of rounds is 4096. Negative values have no
effect and are ignored, that is, the number of rounds cannot be lowered
below 4096.
.sp
The number of additional rounds is stored in the salt string returned by
.BR crypt_gensalt (3C).
For example:
.sp
.in +2
.nf
$md5,rounds=1000$nlxmTTpz$
.fi
.in -2

When
.BR crypt_gensalt (3C)
is being used to generate a new salt, if the
number of additional rounds configured in
.BR crypt.conf (4)
is greater
than that in the old salt, the value from
.BR crypt.conf (4)
is used
instead. This allows for migration to stronger (but more time-consuming)
salts on password change.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR passwd (1),
.BR crypt (3C),
.BR crypt_genhash_impl (3C),
.BR crypt_gensalt (3C),
.BR crypt_gensalt_impl (3C),
.BR getpassphrase (3C),
.BR crypt.conf (4),
.BR passwd (4),
.BR policy.conf (4),
.BR attributes (5)
