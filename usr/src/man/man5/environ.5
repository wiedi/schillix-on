'\" te
.\" Copyright 1989 AT&T
.\" Copyright (c) 2002, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH environ 5 "19 Nov 2002" "SunOS 5.11" "Standards, Environments, and Macros"
.SH NAME
environ \- user environment
.SH DESCRIPTION
.sp
.LP
When a process begins execution, one of the
.B exec
family of functions
makes available an array of strings called the environment; see
.BR exec (2).
By convention, these strings have the form
.IR variable=value ,
for example,
.BR PATH=/sbin:/usr/sbin .
These
environmental variables provide a way to make information about a program's
environment available to programs.
.sp
.LP
A name may be placed in the environment by the
.B export
command and
\fIname\fR=\fIvalue\fR arguments in \fBsh\fR(1), or by one of the \fBexec\fR
functions. It is unwise to conflict with certain shell variables such as
.BR MAIL ,
.BR PS1 ,
.BR PS2 ,
and
.B IFS
that are frequently exported
by \fB\&.profile\fR files; see \fBprofile\fR(4).
.sp
.LP
The following environmental variables can be used by applications and are
expected to be set in the target run-time environment.
.sp
.ne 2
.mk
.na
.B HOME
.ad
.sp .6
.RS 4n
The name of the user's login directory, set by
.BR login (1)
from the
password file; see
.BR passwd (4).
.RE

.sp
.ne 2
.mk
.na
.B LANG
.ad
.sp .6
.RS 4n
The string used to specify internationalization information that allows
users to work with different national conventions. The
.BR setlocale (3C)
function checks the
.B LANG
environment variable when it is called with
\fB""\fR as the \fBlocale\fR argument.  \fBLANG\fR is used as the default
locale if the corresponding environment variable for a particular category is
unset or null. If, however,
.B LC_ALL
is set to a valid, non-empty value,
its contents are used to override both the
.B LANG
and the other
.B LC_*
variables. For example, when invoked as \fBsetlocale(LC_CTYPE,
"")\fR, \fBsetlocale()\fR will query the \fBLC_CTYPE\fR environment variable
first to see if it is set and non-null. If
.B LC_CTYPE
is not set or null,
then
.B setlocale()
will check the
.B LANG
environment variable to see
if it is set and non-null. If both
.B LANG
and
.B LC_CTYPE
are unset or
\fINULL\fR, the default "C" locale will be used to set the \fBLC_CTYPE\fR
category.
.sp
Most commands will invoke \fBsetlocale(LC_ALL, "")\fR prior to any other
processing. This allows the command to be used with different national
conventions by setting the appropriate environment variables.
.sp
The following environment variables correspond to each category of
.BR setlocale (3C):
.sp
.ne 2
.mk
.na
.B LC_ALL
.ad
.sp .6
.RS 4n
If set to a valid, non-empty string value, override the values of \fBLANG\fR
and all the other
.BR LC_* variables.
.RE

.sp
.ne 2
.mk
.na
.B LC_COLLATE
.ad
.sp .6
.RS 4n
This category specifies the character collation sequence being used.  The
information corresponding to this category is stored in a database created
by the
.BR localedef (1)
command.   This environment variable affects
.BR strcoll (3C)
and
.BR strxfrm (3C).
.RE

.sp
.ne 2
.mk
.na
.B LC_CTYPE
.ad
.sp .6
.RS 4n
This category specifies character classification, character conversion, and
widths of multibyte characters. When
.B LC_CTYPE
is set to a valid value,
the calling utility can display and handle text and file names containing
valid characters for that locale;   Extended Unix Code (EUC) characters where
any individual character can be 1, 2, or 3 bytes wide; and EUC characters of
1, 2, or 3 column widths. The default "C" locale corresponds to the 7-bit
.B ASCII
character set; only characters from ISO 8859-1 are valid. The
information corresponding to this category is stored in a database created by
the
.B localedef()
command.  This environment variable is used by
.BR ctype (3C),
.BR mblen (3C),
and many commands, such as
.BR cat (1),
.BR ed (1),
.BR ls (1),
and
.BR vi (1).
.RE

.sp
.ne 2
.mk
.na
.B LC_MESSAGES
.ad
.sp .6
.RS 4n
This category specifies the language of the message database being used. For
example, an application may have one message database with French messages,
and another database with German messages. Message databases are created by
the
.BR mkmsgs (1)
command. This environment variable is used by
.BR exstr (1),
.BR gettxt (1),
.BR srchtxt (1),
.BR gettxt (3C),
and
.BR gettext (3C).
.RE

.sp
.ne 2
.mk
.na
.B LC_MONETARY
.ad
.sp .6
.RS 4n
This category specifies the monetary symbols and delimiters used for a
particular locale.  The information corresponding to this category is stored
in a database created by the
.BR localedef (1)
command. This environment
variable is used by
.BR localeconv (3C).
.RE

.sp
.ne 2
.mk
.na
.B LC_NUMERIC
.ad
.sp .6
.RS 4n
This category specifies the decimal and thousands delimiters. The
information corresponding to this category is stored in a database created
by the
.B localedef()
command. The default
.B C
locale corresponds to
\fB"."\fR as the decimal delimiter and no thousands delimiter. This
environment variable is used by \fBlocaleconv\fR(3C), \fBprintf\fR(3C), and
.BR strtod (3C).
.RE

.sp
.ne 2
.mk
.na
.B LC_TIME
.ad
.sp .6
.RS 4n
This category specifies date and time formats. The information corresponding
to this category is stored in a database specified in
.BR localedef() .
The
default
.B C
locale corresponds to U.S. date and time formats. This
environment variable is used by many commands and functions; for example:
.BR at (1),
.BR calendar (1),
.BR date (1),
.BR strftime (3C),
and
.BR getdate (3C).
.RE

.RE

.sp
.ne 2
.mk
.na
.B MSGVERB
.ad
.sp .6
.RS 4n
Controls which standard format message components
.B fmtmsg
selects when
messages are displayed to
.BR stderr ;
see
.BR fmtmsg (1)
and
.BR fmtmsg (3C).
.RE

.sp
.ne 2
.mk
.na
.B NETPATH
.ad
.sp .6
.RS 4n
A colon-separated list of network identifiers. A network identifier is a
character string used by the Network Selection component of the system to
provide application-specific default network search paths. A network
identifier must consist of non-null characters and must have a length of at
least 1. No maximum length is specified. Network identifiers are normally
chosen by the system administrator. A network identifier is also the first
field in any
.B /etc/netconfig
file entry.
.B NETPATH
thus provides a
link into the
.B /etc/netconfig
file and the information about a network
contained in that network's entry.
.B /etc/netconfig
is maintained by the
system administrator. The library routines described in
.BR getnetpath (3NSL)
access the
.B NETPATH
environment variable.
.RE

.sp
.ne 2
.mk
.na
.B NLSPATH
.ad
.sp .6
.RS 4n
Contains a sequence of templates which
.BR catopen "(3C) and"
.BR gettext (3C)
use when attempting to locate message catalogs. Each
template consists of an optional prefix, one or more substitution fields, a
filename and an optional suffix. For example:
.sp
.in +2
.nf
NLSPATH="/system/nlslib/%N.cat"
.fi
.in -2
.sp

defines that
.B catopen()
should look for all message catalogs in the
directory
.BR /system/nlslib ,
where the catalog name should be constructed
from the
.I name
parameter passed to
.BR catopen (\|),
.BR %N ,
with the
suffix
.BR \&.cat .
.sp
Substitution fields consist of a
.B %
symbol, followed by a single-letter
keyword. The following keywords are currently defined:
.sp
.ne 2
.mk
.na
.B %N
.ad
.sp .6
.RS 4n
The value of the
.I name
parameter passed to
.BR catopen() .
.RE

.sp
.ne 2
.mk
.na
.B %L
.ad
.sp .6
.RS 4n
The value of
.B LANG
or
.BR LC_MESSAGES .
.RE

.sp
.ne 2
.mk
.na
.B %l
.ad
.sp .6
.RS 4n
The language element from
.B LANG
or
.BR LC_MESSAGES .
.RE

.sp
.ne 2
.mk
.na
.B %t
.ad
.sp .6
.RS 4n
The territory element from
.B LANG
or
.BR LC_MESSAGES .
.RE

.sp
.ne 2
.mk
.na
.B %c
.ad
.sp .6
.RS 4n
The codeset element from
.B LANG
or
.BR LC_MESSAGES .
.RE

.sp
.ne 2
.mk
.na
.B %%
.ad
.sp .6
.RS 4n
A single
.B %
character.
.RE

An empty string is substituted if the specified value is not currently
defined. The separators "\fB_\fR" and "\fB\&.\fR" are not included in
.B %t
and
.B %c
substitutions.
.sp
Templates defined in
.B NLSPATH
are separated by colons
.RB ( : ).
A
leading colon or two adjacent colons (\fB::\fR) is equivalent to specifying
.BR %N .
For example:
.sp
.in +2
.nf
NLSPATH=":%N.cat:/nlslib/%L/%N.cat"
.fi
.in -2
.sp

indicates to
.B catopen()
that it should look for the requested message
catalog in
.IR name ,
\fIname\fB\&.cat\fR and
\fB/nlslib/$LANG/\fIname\fR.cat. For \fBgettext()\fR, \fB%N\fR
automatically maps to "messages".
.sp
If
.B NLSPATH
is unset or
.IR NULL ,
.B catopen()
and
.BR gettext()
call \fBsetlocale\fR(3C), which checks \fBLANG\fR and the  \fBLC_*\fR
variables to locate the message catalogs.
.sp
.B NLSPATH
will normally be set up on a system wide basis (in
.BR /etc/profile )
and thus makes the location and naming conventions
associated with message catalogs transparent to both programs and users.
.RE

.sp
.ne 2
.mk
.na
.B PATH
.ad
.sp .6
.RS 4n
The sequence of directory prefixes that
.BR sh (1),
.BR time (1),
.BR nice (1),
.BR nohup (1),
and other utilities apply in searching for a
file known by an incomplete path name. The prefixes are separated by colons
(\fB:\fR).
.BR login (1)
sets
.BR PATH=/usr/bin .
For more detail, see
.BR sh (1).
.RE

.sp
.ne 2
.mk
.na
.B SEV_LEVEL
.ad
.sp .6
.RS 4n
Define severity levels and associate and print strings with them in standard
format error messages; see
.BR addseverity (3C),
.BR fmtmsg (1),
and
.BR fmtmsg (3C).
.RE

.sp
.ne 2
.mk
.na
.B TERM
.ad
.sp .6
.RS 4n
The kind of terminal for which output is to be prepared. This information is
used by commands, such as
.BR vi (1),
which may exploit special capabilities
of that terminal.
.RE

.sp
.ne 2
.mk
.na
.B TZ
.ad
.sp .6
.RS 4n
Timezone information. The contents of this environment variable are used by
the functions \fBctime\fR(3C), \fBlocaltime\fR(3C), \fBstrftime\fR(3C), and
.BR mktime (3C)
to override the default timezone. The value of
.B TZ
has
one of the two formats (spaces inserted for clarity):
.sp
.in +2
.nf
:characters
.fi
.in -2

or
.sp
.in +2
.nf
std offset dst offset, rule
.fi
.in -2

If
.B TZ
is of the first format (that is, if the first character is a
colon (:)), or if
.B TZ
is not of the second format, then \fBTZ\fR
designates a path to a timezone database file relative to
.BR /usr/share/lib/zoneinfo/ ,
ignoring a leading colon if one exists.
.sp
Otherwise,
.B TZ
is of the second form, which when expanded is as
follows:
.sp
.in +2
.nf
\fIstdoffset\fR[\fIdst\fR[\fIoffset\fR][,\fIstart\fR[/\fItime\fR],\fIend\fR[/\fItime\fR]]]
.fi
.in -2

.sp
.ne 2
.mk
.na
.I std
and
.IR dst
.ad
.sp .6
.RS 4n
Indicate no less than three, nor more than {\fBTZNAME_MAX\fR}, bytes that
are the designation for the standard (\fIstd\fR) or the alternative
(\fIdst\fR, such as Daylight Savings Time) timezone. Only \fIstd\fR is
required; if
.I dst
is missing, then the alternative time does not apply
in this timezone. Each of these fields can occur in either of two formats,
quoted or unquoted:
.RS +4
.TP
.ie t \(bu
.el o
In the quoted form, the first character is the less-than ('<') character and
the last character is the greater-than ('>') character. All characters
between these quoting characters are alphanumeric characters from the
portable character set in the current locale, the plus-sign ('+') character,
or the minus-sign ('-') character. The
.I std
and
.I dst
fields in this
case do not include the quoting characters.
.RE
.RS +4
.TP
.ie t \(bu
.el o
In the unquoted form, all characters in these fields are alphabetic
characters from the portable character set in the current locale.
.RE
The interpretation of these fields is unspecified if either field is less
than three bytes (except for the case when
.I dst
is missing), more than
{\fBTZNAME_MAX\fR} bytes, or if they contain characters other than those
specified.
.RE

.sp
.ne 2
.mk
.na
.I offset
.ad
.sp .6
.RS 4n
Indicate the value one must add to the local time to arrive at Coordinated
Universal Time. The offset has the form:
.sp
.in +2
.nf
\fIhh\fR[:\fImm\fR[:\fIss\fR]]
.fi
.in -2
.sp

The minutes (\fImm\fR) and seconds (\fIss\fR) are optional. The hour
(\fIhh\fR) is required and can be a single digit. The \fIoffset\fR following
.I std
is required. If no
.I offset
follows
.IR dst ,
daylight savings
time is assumed to be one hour ahead of standard time. One or more digits can
be used. The value is always interpreted as a decimal number. The hour must
be between 0 and 24, and the minutes (and seconds), if present, must be
between 0 and 59. Out of range values can cause unpredictable behavior. If
preceded by a "-", the timezone is east of the Prime Meridian. Otherwise, it
is west of the Prime Meridian (which can be indicated by an optional
preceding "\fI+\fR" sign).
.RE

.sp
.ne 2
.mk
.na
\fIstart\fR/\fItime\fR,\|\fIend\fR/\fItime\fR
.ad
.sp .6
.RS 4n
Indicate when to change to and back from daylight savings time, where
.I start/time
describes when the change from standard time to daylight
savings time occurs, and
.I end/time
describes when the change back
occurs. Each
.I time
field describes when, in current local time, the
change is made.
.sp
The formats of
.I start
and
.I end
are one of the following:
.sp
.ne 2
.mk
.na
\fBJ\fIn\fR
.ad
.sp .6
.RS 4n
The Julian day
.I n
(1 \(<= \fIn\fR \(<= 365). Leap days are not counted.
That is, in all years, February 28 is day 59 and March 1 is day 60. It is
impossible to refer to the occasional February 29.
.RE

.sp
.ne 2
.mk
.na
.I n
.ad
.sp .6
.RS 4n
The zero-based Julian day (0 \(<= \fIn\fR \(<= 365). Leap days are counted,
and it is possible to refer to February 29.
.RE

.sp
.ne 2
.mk
.na
\fBM\fIm.n.d\fR
.ad
.sp .6
.RS 4n
The \fId\fR^th day, (0 \(<= \fId\fR \(<= 6) of week \fIn\fR of month \fIm\fR
of the year (1 \(<= \fIn\fR \(<= 5, 1 \(<= \fIm\fR \(<= 12), where week 5
means "the last \fId\fR-day in month \fIm\fR" which may occur in either the
fourth or the fifth week). Week 1 is the first week in which the \fId\fR^th
day occurs. Day zero is Sunday.
.RE

Implementation specific defaults are used for
.I start
and
.I end
if
these optional fields are not specified.
.sp
The
.I time
has the same format as
.I offset
except that no leading
sign ("-" or "+" ) is allowed. If \fItime\fR is not specified, the default
value is 02:00:00.
.RE

.RE

.SH SEE ALSO
.sp
.LP
.BR cat (1),
.BR date (1),
.BR ed (1),
.BR fmtmsg (1),
.BR localedef (1),
.BR login (1),
.BR ls (1),
.BR mkmsgs (1),
.BR nice (1),
.BR nohup (1),
.BR sh (1),
.BR sort (1),
.BR time (1),
.BR vi (1),
.BR exec (2),
.BR addseverity (3C),
.BR catopen (3C),
.BR ctime (3C),
.BR ctype (3C),
.BR fmtmsg (3C),
.BR getdate (3C),
.BR getnetpath (3NSL),
.BR gettext (3C),
.BR gettxt (3C),
.BR localeconv (3C),
.BR mblen (3C),
.BR mktime (3C),
.BR printf (3C),
.BR setlocale (3C),
.BR strcoll (3C),
.BR strftime (3C),
.BR strtod (3C),
.BR strxfrm (3C),
.BR TIMEZONE (4),
.BR netconfig (4),
.BR passwd (4),
.BR profile (4)
