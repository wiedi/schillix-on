'\" te
.\" Copyright (c) 2008 Sun Microsystems, Inc. All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH isalist 5 "20 Mar 2008" "SunOS 5.11" "Standards, Environments, and Macros"
.SH NAME
isalist \- the native instruction sets known to Solaris software
.SH DESCRIPTION
.sp
.LP
The possible instruction set names returned by
.BR isalist (1)
and the
.B SI_ISALIST
command of
.BR sysinfo (2)
are listed here.
.sp
.LP
The list is ordered within an instruction set family in the sense that
later names are generally faster then earlier names; note that this is in
the reverse order than listed by
.BR isalist (1)
and
.BR sysinfo (2).
In
the following list of values, numbered entries generally represent
increasing performance; lettered entries are either mutually exclusive or
cannot be ordered.
.sp
.LP
This feature is obsolete and may be removed in a future version of Solaris.
The lists below do not reflect all the extensions that have been made by
modern processors. See
.BR getisax (2)
for a better way to handle
instruction set extensions.
.SS "SPARC Platforms"
.sp
.LP
Where appropriate, correspondence with a given value of the \fB-xarch\fR
option of Sun's C 4.0 compiler is indicated. Other compilers might have
similar options.
.sp
.ne 2
.mk
.na
.B 1a. sparc
.ad
.RS 27n
.rt
Indicates the SPARC V8 instruction set, as defined in\fR  The SPARC
Architecture Manual, Version 8, Prentice-Hall, Inc., 1992. Some instructions
(such as integer multiply and divide, FSMULD, and all floating point
operations on quad operands) can be emulated by the kernel on certain
systems.
.RE

.sp
.ne 2
.mk
.na
.B 1b. sparcv7
.ad
.RS 27n
.rt
Same as sparc. This corresponds to code produced with the -xarch=v7 option
of Sun's C 4.0 compiler.
.RE

.sp
.ne 2
.mk
.na
.B 2. sparcv8-fsmuld
.ad
.RS 27n
.rt
Like sparc, except that integer multiply and divide must be executed in
hardware. This corresponds to code produced with the -xarch=v8a option of
Sun's C 4.0 compiler.
.RE

.sp
.ne 2
.mk
.na
.B 3. sparcv8
.ad
.RS 27n
.rt
Like sparcv8-fsmuld, except that FSMULD must also be executed in hardware.
This corresponds to code produced with the -xarch=v8 option of Sun's C 4.0
compiler.
.RE

.sp
.ne 2
.mk
.na
.B 4. sparcv8plus
.ad
.RS 27n
.rt
Indicates the SPARC V8 instruction set plus those instructions in the SPARC
V9 instruction set, as defined in\fR  The SPARC Architecture Manual,
Version 9, Prentice-Hall, 1994, that can be used according to\fR The V8+
Technical Specification. This corresponds to code produced with the
-xarch=v8plus option of Sun's C 4.0 compiler.
.RE

.sp
.ne 2
.mk
.na
.B 5a. sparcv8plus+vis
.ad
.RS 27n
.rt
Like sparcv8plus, with the addition of those UltraSPARC I Visualization
Instructions that can be used according to\fR The V8+ Technical
Specification. This corresponds to code produced with the -xarch=v8plusa
option of Sun's C 4.0 compiler.
.RE

.sp
.ne 2
.mk
.na
.B 5b. sparcv8plus+fmuladd
.ad
.RS 27n
.rt
Like sparcv8plus, with the addition of the Fujitsu SPARC64 floating
multiply-add and multiply-subtract instructions.
.RE

.sp
.ne 2
.mk
.na
.B 6. sparcv9
.ad
.RS 27n
.rt
Indicates the SPARC V9 instruction set, as defined in\fR  The SPARC
Architecture Manual, Version 9, Prentice-Hall, 1994.
.RE

.sp
.ne 2
.mk
.na
.B 7a. sparcv9+vis
.ad
.RS 27n
.rt
Like sparcv9, with the addition of the UltraSPARC I Visualization
Instructions.
.RE

.sp
.ne 2
.mk
.na
.B 7b. sparcv9+vis2
.ad
.RS 27n
.rt
Like sparcv9, with the addition of the UltraSPARC III Visualization
Instructions.
.RE

.sp
.ne 2
.mk
.na
.B 7c. sparcv9+fmuladd
.ad
.RS 27n
.rt
Like sparcv9, with the addition of the Fujitsu SPARC64 floating
multiply-add and multiply-subtract instructions.
.RE

.SS "x86 Platforms"
.sp
.ne 2
.mk
.na
.B 1. i386
.ad
.RS 22n
.rt
The Intel 80386 instruction set, as described in\fR The i386
Microprocessor Programmer's Reference Manual.
.RE

.sp
.ne 2
.mk
.na
.B 2. i486
.ad
.RS 22n
.rt
The Intel 80486 instruction set, as described in\fR The i486
Microprocessor Programmer's Reference Manual. (This is effectively i386,
plus the CMPXCHG, BSWAP, and XADD instructions.)
.RE

.sp
.ne 2
.mk
.na
.B 3. pentium
.ad
.RS 22n
.rt
The Intel Pentium instruction set, as described in\fR  The Pentium
Processor User's Manual. (This is effectively i486, plus the CPU_ID
instruction, and any features that the CPU_ID instruction indicates are
present.)
.RE

.sp
.ne 2
.mk
.na
.B 4. pentium+mmx
.ad
.RS 22n
.rt
Like pentium, with the MMX instructions guaranteed present.
.RE

.sp
.ne 2
.mk
.na
.B 5. pentium_pro
.ad
.RS 22n
.rt
The Intel PentiumPro instruction set, as described in\fR  The PentiumPro
Family Developer's Manual. (This is effectively pentium, with the CMOVcc,
FCMOVcc, FCOMI, and RDPMC instructions guaranteed present.)
.RE

.sp
.ne 2
.mk
.na
.B 6. pentium_pro+mmx
.ad
.RS 22n
.rt
Like pentium_pro, with the MMX instructions guaranteed present.
.RE

.sp
.ne 2
.mk
.na
.B 7. amd64
.ad
.RS 22n
.rt
The AMD Opteron instruction set, as described in the \fIAMD64 Architecture
Programmer's Manual\fR.
.RE

.SH SEE ALSO
.sp
.LP
.BR isalist (1),
.BR getisax (2),
.BR sysinfo (2)
