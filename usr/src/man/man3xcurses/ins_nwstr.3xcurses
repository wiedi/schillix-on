'\" te
.\" Copyright (c) 1990, 1995 by Mortice Kern Systems Inc.  All Rights Reserved
.\" Portions Copyright (c) 1999, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH ins_nwstr 3XCURSES "5 Jun 2002" "SunOS 5.11" "X/Open Curses Library Functions"
.SH NAME
ins_nwstr, ins_wstr, mvins_nwstr, mvins_wstr, mvwins_nwstr, mvwins_wstr,
wins_nwstr, wins_wstr \- insert a wide character string
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-I\fR /usr/xpg4/include \fB -L \fR /usr/xpg4/lib \e
\fB -R \fR /usr/xpg4/lib \fB -lcurses \fR [ \fIlibrary\fR.\|.\|. ]

\fBc89\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lcurses\fR [ \fIlibrary\fR.\|.\|. ]

#include <curses.h>

\fBint\fR \fBins_nwstr\fR(\fBconst wchar_t *\fIwstr\fR, \fBint\fR \fIn\fR);
.fi

.LP
.nf
\fBint\fR \fBins_wstr\fR(\fBconst wchar_t *\fIwstr\fR);
.fi

.LP
.nf
\fBint\fR \fBmvins_nwstr\fR(\fBint\fR \fIy\fR, \fBint\fR \fIx\fR, \fBconst wchar_t *\fIwstr\fR, \fBint\fR \fIn\fR);
.fi

.LP
.nf
\fBint\fR \fBmvins_wstr\fR(\fBint\fR \fIy\fR, \fBint\fR \fIx\fR, \fBconst wchar_t *\fIwstr\fR);
.fi

.LP
.nf
\fBint\fR \fBmvwins_nwstr\fR(\fBWINDOW *\fIwin\fR, \fBint\fR \fIy\fR, \fBint\fR \fIx\fR, \fBconst wchar_t *\fIwstr\fR, \fBint\fR \fIn\fR);
.fi

.LP
.nf
\fBint\fR \fBmvwins_wstr\fR(\fBWINDOW *\fIwin\fR, \fBint\fR \fIy\fR, \fBint\fR \fIx\fR, \fBconst wchar_t *\fIwstr\fR);
.fi

.LP
.nf
\fBint\fR \fBwins_nwstr\fR(\fBWINDOW *\fIwin\fR, \fBconst wchar_t *\fIwstr\fR, \fBint\fR \fIn\fR);
.fi

.LP
.nf
\fBint\fR \fBwins_wstr\fR(\fBWINDOW *\fIwin\fR, \fBconst wchar_t *\fIwstr\fR);
.fi

.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I wstr
.ad
.RS 8n
.rt
Is a pointer to the string to be inserted.
.RE

.sp
.ne 2
.mk
.na
.I n
.ad
.RS 8n
.rt
Is the number of characters not to exceed when inserting
.IR wstr .
If
.I n
is less than 1, the entire string is inserted.
.RE

.sp
.ne 2
.mk
.na
.I y
.ad
.RS 8n
.rt
Is the y (row) coordinate of the starting position of the string.
.RE

.sp
.ne 2
.mk
.na
.I x
.ad
.RS 8n
.rt
Is the x (column) coordinate of the starting position of the string.
.RE

.sp
.ne 2
.mk
.na
.I win
.ad
.RS 8n
.rt
Is a pointer to the window in which the string is to be inserted.
.RE

.SH DESCRIPTION
.sp
.LP
The
.B ins_wstr()
function inserts
.I wstr
at the current cursor
position of the
.B stdscr
window. The
.B wins_wstr()
function performs
the identical action, but in window
.IR win .
The
.B mvins_wstr()
and
.B mvwins_wstr()
functions insert
.I wstr
string at the starting
position indicated by the
.I x
(column) and
.I y
(row) parameters
(the former in the
.B stdscr
window; the latter in window
.IR win ).
.sp
.LP
The
.BR ins_nwstr() ,
.BR wins_nwstr() ,
.BR mvins_nwstr() ,
and
.B mvwins_nwstr()
functions insert
.I n
characters to the window or as
many as will fit on the line. If
.I n
is less than 1, the entire string
is inserted or as much of it as  fits on the line.  The former two functions
place the string at the current cursor position; the  latter two commands
use the position specified by the
.I x
and
.I y
parameters.
.sp
.LP
All characters to the right of inserted characters are moved to the right.
Characters that don't fit on the current line are discarded. The cursor is
left at the point of insertion.
.sp
.LP
If a character in
.I wstr
is a newline, carriage return, backspace, or
tab, the cursor is moved appropriately.  The cursor is moved to the next tab
stop for each tab character (by default, tabs are eight characters apart).
If the character is a control character other than those previously
mentioned, the character is inserted using
.BI ^ x
notation, where
.I x
is a printable character.
.BR clrtoeol (3XCURSES)
is automatically
done before a newline.
.SH RETURN VALUES
.sp
.LP
On success, these functions return
.BR OK .
Otherwise, they return
.BR ERR .
.SH ERRORS
.sp
.LP
None.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard
_
MT-LevelUnsafe
.TE

.SH SEE ALSO
.sp
.LP
.BR add_wchnstr (3XCURSES),
.BR addnwstr (3XCURSES),
.BR clrtoeol (3XCURSES),
.BR ins_wch (3XCURSES),
.BR insnstr (3XCURSES),
.BR libcurses (3XCURSES),
.BR attributes (5),
.BR standards (5)
