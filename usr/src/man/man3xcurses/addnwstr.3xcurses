'\" te
.\" Copyright (c) 1990, 1995 by Mortice Kern Systems Inc.  All Rights Reserved
.\" Portions Copyright (c) 1999, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH addnwstr 3XCURSES "5 Jun 2002" "SunOS 5.11" "X/Open Curses Library Functions"
.SH NAME
addnwstr, addwstr, mvaddnwstr, mvaddwstr, mvwaddnwstr, mvwaddwstr,
waddnwstr, waddwstr \- add a wide-character string to a window
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-I\fR /usr/xpg4/include \fB -L \fR /usr/xpg4/lib \e
\fB -R \fR /usr/xpg4/lib \fB -lcurses \fR [ \fIlibrary\fR.\|.\|. ]

\fBc89\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lcurses\fR [ \fIlibrary\fR .\|.\|. ]

#include <curses.h>

\fBint\fR \fBaddnwstr\fR(\fBconst wchar_t *\fIwstr\fR, \fBint\fR \fIn\fR);
.fi

.LP
.nf
\fBint\fR \fBaddwstr\fR(\fBconst wchar_t *\fIwstr\fR);
.fi

.LP
.nf
\fBint\fR \fBmvaddnwstr\fR(\fBint\fR \fIy\fR, \fBint\fR \fIx\fR, \fBconst wchar_t *\fIwstr\fR, \fBint\fR \fIn\fR);
.fi

.LP
.nf
\fBint\fR \fBmvaddwstr\fR(\fBint\fR \fIy\fR, \fBint\fR \fIx\fR, \fBconst wchar_t *\fIwstr\fR);
.fi

.LP
.nf
\fBint\fR \fBmvwaddnwstr\fR(\fBWINDOW*\fIwin\fR, \fBint\fR \fIy\fR, \fBint\fR \fIx\fR, \fBconst wchar_t *\fIwstr\fR, \fBint\fR \fIn\fR);
.fi

.LP
.nf
\fBint\fR \fBmvwaddwstr\fR(\fBWINDOW*\fIwin\fR, \fBint\fR \fIy\fR, \fBint\fR \fIx\fR, \fBconst wchar_t *\fIwstr\fR);
.fi

.LP
.nf
\fBint\fR \fBwaddnwstr\fR(\fBWINDOW*\fIwin\fR, \fBconst wchar_t *\fIwstr\fR, \fBint\fR \fIn\fR);
.fi

.LP
.nf
\fBint\fR \fBwaddwstr\fR(\fBWINDOW*\fIwin\fR, \fBconst wchar_t *\fIwstr\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B addwstr()
function writes a null-terminated wide-character string
to the
.B stdscr
window at the current cursor position.  The
.B waddwstr()
function performs an identical action, but writes the
string to the window specified by
.IR win .
The
.B mvaddwstr()
and
.B mvwaddwstr()
functions write the string to  the position indicated by
the
.I x
(column) and
.I y
(row) parameters  (the former to the
.B stdscr
window; the latter to window
.IR win ).
.sp
.LP
The
.BR addnwstr() ,
.BR waddnwstr() ,
.BR mvaddnwstr() ,
and
.B mvwaddnwstr()
functions write at most
.I n
characters to the
window. If
.I n
is less than 0, the entire string is written. The former
two functions place the characters at the current cursor position;  the
latter two commands use the position specified by the
.I x
and
.IR y
parameters.
.sp
.LP
All of these functions advance the cursor after writing the string.
.sp
.LP
These functions are functionally equivalent to building a
.BR cchar_t
from the
.B wchar_t
and the window rendition (or background character and
rendition) and calling the \fBwadd_wch\fR(3XCURSES) function once for each
.B wchar_t
in the string. Refer to the
.BR curses (3XCURSES)
man page
for a complete description of  special character handling and of the
interaction between the window rendition (or background character and
rendition) and the character written.
.sp
.LP
Note that these functions differ from the
.BR add_wchnstr "(3XCURSES) set"
of functions  in that the latter copy the string as is (without combining
each character  with the foreground and background attributes of the
window).
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I wstr
.ad
.RS 8n
.rt
Is a pointer to the wide-character string that is to be written to the
window.
.RE

.sp
.ne 2
.mk
.na
.I n
.ad
.RS 8n
.rt
Is the maximum number of characters to be copied from
.IR wstr .
If
.I n
is less than 0, the entire string is written or as much of it as
fits on the line.
.RE

.sp
.ne 2
.mk
.na
.I y
.ad
.RS 8n
.rt
Is the y (row) coordinate of the starting position of
.I wstr
in the
window.
.RE

.sp
.ne 2
.mk
.na
.I x
.ad
.RS 8n
.rt
Is the x (column) coordinate of the starting position of
.I wstr
in  the
window.
.RE

.sp
.ne 2
.mk
.na
.I win
.ad
.RS 8n
.rt
Is a pointer to the window in which the string is to be written.
.RE

.SH RETURN VALUES
.sp
.LP
On success, these functions return
.BR OK .
Otherwise, they return
.BR ERR .
.SH ERRORS
.sp
.LP
None.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard
_
MT-LevelUnsafe
.TE

.SH SEE ALSO
.sp
.LP
.BR add_wch (3XCURSES),
.BR add_wchnstr (3XCURSES),
.BR curses (3XCURSES),
.BR libcurses (3XCURSES),
.BR attributes (5),
.BR standards (5)
