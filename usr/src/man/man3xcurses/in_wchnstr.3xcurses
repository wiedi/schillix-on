'\" te
.\" Copyright (c) 1990, 1995 by Mortice Kern Systems Inc.  All Rights Reserved
.\" Portions Copyright (c) 1999, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH in_wchnstr 3XCURSES "5 Jun 2002" "SunOS 5.11" "X/Open Curses Library Functions"
.SH NAME
in_wchnstr, in_wchstr, mvin_wchnstr, mvin_wchstr, mvwin_wchnstr, mvwin_wchstr,
win_wchnstr, win_wchstr \- retrieve complex character string (with rendition)
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-I\fR /usr/xpg4/include \fB -L \fR /usr/xpg4/lib \e
\fB -R \fR /usr/xpg4/lib \fB -lcurses \fR [ \fIlibrary\fR.\|.\|. ]

\fBc89\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lcurses\fR [ \fIlibrary\fR.\|.\|. ]

#include <curses.h>

\fBint\fR \fBin_wchnstr\fR(\fBcchar_t *\fIwchstr\fR, \fBint\fR \fIn\fR);
.fi

.LP
.nf
\fBint\fR \fBin_wchstr\fR(\fBcchar_t *\fIwchstr\fR);
.fi

.LP
.nf
\fBint\fR \fBmvin_wchnstr\fR(\fBint\fR \fIy\fR, \fBint\fR \fIx\fR, \fBcchar_t *\fIwchstr\fR, \fBint\fR \fIn\fR);
.fi

.LP
.nf
\fBint\fR \fBmvin_wchstr\fR(\fBint\fR \fIy\fR, \fBint\fR \fIx\fR, \fBcchar_t *\fIwchstr\fR);
.fi

.LP
.nf
\fBint\fR \fBmvwin_wchnstr\fR(\fBWINDOW *\fIwin\fR, \fBint\fR \fIy\fR, \fBint\fR \fIx\fR, \fBcchar_t *\fIwchstr\fR, \fBint\fR \fIn\fR);
.fi

.LP
.nf
\fBint\fR \fBmvwin_wchstr\fR(\fBWINDOW *\fIwin\fR, \fBint\fR \fIy\fR, \fBint\fR \fIx\fR, \fBcchar_t *\fIwchstr\fR);
.fi

.LP
.nf
\fBint\fR \fBwin_wchnstr\fR(\fBWINDOW *\fIwin\fR, \fBcchar_t *\fIwchstr\fR, \fBint\fR \fIn\fR);
.fi

.LP
.nf
\fBint\fR \fBwin_wchstr\fR(\fBWINDOW *\fIwin\fR, \fBcchar_t *\fIwchstr\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B in_wchstr()
and
.B win_wchstr()
functions retrieve a complex
character string (with rendition) starting at the current cursor position of the
\fBstdscr\fR window and window
.IR win ,
respectively, and ending at  the right
margin. The
.B mvin_wchstr()
and
.B mvwin_wchstr()
functions retrieve a
complex character string located at the position indicated by the
.IR x
(column) and
.I y
(row) parameters (the former in the
.B stdscr
window; the
latter in window
.IR win ).
.sp
.LP
The
.BR in_wchnstr() ,
.BR win_wchnstr() ,
.BR mvin_wchnstr() ,
and
\fBmvwin_wchnstr()\fR functions retrieve at most \fIn\fR characters from the
window
.B stdscr
and
.IR win ,
respectively. The former two functions
retrieve the string, starting at the current cursor  position; the latter two
commands retrieve the string, starting at the position  specified by the \fIx\fR
and
.I y
parameters.
.sp
.LP
The retrieved character string (with renditions) is stored in the object pointed
to by
.IR wcval .
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I wchstr
.ad
.RS 10n
.rt
Is a pointer to an object where the retrieved complex character string can be
stored.
.RE

.sp
.ne 2
.mk
.na
.I n
.ad
.RS 10n
.rt
Is the number of characters not to exceed when retrieving
.IR wchstr .
.RE

.sp
.ne 2
.mk
.na
.I y
.ad
.RS 10n
.rt
Is the y (row) coordinate of the starting position of the string to be
retrieved.
.RE

.sp
.ne 2
.mk
.na
.I x
.ad
.RS 10n
.rt
Is the x (column) coordinate of the starting position of the string to be
retrieved.
.RE

.sp
.ne 2
.mk
.na
.I win
.ad
.RS 10n
.rt
Is a pointer to the window in which the string is to be retrieved.
.RE

.SH RETURN VALUES
.sp
.LP
On success, these functions return
.BR OK .
Otherwise, they return
.BR ERR .
.SH ERRORS
.sp
.LP
None.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard
_
MT-LevelUnsafe
.TE

.SH SEE ALSO
.sp
.LP
.BR in_wch (3XCURSES),
.BR libcurses (3XCURSES),
.BR attributes (5),
.BR standards (5)
