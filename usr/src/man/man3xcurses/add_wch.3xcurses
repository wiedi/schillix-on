'\" te
.\" Copyright (c) 1990, 1995 by Mortice Kern Systems Inc.  All Rights Reserved
.\" Portions Copyright (c) 1996, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH add_wch 3XCURSES "5 Jun 2002" "SunOS 5.11" "X/Open Curses Library Functions"
.SH NAME
add_wch, mvadd_wch, mvwadd_wch, wadd_wch \- add a complex character (with
rendition) to a window
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-I\fR /usr/xpg4/include \fB -L \fR /usr/xpg4/lib \e
\fB -R \fR /usr/xpg4/lib \fB -lcurses \fR [ \fIlibrary\fR.\|.\|. ]

\fBc89\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lcurses\fR [ \fIlibrary\fR .\|.\|. ]

#include <curses.h>

\fBint\fR \fBadd_wch\fR(\fBconst cchar_t *\fIwch\fR);
.fi

.LP
.nf
\fBint\fR \fBwadd_wch\fR(\fBWINDOW *\fIwin\fR, \fBconst cchar_t *\fIwch\fR);
.fi

.LP
.nf
\fBint\fR \fBmvadd_wch\fR(\fBint\fR \fIy\fR, \fBint\fR \fIx\fR, \fBconst cchar_t *\fIwch\fR);
.fi

.LP
.nf
\fBint\fR \fBmvwadd_wch\fR(\fBWINDOW *\fIwin\fR, \fBint\fR \fIy\fR, \fBint\fR \fIx\fR, \fBconst cchar_t *\fIwch\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B add_wch()
function writes a complex character to the
.BR stdscr
window at the current cursor position.  The
.B mvadd_wch()
and
\fBmvwadd_wch()\fR functions write the character  to the position indicated by
the
.I x
(column) and
.I y
(row) parameters. The
.B mvadd_wch()
function
writes the character to the
.B stdscr
window, while
.B mvwadd_wch()
writes
the character to the window specified  by
.IR win .
The
.BR wadd_wch()
function is identical to
.BR add_wch() ,
but writes the  character to the window
specified by
.IR win .
These functions advance the cursor after writing the
character.
.sp
.LP
If
.I wch
is a spacing complex character, X/Open Curses replaces any previous
character at the specified location with
.I wch
(and its rendition). If
\fIwch\fR is a non-spacing complex character, X/Open Curses preserves all
existing characters at the specified location and adds the non-spacing
characters of
.I wch
to the spacing complex character. It ignores the
rendition associated with
.IR wch .
.sp
.LP
Characters that do not fit on the end of the current line are wrapped to the
beginning of the next line unless the current line is the last line of the window
and scrolling is disabled. In that situation, X/Open Curses discards characters
which extend beyond the end  of the line.
.sp
.LP
When
.I wch
is a backspace, carriage return, newline, or tab, X/Open Curses
moves the cursor appropriately as described in the
.BR curses "(3XCURSES) man"
page. Each tab character moves the cursor to the next tab stop. By default, tab
stops occur every eight columns. When
.I wch
is a control character other than
a backspace, carriage return, newline, or tab, it is written using \fB^\fIx\fR
notation, where
.I x
is a printable character. When X/Open Curses writes
\fIwch\fR to the last character position on a line, it automatically generates a
newline. When
.I " wch"
is written to the last character position of a scrolling
region and
.B scrollok()
is enabled, X/Open Curses scrolls the scrolling
region up one line (see \fBclearok\fR(3XCURSES)).
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I wch
.ad
.RS 7n
.rt
Is the character/attribute pair (rendition) to be written to the window.
.RE

.sp
.ne 2
.mk
.na
.I win
.ad
.RS 7n
.rt
Is a pointer to the window in which the character is to be written.
.RE

.sp
.ne 2
.mk
.na
.I y
.ad
.RS 7n
.rt
Is the y (row) coordinate of the character's position in the window.
.RE

.sp
.ne 2
.mk
.na
.I x
.ad
.RS 7n
.rt
Is the x (column) coordinate of the character's position in the window.
.RE

.SH RETURN VALUES
.sp
.LP
On success, these functions return
.BR OK .
Otherwise, they return
.BR ERR .
.SH ERRORS
.sp
.LP
None.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard
_
MT-LevelUnsafe
.TE

.SH SEE ALSO
.sp
.LP
\fBattr_off\fR(3XCURSES), \fBbkgrndset\fR(3XCURSES), \fBcurses\fR(3XCURSES),
.BR doupdate (3XCURSES),
.BR in_wch (3XCURSES),
.BR ins_wch (3XCURSES),
.BR libcurses (3XCURSES),
.BR nl (3XCURSES),
.BR printw (3XCURSES),
.BR scrollok (3XCURSES),
.BR scrl (3XCURSES),
.BR setscrreg (3XCURSES),
.BR terminfo (4),
.BR attributes (5),
.BR standards (5)
