'\" te
.\" Copyright (c) 1990, 1995 by Mortice Kern Systems Inc.  All Rights Reserved
.\" Portions Copyright (c) 1999, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH derwin 3XCURSES "5 Jun 2002" "SunOS 5.11" "X/Open Curses Library Functions"
.SH NAME
derwin, newwin, subwin \- create a new window or subwindow
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-I\fR /usr/xpg4/include \fB -L \fR /usr/xpg4/lib \e
\fB -R \fR /usr/xpg4/lib \fB -lcurses \fR [ \fIlibrary\fR.\|.\|. ]

\fBc89\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lcurses\fR [ \fIlibrary\fR.\|.\|. ]

#include <curses.h>

\fBWINDOW *\fBderwin\fR(\fBWINDOW *\fIorig\fR, \fBint\fR \fInlines\fR, \fBint\fR \fIncols\fR,
     \fBint\fR \fIbegin_y\fR, \fBint\fR \fIbegin_x\fR);
.fi

.LP
.nf
\fBWINDOW *\fBnewwin\fR(\fBint\fR \fInlines\fR, \fBint\fR \fIncols\fR, \fBint\fR \fIbegin_y\fR, \fBint\fR \fIbegin_x\fR);
.fi

.LP
.nf
\fBWINDOW *\fBsubwin\fR(\fBWINDOW *\fIorig\fR, \fBint\fR \fInlines\fR, \fBint\fR \fIncols\fR, \fBint\fR \fIbegin_y\fR,
     \fBint\fR \fIbegin_x\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B derwin()
function creates a subwindow within window
.IR orig ,
with the specified number of lines and columns, and upper left corner
positioned at
.IR begin_x ,
.I begin_y
relative to window
.IR orig .
A
pointer to the new window structure is returned.
.sp
.LP
The
.B newwin()
function creates a new window with the specified number
of lines and columns and upper left corner positioned at
.IR begin_x ,
.IR begin_y .
A pointer to the new window structure is returned.  A
full-screen window can be created by calling
.BR newwin(0,0,0,0) .
.sp
.LP
If the number of lines specified is zero,
.B newwin()
uses a default
value of
.B LINES
minus
.IR begin_y ;
if the number of columns specified
is zero,
.B newwin()
uses the default value of
.B COLS
minus
.IR begin_x .
.sp
.LP
The
.B subwin()
function creates a subwindow within window
.IR orig ,
with the specified number of lines and columns, and upper left corner
positioned at
.IR begin_x ,
.I begin_y
(relative to the physical screen,
.I not
to window
.IR orig ).
A pointer to the new window structure is
returned.
.sp
.LP
The original window and subwindow share character storage of the
overlapping area (each window maintains its own pointers, cursor location,
and other items). This means that characters and attributes are identical in
overlapping areas regardless of which window characters are written to.
.sp
.LP
When using subwindows, it is often necessary to call
.BR touchwin (3XCURSES)
before
.BR wrefresh (3XCURSES)
to maintain proper
screen contents.
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I orig
.ad
.RS 11n
.rt
Is a pointer to the parent window for the newly created subwindow.
.RE

.sp
.ne 2
.mk
.na
.I nlines
.ad
.RS 11n
.rt
Is the number of lines in the subwindow.
.RE

.sp
.ne 2
.mk
.na
.I ncols
.ad
.RS 11n
.rt
Is the number of columns in the subwindow.
.RE

.sp
.ne 2
.mk
.na
.I begin_y
.ad
.RS 11n
.rt
Is the y (row) coordinate of the upper left corner of the subwindow,
relative to the parent window.
.RE

.sp
.ne 2
.mk
.na
.I begin_x
.ad
.RS 11n
.rt
Is the x (column) coordinate of the upper left corner of the subwindow,
relative to the parent window.
.RE

.SH RETURN VALUES
.sp
.LP
On success, these functions return a pointer to the newly-created window.
Otherwise, they return
.BR ERR .
.SH ERRORS
.sp
.LP
None.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard
_
MT-LevelUnsafe
.TE

.SH SEE ALSO
.sp
.LP
.BR doupdate (3XCURSES),
.BR is_linetouched (3XCURSES),
.BR libcurses (3XCURSES),
.BR attributes (5),
.BR standards (5)
