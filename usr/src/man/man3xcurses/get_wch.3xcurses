'\" te
.\" Copyright (c) 1990, 1995 by Mortice Kern Systems Inc.  All Rights Reserved
.\" Portions Copyright (c) 1999, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH get_wch 3XCURSES "5 Jun 2002" "SunOS 5.11" "X/Open Curses Library Functions"
.SH NAME
get_wch, wget_wch, mvget_wch, mvwget_wch \- get a wide character from
terminal
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-I\fR /usr/xpg4/include \fB -L \fR /usr/xpg4/lib \e
\fB -R \fR /usr/xpg4/lib \fB -lcurses \fR [ \fIlibrary\fR.\|.\|. ]

\fBc89\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lcurses\fR [ \fIlibrary\fR.\|.\|. ]

#include <curses.h>

\fBint\fR \fBget_wch\fR(\fBwint_t *\fIch\fR);
.fi

.LP
.nf
\fBint\fR \fBwget_wch\fR(\fBWINDOW *\fIwin\fR, \fBwint_t *\fIch\fR);
.fi

.LP
.nf
\fBint\fR \fBmvget_wch\fR(\fBint\fR \fIy\fR, \fBint\fR \fIx\fR, \fBwint_t *\fIch\fR);
.fi

.LP
.nf
\fBint\fR \fBmvwget_wch\fR(\fBWINDOW *\fIwin\fR, \fBint\fR \fIy\fR, \fBint\fR \fIx\fR, \fBwint_t *\fIch\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B get_wch()
and
.B wget_wch()
functions get a wide character
from the terminal associated with the window
.B stdscr
or window
.IR win ,
respectively. The
.B mvget_wch()
and
.BR mvwget_wch()
functions move the cursor to  the position specified in
.B stdscr
or
.IR win ,
respectively, then get a character.
.sp
.LP
If the window is not a pad and has been changed since the last call to
.BR refresh (3XCURSES),
.B get_wch()
calls
.B refresh()
to update the
window before the next character is read.
.sp
.LP
The setting of certain functions affects the behavior of the
.B get_wch()
set of functions. For example, if
.BR cbreak (3XCURSES)
is
set, characters typed by the user are  immediately processed. If
.BR halfdelay (3XCURSES)
is set,
.B get_wch()
waits until a character is
typed or returns
.B ERR
if no character is typed within the specified
timeout period.  This timeout can also be specified for individual windows
with the
.I delay
parameter of
.BR timeout "(3XCURSES) A negative value"
waits for input; a value of
.B 0
returns
.B ERR
if no input is ready;
a positive value blocks until input arrives or the time  specified expires
(in which case
.B ERR
is returned). If
.BR nodelay (3XCURSES)
is set,
.B ERR
is returned if no input is waiting;  if not set,
.B get_wch()
waits until input arrives.  Each character will be echoed to the window
unless
.BR noecho "(3XCURSES) has been set."
.sp
.LP
If keypad handling is enabled (
.BR keypad (3XCURSES)
is
.BR TRUE ),
the
token for the function key (a
.B KEY_
value) is stored in the object
pointed to by
.I ch
and
.B KEY_CODE_YES
is returned. If a character is
received that could be the beginning of a function key (for example, ESC),
an inter-byte timer is set.  If the remainder of the sequence is not
received before the time expires,  the character is passed through;
otherwise, the value of the function key is returned.  If
.B notimeout()
is set, the inter-byte timer is not used.
.sp
.LP
The ESC key is typically a prefix key used with function keys and should
not be used as a single character.
.sp
.LP
See the
.BR getch (3XCURSES)
manual page for a list of tokens for
function keys that  are returned by the
.B get_wch()
set of functions if
keypad handling is  enabled (Some terminals may not support all tokens).
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I ch
.ad
.RS 7n
.rt
Is a pointer to a wide integer where the returned wide character or
.B KEY_
value can be stored.
.RE

.sp
.ne 2
.mk
.na
.I win
.ad
.RS 7n
.rt
Is a pointer to the window associated with the terminal from which the
character is to be read.
.RE

.sp
.ne 2
.mk
.na
.I y
.ad
.RS 7n
.rt
Is the y (row) coordinate for the position of the character to be read.
.RE

.sp
.ne 2
.mk
.na
.I x
.ad
.RS 7n
.rt
Is the x (column) coordinate for the position of the character to be
read.
.RE

.SH RETURN VALUES
.sp
.LP
When these functions successfully report the pressing of a function key,
they return
.BR KEY_CODE_YES .
When they successfully report a wide
character, they return
.BR OK .
Otherwise, they return
.BR ERR .
.SH ERRORS
.sp
.LP
None.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard
_
MT-LevelUnsafe
.TE

.SH SEE ALSO
.sp
.LP
.BR cbreak (3XCURSES),
.BR echo (3XCURSES),
.BR halfdelay (3XCURSES),
.BR keypad (3XCURSES),
.BR libcurses (3XCURSES),
.BR nodelay (3XCURSES),
.BR notimeout (3XCURSES),
.BR raw (3XCURSES),
.BR timeout (3XCURSES),
.BR attributes (5),
.BR standards (5)
