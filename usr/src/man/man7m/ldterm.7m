'\" te
.\" Copyright 1989 AT&T
.\" Copyright (C) 1999, Sun Microsystems, Inc. All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH ldterm 7M "7 Jun1999" "SunOS 5.11" "STREAMS Modules"
.SH NAME
ldterm \- standard STREAMS terminal line discipline module
.SH SYNOPSIS
.LP
.nf
#include <sys/stream.h>
.fi

.LP
.nf
#include <sys/termios.h>
.fi

.LP
.nf
int ioctl(\fIfd\fR,I_PUSH,"ldterm");
.fi

.SH DESCRIPTION
.sp
.LP
The
.B ldterm
STREAMS module provides most of the
.BR termio (7I)
terminal interface.  The
.B vis
module does not perform the low-level
device control functions specified by flags in the
.B c_cflag
word of the
.B termio/termios
structure, or by the
.BR IGNBRK ,
.BR IGNPAR ,
.BR PARMRK ,
or
.B INPCK
flags in the
.B c_iflag
word of the
.B termio/termios
structure.  Those functions must be performed by the
driver or by modules pushed below the
.B ldterm
module. \fBThe
.B ldterm module
performs all other
.B termio/termios
functions,
though some may require the cooperation of the driver or modules pushed below
.B ldterm
and may not be performed in some cases.  These include the
.B IXOFF
flag in the
.B c_iflag
word and the delays  specified in the
.B c_oflag
word.
.sp
.LP
.B The ldterm module
also handles single and multi-byte characters
from various codesets including both Extended Unix Code
.RB ( EUC )
and
non-EUC codesets.
.sp
.LP
The remainder of this section describes the processing of various
.B STREAMS
messages on the read- and write-side.
.SS "Read-side Behavior"
.sp
.LP
Various types of STREAMS messages are processed as follows:
.sp
.ne 2
.mk
.na
.B M_BREAK
.ad
.RS 12n
.rt
Depending on the state of the
.B BRKINT
flag, either an interrupt signal
is generated or the message is treated as if it were an
.B M_DATA
message
containing a single
.B "ASCII NUL"
character when this message is received.

.RE

.sp
.ne 2
.mk
.na
.B M_DATA
.ad
.RS 12n
.rt
This message is normally processed using the standard
.B termio
input
processing. If the
.B ICANON
flag is set, a single input record (``line'')
is accumulated in an internal buffer and sent upstream when a line-terminating
character is received. If the
.B ICANON
flag is not set, other input
processing is performed and the processed data are passed upstream.
.sp
If output is to be stopped or started as a result of the arrival of
characters (usually
.B CNTRL-Q
and
.B "CNTRL-S), M_STOP"
and
.B M_START
messages are sent downstream. If the
.B IXOFF
flag is set and
input is to be stopped or started as a result of flow-control considerations,
.B M_STOPI
and
.B M_STARTI
messages are sent downstream.
.sp
.B M_DATA
messages are sent downstream, as necessary, to perform
echoing.
.sp
If a signal is to be generated, an
.B M_FLUSH
message with a flag byte of
.B FLUSHR
is placed on the read queue. If the signal is also to flush
output, an
.B M_FLUSH
message with a flag byte of
.B FLUSHW
is sent
downstream.
.RE

.sp
.LP
All other messages are passed upstream unchanged.
.SS "Write-side Behavior"
.sp
.LP
Various types of
.B STREAMS
messages are processed as follows:
.sp
.ne 2
.mk
.na
.B M_FLUSH
.ad
.RS 13n
.rt
The write queue of the module is flushed of all its data messages and the
message is passed downstream.
.RE

.sp
.ne 2
.mk
.na
.B M_IOCTL
.ad
.RS 13n
.rt
The function of this
.B ioctl
is performed and the message is passed
downstream in most cases.  The
.B TCFLSH
and
.B "TCXONC ioctls"
can
be performed entirely in the
.B ldterm
module, so the reply is sent
upstream and the message is not passed downstream.
.RE

.sp
.ne 2
.mk
.na
.B M_DATA
.ad
.RS 13n
.rt
If the
.B OPOST
flag is set, or both the
.B XCASE
and
.BR ICANON
flags are set, output processing is performed and the processed message is
passed downstream along with any
.B M_DELAY
messages generated.  Otherwise,
the message is passed downstream without change.
.RE

.sp
.ne 2
.mk
.na
.B M_CTL
.ad
.RS 13n
.rt
If the size of the data buffer associated with the message is the size of
.BR "struct iocblk" ,
.B ldterm
will perform functional negotiation to
determine where the
.BR termio (7I)
processing is to be done. If the command
field of the
.B iocblk
structure
.RB ( ioc_cmd )
is set to
.BR MC_NO_CANON ,
the input canonical processing normally performed on
.B M_DATA
messages is disabled and those messages are passed upstream
unmodified. (This is for the use of modules or drivers that perform their own
input processing, such as a pseudo-terminal in
.B TIOCREMOTE
mode connected
to a program that performs this processing). If the command is
.BR MC_DO_CANON ,
all input processing is enabled. If the command is
.BR MC_PART_CANON ,
then an
.B M_DATA
message containing a
.BR termios
structure is expected to be attached to the original
.B M_CTL
message. The
.B ldterm
module will examine the
.BR iflag ,
.BR oflag ,
and
.B lflag
fields of the
.B termios
structure and from that point
on, will process only those flags that have not been turned
.B ON.
If none
of the above commands are found, the message is ignored. In any case, the
message is passed upstream.
.RE

.sp
.ne 2
.mk
.na
.B M_FLUSH
.ad
.RS 13n
.rt
The read queue of the module is flushed of all its data messages and all data
in the record being accumulated are also flushed.  The message is passed
upstream.
.RE

.sp
.ne 2
.mk
.na
.B M_IOCACK
.ad
.RS 13n
.rt
The data contained within the message, which is to be returned to the
process, are augmented if necessary, and the message is passed upstream.
.RE

.sp
.LP
All other messages are passed downstream unchanged.
.SH IOCTLS
.sp
.LP
.B The ldterm module
processes the following
.BR TRANSPARENT
ioctls. All others are passed downstream.
.sp
.ne 2
.mk
.na
.B TCGETS/TCGETA
.ad
.sp .6
.RS 4n
The message is passed downstream. If an acknowledgment is seen, the data
provided by the driver and modules downstream are augmented and the
acknowledgement is passed upstream.
.RE

.sp
.ne 2
.mk
.na
.B TCSETS/TCSETSW/TCSETSF/TCSETA/TCSETAW/TCSETAF
.ad
.sp .6
.RS 4n
The parameters that control the behavior of the
.B ldterm
module are
changed. If a mode change requires options at the stream head to be changed,
an
.B M_SETOPTS
message is sent upstream.  If the
.B ICANON
flag is
turned on or off, the read mode at the stream head is changed to
message-nondiscard or byte-stream mode, respectively. If the
.B TOSTOP
flag
is turned on or off, the tostop mode at the  stream head is turned on or off,
respectively. In any case,
.B ldterm
passes the
.B ioctl
on downstream
for possible additional processing.
.RE

.sp
.ne 2
.mk
.na
.B TCFLSH
.ad
.sp .6
.RS 4n
If the argument is 0, an
.B M_FLUSH
message with a flag byte of
.B FLUSHR
is sent downstream and placed on the read queue. If the argument
is 1, the write queue is flushed of all its data messages and an
.B M_FLUSH
message with a flag byte of
.B FLUSHW
is sent  upstream and downstream. If
the argument is 2, the write queue is flushed of all its data messages and an
.B M_FLUSH
message with a flag byte of
.B FLUSHRW
is sent  downstream
and placed on the read queue.
.RE

.sp
.ne 2
.mk
.na
.B TCXONC
.ad
.sp .6
.RS 4n
If the argument is 0 and output is not already stopped, an
.B M_STOP
message is sent downstream. If the argument is 1 and output is stopped, an
.B M_START
message is sent  downstream. If the argument is 2 and input is
not already stopped, an
.B M_STOPI
message is sent downstream. If the
argument is 3 and input is stopped, an
.B M_STARTI
message  is sent
downstream.
.RE

.sp
.ne 2
.mk
.na
.B TCSBRK
.ad
.sp .6
.RS 4n
The message is passed downstream, so the driver has a chance to drain the
data and then send an
.B M_IOCACK
message upstream.
.RE

.sp
.ne 2
.mk
.na
.B EUC_WSET
.ad
.sp .6
.RS 4n
This call takes a pointer to an
.B eucioc
structure, and uses it to set
the
.B EUC
line discipline's local definition for the code set widths to be
used for subsequent operations. Within the stream, the line discipline may
optionally notify other modules of this setting using
.B M_CTL
messages.
When this call is received and the
.BR eucioc "structure contains valid data,"
the line discipline changes into
.B EUC
handling mode once the
\fBeucioc\fRdata is completely transferred to an internal data structure.
.RE

.sp
.ne 2
.mk
.na
.B EUC_WGET
.ad
.sp .6
.RS 4n
This call takes a pointer to an
.B eucioc
structure, and returns in it the
.B EUC
code set widths currently in use by the
.B EUC
line discipline.
If the current codeset of the line discipline is not an
.B EUC
one, the
result is meaningless.
.RE

.SH SEE ALSO
.sp
.LP
.BR termios (3C),
.BR console (7D),
.BR termio (7I)
.sp
.LP
.I STREAMS Programming Guide
