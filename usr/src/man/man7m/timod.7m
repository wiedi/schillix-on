'\" te
.\" Copyright 1989 AT&T
.\" Copyright (C) 1999, Sun Microsystems, Inc. All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH timod 7M "26 Mar 1993" "SunOS 5.11" "STREAMS Modules"
.SH NAME
timod \- Transport Interface cooperating STREAMS module
.SH SYNOPSIS
.LP
.nf
#include <sys/stropts.h>
.fi

.LP
.nf
ioctl(\fIfildes\fR, I_STR, &\fImy_strioctl\fR);
.fi

.SH DESCRIPTION
.sp
.LP
.B timod
is a STREAMS module for use with the Transport Interface
("\fBTI\fR") functions of the Network Services library. The \fBtimod\fR
module converts a set of
.BR ioctl (2)
calls into STREAMS messages that
may be consumed by a transport protocol provider that supports the Transport
Interface. This allows a user to initiate certain TI functions as atomic
operations.
.sp
.LP
The
.B timod
module must be pushed onto only a stream terminated by a
transport protocol provider that supports the
.BR TI .
.sp
.LP
All STREAMS messages, with the exception of the message types generated
from the
.B ioctl
commands described below, will be transparently passed
to the neighboring module or driver. The messages generated from the
following
.B ioctl
commands are recognized and processed by the
.B timod
module. The format of the
.B ioctl
call is:
.sp
.in +2
.nf
\fB#include <sys/stropts.h>
		-
		-
struct strioctl my_strioctl;
		-
		-
strioctl.ic_cmd = \fIcmd\fR;
strioctl.ic_timout = INFTIM;
strioctl.ic_len = \fBsize\fR;
strioctl.ic_dp = (char *)\fIbuf\fR
ioctl(\fIfildes\fR, I_STR, &\fImy_strioctl\fR);
.fi
.in -2

.sp
.LP
On issuance,
.B size
is the size of the appropriate
.B TI
message to
be sent to the transport provider and on return
.B size
is the size of
the appropriate
.B TI
message from the transport provider in response to
the issued
.B TI
message.
.I buf
is a pointer to a buffer large enough
to hold the contents of the appropriate
.B TI
.RB "messages. The" " TI"
message types are defined in <\fBsys/tihdr.h\fR>. The possible values for
the
.I cmd
field are:
.sp
.ne 2
.mk
.na
.B TI_BIND
.ad
.RS 15n
.rt
Bind an address to the underlying transport protocol provider. The message
issued to the
.B TI_BIND
ioctl is equivalent to the
.B TI
message
type
.B T_BIND_REQ
and the message returned by the successful completion
of the
.B ioctl
is equivalent to the
.B TI
message type
.B T_BIND_ACK.
.RE

.sp
.ne 2
.mk
.na
.B TI_UNBIND
.ad
.RS 15n
.rt
Unbind an address from the underlying transport protocol provider. The
message issued to the
.B TI_UNBIND
ioctl is equivalent to the
.BR TI
message type
.B T_UNBIND_REQ
and the message returned by the successful
completion of the
.B ioctl
is equivalent to the
.B TI
message type
.B T_OK_ACK.
.RE

.sp
.ne 2
.mk
.na
.B TI_GETINFO
.ad
.RS 15n
.rt
Get the
.B TI
protocol specific information from the transport protocol
provider. The message issued to the
.B TI_GETINFO
ioctl is equivalent to
the
.B TI
message type
.B T_INFO_REQ
and the message returned by the
successful completion of the
.B ioctl
is equivalent to the
.BR TI
message type
.BR T_INFO_ACK.
.RE

.sp
.ne 2
.mk
.na
.B TI_OPTMGMT
.ad
.RS 15n
.rt
Get, set, or negotiate protocol specific options with the transport
protocol provider. The message issued to the
.B TI_OPTMGMT
ioctl is
equivalent to the TI message type
.B T_OPTMGMT_REQ
and the message
returned by the successful completion of the
.B ioctl
is equivalent to
the
.B TI
message type
.BR T_OPTMGMT_ACK.
.RE

.SH FILES
.sp
.ne 2
.mk
.na
\fB<sys/timod.h\fR>\fR
.ad
.RS 19n
.rt
ioctl definitions
.RE

.sp
.ne 2
.mk
.na
\fB<sys/tiuser.h\fR>\fR
.ad
.RS 19n
.rt
.B TLI
interface declaration and structure file
.RE

.sp
.ne 2
.mk
.na
\fB<sys/tihdr.h\fR>\fR
.ad
.RS 19n
.rt
.B TPI
declarations and user-level code
.RE

.sp
.ne 2
.mk
.na
\fB<sys/errno.h\fR>\fR
.ad
.RS 19n
.rt
system error messages file. Please see
.BR errno (3C).
.RE

.SH SEE ALSO
.sp
.LP
.BR Intro (3),
.BR ioctl (2),
.BR errno (3C),
.BR tirdwr (7M)
.sp
.LP
.I STREAMS Programming Guide
.SH DIAGNOSTICS
.sp
.LP
If the
.B ioctl
returns with a value greater than 0, the lower 8 bits of
the return value will be one of the
.B TI
error codes as defined in
<\fBsys/tiuser.h\fR>. If the \fBTI\fR error is of type
.BR TSYSERR ,
then
the next 8 bits of the return value will contain an error as defined in
<\fBsys/errno.h\fR> (see
.BR Intro (3)).
