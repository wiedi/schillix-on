'\" te
.\" Copyright (c) 2008, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH usbvc 7D "18 July 2008" "SunOS 5.11" "Devices"
.SH NAME
usbvc \- USB video class driver
.SH SYNOPSIS
.LP
.nf
#include <sys/usb/clients/video/usbvc/usbvc.h>

#include <sys/videodev2.h>

usbvc@unit-address
.fi

.LP
.nf

.fi

.SH DESCRIPTION
.sp
.LP
The
.B usbvc
driver is a USBA (Solaris USB Architecture)-compliant
client driver that supports the \fIUSB Device Class Definition for Video
Devices\fR specification, Versions 1.0 and 1.1. The
.B usbvc
driver
supports a subset  of the video controls and formats described in the USB
specification.
.sp
.LP
The
.B usbvc
driver also implements the Video4Linux2 API
.RI ( V4L2 ),
Version 0.20 for applications. For more information on the
.IR "V4L2 API" ,
visit
.IR http://www.thedirks.org/v4l2 .
.sp
.LP
Note that the
.B usbvc
driver supports the video capture function only
and that video output is not supported. For more information on supported
USB video-class devices and functions, visit
.IR http://www.sun.com/io .
.SH READING DATA
.sp
.LP
The
.B usbvc
driver reads video data from the isochronous endpoint of
the device. Bulk data endpoints are not supported.
.sp
.LP
MJPEG and UNCOMPRESSED video formats are supported. Isochronous data are
read from the isochronous  input  device frame-by-frame and are maintained
in a buffer array within the driver. Video frames are read from the driver
using the
.BR read (2)
or
.BR mmap (2)
I/O method. For
.BR read (2),
each
read returns a buffer of a video frame. For
.BR mmap (2),
each
.B VIDIOC_DQBUF
ioctl returns the buffer structure v4l2_buffer. (A video
frame buffer pointer is included in the structure). See the \fIV4L2 API\fR
for buffer structure and other related data structure information.
.SH IOCTLS
.sp
.LP
A brief overview of supported ioctl requests appears below. For more
detailed information, refer to the
.I "V4L2 API"
document. Note: ioctl
information presented in the
.I "V4L2 API"
document may differ slightly
from the content of this manpage. In such cases, you should rely on the
information in this manpage.
.sp
.ne 2
.mk
.na
.B VIDIOC_QUERYCAP
.ad
.sp .6
.RS 4n
.RB "Query the device capabilities. Besides device capabilities, the" " usbvc"
driver returns structure v4l2_capability which includes information on the
driver, data bus and OS kernel. Please note that the "Version" structure
member has no meaning in Solaris and is always set to 1.
.RE

.sp
.ne 2
.mk
.na
.B VIDIOC_ENUM_FMT
.ad
.sp .6
.RS 4n
Enumerate the video formats supported by the device.
.RE

.sp
.ne 2
.mk
.na
.B VIDIOC_S_FMT
.ad
.sp .6
.RS 4n
Set a video format.
.RE

.sp
.ne 2
.mk
.na
.B VIDIOC_G_FMT
.ad
.sp .6
.RS 4n
Get a video format.
.RE

.sp
.ne 2
.mk
.na
.B VIDIOC_REQBUFS
.ad
.sp .6
.RS 4n
Request the
.B usbvc
driver to allocate video data buffers. If a buffer
is set to zero, the driver stops reading video data from the device and
releases all allocated buffers. (For
.BR mmap (2)
only).
.RE

.sp
.ne 2
.mk
.na
.B VIDIOC_QUERYBUF
.ad
.sp .6
.RS 4n
Query a given buffer's status. (For
.BR mmap (2)
only).
.RE

.sp
.ne 2
.mk
.na
.B VIDIOC_QBUF
.ad
.sp .6
.RS 4n
Enqueue an empty buffer to the video data buffer array. (For
.BR mmap (2)
only).
.RE

.sp
.ne 2
.mk
.na
.B VIDIOC_DQBUF
.ad
.sp .6
.RS 4n
Dequeue a done buffer from the video data buffer array. (For
.BR mmap (2)
only).
.RE

.sp
.ne 2
.mk
.na
.B VIDIOC_STREAMON
.ad
.sp .6
.RS 4n
Start reading video data.
.RE

.sp
.ne 2
.mk
.na
.B VIDIOC_STREAMOFF
.ad
.sp .6
.RS 4n
Stop reading video data.
.RE

.sp
.ne 2
.mk
.na
.B VIDIOC_ENUMINPUT
.ad
.sp .6
.RS 4n
Enumerate all device inputs. Currently, the
.B usbvc
driver supports one
input only.
.RE

.sp
.ne 2
.mk
.na
.B VIDIOC_G_INPUT
.ad
.sp .6
.RS 4n
Get the device's current input. At this time, the
.B usbvc
driver
supports one input only.
.RE

.sp
.ne 2
.mk
.na
.B VIDIOC_S_INPUT
.ad
.sp .6
.RS 4n
Set the  device's current input. At this time, the
.B usbvc
driver
supports one input only.
.RE

.sp
.ne 2
.mk
.na
.B VIDIOC_QUERYCTRL
.ad
.sp .6
.RS 4n
Query the device and driver for supported video controls. Currently, the
.B usbvc
driver supports the brightness, contrast, saturation, hue, and
gamma video controls.
.RE

.sp
.ne 2
.mk
.na
.B VIDIOC_G_CTRL
.ad
.sp .6
.RS 4n
Get the device's current video control.
.RE

.sp
.ne 2
.mk
.na
.B VIDIOC_S_CTRL
.ad
.sp .6
.RS 4n
Set the device's current video control.
.RE

.sp
.ne 2
.mk
.na
.B VIDIOC_G_PARM
.ad
.sp .6
.RS 4n
Get streaming parameters, the number of frames per second and number of
buffers used internally by driver in read/write mode.
.RE

.sp
.ne 2
.mk
.na
.B VIDIOC_S_PARM
.ad
.sp .6
.RS 4n
Set streaming parameters, the number of frames per second and number of
buffers used internally by driver in read/write mode.
.RE

.SH ERRORS
.sp
.ne 2
.mk
.na
.B EBUSY
.ad
.RS 10n
.rt
An open was attempted after the device has already been opened.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
An  unsupported ioctl is received or an ioctl is attempted with an
out-of-range value.
.RE

.sp
.ne 2
.mk
.na
.B EIO
.ad
.RS 10n
.rt
The driver received an  unrecoverable device error or the device did not
respond or the device stalled when attempting an access. A
.BR read (2)
or
.BR ioctl (2)
did not complete due to a peripheral access.
.RE

.sp
.ne 2
.mk
.na
.B ENXIO
.ad
.RS 10n
.rt
The driver received  an
.BR open (2)
request for a device for which the
attach failed.
.RE

.sp
.ne 2
.mk
.na
.B ENODEV
.ad
.RS 10n
.rt
The driver received  an
.BR open (2)
request for a disconnected device.
.RE

.SH FILES
.sp
.ne 2
.mk
.na
.B /kernel/drv/usbvc
.ad
.sp .6
.RS 4n
32-bit ELF kernel module. (x86)
.RE

.sp
.ne 2
.mk
.na
.B /kernel/drv/amd64/usbvc
.ad
.sp .6
.RS 4n
64-bit ELF kernel module. (x86)
.RE

.sp
.ne 2
.mk
.na
.B /kernel/drv/sparcv9/usbvc
.ad
.sp .6
.RS 4n
64-bit ELF kernel module. (SPARC)
.RE

.sp
.ne 2
.mk
.na
.B /dev/usb/*/*/*
.ad
.sp .6
.RS 4n
.BR ugen (7D)
nodes.
.RE

.sp
.ne 2
.mk
.na
.B /dev/videoN
.ad
.sp .6
.RS 4n
Device node for isochronous input from USB video device and device
control.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Architecture SPARC, x86, PCI-based systems
_
AvailabilitySUNWusbvc
.TE

.SH SEE ALSO
.sp
.LP
.BR cfgadm_usb (1M),
.BR ioctl (2),
.BR open (2),
.BR mmap (2),
\fBread\fR(2), \fBlibusb\fR(3LIB), \fBattributes\fR(5),\fBugen\fR(7D),
.BR usba (7D),
.BR attach (9E)
.sp
.LP
.I Writing Device Drivers
.sp
.LP
.I System Administration Guide: Basic Administration
.sp
.LP
\fIUniversal Serial Bus Specification 1.0, 1.1 and 2.0\fR\(em 1996, 1998,
2000
.sp
.LP
\fIUSB Device Class Definition for Video Devices 1.0 and 1.1\fR\(em 2003,
2005
.sp
.LP
.I Video4Linux2 API (V4L2), Version 0.20
.sp
.LP
\fII/O Technologies and Solutions \(emhttp://www.sun.com/io\fR
.sp
.LP
.I http://docs.sun.com
.sp
.LP
.I http://www.usb.org
.sp
.LP
.I http://www.thedirks.org/v4l2
.SH DIAGNOSTICS
.sp
.LP
In addition to being logged, the following messages may appear on the
system console. All messages are formatted in the     following manner:
.sp
.in +2
.nf
Warning: <device path> (usbvc<instance num>):Error Message...
.fi
.in -2
.sp

.sp
.ne 2
.mk
.na
.B "Device was disconnected while open. Data may have been lost.
.ad
.sp .6
.RS 4n
The device has been hot-removed or powered off while it was open and a
possible data transfer was in progress. The job may be aborted.
.RE

.sp
.ne 2
.mk
.na
.B Cannot access <device>. Please reconnect.
.ad
.sp .6
.RS 4n
This device has been disconnected because a device other than the original
one has been inserted. The driver informs you of this fact by displaying the
name of the original device.
.RE

.sp
.ne 2
.mk
.na
\fBDevice is not identical to the previous one on this port. Please
disconnect and reconnect.\fR
.ad
.sp .6
.RS 4n
The device was hot-removed while open. A new device was hot-inserted which
is not identical to the original device. Please disconnect the device and
reconnect the original device to the same port.
.RE

.SH NOTES
.sp
.LP
The USB video device will be power-managed when the device is idle.
.sp
.LP
If a USB video device is hot-removed while active, a console warning is
displayed requesting you to put the device back in the same port and telling
you of potential data loss. Hot-removal of an active video device is
strongly discouraged.
.sp
.LP
Always close all applications before hot-removing or hot-inserting a
device. If an application is open when a device is hot-removed, inserting
the device  in  a  different  port  will create new \fB/dev/video\fIN\fR
links. Moving an active device to another port is not recommended.
