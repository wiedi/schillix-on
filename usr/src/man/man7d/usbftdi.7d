'\" te
.\" Copyright (c) 2009, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH usbftdi 7D "13 Apr 2009" "SunOS 5.11" "Devices"
.SH NAME
usbftdi \- FTDI USB to serial converter driver
.SH SYNOPSIS
.LP
.nf
\fB#include <fcntl.h>\fR
\fB#include <sys/termio.h>\fR
\fBusbftdi@unit\fR
.fi

.SH DESCRIPTION
.sp
.LP
The
.B usbftdi
driver is a loadable STREAMS and USBA (Solaris USB
Architecture) compliant client driver that provides basic asynchronous
communication support for FTDI USB-to-serial converters. Serial device
streams are built with appropriate modules that are pushed atop the
.B usbftdi
driver by the
.BR autopush (1M)
facility.
.SS "Application Programming Interface"
.sp
.LP
The
.B usbftdi
module supports the
.BR termio (7I)
device control
.RB "functions specified by flags in the " c_cflag " word of the " termios 
structure, and by the
.BR "IGNBRK, IGNPAR, PARMRK" ,
and
.B INPCK
flags in
the
.B c_iflag
word of the
.B termios
structure. All other
.BR termio (7I)
functions must be performed by STREAMS modules pushed atop
the driver. When a device is opened, the ,
.BR ldterm (7M)
and
.BR ttcompat (7M)
STREAMS modules are automatically pushed on top of the
stream, providing the standard
.BR termio (7I)
interface.
.sp
.LP
Use device logical names
.B /dev/term/[0-9]*
to access the serial ports
for a dial-in line that is used with a modem.
.sp
.LP
Use device logical names
.B /dev/cua/[0-9]*
to access the serial ports
for other applications. These names are also used to provide a logical
access point for a dial-out line.
.sp
.LP
Device hot-removal is functionally equivalent to a modem disconnect event,
as defined in
.BR termio (7I).
.sp
.LP
Input and output line speeds can be set to the following baud rates: 300,
600, 1200, 2400, 4800, 9600, 19200, 38400, 57600, 115200, 230400, 460800 or
921600. Input and output line speeds can not be set independently. For
example, when the output speed is set, the input speed is automatically set
to the same speed.
.SS "Soft Carrier Capabilities"
.sp
.LP
Many devices that use this USB serial interface component are not, in fact
dial-in lines connected to carefully configured RS-232 modems. They are
often intelligent peripherals whose manufacturers want to present a serial
port interface to application software. Some applications use only three
wire connections, or are otherwise somewhat casual about the state of the
Carrier Detect (electrical) signal, and the other modem control lines.
.sp
.LP
The configuration file delivered with this driver,
.BR usbftdi.conf ,
acknowledges this by setting the driver property
.B ignore-cd
to 1. This
enables
.B "soft carrier"
mode where the kernel does
.B not
block opens
waiting for DCD to be asserted.
.sp
.LP
This behavior also matches the default
.B "ignore carrier detect"
behavior
of the onboard serial ports of machines that have them. See
.BR eeprom (1M)
for further details.
.sp
.LP
The
.B "hardware carrier"
behavior (the driver's internal default) can be
selected by either unsetting (commenting out) the
.B ignore-cd
property,
or by setting the value of the property to zero.
.sp
.LP
More sophisticated selection of which devicesl ignore or obey the DCD
signal can be effected using
.B port-%d-ignore-cd
properties.
.SS "Dial-In and Dial-Out Support"
.sp
.LP
A related feature is available for traditional usage that enables a single
tty line to be connected to a modem and used for incoming and outgoing
calls. By accessing through device logical name
.BR /dev/cua/[0-9]* ,
you
can open a port without the carrier detect signal being asserted, either
through hardware or an equivalent software mechanism. These devices are
commonly known as dial-out lines.
.sp
.LP
A dial-in line can be opened only if the corresponding dial-out line is
closed. A blocking
.B /dev/term
open waits until the
.B /dev/cua
line
is closed, which drops Data Terminal Ready, after which Carrier Detect
usually drops as well.  When the carrier is detected again with the
.B /dev/cua
device remaining closed, this indicates an incoming call and
the blocking open seizes exclusive use of the line.
.sp
.LP
A non-blocking
.B /dev/term
open returns an error if the
.BR /dev/cua
device is open.
.sp
.LP
If the
.B /dev/term
line is opened successfully (usually only when
carrier is recognized on the modem, though see
.B "Soft Carrier Capabilities"
section of this manual page), the corresponding
.B /dev/cua
line can not be opened. This allows a modem and port to be
used for dial-in (enabling the line for login in
.BR /etc/inittab )
or
dial-out (using
.BR tip (1)
or
.BR uucp "(1C)) when no-one is logged in on"
the line.
.SH ERRORS
.sp
.LP
An
.B open()
fails under the following conditions:
.sp
.ne 2
.mk
.na
.B ENXIO
.ad
.RS 9n
.rt
The unit being opened does not exist.
.RE

.sp
.ne 2
.mk
.na
.B EBUSY
.ad
.RS 9n
.rt
The
.B /dev/cua
(dial-out) device is being opened while the
.B /dev/term
(dial-in device) is open, or the dial-in device is being
opened with a no-delay open while the dial-out device is open.
.RE

.sp
.ne 2
.mk
.na
.B EBUSY
.ad
.RS 9n
.rt
The unit has been marked as exclusive-use by another process with a
.B TIOCEXCL ioctl()
call.
.RE

.sp
.ne 2
.mk
.na
.B EIO
.ad
.RS 9n
.rt
USB device I/O error.
.RE

.SH FILES
.sp
.ne 2
.mk
.na
.B /usr/kernel/drv/usbftdi
.ad
.sp .6
.RS 4n
32-bit x86 ELF kernel module
.RE

.sp
.ne 2
.mk
.na
.B /usr/kernel/drv/usbftdi.conf
.ad
.sp .6
.RS 4n
Kernel module configuration file
.RE

.sp
.ne 2
.mk
.na
.B /usr/kernel/drv/amd64/usbftdi
.ad
.sp .6
.RS 4n
64-bit x86 ELF kernel module
.RE

.sp
.ne 2
.mk
.na
.B /usr/kernel/drv/sparcv9/usbftdi
.ad
.sp .6
.RS 4n
64-bit SPARC ELF kernel module
.RE

.sp
.ne 2
.mk
.na
.B /dev/cua/[0-9]*
.ad
.sp .6
.RS 4n
Dial-out tty lines
.RE

.sp
.ne 2
.mk
.na
.B /dev/term/[0-9]*
.ad
.sp .6
.RS 4n
Dial-in tty lines
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for a description of the following attribute:
.sp

.sp
.TS
tab() box;
lw(2.75i) |lw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE  TYPEATTRIBUTE VALUE
_
ArchitectureSPARC, x86, PCI-based systems
_
AvailabilitySUNWuftdi
.TE

.SH SEE ALSO
.sp
.LP
.BR strconf (1),
.BR tip (1),
.BR uucp (1C),
.BR autopush (1M),
.BR eeprom (1M),
.BR ioctl (2),
.BR open (2),
.BR termios (3C),
.BR usba (7D),
.BR termio (7I),
.BR ldterm (7M),
.BR ttcompat (7M),
.BR eeprom (1M),
.BR attributes (5),
.SH DIAGNOSTICS
.sp
.LP
In addition to being logged, the following messages might appear on the
system console. All messages are formatted in the following manner:
.sp
.in +2
.nf
Warning: \fIdevice_path\fR usbftdi\fIinstance num\fR): Error Message ...
.fi
.in -2
.sp

.sp
.ne 2
.mk
.na
.B "Device was disconnected while open. Data may have been lost.
.ad
.sp .6
.RS 4n
The device has been hot-removed or powered off while it was open and a
possible data transfer was in progress. The job might be aborted.
.RE

.sp
.ne 2
.mk
.na
\fBDevice is not identical to the previous one on this port. Please
disconnect and reconnect.\fR
.ad
.sp .6
.RS 4n
The device was hot-removed while open. A new device was hot-inserted which
is not identical to the original device. Please disconnect the device and
reconnect the original device to the same port.
.RE

.sp
.ne 2
.mk
.na
.B "Device has been reconnected, but data may have been lost.
.ad
.sp .6
.RS 4n
The device that was hot-removed from its USB port has been re-inserted
again to the same port. It is available for access but data from a previous
transfer might be lost.
.RE

.sp
.ne 2
.mk
.na
\fBCannot access
.IR device .
Please reconnect.\fR
.ad
.sp .6
.RS 4n
This device has been disconnected because a device other than the original
one has been inserted. The driver informs you of this fact by displaying the
name of the original device.
.RE

.sp
.LP
The following messages might be logged into the system log. They are
formatted in the following manner:
.sp
.in +2
.nf
\fIdevice_path\fR usbftdi\fIiinstance number\fR): message ...
.fi
.in -2
.sp

.sp
.ne 2
.mk
.na
.B Input overrun.
.ad
.RS 18n
.rt
Data was lost.
.RE

