'\" te
.\" Copyright 1989 AT&T  Copyright (c) 1997, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH sad 7D "16 Apr 1997" "SunOS 5.11" "Devices"
.SH NAME
sad \- STREAMS Administrative Driver
.SH SYNOPSIS
.LP
.nf
#include <sys/types.h>
.fi

.LP
.nf
#include <sys/conf.h>
.fi

.LP
.nf
#include <sys/sad.h>
.fi

.LP
.nf
#include <sys/stropts.h>
.fi

.LP
.nf
\fBint\fR \fBioctl\fB(int\fR \fIfildes\fR, \fBint\fR \fIcommand\fR, \fBint \fIarg\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B STREAMS
Administrative Driver provides an interface for
applications to perform administrative operations on
.B STREAMS
modules
and drivers. The interface is provided through
.BR ioctl (2)
commands.
Privileged operations may access the
.B sad
driver using
.BR /dev/sad/admin .
Unprivileged operations may access the
.BR sad
driver using
.BR /dev/sad/user .
.sp
.LP
The \fIfildes\fR argument is an open file descriptor that refers to the
\fBsad\fR driver.  The \fBcommand\fR argument determines the control
function to be performed as described below.  The
.I arg
argument
represents additional information that is needed by this command. The type
of
.I arg
depends upon the command, but it is generally an integer or a
pointer to a \fBcommand\fR-specific data structure.
.SH COMMAND FUNCTIONS
.sp
.LP
The autopush facility (see  \fBautopush\fR(1M)) allows one to configure a
list of modules to be automatically pushed on a stream when a driver is
first opened. Autopush is controlled by the following commands:
.sp
.ne 2
.mk
.na
.B SAD_SAP
.ad
.RS 11n
.rt
Allows the administrator to configure the given device's autopush
information.
.I arg
points to a
.B strapush
structure, which contains
the following members:
.sp
.in +2
.nf
 unit_t   ap_cmd;
 major_t  sap_major;
 minor_t  sap_minor;
 minor_t  sap_lastminor;
 unit_t   sap_npush;
 unit_t   sap_list [MAXAPUSH] [FMNAMESZ + 1];
.fi
.in -2

The
.B sap_cmd
field indicates the type of configuration being done. It
may take on one of the following values:
.sp
.ne 2
.mk
.na
.B SAP_ONE
.ad
.RS 13n
.rt
Configure one minor device of a driver.
.RE

.sp
.ne 2
.mk
.na
.B SAP_RANGE
.ad
.RS 13n
.rt
Configure a range of minor devices of a driver.
.RE

.sp
.ne 2
.mk
.na
.B SAP_ALL
.ad
.RS 13n
.rt
Configure all minor devices of a driver.
.RE

.sp
.ne 2
.mk
.na
.B SAP_CLEAR
.ad
.RS 13n
.rt
Undo configuration information for a driver.
.RE

The
.B sap_major
field is the major device number of the device to be
configured. The
.B sap_minor
field is the minor device number of the
device to be configured. The
.B sap_lastminor
field is used only with
the
.B SAP_RANGE
command,  which configures a range of minor devices
between
.B sap_minor
and
.BR sap_lastminor ,
inclusive. The minor
fields have no meaning for the
.B SAP_ALL
.RB "command. The " " sap_npush"
field indicates the number of modules to be automatically pushed when the
.RB "device is opened. It must be less than or equal to " " MAXAPUSH ,"
defined in
.BR sad.h .
It must also be less than or equal to
\fBNSTRPUSH,\fR the maximum number of  modules that can be pushed on a
stream, defined in the kernel master file.  The field
.B sap_list
is an
array of NULL-terminated module names to be pushed in the order  in which
they appear in the list.
.sp
When using the
.B SAP_CLEAR
command, the user sets only
\fBsap_major\fR and
.BR sap_minor .
This will undo the configuration
information for any of the other commands.  If a previous entry was
configured as
.B "SAP_ALL, sap_minor"
should be set to zero. If a previous
entry was configured as
.B "SAP_RANGE , sap_minor"
should be set to
the lowest minor device number in the range configured.
.sp
On failure,
.B errno
is set to the following value:
.sp
.ne 2
.mk
.na
.B EFAULT
.ad
.RS 10n
.rt
\fIarg\fR points outside the allocated address space.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The major device number is invalid, the number of modules is invalid, or
the list of module names is invalid.
.RE

.sp
.ne 2
.mk
.na
.B ENOSTR
.ad
.RS 10n
.rt
The major device number does not represent a
.B STREAMS
driver.
.RE

.sp
.ne 2
.mk
.na
.B EEXIST
.ad
.RS 10n
.rt
The major-minor device pair is already configured.
.RE

.sp
.ne 2
.mk
.na
.B ERANGE
.ad
.RS 10n
.rt
The command is
.B SAP_RANGE
and
.B sap_lastminor
is not greater
than
.BR sap_minor ,
or the command is
.B SAP_CLEAR
and
\fBsap_minor\fR is not equal to the first minor in the range.
.RE

.sp
.ne 2
.mk
.na
.B ENODEV
.ad
.RS 10n
.rt
The command is
.B SAP_CLEAR
and the device is not configured for
autopush.
.RE

.sp
.ne 2
.mk
.na
.B ENOSR
.ad
.RS 10n
.rt
An internal autopush data structure cannot be allocated.
.RE

.RE

.sp
.ne 2
.mk
.na
.B SAD_GAP
.ad
.RS 11n
.rt
Allows any user to query the
.B sad
driver to get the autopush
configuration information for a given device.
.I arg
points to a
\fBstrapush\fR structure as described in the previous command.
.sp
The user should set the
.B sap_major
and
.B sap_minor
fields of the
\fBstrapush\fR structure to the major and minor device numbers,
respectively, of the device in question. On return, the  \fBstrapush\fR
structure will be filled in with the entire information used to configure
the device. Unused entries in the module list will be zero-filled.
.sp
On failure,
.B errno
is set to one of the following values:
.sp
.ne 2
.mk
.na
.B EFAULT
.ad
.RS 10n
.rt
\fIarg\fR points outside the allocated address space.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The major device number is invalid.
.RE

.sp
.ne 2
.mk
.na
.B ENOSTR
.ad
.RS 10n
.rt
The major device number does not represent a
.B STREAMS
driver.
.RE

.sp
.ne 2
.mk
.na
.B ENODEV
.ad
.RS 10n
.rt
The device is not configured for autopush.
.RE

.RE

.sp
.ne 2
.mk
.na
.B SAD_VML
.ad
.RS 11n
.rt
Allows any user to validate a list of modules (that is, to see if they are
installed on the system).
.I arg
is a pointer to a
.BR str_list
structure with the following members:
.sp
.in +2
.nf
int     sl_nmods;
 struct  str_mlist	*sl_modlist;
.fi
.in -2

The
.B str_mlist
structure has the following member:
.sp
.in +2
.nf
char  l_name[FMNAMESZ+1];
.fi
.in -2

\fBsl_nmods\fR indicates the number of entries the user has allocated in
the array and
.B sl_modlist
points to the array of module names. The
return value is 0 if the list is valid, 1 if the list contains an invalid
module name, or \(mi1 on failure. On failure,  \fBerrno\fR is set to one of
the following values:
.sp
.ne 2
.mk
.na
.B EFAULT
.ad
.RS 10n
.rt
\fIarg\fR points outside the allocated address space.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The
.B sl_nmods
field of the
.B str_list
structure is less than or
equal to zero.
.RE

.RE

.SH SEE ALSO
.sp
.LP
.BR Intro (2),
.BR ioctl (2),
.BR open (2)
.sp
.LP
.I STREAMS Programming Guide
.SH DIAGNOSTICS
.sp
.LP
Unless otherwise specified, the return value from
.B ioctl()
is
.BR 0
upon success and  \fB\(mi1\fR upon failure with
.B errno
set as
indicated.
