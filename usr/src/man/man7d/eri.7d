'\" te
.\" Copyright (c) 2000, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH eri 7D "1 Mar 2000" "SunOS 5.11" "Devices"
.SH NAME
eri \- eri Fast-Ethernet device driver
.SH SYNOPSIS
.LP
.nf
\fB/dev/eri\fR
.fi

.SH DESCRIPTION
.sp
.LP
The
.B eri
Fast Ethernet driver is a multi-threaded, loadable, clonable,
\fBSTREAMS\fR\(embased hardware driver supporting the connectionless Data
Link Provider Interface
.BR dlpi "(7P) over an"
.B eri
Fast-Ethernet
controller. Multiple
.B eri
devices installed within the system are
supported by the driver.
.sp
.LP
The
.B eri
driver provides basic support for the
.B eri
hardware and
handles the
.B eri
device. Functions include chip initialization, frame
transit and receive, multicast and promiscuous support, and error recovery
and reporting.
.sp
.LP
The
.B eri
device provides 100Base-TX networking interfaces using the
SUN
.B "RIO ASIC"
.RB "and an internal transceiver. The" " RIO"
.B ASIC
provides the
.B PCI
interface and
.B MAC
functions. The
physical layer functions are provided by the internal transceiver which
connects to a RJ-45 connector.
.sp
.LP
The 100Base-TX standard specifies an auto-negotiation protocol to
automatically select the mode and speed of operation. The internal
transceiver is capable of performing auto-negotiation using the remote-end
of the link (link partner) and receives the capabilities  of the remote end.
It selects the  highest common denominator mode of operation based on the
priorities. It also supports a forced-mode of operation under which the
driver selects the mode of operation.
.SH APPLICATION PROGRAMMING INTERFACE
.sp
.LP
The cloning character-special device
.B /dev/eri
is used to access all
.B eri
controllers installed within the system.
.SS "eri and DLPI"
.sp
.LP
The  \fBeri\fR driver is a "style 2" Data Link Service provider. All
.B M_PROTO
and
.B M_PCPROTO
type messages are interpreted as
.B DLPI
primitives. Valid
.B DLPI
primitives are defined in
.B <sys/dlpi.h>.
Refer to \fBdlpi\fR(7P) for more information.
.sp
.LP
An explicit
.B DL_ATTACH_REQ
message by the user is required to
associate the opened stream with a particular device
.RB ( ppa ).
The
.B ppa
ID is interpreted as an
.B "unsigned integer"
data type and
indicates the corresponding device instance (unit) number. An error
(\fBDL_ERROR_ACK\fR) is returned by the driver if the \fBppa\fR field value
does not correspond to a valid device instance number for this system. The
device is initialized on first attach and de-initialized (stopped) at last
detach.
.sp
.LP
The values returned by the driver in the
.B DL_INFO_ACK
primitive in
response to the
.B DL_INFO_REQ
from the user are as follows:
.RS +4
.TP
.ie t \(bu
.el o
The maximum
.B SDU
is
.B 1500
(\fBETHERMTU\fR - defined in
.B <sys/ethernet.h>
).
.RE
.RS +4
.TP
.ie t \(bu
.el o
The minimum
.B SDU
is
.BR 0 .
.RE
.RS +4
.TP
.ie t \(bu
.el o
The
.B dlsap
address length is
.BR 8 .
.RE
.RS +4
.TP
.ie t \(bu
.el o
The
.B MAC
type is
.BR DL_ETHER .
.RE
.RS +4
.TP
.ie t \(bu
.el o
The
.B sap
length values is
.BR -2 ,
meaning the physical address
component is followed immediately by a 2 byte
.B sap
component within
the
.B DLSAP
address.
.RE
.RS +4
.TP
.ie t \(bu
.el o
The service mode is
.BR DL_CLDLS .
.RE
.RS +4
.TP
.ie t \(bu
.el o
Optional quality of service (\fBQOS\fR) is not currently supported so
.B QOS
fields are
.BR 0 .
.RE
.RS +4
.TP
.ie t \(bu
.el o
The provider style is
.BR DL_STYLE .
.RE
.RS +4
.TP
.ie t \(bu
.el o
The version is
.BR DL_VERSION_2 .
.RE
.RS +4
.TP
.ie t \(bu
.el o
The broadcast address value is Ethernet/IEEE broadcast address
(\fB0xFFFFFF\fR).
.RE
.sp
.LP
Once in the
.B DL_ATTACHED
.RB "state, the user must send a" " DL_BIND_REQ"
to associate a particular
.B SAP
(Service Access Pointer) with the
stream. The
.B eri
driver interprets the
.B sap
field within the
\fBDL_BIND_REQ\fR as an Ethernet "type," therefore valid values for the
\fBsap\fR field are in the [\fB0\fR-\fB0xFFFF\fR] range.  Only one Ethernet
type can be bound to the stream at any time.
.sp
.LP
If the user selects a
.B sap
with a value of
.BR 0 ,
the receiver will
be in IEEE 802.3 mode. All frames received from the media having a Ethernet
type field in the range [\fB0\fR-\fB1500\fR] are assumed to be 802.3 frames
and are routed up all open Streams which are bound to
.B sap
value
.BR 0 .
If more than one Stream is in 802.3 mode, the frame will be
duplicated and routed up multiple Streams as
.BR DL_UNITDATA_IND
messages.
.sp
.LP
In transmission, the driver checks the
.B sap
field of the
.B DL_BIND_REQ
to determine if the value is
.B 0
or if the Ethernet
type field is in the range [\fB0\fR-\fB1500\fR]. If either is true, the
driver computes the length of the message, not including initial
.B M_PROTO
mblk (message block), of all subsequent \fBDL_UNITDATA_REQ\fR
messages, and transmits 802.3 frames that have this value in the \fBMAC\fR
frame header length field.
.sp
.LP
The
.B eri
driver's
.B DLSAP
address format consists of the 6 byte
physical (Ethernet) address component followed immediately by the 2 byte
.B sap
(type) component, producing an 8 byte
.B DLSAP
address.
Applications should
.I not
hardcode to this particular
implementation-specific
.B DLSAP
address format but use information
returned in the
.B DL_INFO_ACK
primitive to compose and decompose
.B DLSAP
addresses. The
.B sap
length, full
.B DLSAP
length, and
\fBsap\fR/physical ordering are included within the \fBDL_INFO_ACK.\fR The
physical address length can be computed by subtracting the
.B sap
length
from the full
.B DLSAP
address length or by issuing the
.B DL_PHYS_ADDR_REQ
to obtain the current physical address associated
with the stream.
.sp
.LP
Once in the
.B DL_BOUND
state, the user may transmit frames on the
Ethernet by sending
.B DL_UNITDATA_REQ
messages to the
.B eri
driver.
The
.B eri
driver will route received Ethernet frames up all open and
bound streams having a
.B sap
which matches the Ethernet type as
.B DL_UNITDATA_IND
messages.  Received Ethernet frames are duplicated and
routed up multiple open streams if necessary. The
.B DLSAP
address
contained within the
.B DL_UNITDATA_REQ
and
.BR DL_UNITDATA_IND
messages consists of both the
.B sap
(type) and physical (Ethernet)
components.
.SS "eri Primitives"
.sp
.LP
In addition to the mandatory connectionless
.B DLPI
message set, the
driver also supports the following primitives:
.sp
.LP
The
.B DL_ENABMULTI_REQ
and
.B DL_DISABMULTI_REQ
primitives
enable/disable reception of individual multicast group addresses. A set of
multicast addresses may be iteratively created and modified on a per-stream
basis using these primitives. These primitives are accepted by the driver in
any state following
.BR DL_ATTACHED .
.sp
.LP
The
.B DL_PROMISCON_REQ
and
.B DL_PROMISCOFF_REQ
primitives with the
.B DL_PROMISC_PHYS
flag set in the
.B dl_level
field enables/disables
reception of all promiscuous mode frames on the media, including frames
generated by the local host. When used with the
.B DL_PROMISC_SAP
flag
set, this enables/disables reception of all
.B sap
(Ethernet type)
values. When used with the
.B DL_PROMISC_MULTI
flag set, this
enables/disables reception of all multicast group addresses. The effect of
each is always on a per-stream basis and independent of the other \fBsap\fR
and physical level configurations on this stream or other streams.
.sp
.LP
The
.B DL_PHYS_ADDR_REQ
primitive returns the 6 octet Ethernet address
.RB "currently associated (attached) to the stream in the" " DL_PHYS_ADDR_ACK"
primitive. This primitive is valid only in states following a successful
.BR DL_ATTACH_REQ .
.sp
.LP
The
.B DL_SET_PHYS_ADDR_REQ
primitive changes the 6 octet Ethernet
address currently associated (attached) to this stream. The credentials of
the process which originally opened this stream must be superuser, or
.B EPERM
is returned in the
.BR DL_ERROR_ACK .
This primitive is
destructive because it affects all current and future streams attached to
this device. An
.B " M_ERROR"
is sent up all other streams attached to this
device when this primitive is successful on this stream. Once changed, all
streams subsequently opened and attached to this device will obtain this new
physical address.  Once changed, the physical address will remain until this
primitive is used to change the physical address again or the system is
rebooted, whichever comes first.
.SS "eri DRIVER"
.sp
.LP
By default, the eri driver performs auto-negotiation to  select the mode
and speed of the link, which can be in one of the  following modes, as
described in the 100Base-TX standard:
.RS +4
.TP
.ie t \(bu
.el o
100 Mbps, full-duplex
.RE
.RS +4
.TP
.ie t \(bu
.el o
100 Mbps, half-duplex
.RE
.RS +4
.TP
.ie t \(bu
.el o
10 Mbps, full-duplex
.RE
.RS +4
.TP
.ie t \(bu
.el o
10 Mbps, half-duplex
.RE
.sp
.LP
The auto-negotiation protocol automatically selects:
.RS +4
.TP
.ie t \(bu
.el o
Operation mode (half-duplex or full-duplex)
.RE
.RS +4
.TP
.ie t \(bu
.el o
Speed (100 Mbps or 10 Mbps)
.RE
.sp
.LP
The auto-negotiation protocol does the following:
.RS +4
.TP
.ie t \(bu
.el o
Gets all modes of operation supported by the link partner
.RE
.RS +4
.TP
.ie t \(bu
.el o
Advertises its capabilities to the Link Partner
.RE
.RS +4
.TP
.ie t \(bu
.el o
Selects the highest common denominator mode of operation based on the
priorities
.RE
.sp
.LP
The internal transceiver is capable of all of the operating speeds and
modes listed above. By default, auto-negotiation is used to select the speed
and the mode of the link and the common mode of operation with the link
partner.
.sp
.LP
For users who want to select the speed and mode of  the link, the \fBeri\fR
device supports programmable
.B IPG
(Inter-Packet Gap) parameters
.B ipg1
and
.BR ipg2 .
Sometimes, the user may want to alter these
values depending on whether the driver supports 10 Mbps or 100 Mpbs and
accordingly,
.B IPG
will be set to 9.6 or 0.96 microseconds.
.SS "eri Parameter List"
.sp
.LP
The
.B eri
driver provides for setting and getting various parameters
for the
.B eri
device. The parameter list includes current transceiver
status, current link status, inter-packet gap, local transceiver
capabilities and link partner capabilities.
.sp
.LP
The local transceiver has two set of capabilities: one set reflects
hardware capabilities, which are read-only
.B (RO)
parameters. The
second set reflects the values chosen by the user and is used in speed
selection and possess read/write
.B (RW)
capability. At boot time, these
two sets of capabilities will be the same. Because the current default value
of these parameters can only be read and not modified, the link partner
capabilities are also read only.
.SH FILES
.sp
.ne 2
.mk
.na
.B /dev/eri
.ad
.RS 28n
.rt
.B eri
special character device.
.RE

.sp
.ne 2
.mk
.na
.B /kernel/drv/eri.conf
.ad
.RS 28n
.rt
 System wide default device driver properties
.RE

.sp
.ne 2
.mk
.na
.B /kernel/drv/sparcv9/eri
.ad
.RS 28n
.rt
 64 bit device driver
.RE

.SH SEE ALSO
.sp
.LP
.BR ndd (1M),
.BR netstat (1M),
.BR driver.conf (4),
.BR hme (7D),
\fBqfe\fR(7d),
.BR dlpi (7P)
