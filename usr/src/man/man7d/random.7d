'\" te
.\" Copyright (c) 2008, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH random 7D "1 Sep 2008" "SunOS 5.11" "Devices"
.SH NAME
random, urandom \- Strong random number generator device
.SH SYNOPSIS
.LP
.nf
/dev/random
.fi

.LP
.nf
/dev/urandom
.fi

.SH DESCRIPTION
.sp
.LP
The
.B /dev/random
and
.B /dev/urandom
files are special files that
are a source for random bytes generated by the kernel random number
generator device. The
.B /dev/random
and
.B /dev/urandom
files are
suitable for applications requiring high quality random numbers for
cryptographic purposes.
.sp
.LP
The generator device produces random numbers from data and devices
available to the kernel and estimates  the amount of randomness (or
"entropy") collected from these sources. The entropy level determines the
amount of high quality random numbers that are produced at a given time.
.sp
.LP
Applications retrieve random bytes by reading
.B /dev/random
or
.BR /dev/urandom .
The
.B /dev/random
interface returns random bytes
only when sufficient amount of entropy has been collected. If there is no
entropy to produce the requested number of bytes,
.B /dev/random
blocks
until more entropy can be obtained. Non-blocking I/O mode can be used to
disable the blocking behavior. The
.B /dev/random
interface also supports
.BR poll (2).
Note that using
.BR poll (2)
will not increase the speed at
which random numbers can be read.
.sp
.LP
Bytes retrieved from
.B /dev/random
provide the highest quality random
numbers produced by the generator, and can be used to generate long term
keys and other high value keying material.
.sp
.LP
The
.B /dev/urandom
interface returns bytes regardless of the amount of
entropy available. It does not block on a read request due to lack of
entropy. While bytes produced by the
.B /dev/urandom
interface are of
lower quality than bytes produced by
.BR /dev/random ,
they are nonetheless
suitable for less demanding and shorter term cryptographic uses such as
short term session keys, paddings, and challenge strings.
.sp
.LP
Data can be written to
.B /dev/random
and
.BR /dev/urandom .
Data
written to either special file is added to the generator's internal state.
Data that is difficult to predict by other users may contribute randomness
to the generator state and help improve the quality of future generated
random numbers.
.sp
.LP
.B /dev/random
collects entropy from providers that are registered with
the kernel-level cryptographic framework and implement random number
generation routines. The
.BR cryptoadm (1M)
utility allows an administrator
to configure which providers will be used with
.BR /dev/random .
.SH ERRORS
.sp
.ne 2
.mk
.na
.B EAGAIN
.ad
.RS 11n
.rt
.B O_NDELAY
or
.B O_NONBLOCK
was set and no random bytes are
available for reading from
.BR /dev/random .
.RE

.sp
.ne 2
.mk
.na
.B EINTR
.ad
.RS 11n
.rt
A signal was caught while reading and no data was
transferred.
.RE

.sp
.ne 2
.mk
.na
.B ENOXIO
.ad
.RS 11n
.rt
.BR open (2)
request failed on
.B /dev/random
because no entropy
provider is available.
.RE

.SH FILES
.sp
.ne 2
.mk
.na
.B /dev/random
.ad
.RS 16n
.rt

.RE

.sp
.ne 2
.mk
.na
.B /dev/urandom
.ad
.RS 16n
.rt

.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Availability SUNWcsr
Interface StabilityEvolving
.TE

.SH SEE ALSO
.sp
.LP
.BR cryptoadm (1M),
.BR open (2),
.BR poll (2),
.BR attributes (5)
.SH NOTES
.sp
.LP
.B /dev/random
can be configured to use only the hardware-based
providers registered with the kernel-level cryptographic framework by
disabling the software-based provider using
.BR cryptoadm (1M).
You can
also use \fBcryptoadm\fR(1M) to obtain the name of the software-based
provider.
.sp
.LP
Because no entropy is available, disabling all randomness providers causes
.BR read (2)
and
.BR poll (2)
on
.B /dev/random
to block indefinitely
and results in a warning message being logged and displayed on the system
console. However,
.BR read (2)
and
.BR poll (2)
on
.BR /dev/urandom
continue to work in this case.
.sp
.LP
An implementation of the
.B /dev/random
and
.BR /dev/urandom
kernel-based random number generator first appeared in Linux 1.3.30.
.sp
.LP
A
.B /dev/random
interface for Solaris first appeared as part of the
CryptoRand implementation.
