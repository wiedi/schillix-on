'\" te
.\" Copyright (c) 1997, Sun Microsystems, Inc.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\"  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH ptm 7D "5 Feb 1997" "SunOS 5.11" "Devices"
.SH NAME
ptm \- STREAMS pseudo-tty master driver
.SH DESCRIPTION
.sp
.LP
The pseudo-tty subsystem simulates a terminal connection, where the master
side represents the terminal and the slave represents the user process's
special device end point. In order to use the pseudo-tty subsystem, a node for
the master side driver
.B /dev/ptmx
and
.B N
number of nodes for the
slave driver must be installed. See
.BR pts (7D).
The master device is set up
as a  cloned device where its major device number is the major for the clone
device and its minor device number is the major for the
.B ptm
driver.
There are no nodes in the file system for master devices. The master pseudo
driver is opened using the
.BR open (2)
system call with
.B /dev/ptmx
as
the device parameter. The clone open finds the next available minor device for
the
.B ptm
major device.
.sp
.LP
A master device is available only if it and its corresponding slave device
are not already open. When the master device is opened, the corresponding
slave device is automatically locked out. Only one open is allowed on a master
device. Multiple opens are allowed on the slave device. After both the master
and slave have been opened, the user has two file descriptors which are the
end points of a full duplex connection composed of two streams which are
automatically connected at the master and slave drivers. The user may then
push modules onto either side of the stream pair.
.sp
.LP
The master and slave drivers pass all messages to their adjacent queues. Only
the
.B M_FLUSH
needs some processing. Because the read queue of one side is
connected to the write queue of the other, the
.B FLUSHR
flag is changed to
the
.B FLUSHW
flag and vice versa. When the master device is closed an
.B M_HANGUP
message is sent to the slave device which will render the
device unusable. The process on the slave side gets the errno
.B EIO
when
attempting to write on that stream but it will be able to read any data
remaining on the stream head read queue. When all the data has been read,
.B read()
returns 0 indicating that the stream can no longer be used. On
the last close of the slave device, a 0-length message is sent to the master
device. When the application on the master side issues a
.B read()
or
.B getmsg()
and 0 is returned, the user of the master device decides
whether to issue a
.B close()
that dismantles the pseudo-terminal
subsystem. If the master device is not closed, the pseudo-tty subsystem will
be available to another user to open the slave device.
.sp
.LP
If
.B O_NONBLOCK
or
.B O_NDELAY
is set, read on the master side returns
\(mi1 with errno set to
.B EAGAIN
if no data is available, and write
returns \(mi1 with errno set to
.B EAGAIN
if there is internal flow
control.
.SH IOCTLS
.sp
.LP
The master driver supports the
.B ISPTM
and
.B UNLKPT
ioctls that are
used by the functions
.BR grantpt (3C),
.BR unlockpt (3C)
and
.BR ptsname (3C).
The ioctl
.B ISPTM
determines whether the file
descriptor is that of an open master device. On success, it returns the 0. The
ioctl
.B UNLKPT
unlocks the master and slave devices. It returns 0 on
success. On failure, the errno is set to
.B EINVAL
indicating that the
master device is not open.
.SH FILES
.sp
.ne 2
.mk
.na
.B /dev/ptmx
.ad
.RS 14n
.rt
master clone device
.RE

.sp
.ne 2
.mk
.na
.B /dev/pts/M
.ad
.RS 14n
.rt
slave devices (M = 0 -> N-1)
.RE

.SH SEE ALSO
.sp
.LP
.BR grantpt (3C),
.BR ptsname (3C),
.BR unlockpt (3C),
.BR pckt (7M),
.BR pts (7D)
.sp
.LP
.I STREAMS Programming Guide
