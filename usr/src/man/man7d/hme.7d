'\" te
.\" Copyright (c) 1995, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH hme 7D "5 Sep 1995" "SunOS 5.11" "Devices"
.SH NAME
hme \- SUNW,hme Fast-Ethernet device driver
.SH SYNOPSIS
.LP
.nf
\fB/dev/hme\fR
.fi

.SH DESCRIPTION
.sp
.LP
The
.B SUNW,hme
Fast-Ethernet driver is a multi-threaded, loadable,
clonable, STREAMS hardware driver supporting the connectionless Data Link
Provider Interface,
.BR dlpi (7P),
over a
.B SUNW,hme
Fast-Ethernet
controller. The motherboard and add-in SBus
.B SUNW,hme
controllers of
several varieties are supported. Multiple
.B SUNW,hme
controllers
installed within the system are supported by the driver.
.sp
.LP
The
.B hme
driver provides basic support for the
.BR SUNW,hme
hardware. It is used to handle the
.B SUNW,hme
device. Functions include
chip initialization, frame transit and receive, multicast and promiscuous
support, and error recovery and reporting.
.B SUNW,hme
The
.BR SUNW,hme
device provides 100Base-TX networking interfaces using SUN's
.B "FEPS ASIC"
and an Internal Transceiver. The FEPS ASIC provides the Sbus interface and
MAC functions and the Physical layer functions are provided by the Internal
Transceiver which connects to a
.B RJ-45
connector. In addition to the
RJ-45 connector, an
.B MII
(Media Independent Interface) connector is
also provided on all
.B SUNW,hme
devices except the  \fBSunSwith SBus adapter\fR board. The MII interface is used to connect to an External
Transceiver which may use any physical media (copper or fiber) specified in
the 100Base-TX standard. When an External Transceiver is connected to the
MII, the driver selects the External Transceiver and disables the Internal
Transceiver.
.sp
.LP
The 100Base-TX standard specifies an "auto-negotiation" protocol to
automatically select the mode and speed of operation. The Internal
transceiver is capable of doing "auto-negotiation" with the remote-end of
the link (Link Partner) and receives the capabilities  of the remote end. It
selects the
.B "Highest Common Denominator"
mode of operation based on the
priorities. It also supports
.B forced-mode
of operation where the
driver can select the mode of operation.
.SH APPLICATION PROGRAMMING INTERFACE
.sp
.LP
The cloning character-special device
.B /dev/hme
is used to access all
.B SUNW,hme
controllers installed within the system.
.SS "hme and DLPI"
.sp
.LP
The  \fBhme\fR driver is a "style 2" Data Link Service provider. All
.B M_PROTO
and
.B M_PCPROTO
type messages are interpreted as
.B DLPI
primitives. Valid
.B DLPI
primitives are defined in
.B <sys/dlpi.h>.
Refer to
.BR dlpi (7P)
for more information. An
explicit
.B DL_ATTACH_REQ
message by the user is required to associate
the opened stream with a particular device
.RB ( ppa ).
The
.B ppa
ID is
interpreted as an
.B "unsigned long"
data type and indicates the
corresponding device instance (unit) number. An error
.RB ( DL_ERROR_ACK )
is returned by the driver if the
.B ppa
field value does not correspond
to a valid device instance number for this system. The device is initialized
on first attach and de-initialized (stopped) at last detach.
.sp
.LP
The values returned by the driver in the
.B DL_INFO_ACK
primitive in
response to the
.B DL_INFO_REQ
from the user are as follows:
.RS +4
.TP
.ie t \(bu
.el o
The maximum
.B SDU
is
.B 1500
(\fBETHERMTU\fR - defined in
<sys/ethernet.h> ).
.RE
.RS +4
.TP
.ie t \(bu
.el o
The minimum
.B SDU
is
.BR 0 .
.RE
.RS +4
.TP
.ie t \(bu
.el o
The
.B dlsap
address length is
.BR 8.
.RE
.RS +4
.TP
.ie t \(bu
.el o
The
.B MAC
type is
.BR DL_ETHER.
.RE
.RS +4
.TP
.ie t \(bu
.el o
The
.B sap
length values is \fB\(mi2\fR meaning the physical address
component is followed immediately by a 2 byte
.B sap
component within
the
.B DLSAP
address.
.RE
.RS +4
.TP
.ie t \(bu
.el o
The service mode is
.BR DL_CLDLS.
.RE
.RS +4
.TP
.ie t \(bu
.el o
No optional quality of service (QOS) support is included at present so the
.B QOS
fields are
.BR 0 .
.RE
.RS +4
.TP
.ie t \(bu
.el o
The provider style is
.BR DL_STYLE2.
.RE
.RS +4
.TP
.ie t \(bu
.el o
The version is
.BR DL_VERSION_2.
.RE
.RS +4
.TP
.ie t \(bu
.el o
The broadcast address value is Ethernet/IEEE broadcast address
.RB ( 0xFFFFFF ).
.RE
.sp
.LP
Once in the
.B DL_ATTACHED
.RB "state, the user must send a" " DL_BIND_REQ"
to associate a particular
.B SAP
(Service Access Pointer) with the
stream. The
.B hme
driver interprets the
.B sap
field within the
\fBDL_BIND_REQ\fR as an Ethernet "type" therefore valid values for the
\fBsap\fR field are in the [\fB0\fR-\fB0xFFFF\fR] range.  Only one Ethernet
type can be bound to the stream at any time.
.sp
.LP
If the user selects a
.B sap
with a value of
.BR 0 ,
the receiver will
be in "802.3 mode". All frames received from the media having a "type" field
.RB "in the range [" 0 - 1500 ]
are assumed to be 802.3 frames and are
routed up all open Streams which are bound to
.B sap
value
.BR 0 .
If
more than one Stream is in "802.3 mode" then the frame will be duplicated
and routed up multiple Streams as
.B DL_UNITDATA_IND
messages.
.sp
.LP
In transmission, the driver checks the
.B sap
field of the
.B DL_BIND_REQ
if the
.B sap
value is
.BR 0 ,
and if the destination
.RB "type field is in the range [" 0 - 1500 ].
If either is true, the
driver computes the length of the message, not including initial
.B M_PROTO
mblk (message block), of all subsequent
.B DL_UNITDATA_REQ
messages and transmits 802.3 frames that have this value in the MAC frame
header length field.
.sp
.LP
The
.B hme
driver
.B DLSAP
address format consists of the 6 byte
physical (Ethernet) address component followed immediately by the 2 byte
.B sap
(type) component producing an 8 byte
.B DLSAP
address.
Applications should
.I not
hardcode to this particular
implementation-specific
.B DLSAP
address format but use information
returned in the
.B DL_INFO_ACK
primitive to compose and decompose
.B DLSAP
addresses. The
.B sap
length, full
.B DLSAP
length, and
\fBsap\fR/physical ordering are included within the
.B DL_INFO_ACK.
The
physical address length can be computed by subtracting the
.B sap
length
from the full
.B DLSAP
address length or by issuing the
.B DL_PHYS_ADDR_REQ
to obtain the current physical address associated
with the stream.
.sp
.LP
Once in the
.B DL_BOUND
state, the user may transmit frames on the
Ethernet by sending
.B DL_UNITDATA_REQ
messages to the
.B hme
driver.
The
.B hme
driver will route received Ethernet frames up all those open
and bound streams having a
.B sap
which matches the Ethernet type as
.B DL_UNITDATA_IND
messages.  Received Ethernet frames are duplicated and
routed up multiple open streams if necessary. The
.B DLSAP
address
contained within the
.B DL_UNITDATA_REQ
and
.BR DL_UNITDATA_IND
messages consists of both the
.B sap
(type) and physical (Ethernet)
components.
.sp
.LP
In addition to the mandatory connectionless
.B DLPI
message set the
driver additionally supports the following primitives.
.SS "hme Primitives"
.sp
.LP
The
.B DL_ENABMULTI_REQ
and
.B DL_DISABMULTI_REQ
primitives
enable/disable reception of individual multicast group addresses. A set of
multicast addresses may be iteratively created and modified on a per-stream
basis using these primitives. These primitives are accepted by the driver in
any state following
.BR DL_ATTACHED.
.sp
.LP
The
.B DL_PROMISCON_REQ
and
.B DL_PROMISCOFF_REQ
primitives with the
.B DL_PROMISC_PHYS
flag set in the
.B dl_level
field enables/disables
reception of all ("promiscuous mode") frames on the media including frames
generated by the local host. When used with the
.B DL_PROMISC_SAP
flag
set this enables/disables reception of all
.B sap
(Ethernet type) values.
When used with the
.B DL_PROMISC_MULTI
flag set this enables/disables
reception of all multicast group addresses. The effect of each is always on
a per-stream basis and independent of the other
.B sap
and physical level
configurations on this stream or other streams.
.sp
.LP
The
.B DL_PHYS_ADDR_REQ
primitive returns the 6 octet Ethernet address
.RB "currently associated (attached) to the stream in the" " DL_PHYS_ADDR_ACK"
primitive. This primitive is valid only in states following a successful
.B DL_ATTACH_REQ.
.sp
.LP
The
.B DL_SET_PHYS_ADDR_REQ
primitive changes the 6 octet Ethernet
address currently associated (attached) to this stream. The credentials of
the process which originally opened this stream must be superuser.
Otherwise
.B EPERM
is returned in the
.B DL_ERROR_ACK.
This primitive
is destructive in that it affects all other current and future streams
attached to this device. An
.B M_ERROR
is sent up all other streams
attached to this device when this primitive is successful on this stream.
Once changed, all streams subsequently opened and attached to this device
will obtain this new physical address.  Once changed, the physical address
will remain until this primitive is used to change the physical address
again or the system is rebooted, whichever comes first.
.SS "hme DRIVER"
.sp
.LP
By default, the hme driver performs "auto-negotiation" to  select the
.B mode
and
.B speed
of the link, when the Internal Transceiver is
used.
.sp
.LP
When an External Transceiver is connected to the
.B MII
interface, the
driver selects the External Transceiver for  networking operations. If the
External Transceiver supports "auto-negotiation", the driver uses the
auto-negotiation procedure to select the link speed and mode. If the
External Transceiver does not support auto-negotiation, it will select the
highest priority mode supported by the transceiver.
.RS +4
.TP
.ie t \(bu
.el o
100 Mbps, full-duplex
.RE
.RS +4
.TP
.ie t \(bu
.el o
100 Mbps, half-duplex
.RE
.RS +4
.TP
.ie t \(bu
.el o
10 Mbps, full-duplex
.RE
.RS +4
.TP
.ie t \(bu
.el o
10 Mbps, half-duplex
.RE
.sp
.LP
The link can be in one of the
.I 4
following modes:
.sp
.LP
These speeds and modes are described in the 100Base-TX standard.
.sp
.LP
The \fIauto\(minegotiation\fR protocol automatically selects:
.RS +4
.TP
.ie t \(bu
.el o
Operation mode (half-duplex or full-duplex)
.RE
.RS +4
.TP
.ie t \(bu
.el o
Speed (100 Mbps or 10 Mbps)
.RE
.sp
.LP
The auto\(minegotiation protocol does the following:
.RS +4
.TP
.ie t \(bu
.el o
Gets all the modes of operation supported by the Link Partner
.RE
.RS +4
.TP
.ie t \(bu
.el o
Advertises its capabilities to the Link Partner
.RE
.RS +4
.TP
.ie t \(bu
.el o
Selects the highest common denominator mode of operation based on the
priorities
.RE
.sp
.LP
The
.I "internal transceiver"
is capable of all of the operating
speeds and modes listed above. When the internal transceiver is used, by
.IR default ,
auto-negotiation is used to select the speed and the mode of
the link and the common mode of operation with the Link Partner.
.sp
.LP
When an
.I "external transceiver"
is connected to the
.BR MII
interface, the driver selects the external transceiver for networking
operations. If the external transceiver supports auto-negotiation:
.RS +4
.TP
.ie t \(bu
.el o
The driver uses the auto-negotiation procedure to select the link speed and
mode.
.RE
.sp
.LP
If the external transceiver
.I "does not"
support
auto-negotiation
.RS +4
.TP
.ie t \(bu
.el o
The driver selects the highest priority mode supported by the
transceiver.
.RE
.sp
.LP
Sometimes, the user may want to select the speed and mode of  the link. The
\fBSUNW,hme\fR device supports programmable \fB"IPG"\fR (Inter-Packet Gap)
parameters
.B ipg1
and
.BR ipg2 .
By default, the driver sets
.B ipg1
to 8
.B byte-times
and
.B ipg2
to 4
.BR byte-times
(which are the standard values). Sometimes, the user may want to alter these
values depending on whether the driver supports 10 Mbps or 100 Mpbs and
accordingly,
.B IPG
will be set to 9.6 or 0.96 microseconds.
.SS "hme Parameter List"
.sp
.LP
The hme driver provides for setting and getting various parameters for the
.B SUNW,hme
device. The parameter list includes:
.br
.in +2
.B current transceiver status
.in -2
.br
.in +2
.B current link status
.in -2
.br
.in +2
.B inter-packet gap
.in -2
.br
.in +2
.B local transceiver capabilities
.in -2
.br
.in +2
.B link partner capabilities
.in -2
.sp
.LP
The local transceiver has two set of capabilities: one set reflects the
capabilities of the
.BR hardware ,
which are
.BR "read-only (RO)"
parameters and the second set reflects the values chosen by the user and is
used in
.BR "speed selection" .
There are
.BR "read/write (RW)"
capabilities. At boot time, these two sets of capabilities will be the same.
The Link Partner capabilities are also read only parameters because the
current default value of these parameters can only be read and cannot be
modified.
.SH FILES
.sp
.ne 2
.mk
.na
.B /dev/hme
.ad
.RS 24n
.rt
.B hme
special character device
.RE

.sp
.ne 2
.mk
.na
.B /kernel/drv/hme.conf
.ad
.RS 24n
.rt
System-wide default device driver properties
.RE

.SH SEE ALSO
.sp
.LP
.BR ndd (1M),
.BR netstat (1M),
.BR driver.conf (4),
.BR dlpi (7P)
