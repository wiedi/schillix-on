'\" te
.\" Copyright (C) 1990, Regents of the University of Michigan.  All Rights Reserved.
.\" Portions Copyright (C) 2002, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH ldap_add 3LDAP "27 Jan 2002" "SunOS 5.11" "LDAP Library Functions"
.SH NAME
ldap_add, ldap_add_s, ldap_add_ext, ldap_add_ext_s \- perform an LDAP add
operation
.SH SYNOPSIS
.LP
.nf
cc[ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. -lldap[ \fIlibrary\fR.\|.\|. ]
#include <lber.h>
#include <ldap.h>

\fBint\fBldap_add\fR(\fBLDAP\fR \fI*ld\fR, \fBchar\fR \fI*dn\fR, \fBLDAPMod\fR \fI*attrs\fR[]);
.fi

.LP
.nf
\fBint\fBldap_add_s\fR(\fBLDAP\fR \fI*ld\fR, \fBchar\fR \fI*dn\fR, \fBLDAPMod\fR \fI*attrs\fR[]);
.fi

.LP
.nf
\fBint\fR \fBldap_add_ext\fR(\fBLDAP\fR \fI*ld\fR, \fBchar\fR \fI*dn\fR, \fBLDAPMod\fR \fI**attrs\fR,
     \fBLDAPControl\fR \fI**serverctrls\fR,\ \fBint\fR \fI* msgidp\fR);
.fi

.LP
.nf
\fBint\fR \fBldap_add_ext_s\fR(\fBLDAP\fR \fI*ld\fR, \fBchar\fR \fI*dn\fR, \fBLDAPMod\fR \fI**attrs\fR,
     \fBLDAPControl\fR \fI**serverctrls\fR, \fBLDAPControl\fR \fI**clientctrls\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B ldap_add_s()
function is used to perform an LDAP add operation.
It takes
.IR dn ,
the DN of the entry to add, and
.IR attrs ,
a
null-terminated array of the entry's attributes.  The LDAPMod structure is
used to represent attributes, with the
.I mod_type
and
.IR mod_values
fields being used as described under
.BR ldap_modify (3LDAP),
and the
.I ldap_op
field being used only if you need to specify the
.B LDAP_MOD_BVALUES
option. Otherwise, it should be set to zero.
.sp
.LP
Note that all entries except that specified by the last component in the
given DN must already exist.
.B ldap_add_s()
returns an LDAP error code
indicating success or failure of the operation.  See
.BR ldap_error (3LDAP)
for more details.
.sp
.LP
The
.B ldap_add()
function works just like
.BR ldap_add_s() ,
but it is
asynchronous. It returns the message id of the request it initiated.  The
result of this operation can be obtained by calling
.BR ldap_result (3LDAP).
.sp
.LP
The
.B ldap_add_ext()
function initiates an asynchronous add operation
and returns
.B LDAP_SUCCESS
if the request was successfully sent to the
server, or else it returns a LDAP error code if not (see
.BR ldap_error (3LDAP)).
If successful,
.B "ldap_add_ext() places"
.B the message
.B id of
.IR *msgidp .
A subsequent call
to
.BR ldap_result() ,
can be used to obtain the result of the add
request.
.sp
.LP
The
.B ldap_add_ext_s()
function initiates a synchronous add operation
and returns the result of the operation itself.
.SH ERRORS
.sp
.LP
.B ldap_add()
returns
.B \(mi1
in case of error initiating the
request, and will set the
.I ld_errno
field in the
.I ld
parameter to
indicate the error.
.B ldap_add_s()
will return an LDAP error code
directly.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for a description of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
AvailabilitySUNWcsl (32-bit)
SUNWcslx (64-bit)
Interface StabilityEvolving
.TE

.SH SEE ALSO
.sp
.LP
.BR ldap (3LDAP),
.BR ldap_error (3LDAP),
.BR ldap_modify (3LDAP),
.BR attributes (5)
