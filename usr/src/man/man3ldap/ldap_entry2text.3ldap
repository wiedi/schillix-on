'\" te
.\" Copyright (C) 1990, Regents of the University of Michigan.  All Rights Reserved.
.\" Portions Copyright (C) 2002, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH ldap_entry2text 3LDAP "27 Jan 2002" "SunOS 5.11" "LDAP Library Functions"
.SH NAME
ldap_entry2text, ldap_entry2text_search, ldap_entry2html,
ldap_entry2html_search, ldap_vals2html, ldap_vals2text \- LDAP entry display
functions
.SH SYNOPSIS
.LP
.nf
cc[ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. -lldap[ \fIlibrary\fR.\|.\|. ]
#include <lber.h>
#include <ldap.h>

\fBint\fR \fBldap_entry2text\fR(\fBLDAP\fR \fI*ld\fR, \fBchar\fR \fI*buf\fR, \fBLDAPMessage\fR \fI*entry\fR,
     \fBstruct ldap_disptmpl\fR \fI*tmpl\fR, \fBchar\fR \fI**defattrs\fR, \fBchar\fR \fI***defvals\fR,
     \fBint (\fI*writeproc\fR)(), \fBvoid\fR \fI*writeparm\fR, \fBchar\fR \fI*eol\fR, \fBint\fR \fIrdncount\fR,
     \fBunsigned long\fR \fIopts\fR);
.fi

.LP
.nf
\fBint\fR \fBldap_entry2text_search\fR(\fBLDAP\fR \fI*ld\fR, \fBchar\fR \fI*dn\fR, \fBchar\fR \fI*base\fR,
     \fBLDAPMessage\fR \fI*entry\fR, \fBstruct ldap_disptmpl\fR \fI*tmpllist\fR,
     \fBchar\fR \fI**defattrs\fR, \fBchar\fR \fI***defvals\fR, \fBint (\fI*writeproc\fR)(),
     \fBvoid\fR \fI*writeparm\fR, \fBchar\fR \fI*eol\fR,\fBint\fR \fIrdncount\fR,
     \fBunsigned long\fR \fIopts\fR);
.fi

.LP
.nf
\fBint\fR \fBldap_vals2text\fR(\fBLDAP\fR \fI*ld\fR, \fBchar\fR \fI*buf\fR, \fBchar\fR \fI**vals\fR, \fBchar\fR \fI*label\fR,
     \fBint\fR \fIlabelwidth\fR, \fBunsigned long\fIsyntaxid\fR, \fBint (\fI*writeproc\fR)(),
     \fBvoid\fR \fI*writeparm\fR, \fBchar\fR \fI*eol\fR, \fBint\fR \fIrdncount\fR);
.fi

.LP
.nf
\fBint\fR \fBldap_entry2html\fR(\fBLDAP\fR \fI*ld\fR, \fBchar\fR \fI*buf\fR, \fBLDAPMessage\fR \fI*entry\fR,
     \fBstruct ldap_disptmpl\fR \fI*tmpl\fR, \fBchar\fR \fI**defattrs\fR, \fBchar\fR \fI***defvals\fR,
     \fBint (\fI*writeproc\fR)(),\fBvoid\fR \fI*writeparm\fR, \fBchar\fR \fI*eol\fR, \fBint\fR \fIrdncount\fR,
     \fBunsigned long\fR \fIopts\fR, \fBchar\fR \fI*urlprefix\fR, \fBchar\fR \fI*base\fR);
.fi

.LP
.nf
\fBint\fR \fBldap_entry2html_search\fR(\fBLDAP\fR \fI*ld\fR, \fBchar\fR \fI*dn\fR, \fBLDAPMessage\fR \fI*entry\fR,
     \fBstruct ldap_disptmpl\fR \fI*tmpllist\fR, \fBchar\fR \fI**defattrs\fR, \fBchar\fR \fI***defvals\fR,
     \fBint (\fI*writeproc\fR)(), \fBvoid\fR \fI*writeparm\fR, \fBchar\fR \fI*eol\fR, \fBint\fR \fIrdncount\fR,
     \fBunsigned long\fR \fIopts\fR, \fBchar\fR \fI*urlprefix\fR);
.fi

.LP
.nf
\fBint\fR \fBldap_vals2html\fR(\fBLDAP\fR \fI*ld\fR, \fBchar\fR \fI*buf\fR, \fBchar\fR \fI**vals\fR,
     \fBchar\fR \fI*label\fR, \fBint\fR \fIlabelwidth\fR, \fBunsigned long\fR \fIsyntaxid\fR,
     \fBint (\fI*writeproc\fR)(), \fBvoid\fR \fI*writeparm\fR, \fBchar\fR \fI*eol\fR, \fBint\fR \fIrdncount\fR,
     \fBchar\fR \fI*urlprefix\fR);
.fi

.LP
.nf
#define LDAP_DISP_OPT_AUTOLABELWIDTH 0x00000001
.fi

.LP
.nf
#define LDAP_DISP_OPT_HTMLBODYONLY      0x00000002
.fi

.LP
.nf
#define LDAP_DTMPL_BUFSIZ  2048
.fi

.SH DESCRIPTION
.sp
.LP
These functions use the LDAP display template functions (see
.BR ldap_disptmpl (3LDAP)
and
.B ldap_templates.conf(4))
to produce a
plain text or an HyperText Markup Language (HTML) display of an entry or a
set of values.  Typical plain text output produced for an entry might look
like:
.sp
.in +2
.nf
    "Barbara J Jensen, Information Technology Division"
     Also Known As:
     Babs Jensen
     Barbara Jensen
     Barbara J Jensen
     E-Mail Address:
     bjensen@terminator.rs.itd.umich.edu
     Work Address:
     535 W. William
     Ann Arbor, MI 48103
     Title:
     Mythical Manager, Research Systems
     .\|.\|.
.fi
.in -2

.sp
.LP
The exact output produced will depend on the display template
configuration. HTML output is similar to the plain text output, but more
richly formatted.
.sp
.LP
.B ldap_entry2text()
produces a text representation of
.I entry
and
writes the text by calling the
.I writeproc
function.  All of the
attributes values to be displayed must be present in
.I entry;
no
interaction with the LDAP server will be performed within
.BR ldap_entry2text .
.B ld
is the LDAP pointer obtained by a previous
call to
.B ldap_open.
.I writeproc
should be declared as:
.sp
.in +2
.nf
int writeproc( writeparm, p, len )
 void  *writeparm;
 char  *p;
 int  len;
.fi
.in -2

.sp
.LP
where
.I p
is a pointer to text to be written and
.I len
is the
length of the text.
.I p
is guaranteed to be zero-terminated.  Lines of
text are terminated with the string
.I "eol. buf"
is a pointer to a
buffer of size
.B LDAP_DTMPL_BUFSIZ
or larger.  If
.I "buf is"
.I NULL
then a buffer is allocated and freed internally.
.I tmpl
is a
pointer to the display template to be used (usually obtained by calling
.BR ldap_oc2template ).
If
.I tmpl
is
.IR NULL ,
no template is used
and a generic display is produced.
.I defattrs
is a NULL-terminated array
of LDAP attribute names which you wish to provide default values for (only
used if
.I entry
contains no values for the attribute).  An array of
NULL-terminated arrays of default values corresponding to the attributes
should be passed in
.I "defvals. The"
.I rdncount
parameter is
used to limit the number of Distinguished Name (DN) components that are
actually displayed for DN attributes.  If
.I rdncount
is zero, all
components are shown.
.I opts
is used to specify output options.  The
only values currently allowed are zero (default output),
.B LDAP_DISP_OPT_AUTOLABELWIDTH
which causes the width for labels to be
determined based on the longest label in
.IR "tmpl, and"
.BR LDAP_DISP_OPT_HTMLBODYONLY .
The
.BR LDAP_DISP_OPT_HTMLBODYONLY
option instructs the library not to include <HTML>, <HEAD>, <TITLE>, and
<BODY> tags.  In other words, an HTML fragment is generated, and the caller
is responsible for prepending and appending the appropriate HTML tags to
construct a correct HTML document.
.sp
.LP
.B ldap_entry2text_search()
is similar to
.BR ldap_entry2text ,
and all
of the like-named parameters have the same meaning except as noted below.
If
.I base
is not
.IR NULL ,
it is the search base to use when executing
search actions.  If it is
.IR NULL ,
search action template items are
ignored. If
.I entry
is not
.IR NULL ,
it should contain the
.I objectClass
attribute values for the entry to be displayed.  If
.I entry
is
.IR NULL ,
.I dn
must not be
.IR NULL ,
and
.B ldap_entry2text_search
will retrieve the
.B objectClass
values
itself by calling
.B "ldap_search_s. ldap_entry2text_search"
will
determine the appropriate display template to use by calling
.BR ldap_oc2template ,
and will call
.B ldap_search_s
to retrieve any
attribute values to be displayed.  The
.I tmpllist
parameter is a pointer
to the entire list of templates available (usually obtained by calling
.B ldap_init_templates
or
.BR ldap_init_templates_buf ).
If
.I tmpllist
is
.IR NULL ,
.B ldap_entry2text_search
will attempt to
read a load templates from the default template configuration file
.B ETCDIR/ldaptemplates.conf
.sp
.LP
.B ldap_vals2text
produces a text representation of a single set of LDAP
.RI "attribute values.  The " "ld, buf," " " writeproc, 
.I writeparm, eol,
and
.I rdncount
parameters are the same as
the like-named parameters for
.BR ldap_entry2text .
.I vals
is a
NULL-terminated list of values, usually obtained by a call to
.BR ldap_get_values .
.I label
is a string shown next to the values
(usually a friendly form of an LDAP attribute name).
.I labelwidth
specifies the label margin, which is the number of blank spaces displayed to
the left of the values. If zero is passed, a default label width is used.
.I syntaxid
is a display template attribute syntax identifier (see
.BR ldap_disptmpl (3LDAP)
for a list of the pre-defined \fBLDAP_SYN_.\|.\|.\fR
values).
.sp
.LP
.B ldap_entry2html
produces an HTML representation of
.I entry.
It
behaves exactly like ldap_entry2text(3LDAP), except for the formatted output
and the addition of two parameters.
.I urlprefix
is the starting text to
use when constructing an LDAP URL.  The default is the string
.I ldap:///
The second additional parameter,
.I base,
the search base to use when
executing search actions.  If it is
.IR NULL ,
search action template
items are ignored.
.sp
.LP
.B ldap_entry2html_search
behaves exactly like
.BR ldap_entry2text_search (3LDAP),
except HTML output is produced and one
additional parameter is required.
.I urlprefix
is the starting text to
use when constructing an LDAP URL.  The default is the string
.I ldap:///
.sp
.LP
.B ldap_vals2html
behaves exactly like
\fBldap_vals2text\fR,\fBexcept\fRHTML\fBoutput\fRis and one additional
parameter is required.
.I urlprefix
is the starting text to use when
constructing an LDAP URL. The default is the string
.I ldap:///
.SH ERRORS
.sp
.LP
These functions all return an LDAP error code.
.B LDAP_SUCCESS
is
returned if no error occurs. See
.BR ldap_error (3LDAP)
for details. The
.I ld_errno
field of the
.I ld
parameter is also set to indicate the
error.
.SH FILES
.sp
.LP
.B ETCDIR/ldaptemplates.conf
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for a description of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
AvailabilitySUNWcsl (32-bit)
SUNWcslx (64-bit)
Interface StabilityEvolving
.TE

.SH SEE ALSO
.sp
.LP
.BR ldap (3LDAP),
.BR ldap_disptmpl (3LDAP),
.BR ldaptemplates.conf (4)
,
.BR attributes (5)
