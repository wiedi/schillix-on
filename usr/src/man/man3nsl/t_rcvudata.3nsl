'\" te
.\" Copyright 1994, The X/Open Company Ltd., All Rights Reserved.
.\" Portions Copyright 1989 AT&T.
.\" Portions Copyright (c) 1998, Sun Microsystems, Inc., All Rights Reserved
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH t_rcvudata 3NSL "7 May 1998" "SunOS 5.11" "Networking Services Library Functions"
.SH NAME
t_rcvudata \- receive a data unit
.SH SYNOPSIS
.LP
.nf
#include <xti.h>



\fBint\fR \fBt_rcvudata\fR(\fBint\fR \fIfd\fR, \fBstruct t_unitdata *\fIunitdata\fR, \fBint *\fIflags\fR);
.fi

.SH DESCRIPTION
.sp
.LP
This routine is part of the
.B XTI
interfaces which evolved from the
\fBTLI\fR interfaces. \fBXTI\fR represents the future evolution of these
interfaces. However,
.B TLI
interfaces are supported for compatibility. When
using a
.B TLI
routine that has the same name as an
.B XTI
routine, the
\fBtiuser.h\fR header file must be used.  Refer to the  \fBTLI\fR
\fBCOMPATIBILITY\fR section for a description of differences between the two
interfaces.
.sp
.LP
This function is used in connectionless-mode to receive a data unit from another
transport user. The argument \fIfd\fR identifies the local transport endpoint
through which data will be received,
.I unitdata
holds information associated
with the received data unit, and \fIflags\fR is set on return to indicate that
the complete data unit was not received. The argument
.I unitdata
points to a
\fBt_unitdata\fR structure containing the following members:
.sp
.in +2
.nf
\fBstruct netbuf addr;
struct netbuf opt;
struct netbuf udata;\fR
.fi
.in -2

.sp
.LP
The
.I maxlen
field of
.IR addr ,
\fIopt\fR and \fIudata\fR must be set
before calling this function to indicate the maximum size of the buffer for each.
If the
.I maxlen
field of
.I addr
or
.I opt
is set to zero, no
information is returned in the  \fIbuf\fR field of this parameter.
.sp
.LP
On return from this call,
.I addr
specifies the protocol address of the
sending user,
.I opt
identifies options that were associated with this data
unit, and
.I udata
specifies the user data that was received.
.sp
.LP
By default,
.B t_rcvudata()
operates in synchronous mode and will wait for a
data unit to arrive if none is currently available. However, if  \fBO_NONBLOCK\fR
is set by means of
.BR t_open "(3NSL) or"
.BR fcntl (2),
\fBt_rcvudata()\fR will
execute in asynchronous mode and will fail if no data units are available.
.sp
.LP
If the buffer defined in the
.I udata
field of
.I unitdata
is not large
enough to hold the current data unit, the buffer will be filled and  \fBT_MORE\fR
will be set in \fIflags\fR on return to indicate that another \fBt_rcvudata()\fR
should be called to retrieve the rest of the data unit.  Subsequent calls to
\fBt_rcvudata()\fR will return zero for the length of the address and options
until the full data unit has been received.
.sp
.LP
If the call is interrupted,
.B t_rcvudata()
will return
.B EINTR
and no
datagrams will have been removed from the endpoint.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, a value of
.B 0
is returned.  Otherwise, a value
of \(mi1 is returned and
.B t_errno
is set to indicate an error.
.SH VALID STATES
.sp
.LP
.BR T_IDLE .
.SH ERRORS
.sp
.LP
On failure,
.B t_errno
is set to one of the following:
.sp
.ne 2
.mk
.na
.B TBADF
.ad
.RS 15n
.rt
The specified file descriptor does not refer to a transport endpoint.
.RE

.sp
.ne 2
.mk
.na
.B TBUFOVFLW
.ad
.RS 15n
.rt
The number of bytes allocated for the incoming protocol address or options
\fI(maxlen)\fR is greater than  \fB0\fR but not sufficient to store the
information. The unit data information to be returned in
.I unitdata
will be
discarded.
.RE

.sp
.ne 2
.mk
.na
.B TLOOK
.ad
.RS 15n
.rt
An asynchronous event has occurred on this transport endpoint and requires
immediate attention.
.RE

.sp
.ne 2
.mk
.na
.B TNODATA
.ad
.RS 15n
.rt
\fBO_NONBLOCK\fR was set, but no data units are currently available from the
transport provider.
.RE

.sp
.ne 2
.mk
.na
.B TNOTSUPPORT
.ad
.RS 15n
.rt
This function is not supported by the underlying transport provider.
.RE

.sp
.ne 2
.mk
.na
.B TOUTSTATE
.ad
.RS 15n
.rt
The communications endpoint referenced by  \fIfd\fR is not in one of the states
in which a call to this function is valid.
.RE

.sp
.ne 2
.mk
.na
.B TPROTO
.ad
.RS 15n
.rt
This error indicates that a communication problem has been detected between XTI
and the transport provider for which there is no other suitable XTI error
.BR (t_errno) .
.RE

.sp
.ne 2
.mk
.na
.B TSYSERR
.ad
.RS 15n
.rt
A system error has occurred during execution of this function.
.RE

.SH TLI COMPATIBILITY
.sp
.LP
The
.B XTI
and
.B TLI
interface definitions have common names but use
different header files. This, and other semantic differences between the two
interfaces are described in the subsections below.
.SS "Interface Header"
.sp
.LP
The
.B XTI
interfaces use the header file,
.BR xti.h .
\fBTLI\fR interfaces
should
.I not
use this header.  They should use the header:
.br
.in +2
#include<tiuser.h>
.in -2
.SS "Error Description Values"
.sp
.LP
The
.B t_errno
values that can be set by the
.B XTI
interface and cannot
be set by the
.B TLI
interface are:
.br
.in +2
.B TPROTO
.in -2
.br
.in +2
.B TOUTSTATE
.in -2
.sp
.LP
A
.B t_errno
value that this routine can return under different circumstances
than its
.B XTI
counterpart is
.B TBUFOVFLW.
It can be returned even when
the
.B maxlen
field of the corresponding buffer has been set to zero.
.SS "Option Buffers"
.sp
.LP
The format of the options in an
.B opt
buffer is dictated by the transport
provider. Unlike the
.B XTI
interface, the
.B TLI
interface does not fix
the buffer format.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR fcntl (2),
.BR t_alloc (3NSL),
.BR t_open (3NSL),
.BR t_rcvuderr (3NSL),
.BR t_sndudata (3NSL),
.BR attributes (5)
