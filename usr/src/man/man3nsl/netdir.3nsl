'\" te
.\" Copyright 1989 AT&T
.\" Copyright (C) 2005, Sun Microsystems, Inc. All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH netdir 3NSL "28 Jan 2005" "SunOS 5.11" "Networking Services Library Functions"
.SH NAME
netdir, netdir_getbyname, netdir_getbyaddr, netdir_free, netdir_options,
taddr2uaddr, uaddr2taddr, netdir_perror, netdir_sperror, netdir_mergeaddr \-
generic transport name-to-address translation
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lnsl\fR [ \fIlibrary\fR.\|.\|.]
#include <netdir.h>

\fBint\fR \fBnetdir_getbyname\fR(\fBstruct netconfig  *\fIconfig\fR,
     \fBstruct nd_hostserv *\fIservice\fR, \fBstruct nd_addrlist **\fIaddrs\fR);
.fi

.LP
.nf
\fBint\fR \fBnetdir_getbyaddr\fR(\fBstruct netconfig  *\fIconfig\fR,
     \fBstruct nd_hostservlist **\fIservice\fR, \fBstruct netbuf  *\fInetaddr\fR);
.fi

.LP
.nf
\fBvoid\fR \fBnetdir_free\fR(\fBvoid *\fIptr\fR, \fBint\fR \fIstruct_type\fR);
.fi

.LP
.nf
\fBint\fR \fBnetdir_options\fR(\fBstruct netconfig  *\fIconfig\fR, \fBint\fR \fIoption\fR, \fBint\fR \fIfildes\fR,
     \fBchar *\fIpoint_to_args\fR);
.fi

.LP
.nf
\fBchar *\fBtaddr2uaddr\fR(\fBstruct netconfig *\fIconfig\fR, \fBstruct netbuf *\fIaddr\fR);
.fi

.LP
.nf
\fBstruct netbuf *\fBuaddr2taddr\fR(\fBstruct netconfig *\fIconfig\fR, \fBchar *\fIuaddr\fR);
.fi

.LP
.nf
\fBvoid\fR \fBnetdir_perror\fR(\fBchar *\fIs\fR);
.fi

.LP
.nf
\fBchar *\fBnetdir_sperror\fR(\fBvoid\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B netdir
functions provide a generic interface for name-to-address
mapping that will work with all transport protocols. This interface provides
a generic way for programs to convert transport specific addresses into
common structures and back again. The \fBnetconfig\fR structure, described
on the
.BR netconfig (4)
manual page, identifies the transport.
.sp
.LP
The
.B netdir_getbyname()
function maps the machine name and service
name in the
.B nd_hostserv
structure to a collection of addresses of the
type understood by the transport identified in the \fBnetconfig\fR
structure. This function returns all addresses that are valid for that
transport in the
.B nd_addrlist
.RB "structure. The" " nd_hostserv"
structure contains the following members:
.sp
.in +2
.nf
char *h_host;      /* host name */
char *h_serv;      /* service name */
.fi
.in -2

.sp
.LP
The
.B nd_addrlist
structure contains the following members:
.sp
.in +2
.nf
int  n_cnt;       /* number of addresses */
struct netbuf *n_addrs;
.fi
.in -2

.sp
.LP
The
.B netdir_getbyname()
function accepts some special-case host names.
The host names are defined in <\fBnetdir.h\fR>. The currently defined host
names are:
.sp
.ne 2
.mk
.na
.B HOST_SELF
.ad
.RS 21n
.rt
Represents the address to which local programs will bind their endpoints.
\fBHOST_SELF\fR differs from the host name provided by
.BR gethostname (3C),
which represents the address to which
.IR remote
programs will bind their endpoints.
.RE

.sp
.ne 2
.mk
.na
.B HOST_ANY
.ad
.RS 21n
.rt
.RB "Represents any host accessible by this transport provider." " HOST_ANY"
allows applications to specify a required service without specifying a
particular host name.
.RE

.sp
.ne 2
.mk
.na
.B HOST_SELF_CONNECT
.ad
.RS 21n
.rt
Represents the host address that can be used to connect to the local
host.
.RE

.sp
.ne 2
.mk
.na
.B HOST_BROADCAST
.ad
.RS 21n
.rt
Represents the address for all hosts accessible by this transport provider.
Network requests to this address are received by all machines.
.RE

.sp
.LP
All fields of the
.B nd_hostserv
structure must be initialized.
.sp
.LP
To find the address of a given host and service on all available
transports, call the
.B netdir_getbyname()
function with each \fBstruct
netconfig\fR structure returned by \fBgetnetconfig\fR(3NSL).
.sp
.LP
The
.B netdir_getbyaddr()
function maps addresses to service names. The
function returns
.IR service ,
a list of host and service pairs that yield
these addresses. If more than one tuple of host and service name is
returned, the first tuple contains the preferred host and service names:
.sp
.in +2
.nf
struct nd_hostservlist {
   int  *h_cnt;                  /* number of hostservs found */
   struct hostserv *h_hostservs;
}
.fi
.in -2

.sp
.LP
The \fBnetdir_free()\fR structure is used to free the structures allocated
by the name to address translation functions. The
.I ptr
parameter points
to the structure that has to be freed. The parameter \fBstruct_type\fR
identifies the structure:
.sp
.in +2
.nf
struct netbuf            ND_ADDR
struct nd_addrlist       ND_ADDRLIST
struct hostserv          ND_HOSTSERV
struct nd_hostservlist   ND_HOSTSERVLIST
.fi
.in -2

.sp
.LP
The \fBfree()\fR function is used to free the universal address returned by
the
.B taddr2uaddr()
function.
.sp
.LP
The
.B netdir_options()
function is used to do all transport-specific
setups and option management. \fIfildes\fR is the associated file
descriptor.
.IR option ,
\fIfildes\fR, and \fIpointer_to_args\fR are passed
to the
.B netdir_options()
function for the transport specified in
\fIconfig\fR. Currently four values are defined for \fIoption\fR:
.br
.in +2
.B ND_SET_BROADCAST
.in -2
.br
.in +2
.B ND_SET_RESERVEDPORT
.in -2
.br
.in +2
.B ND_CHECK_RESERVEDPORT
.in -2
.br
.in +2
.B ND_MERGEADDR
.in -2
.sp
.LP
The
.B taddr2uaddr()
and
.B uaddr2taddr()
functions support
translation between universal addresses and
.B TLI
type
.BR netbufs .
The
.B taddr2uaddr()
function takes a \fBstruct netbuf\fR data
structure and returns a pointer to a string that contains the universal
address. It returns
.I NULL
if the conversion is not possible. This is
not a fatal condition as some transports do not support a universal address
form.
.sp
.LP
The
.B uaddr2taddr()
function is the reverse of the
.BR taddr2uaddr()
function. It returns the \fBstruct netbuf\fR data structure for the given
universal address.
.sp
.LP
If a transport provider does not support an option, \fBnetdir_options\fR
returns
.B -1
and the error message can be printed through
\fBnetdir_perror()\fR or \fBnetdir_sperror()\fR.
.sp
.LP
The specific actions of each option follow.
.sp
.ne 2
.mk
.na
.B ND_SET_BROADCAST
.ad
.RS 25n
.rt
Sets the transport provider up to allow broadcast if the transport supports
broadcast. \fIfildes\fR is a file descriptor into the transport, that is,
the result of a
.B t_open
of
.BR /dev/udp .
\fIpointer_to_args\fR is not
used. If this completes, broadcast operations can be performed on file
descriptor
.IR fildes .
.RE

.sp
.ne 2
.mk
.na
.B ND_SET_RESERVEDPORT
.ad
.RS 25n
.rt
Allows the application to bind to a reserved port if that concept exists
for the transport provider. \fIfildes\fR is an unbound file descriptor into
the transport. If
.I pointer_to_args
is \fINULL, fildes\fR is bound
to a reserved port. If
.I pointer_to_args
is a pointer to a \fBnetbuf\fR
structure, an attempt is made to bind to any reserved port on the specified
address.
.RE

.sp
.ne 2
.mk
.na
.B ND_CHECK_RESERVEDPORT
.ad
.RS 25n
.rt
Used to verify that the address corresponds to a reserved port if that
concept exists for the transport provider. \fIfildes\fR is not used.
\fIpointer_to_args\fR is a pointer to a \fBnetbuf\fR structure that contains
the address. This option returns
.B 0
only if the address specified in
\fIpointer_to_args\fR is reserved.
.RE

.sp
.ne 2
.mk
.na
.B ND_MERGEADDR
.ad
.RS 25n
.rt
Used to take a ``local address'' such as a
.B 0.0.0.0
TCP address and
return a ``real address'' to which client machines can connect. \fIfildes\fR
is not used.
.I pointer_to_args
is a pointer to a \fBstruct
nd_mergearg\fR which has the following members:
.sp
.in +2
.nf
\fBchar\fR \fIs_uaddr;\fR    /* server's universal address */
\fBchar\fR \fIc_uaddr;\fR    /* client's universal address */
\fBchar\fR \fIm_uaddr;\fR    /* the result */
.fi
.in -2

If
.B s_uaddr
is an address such as
.BR 0.0.0.0.1.12 ,
and the call is
successful
.B m_uaddr
is set to an address such as
.BR 192.11.109.89.1.12 .
For most transports,
.B m_uaddr
is identical to
.BR s_uaddr .
.RE

.SH RETURN VALUES
.sp
.LP
The
.B netdir_perror()
function prints an error message in standard
output that states the cause of a name-to-address mapping failure. The error
message is preceded by the string given as an argument.
.sp
.LP
The
.B netdir_sperror()
function returns a string with an error message
that states the cause of a name-to-address mapping failure.
.sp
.LP
The
.B netdir_sperror()
function returns a pointer to a buffer which
contains the error message string. The buffer is overwritten on each call.
In multithreaded applications, thise buffer is implemented as
thread-specific data.
.sp
.LP
The
.B netdir_getbyaddr()
function returns
.B 0
on success and a
non-zero value on failure.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR gethostname (3C),
\fBgetnetconfig\fR(3NSL), \fBgetnetpath\fR(3NSL),
\fBnetconfig\fR(4), \fBattributes\fR(5)
