'\" te
.\" Copyright 1994, The X/Open Company Ltd., All Rights Reserved.
.\" Portions Copyright 1989 AT&T.
.\" Portions Copyright (c) 1998, Sun Microsystems, Inc., All Rights Reserved
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH t_connect 3NSL "7 May 1998" "SunOS 5.11" "Networking Services Library Functions"
.SH NAME
t_connect \- establish a connection with another transport user
.SH SYNOPSIS
.LP
.nf
#include <xti.h>

\fBint\fR \fBt_connect\fR(\fBint\fR \fIfd\fR, \fBconst struct t_call *\fIsndcall\fR,
     \fBstruct t_call *\fIrcvcall\fR);
.fi

.SH DESCRIPTION
.sp
.LP
This routine is part of the
.B XTI
interfaces which evolved from the
.B TLI
interfaces.
.B XTI
represents the future evolution of these
interfaces. However,
.B TLI
interfaces are supported for compatibility.
When using a
.B TLI
routine that has the same name as an
.BR XTI
routine, the
.B tiuser.h
header file must be used.  Refer to the
.B TLI COMPATIBILITY
section for a description of differences
between the two interfaces. This function enables a transport user to
request a connection to the specified destination transport user.
.sp
.LP
This function can only be issued in the
.B T_IDLE
state. The parameter
.I fd
identifies the local transport endpoint where communication will be
established, while
.I sndcall
and
.I rcvcall
point to a
.BR t_call
structure which contains the following members:
.sp
.in +2
.nf
struct netbuf addr;
struct netbuf opt;
struct netbuf udata;
int sequence;
.fi
.in -2

.sp
.LP
The parameter
.I sndcall
specifies information needed by the transport
provider to establish a connection and
.I rcvcall
specifies information
that is associated with the newly established connection.
.sp
.LP
In
.IR sndcall ,
.I addr
specifies the protocol address of the
destination transport user,
.I opt
presents any protocol-specific
information that might be needed by the transport provider, \fIudata\fR
points to optional user data that may be passed to the destination transport
user during connection establishment, and
.I sequence
has no meaning for
this function.
.sp
.LP
On return, in
.IR rcvcall ,
.I addr
contains the protocol address
associated with the responding transport endpoint,
.I opt
represents any
protocol-specific information associated with the connection, \fIudata\fR
points to optional user data that may be returned by the destination
transport user during connection establishment, and
.I sequence
has no
meaning for this function.
.sp
.LP
The
.I opt
argument permits users to define the options that may be
passed to the transport provider. The user may choose not to negotiate
protocol options by setting the
.I len
field of
.I opt
to zero. In
this case, the provider uses the option values currently set for the
communications endpoint.
.sp
.LP
If used, \fIsndcall\(->opt.buf\fR must point to a buffer with the
corresponding options, and  \fIsndcall\(->opt.len\fR must specify its
length. The
.I maxlen
and \fIbuf\fR fields of the \fBnetbuf\fR structure
pointed by \fIrcvcall\(->addr\fR and \fIrcvcall\(->opt\fR must be set before
the call.
.sp
.LP
The
.I udata
argument enables the caller to pass user data to the
destination transport user and receive user data from the destination user
during connection establishment. However, the amount of user data must not
exceed the limits supported by the transport provider as returned in the
.I connect
field of the
.I info
argument of
.BR t_open (3NSL)
or
.BR t_getinfo (3NSL).
If the
.I len
of
.I udata
is zero in
.IR sndcall ,
no data will be sent to the destination transport user.
.sp
.LP
On return, the
.IR addr ,
.I opt
and
.I udata
fields of
.I rcvcall
will be updated to reflect values associated with the
connection. Thus, the
.I maxlen
field of each argument must be set before
issuing this function to indicate the maximum size of the buffer for each.
However,
.I maxlen
can be set to zero, in which case no information to
this specific argument is given to the user on the return from
.BR t_connect() .
If maxlen is greater than zero and less than the length
of the value,
.B t_connect()
fails with
.B t_errno
set to
.BR TBUFOVFLW .
If
.I rcvcall
is set to
.I NULL,
no information at
all is returned.
.sp
.LP
By default,
.B t_connect()
executes in synchronous mode, and will wait
for the destination user's response before returning control to the local
user. A successful return (that is, return value of zero) indicates that the
requested connection has been established. However, if
.B O_NONBLOCK
is
set by means of
.BR t_open "(3NSL) or"
.BR fcntl (2),
.B t_connect()
executes in asynchronous mode. In this case, the call will not wait for the
remote user's response, but will return control immediately to the local
user and return  -1 with
.B t_errno
set to
.B TNODATA
to indicate that
the connection has not yet been established. In this way, the function
simply initiates the connection establishment procedure by sending a
connection request to the destination transport user. The
.BR t_rcvconnect (3NSL)
function is used in conjunction with
.B t_connect()
to determine the status of the requested connection.
.sp
.LP
When a synchronous
.B t_connect()
call is interrupted by the arrival of
a signal, the state of the corresponding transport endpoint is
.B T_OUTCON,
allowing a further call to either
.BR t_rcvconnect (3NSL),
.BR t_rcvdis (3NSL)
or
.BR t_snddis "(3NSL). When an asynchronous"
.B t_connect()
call is interrupted by the arrival of a signal,  the state
of the corresponding transport endpoint is
.BR T_IDLE.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, a value of
.B 0
is returned.  Otherwise, a
value of  -1 is returned and
.B t_errno
is set to indicate an error.
.SH VALID STATES
.sp
.LP
.B T_IDLE
.SH ERRORS
.sp
.LP
On failure,
.B t_errno
is set to one of the following:
.sp
.ne 2
.mk
.na
.B TACCES
.ad
.RS 15n
.rt
The user does not have permission to use the specified address or
options.
.RE

.sp
.ne 2
.mk
.na
.B TADDRBUSY
.ad
.RS 15n
.rt
This transport provider does not support multiple connections with the same
local and remote addresses. This error indicates that a connection already
exists.
.RE

.sp
.ne 2
.mk
.na
.B TBADADDR
.ad
.RS 15n
.rt
The specified protocol address was in an incorrect format or contained
illegal information.
.RE

.sp
.ne 2
.mk
.na
.B TBADDATA
.ad
.RS 15n
.rt
The amount of user data specified was not within the bounds allowed by the
transport provider.
.RE

.sp
.ne 2
.mk
.na
.B TBADF
.ad
.RS 15n
.rt
The specified file descriptor does not refer to a transport endpoint.
.RE

.sp
.ne 2
.mk
.na
.B TBADOPT
.ad
.RS 15n
.rt
The specified protocol options were in an incorrect format or contained
illegal information.
.RE

.sp
.ne 2
.mk
.na
.B TBUFOVFLW
.ad
.RS 15n
.rt
The number of bytes allocated for an incoming argument
.I (maxlen)
is
greater than 0 but not sufficient to store the value of that argument. If
executed in synchronous mode, the provider's state, as seen by the user,
changes to
.B T_DATAXFER,
and the information to be returned in
.I rcvcall
is discarded.
.RE

.sp
.ne 2
.mk
.na
.B TLOOK
.ad
.RS 15n
.rt
An asynchronous event has occurred on this transport endpoint and requires
immediate attention.
.RE

.sp
.ne 2
.mk
.na
.B TNODATA
.ad
.RS 15n
.rt
.B O_NONBLOCK
was set, so the function successfully initiated the
connection establishment procedure, but did not wait for a response from the
remote user.
.RE

.sp
.ne 2
.mk
.na
.B TNOTSUPPORT
.ad
.RS 15n
.rt
This function is not supported by the underlying transport provider.
.RE

.sp
.ne 2
.mk
.na
.B TOUTSTATE
.ad
.RS 15n
.rt
The communications endpoint referenced by
.I fd
is not in one of the
states in which a call to this function is valid.
.RE

.sp
.ne 2
.mk
.na
.B TPROTO
.ad
.RS 15n
.rt
This error indicates that a communication problem has been detected between
XTI and the transport provider for which there is no other suitable XTI
error
.BR (t_errno) .
.RE

.sp
.ne 2
.mk
.na
.B TSYSERR
.ad
.RS 15n
.rt
A system error has occurred during execution of this function.
.RE

.SH TLI COMPATIBILITY
.sp
.LP
The
.B XTI
and
.B TLI
interface definitions have common names but use
different header files. This, and other semantic differences between the two
interfaces are described in the subsections below.
.SS "Interface Header"
.sp
.LP
The
.B XTI
interfaces use the header file,
.BR xti.h .
.B TLI
interfaces should
.I not
use this header.  They should use the header:
.sp
.in +2
.nf
#include <tiuser.h>
.fi
.in -2

.SS "Error Description Values"
.sp
.LP
The
.B TPROTO
and
.B "TADDRBUSY t_errno"
values can be set by the
.B XTI
interface but not by the
.B TLI
interface.
.sp
.LP
A
.B t_errno
value that this routine can return under different
circumstances than its
.B XTI
counterpart is
.BR TBUFOVFLW .
It can be
returned even when the
.B maxlen
field of the corresponding buffer has
been set to zero.
.SS "Option Buffers"
.sp
.LP
The format of the options in an
.B opt
buffer is dictated by the
transport provider. Unlike the
.B XTI
interface, the
.B TLI
interface
does not fix the buffer format.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR fcntl (2),
.BR t_accept (3NSL),
.BR t_alloc (3NSL),
.BR t_getinfo (3NSL),
.BR t_listen (3NSL),
.BR t_open (3NSL),
.BR t_optmgmt (3NSL),
.BR t_rcvconnect (3NSL),
.BR t_rcvdis (3NSL),
.BR t_snddis (3NSL),
.B attributes
