'\" te
.\" Copyright 1994, The X/Open Company Ltd., All Rights Reserved.
.\" Portions Copyright 1989 AT&T.
.\" Portions Copyright (c) 1998, Sun Microsystems, Inc., All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH t_sndudata 3NSL "7 May 1998" "SunOS 5.11" "Networking Services Library Functions"
.SH NAME
t_sndudata \- send a data unit
.SH SYNOPSIS
.LP
.nf
#include <xti.h>




\fBint\fR \fBt_sndudata\fR(\fBint\fR \fIfd\fR, \fBconst struct t_unitdata *\fIunitdata\fR);
.fi

.SH DESCRIPTION
.sp
.LP
This routine is part of the
.B XTI
interfaces which evolved from the
.B TLI
interfaces.
.B XTI
represents the future evolution of these
interfaces. However,
.B TLI
interfaces are supported for compatibility. When
using a
.B TLI
routine that has the same name as an
.B XTI
routine, the
.B tiuser.h
header file must be used.  Refer to the
.B TLI
.B COMPATIBILITY
section for a description of differences between the two
interfaces.
.sp
.LP
This function is used in connectionless-mode to send a data unit to another
transport user. The argument
.I fd
identifies the local transport endpoint
through which data will be sent, and
.I unitdata
points to a
.B t_unitdata
structure containing the following members:
.sp
.in +2
.nf
struct netbuf addr;
struct netbuf opt;
struct netbuf udata;
.fi
.in -2

.sp
.LP
In
.IR unitdata ,
.I addr
specifies the protocol address of the
destination user,
.I opt
identifies options that the user wants associated
with this request, and
.I udata
specifies the user data to be sent. The user
may choose not to specify what protocol options are associated with the
transfer by setting the
.I len
field of
.I opt
to zero. In this case, the
provider uses the option values currently set for the communications
endpoint.
.sp
.LP
If the
.I len
field of
.I udata
is zero, and sending of zero octets is
not supported by the underlying transport service, the
.B t_sndudata()
will
return -1 with
.B t_errno
set to
.BR TBADDATA .
.sp
.LP
By default,
.B t_sndudata()
operates in synchronous mode and may wait if
flow control restrictions prevent the data from being accepted by the local
transport provider at the time the call is made.  However, if
.B O_NONBLOCK
.B "is set"
.B "by means"
.BR "of t_open" (3NSL)
or
.BR fcntl (2),
.B t_sndudata()
will execute in asynchronous mode and will
fail under such conditions. The process can arrange to be notified of the
clearance of a flow control restriction by means of either
.BR t_look (3NSL)
or the EM interface.
.sp
.LP
If the amount of data specified in
.I udata
exceeds the TSDU size as
returned in the
.I tsdu
field of the
.I info
argument of
.BR t_open (3NSL)
or
.BR t_getinfo "(3NSL), a"
.B TBADDATA
error will be
generated. If
.B t_sndudata()
is called before the destination user has
activated its transport endpoint (see
.BR t_bind (3NSL)),
the data unit may be
discarded.
.sp
.LP
If it is not possible for the transport provider to immediately detect the
conditions that cause the errors
.B TBADDADDR
and
.BR TBADOPT ,
these
errors will alternatively be returned by
.I t_rcvuderr.
Therefore, an
application must be prepared to receive these errors in both of these ways.
.sp
.LP
If the call is interrupted,
.B t_sndudata()
will return
.B EINTR
and the
datagram will not be sent.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, a value of
.B 0
is returned.  Otherwise, a
value of  -1 is returned and
.B t_errno
is set to indicate an error.
.SH VALID STATES
.sp
.LP
.BR T_IDLE .
.SH ERRORS
.sp
.LP
On failure,
.B t_errno
is set to one of the following:
.sp
.ne 2
.mk
.na
.B TBADADDR
.ad
.RS 15n
.rt
The specified protocol address was in an incorrect format or contained illegal
information.
.RE

.sp
.ne 2
.mk
.na
.B TBADDATA
.ad
.RS 15n
.rt
Illegal amount of data. A single send was attempted specifying a TSDU greater
than that specified in the
.I info
argument, or a send of a zero byte TSDU
is not supported by the provider.
.RE

.sp
.ne 2
.mk
.na
.B TBADF
.ad
.RS 15n
.rt
The specified file descriptor does not refer to a transport endpoint.
.RE

.sp
.ne 2
.mk
.na
.B TBADOPT
.ad
.RS 15n
.rt
The specified options were in an incorrect format or contained illegal
information.
.RE

.sp
.ne 2
.mk
.na
.B TFLOW
.ad
.RS 15n
.rt
.B O_NONBLOCK
was set, but the flow control mechanism prevented the
transport provider from accepting any data at this time.
.RE

.sp
.ne 2
.mk
.na
.B TLOOK
.ad
.RS 15n
.rt
An asynchronous event has occurred on this transport endpoint.
.RE

.sp
.ne 2
.mk
.na
.B TNOTSUPPORT
.ad
.RS 15n
.rt
This function is not supported by the underlying transport provider.
.RE

.sp
.ne 2
.mk
.na
.B TOUTSTATE
.ad
.RS 15n
.rt
The communications endpoint referenced by
.I fd
is not in one of the
states in which a call to this function is valid.
.RE

.sp
.ne 2
.mk
.na
.B TPROTO
.ad
.RS 15n
.rt
This error indicates that a communication problem has been detected between
XTI and the transport provider for which there is no other suitable XTI error
.BR (t_errno) .
.RE

.sp
.ne 2
.mk
.na
.B TSYSERR
.ad
.RS 15n
.rt
A system error has occurred during execution of this function.
.RE

.SH TLI COMPATIBILITY
.sp
.LP
The
.B XTI
and
.B TLI
interface definitions have common names but use
different header files. This, and other semantic differences between the two
interfaces are described in the subsections below.
.SS "Interface Header"
.sp
.LP
The
.B XTI
interfaces use the header file,
.B "xti.h. TLI"
interfaces should
.I not
use this header.  They should use the header:
.br
.in +2
#include <tiuser.h>
.in -2
.SS "Error Description Values"
.sp
.LP
The
.B t_errno
values that can be set by the
.B XTI
interface and cannot
be set by the
.B TLI
interface are:
.br
.in +2
.B TPROTO
.in -2
.br
.in +2
.B TBADADDR
.in -2
.br
.in +2
.B TBADOPT
.in -2
.br
.in +2
.B TLOOK
.in -2
.br
.in +2
.B TOUTSTATE
.in -2
.SS "Notes"
.sp
.LP
Whenever this function fails with
.B t_error
set to
.BR TFLOW,
.B O_NONBLOCK
must have been set.
.SS "Option Buffers"
.sp
.LP
The format of the options in an
.B opt
buffer is dictated by the transport
provider. Unlike the
.B XTI
interface, the
.B TLI
interface does not fix
the buffer format.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR fcntl (2),
.BR t_alloc (3NSL),
.BR t_bind (3NSL),
.BR t_error (3NSL),
.BR t_getinfo (3NSL),
.BR t_look (3NSL),
.BR t_open (3NSL),
.BR t_rcvudata (3NSL),
.BR t_rcvuderr (3NSL),
.BR attributes (5)
