'\" te
.\" Copyright 1989 AT&T  Copyright (c) 2002, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH nlsprovider 3NSL "14 Nov 2002" "SunOS 5.11" "Networking Services Library Functions"
.SH NAME
nlsprovider \- get name of transport provider
.SH SYNOPSIS
.LP
.nf
\fBchar *\fBnlsprovider\fR(\fBvoid\fR);
.fi

.SH DESCRIPTION
.sp
.LP
\fBnlsprovider()\fR returns a pointer to a null-terminated character string
which contains the name of the transport provider as placed in the
environment by the listener process.  If the variable is not defined in the
environment, a NULL pointer is returned.
.sp
.LP
The environment variable is only available to server processes started by
the listener process.
.SH RETURN VALUES
.sp
.LP
If the variable is not defined in the environment, a NULL pointer is
returned.
.SH FILES
.sp
.ne 2
.mk
.na
.B /usr/lib/libnls.so.1
.ad
.RS 24n
.rt
shared object
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelUnsafe
.TE

.SH SEE ALSO
.sp
.LP
.BR nlsadmin (1M),
.BR attributes (5)
.SH NOTES
.sp
.LP
This interface is unsafe in multithreaded applications.  Unsafe interfaces
should be called only from the main thread.
