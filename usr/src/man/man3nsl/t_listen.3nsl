'\" te
.\" Copyright 1994, The X/Open Company Ltd., All Rights Reserved.
.\" Portions Copyright 1989 AT&T.
.\" Portions Copyright (c) 1998, Sun Microsystems, Inc., All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH t_listen 3NSL "7 May 1998" "SunOS 5.11" "Networking Services Library Functions"
.SH NAME
t_listen \- listen for a connection indication
.SH SYNOPSIS
.LP
.nf
#include <xti.h>



\fBint\fR \fBt_listen\fR(\fBint\fR \fIfd\fR, \fBstruct t_call *\fIcall\fR);
.fi

.SH DESCRIPTION
.sp
.LP
This routine is part of the
.B XTI
interfaces which evolved from the
.B TLI
interfaces.
.B XTI
represents the future evolution of these
interfaces. However,
.B TLI
interfaces are supported for compatibility.
When using a
.B TLI
routine that has the same name as an
.BR XTI
routine, the
.B tiuser.h
header file must be used.  Refer to the
.B TLI COMPATIBILITY
section for a description of differences
between the two interfaces.
.sp
.LP
This function listens for a connection indication from a calling transport
user. The argument
.I fd
identifies the local transport endpoint where
connection indications arrive, and on return,
.I call
contains
information describing the connection indication. The parameter
.I call
points to a
.B t_call
structure which contains the following members:
.sp
.in +2
.nf
\fBstruct netbuf addr;
struct netbuf opt;
struct netbuf udata;
int sequence;\fR
.fi
.in -2

.sp
.LP
In
.IR call ,
.I addr
returns the protocol address of the calling
transport user. This address is in a format usable in future calls to
.BR t_connect (3NSL).
Note, however that
.BR t_connect (3NSL)
may fail for
other reasons, for example
.BR TADDRBUSY .
.I opt
returns options
associated with the connection indication,
.I udata
returns any user data
sent by the caller on the connection request, and
.I sequence
is a number
that uniquely identifies the returned connection indication. The value of
.I sequence
enables the user to listen for multiple connection
indications before responding to any of them.
.sp
.LP
Since this function returns values for the
.IR addr ,
.I opt
and
.I udata
fields of
.IR call ,
the
.I maxlen
field of each must be set
before issuing the
.B t_listen()
to indicate the maximum size of the
buffer for each. If the
.I maxlen
field of
.IR call\(->addr ,
.I
call\(->opt \c
or
.I
call\(->udata \c 
is set to zero, no information is
returned for this parameter.
.sp
.LP
By default,
.B t_listen()
executes in synchronous mode and waits for a
connection indication to arrive before returning to the user. However, if
.B O_NONBLOCK
is set via
.BR t_open (3NSL)
or
.BR fcntl (2),
.B t_listen()
executes asynchronously, reducing to a poll for existing
connection indications. If none are available, it returns  -1 and sets
.B t_errno
to
.BR TNODATA .
.SH RETURN VALUES
.sp
.LP
Upon successful completion, a value of 0 is returned.  Otherwise, a value
of \(mi1 is returned and
.B t_errno
is set to indicate an error.
.SH VALID STATES
.sp
.LP
.BR T_IDLE ,
.B T_INCON
.SH ERRORS
.sp
.LP
On failure,
.B t_errno
is set to one of the following:
.sp
.ne 2
.mk
.na
.B TBADF
.ad
.RS 15n
.rt
The specified file descriptor does not refer to a transport endpoint.
.RE

.sp
.ne 2
.mk
.na
.B TBADQLEN
.ad
.RS 15n
.rt
The argument
.I qlen
of the endpoint referenced by
.I fd
is zero.
.RE

.sp
.ne 2
.mk
.na
.B TBUFOVFLW
.ad
.RS 15n
.rt
The number of bytes allocated for an incoming argument
.I (maxlen)
is
greater than 0 but not sufficient to store the value of that argument. The
provider's state, as seen by the user, changes to
.B T_INCON,
and the
connection indication information to be returned in
.I call
is discarded.
The value of
.I sequence
returned can be used to do a
.BR t_snddis (3NSL).
.RE

.sp
.ne 2
.mk
.na
.B TLOOK
.ad
.RS 15n
.rt
An asynchronous event has occurred on this transport endpoint and requires
immediate attention.
.RE

.sp
.ne 2
.mk
.na
.B TNODATA
.ad
.RS 15n
.rt
.B O_NONBLOCK
was set, but no connection indications had been queued.
.RE

.sp
.ne 2
.mk
.na
.B TNOTSUPPORT
.ad
.RS 15n
.rt
This function is not supported by the underlying transport provider.
.RE

.sp
.ne 2
.mk
.na
.B TOUTSTATE
.ad
.RS 15n
.rt
The communications endpoint referenced by
.I fd
is not in one of the
states in which a call to this function is valid.
.RE

.sp
.ne 2
.mk
.na
.B TPROTO
.ad
.RS 15n
.rt
This error indicates that a communication problem has been detected between
XTI and the transport provider for which there is no other suitable XTI
error
.BR (t_errno) .
.RE

.sp
.ne 2
.mk
.na
.B TQFULL
.ad
.RS 15n
.rt
The maximum number of outstanding connection  indications has been reached
for the endpoint referenced by
.IR fd .
Note that a subsequent call to
.B t_listen()
may block until another incoming connection indication is
available. This can only occur if at least one of the outstanding connection
indications becomes no longer outstanding, for example through a call to
.BR t_accept (3NSL).
.RE

.sp
.ne 2
.mk
.na
.B TSYSERR
.ad
.RS 15n
.rt
A system error has occurred during execution of this function.
.RE

.SH TLI COMPATIBILITY
.sp
.LP
The
.B XTI
and
.B TLI
interface definitions have common names but use
different header files. This, and other semantic differences between the two
interfaces are described in the subsections below.
.SS "Interface Header"
.sp
.LP
The
.B XTI
interfaces use the header file,
.BR xti.h .
.B TLI
interfaces should
.I not
use this header.  They should use the header:
.sp
.in +2
.nf
#include <tiuser.h>
.fi
.in -2

.SS "Error Description Values"
.sp
.LP
The
.B t_errno
values
.B "TPROT0, TBADQLEN,"
and
.B TQFULL
can
be set by the
.B XTI
interface but not by the
.B TLI
interface.
.sp
.LP
A
.B t_errno
value that this routine can return under different
circumstances than its
.B XTI
counterpart is
.BR TBUFOVFLW .
It can be
returned even when the
.B maxlen
field of the corresponding buffer has
been set to zero.
.SS "Option Buffers"
.sp
.LP
The format of the options in an
.B opt
buffer is dictated by the
transport provider. Unlike the
.B XTI
interface, the
.B TLI
interface
does not fix the buffer format.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR fcntl (2),
.BR t_accept (3NSL),
.BR t_alloc (3NSL),
.BR t_bind (3NSL),
.BR t_connect (3NSL),
.BR t_open (3NSL),
.BR t_optmgmt (3NSL),
.BR t_rcvconnect (3NSL),
.BR t_snddis (3NSL),
.BR attributes (5)
.SH WARNINGS
.sp
.LP
Some transport providers do not differentiate between a connection
indication and the connection itself. If this is the case, a successful
return of
.B t_listen()
indicates an existing connection.
