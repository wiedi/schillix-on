'\" te
.\" Copyright 1989 AT&T  Copyright (c) 2002, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH nlsrequest 3NSL "14 Nov 2002" "SunOS 5.11" "Networking Services Library Functions"
.SH NAME
nlsrequest \- format and send listener service request message
.SH SYNOPSIS
.LP
.nf
#include <listen.h>
\fBint\fR \fBnlsrequest\fR(\fBint\fR \fIfildes\fR, \fBchar \fR*\fIservice_code\fR);
\fBextern int\fR \fI_nlslogt_errno\fR;
\fBextern char\fR *\fI_nlsrmsg\fR;
.fi

.SH DESCRIPTION
.sp
.LP
Given a virtual circuit to a listener process (\fIfildes\fR) and a  service
code of a server process,
.B nlsrequest()
formats and sends a \fIservice
request message\fR to the remote listener process  requesting that it start
the given service.  
.B nlsrequest()
waits for the remote listener
process to return a
.IR "service request response message" ,
which is made
available to the caller in the static, null-terminated data buffer pointed
to by
.BR _nlsrmsg .
The
.I "service request response message"
includes a
success or failure code and a text message. The entire message is
printable.
.SH RETURN VALUES
.sp
.LP
The success or failure code is the integer return code from
.BR nlsrequest() .
Zero indicates success, other negative  values indicate
\fBnlsrequest()\fR failures as follows:
.sp
.ne 2
.mk
.na
\fB\(mi1\fR
.ad
.RS 9n
.rt
Error encountered by
.BR nlsrequest() ,
see
.BR t_errno .
.RE

.sp
.LP
Positive values are error return codes from the
.I listener
process.
Mnemonics for these codes are defined in \fB<listen.h>\fR\&.
.sp
.ne 2
.mk
.na
.B 2
.ad
.RS 5n
.rt
Request message not interpretable.
.RE

.sp
.ne 2
.mk
.na
.B 3
.ad
.RS 5n
.rt
Request service code unknown.
.RE

.sp
.ne 2
.mk
.na
.B 4
.ad
.RS 5n
.rt
Service code known, but currently disabled.
.RE

.sp
.LP
If non-null,
.B _nlsrmsg
contains a pointer to a static, null-terminated
character buffer containing the
.IR "service request response message" .
Note
that both
.B _nlsrmsg
and the data buffer are overwritten by each call to
.BR nlsrequest() .
.sp
.LP
If
.B _nlslog
is non-zero,
.B nlsrequest()
prints error messages on
stderr. Initially,
.B _nlslog
is zero.
.SH FILES
.sp
.ne 2
.mk
.na
.B /usr/lib/libnls.so.1
.ad
.RS 24n
.rt
shared object
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelUnsafe
.TE

.SH SEE ALSO
.sp
.LP
.BR nlsadmin (1M),
.BR t_error (3NSL),
.BR t_snd (3NSL),
.BR t_rcv (3NSL),
.BR attributes (5)
.SH WARNINGS
.sp
.LP
\fBnlsrequest()\fR cannot always be certain that the remote server process
has been successfully started.  In this case,
.B nlsrequest()
returns
with no indication of an error and the caller will receive notification of a
disconnect event by way of a
.B T_LOOK
error before or during the first
\fBt_snd()\fR or \fBt_rcv()\fR call.
.SH NOTES
.sp
.LP
These interfaces are unsafe in multithreaded applications.  Unsafe
interfaces should be called only from the main thread.
