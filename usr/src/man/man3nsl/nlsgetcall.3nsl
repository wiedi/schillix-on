'\" te
.\" Copyright 1989 AT&T  Copyright (c) 2002, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH nlsgetcall 3NSL "14 Nov 2002" "SunOS 5.11" "Networking Services Library Functions"
.SH NAME
nlsgetcall \- get client's data passed via the listener
.SH SYNOPSIS
.LP
.nf
#include <sys/tiuser.h>



\fBstruct t_call *\fBnlsgetcall\fR(\fBint\fR \fIfildes\fR);
.fi

.SH DESCRIPTION
.sp
.LP
.B nlsgetcall()
allows server processes started by the listener process
to access the client's
.B t_call
.RI "structure, that is, the" " sndcall"
argument of
.BR t_connect (3NSL).
.sp
.LP
The
.B t_call
structure returned by
.B nlsgetcall()
can be released
using
.BR t_free (3NSL).
.sp
.LP
.B nlsgetcall()
returns the address of an allocated
.BR t_call
structure or NULL if a
.B t_call
structure cannot be allocated. If the
.B t_alloc()
succeeds, undefined environment variables are indicated by a
negative
.I len
field in the appropriate
.B netbuf
structure.   A
.I len
field of zero in the
.B netbuf
structure is valid and means
that the original buffer in the listener's
.B t_call
structure was
NULL.
.SH RETURN VALUES
.sp
.LP
A NULL pointer is returned if a
.B t_call
structure cannot be allocated
by
.BR t_alloc() .
.B t_errno
can be inspected for further error
information. Undefined environment variables are indicated by a negative
length field (\fIlen\fR) in the appropriate
.B netbuf
structure.
.SH FILES
.sp
.ne 2
.mk
.na
.B /usr/lib/libnls.so.1
.ad
.RS 24n
.rt
shared object
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelUnsafe
.TE

.SH SEE ALSO
.sp
.LP
.BR nlsadmin (1M),
.BR getenv (3C),
.BR t_alloc (3NSL),
.BR t_connect (3NSL),
.BR t_error (3NSL),
.BR t_free (3NSL),
.BR t_sync (3NSL),
.BR attributes (5)
.SH WARNINGS
.sp
.LP
The
.I len
field in the
.B netbuf
structure is defined as being
unsigned. In order to check for error returns, it should first be cast to an
int.
.sp
.LP
The listener process limits the amount of user data
.RI ( udata )
and
options data
.RI ( opt )
to 128 bytes each.   Address data
.I addr
is
limited to 64 bytes. If the original data was longer,  no indication of
overflow is given.
.SH NOTES
.sp
.LP
Server processes must call
.BR t_sync (3NSL)
before calling this
routine.
.sp
.LP
This interface is unsafe in multithreaded applications.  Unsafe interfaces
should be called only from the main thread.
