'\" te
.\" Copyright (C) 2002, Sun Microsystems, Inc. All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH rpc_gss_set_callback 3NSL "5 Feb 2002" "SunOS 5.11" "Networking Services Library Functions"
.SH NAME
rpc_gss_set_callback \- specify callback for context
.SH SYNOPSIS
.LP
.nf
#include <rpc/rpcsec_gss.h>

\fBbool_t\fR \fBrpc_gss_set_callback\fR(\fBstruct rpc_gss_callback_t\fR \fI*cb\fR);
.fi

.SH DESCRIPTION
.sp
.LP
A server may want to specify a callback routine so that it knows when a
context gets first used. This user-defined callback may be specified through
the
.B rpc_gss_set_callback()
routine.  The callback routine is invoked
the first time a context is used for data exchanges, after the context is
established for the specified program and version.
.sp
.LP
The user-defined callback routine should take the following form:
.sp
.in +2
.nf
bool_t callback(struct svc_req\fI *req\fR, gss_cred_id_t\fI deleg\fR,
     gss_ctx_id_t\fI gss_context\fR, rpc_gss_lock_t\fI *lock\fR, void\fI **cookie\fR);
.fi
.in -2

.SH PARAMETERS
.sp
.LP
\fBrpc_gss_set_callback()\fR takes one argument:  a pointer to a
\fBrpc_gss_callback_t\fR structure.  This structure contains the RPC program
and version number as well as a pointer to a user-defined \fBcallback()\fR
routine. (For a description of
.B rpc_gss_callback_t
and other
\fBRPCSEC_GSS\fR data types, see the \fBrpcsec_gss\fR(3NSL) man page.)
.sp
.LP
The user-defined
.B callback()
routine itself takes the following
arguments:
.sp
.ne 2
.mk
.na
.I req
.ad
.RS 16n
.rt
Pointer to the received service request.
.B svc_req
is an RPC
structure containing information on the context of an RPC invocation, such
as program, version, and transport information.
.RE

.sp
.ne 2
.mk
.na
.I deleg
.ad
.RS 16n
.rt
Delegated credentials, if any. (See
.B NOTES,
below.)
.RE

.sp
.ne 2
.mk
.na
.I gss_context
.ad
.RS 16n
.rt
GSS context (allows server to do GSS operations on the context to test for
acceptance criteria). See
.B NOTES,
below.
.RE

.sp
.ne 2
.mk
.na
.I lock
.ad
.RS 16n
.rt
This parameter is used to enforce a particular QOP and service for a
.RB "session. This parameter points to a" " RPCSEC_GSS rpc_gss_lock_t"
.RB "structure. When the callback is invoked, the" " rpc_gss_lock_t.locked"
field is set to TRUE, thus locking the context.  A locked context will
reject all requests having different values for QOP or service than those
specified by the
.B raw_cred
field of the
.BR rpc_gss_lock_t
structure.
.RE

.sp
.ne 2
.mk
.na
.I cookie
.ad
.RS 16n
.rt
A four-byte quantity that an application may use in any manner it wants to
\(em RPC does not interpret it.  (For example, the cookie could be a pointer
or index to a structure that represents a context initiator.) The cookie is
returned, along with the caller's credentials, with each invocation of
.BR rpc_gss_getcred() .
.RE

.SH RETURN VALUES
.sp
.LP
\fBrpc_gss_set_callback()\fR returns  TRUE if the use of the context is
accepted; false otherwise.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelMT-Safe
_
AvailabilitySUNWrsg (32-bit)
_
SUNWrsgx (64-bit)
.TE

.SH SEE ALSO
.sp
.LP
.BR rpc (3NSL),
.BR rpc_gss_getcred (3NSL),
.BR rpcsec_gss (3NSL),
.BR attributes (5)
.sp
.LP
\fIONC+ Developer\&'s Guide\fR
.sp
.LP
Linn, J. \fIRFC 2078, Generic Security Service Application Program
Interface, Version 2\fR. Network Working Group. January 1997.
.SH NOTES
.sp
.LP
If a server does not specify a callback, all incoming contexts will be
accepted.
.sp
.LP
Because the
.B GSS-API
is not currently exposed, the
.I deleg
and
\fIgss_context\fR arguments are mentioned for informational purposes only,
and the user-defined callback function may choose to do nothing with them.
