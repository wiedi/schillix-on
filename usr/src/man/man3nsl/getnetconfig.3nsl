'\" te
.\" Copyright 1989 AT&T  Copyright (c) 1997, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH getnetconfig 3NSL "30 Dec 1996" "SunOS 5.11" "Networking Services Library Functions"
.SH NAME
getnetconfig, setnetconfig, endnetconfig, getnetconfigent,
freenetconfigent, nc_perror, nc_sperror \- get network configuration
database entry
.SH SYNOPSIS
.LP
.nf
#include <netconfig.h>




\fBstruct netconfig *\fBgetnetconfig\fR(\fBvoid *\fIhandlep\fR);
.fi

.LP
.nf
\fBvoid *\fBsetnetconfig\fR(\fBvoid\fR);
.fi

.LP
.nf
\fBint\fR \fBendnetconfig\fR(\fBvoid *\fIhandlep\fR);
.fi

.LP
.nf
\fBstruct netconfig *\fBgetnetconfigent\fR(\fBconst char *\fInetid\fR);
.fi

.LP
.nf
\fBvoid\fR \fBfreenetconfigent\fR(\fBstruct netconfig *\fInetconfigp\fR);
.fi

.LP
.nf
\fBvoid\fR \fBnc_perror\fR(\fBconst char *\fImsg\fR);
.fi

.LP
.nf
\fBchar *\fBnc_sperror\fR(\fBvoid\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The library routines described on this page  are part of the Network
Selection component. They provide the application access to the system
network configuration database,
.BR /etc/netconfig .
In addition to the
routines for accessing the
.B netconfig
database, Network Selection
includes the environment variable
.B NETPATH
(see
.BR environ (5))
and
the
.B NETPATH
access routines described in
.BR getnetpath (3NSL).
.sp
.LP
.B getnetconfig()
returns a pointer to the current entry in the
.B netconfig
database, formatted as a
.BR "struct netconfig" .
Successive
calls will return successive  \fBnetconfig\fR entries in the \fBnetconfig\fR
database.
.B getnetconfig()
can be used to search the entire
.B netconfig
file. \fBgetnetconfig()\fR returns  \fBNULL\fR at the end of
the file.
.I handlep
is the handle obtained through
.BR setnetconfig() .
.sp
.LP
A call to
.B setnetconfig()
has the effect of ``binding'' to or
``rewinding'' the \fBnetconfig\fR database. \fBsetnetconfig()\fR must be
called before the first call to
.B getnetconfig()
and may be called at
any other time. \fBsetnetconfig()\fR need \fInot\fR be called before a call
to
.BR getnetconfigent() .
.B setnetconfig()
returns a unique handle to
be used by
.BR getnetconfig() .
.sp
.LP
.B endnetconfig()
should be called when processing is complete to
release resources for reuse.
.I handlep
is the handle obtained through
.BR setnetconfig() .
Programmers should be aware, however, that the last
call to
.B endnetconfig()
frees all memory allocated by
.B getnetconfig()
for the
.B "struct netconfig"
data structure.
.B endnetconfig()
may not be called before \fBsetnetconfig()\fR.
.sp
.LP
.B getnetconfigent()
returns a pointer to the \fBstruct netconfig\fR
structure corresponding to
.IR netid .
It returns
.B NULL
if
.I netid
is invalid (that is, does not name an entry in the
.B netconfig
database).
.sp
.LP
.B freenetconfigent()
frees the netconfig structure pointed to by
.I netconfigp
(previously returned by \fBgetnetconfigent()\fR).
.sp
.LP
.B nc_perror()
prints a message to the standard error indicating why any
of the above routines failed. The message is prepended with the string
.I msg
and a colon. A
.B NEWLINE
is appended at the end of the
message.
.sp
.LP
.B nc_sperror()
is similar to
.B nc_perror()
but instead of sending
the message to the standard error, will return a pointer to a string that
contains the error message.
.sp
.LP
.B nc_perror()
and
.B nc_sperror()
can also be used with the
.B NETPATH
access routines defined in
.BR getnetpath (3NSL).
.SH RETURN VALUES
.sp
.LP
.B setnetconfig()
returns a unique handle to be used by
.BR getnetconfig() .
In the case of an error,
.B setnetconfig()
returns
.B NULL
and
.B nc_perror()
or
.B nc_sperror()
can be used to print
the reason for failure.
.sp
.LP
.B getnetconfig()
returns a pointer to the current entry in the
.B netconfig()
database, formatted as a
.BR "struct netconfig" .
.B getnetconfig()
returns
.B NULL
at the end of the file, or upon
failure.
.sp
.LP
.B endnetconfig()
returns
.B 0
on success and \fB\(mi1\fR on failure
(for example, if
.B setnetconfig()
was not called previously).
.sp
.LP
On success,  \fBgetnetconfigent()\fR returns a pointer to the  \fBstruct\fR
.B netconfig
structure corresponding to
.IR netid ;
otherwise it returns
.B NULL.
.sp
.LP
.B nc_sperror()
returns a pointer to a buffer which contains the error
message string. This buffer is overwritten on each call.  In multithreaded
applications, this buffer is implemented as thread-specific data.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR getnetpath (3NSL),
.BR netconfig (4),
.BR attributes (5),
.BR environ (5)
