'\" te
.\" Copyright 1989 AT&T  Copyright (c) 1997, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH rpcbind 3NSL "20 Feb 1998" "SunOS 5.11" "Networking Services Library Functions"
.SH NAME
rpcbind, rpcb_getmaps, rpcb_getaddr, rpcb_gettime, rpcb_rmtcall, rpcb_set,
rpcb_unset \- library routines for RPC bind service
.SH SYNOPSIS
.LP
.nf
#include <rpc/rpc.h>



\fBstruct rpcblist *\fBrpcb_getmaps\fR(\fBconst struct netconfig *\fInnetconf\fR,
     \fBconst char *\fIhost\fR);
.fi

.LP
.nf
\fBbool_t\fR  \fBrpcb_getaddr\fR(\fBconst rpcprog_t\fR  \fIprognum\fR, \fBconst rpcvers_t\fR \fIversnum\fR,
     \fBconst struct netconfig *\fInetconf\fR, \fBstruct netbuf *\fIssvcaddr\fR,
     \fBconst char *\fIhost\fR);
.fi

.LP
.nf
\fBbool_t\fR \fBrpcb_gettime\fR(\fBconst char *\fIhost\fR, \fBtime_t *\fItimep\fR);
.fi

.LP
.nf
\fBenum clnt_stat\fR \fBrpcb_rmtcall\fR(\fBconst struct netconfig *\fInetconf\fR,
     \fBconst char *\fIhost\fR, \fBconst rpcprog_t\fR \fIprognum\fR,
     \fBconst rpcvers_t\fR \fIversnum\fR, \fBconst rpcproc_t\fR \fIprocnum\fR,
     \fBconst xdrproc_t\fR \fIinproc\fR, \fBconst caddr_t\fR \fIin\fR,
     \fBconst xdrproc_t\fR \fIoutproc\fR \fBcaddr_t\fR \fIout\fR,,
     \fBconst struct timeval\fR \fItout\fR, \fBstruct netbuf  *\fIsvcaddr\fR);
.fi

.LP
.nf
\fBbool_t\fR \fBrpcb_set\fR(\fBconst rpcprog_t\fR \fIprognum\fR, \fBconst rpcvers_t\fR \fIversnum\fR,
     \fBconst struct netconfig *\fInetconf\fR, \fBconst struct netbuf *\fIsvcaddr\fR);
.fi

.LP
.nf
\fBbool_t\fR \fBrpcb_unset\fR(\fBconst rpcprog_t\fR \fIprognum\fR, \fBconst rpcvers_t\fR \fIversnum\fR,
     \fBconst struct netconfig *\fInetconf\fR);
.fi

.SH DESCRIPTION
.sp
.LP
These routines allow client C programs to make procedure calls to the RPC
binder service.
.B rpcbind
maintains a list of mappings between programs
and their universal addresses. See
.BR rpcbind (1M).
.SS "Routines"
.sp
.ne 2
.mk
.na
.B rpcb_getmaps()
.ad
.RS 18n
.rt
An interface to the
.B rpcbind
service, which returns a list of the
current
.B RPC
program-to-address mappings on
.IR host .
It uses the
transport specified through
.I netconf
to contact the remote
.B rpcbind
service on
.IR host .
This routine will return
.B NULL,
if
the remote
.B rpcbind
could not be contacted.
.RE

.sp
.ne 2
.mk
.na
.B rpcb_getaddr()
.ad
.RS 18n
.rt
An interface to the
.B rpcbind
service, which finds the address of the
service on
.I host
that is registered with program number
.IR prognum ,
version
.IR versnum ,
and speaks the transport protocol associated with
.IR netconf .
The address found is returned in
.IR svcaddr .
.I svcaddr
should be preallocated. This routine returns
.B TRUE
if it succeeds.  A
return value of
.B FALSE
means that the mapping does not exist or that
the
.B RPC
system failed to contact the remote
.B rpcbind
service. In
the latter case, the global variable
.B rpc_createerr
contains the
.B RPC
status. See
.BR rpc_clnt_create (3NSL).
.RE

.sp
.ne 2
.mk
.na
.B rpcb_gettime()
.ad
.RS 18n
.rt
This routine returns the time on
.I host
in
.IR timep .
If
.IR host
is
.IR NULL ,
.B rpcb_gettime()
returns the time on its own machine.
This routine returns
.B TRUE
if it succeeds,
.B FALSE
if it fails.
.B rpcb_gettime()
can be used to synchronize the time between the client
and the remote server.   This routine is particularly useful for secure
RPC.
.RE

.sp
.ne 2
.mk
.na
.B rpcb_rmtcall()
.ad
.RS 18n
.rt
An interface to the
.B rpcbind
service, which instructs
.B rpcbind
on
.I host
to make an
.B RPC
call on your behalf to a procedure on that
host. The
.B netconfig
structure should correspond to a connectionless
transport. The parameter \fB*\fIsvcaddr\fR will be modified to the
server's address if the procedure succeeds. See
.B rpc_call()
and
.B clnt_call()
in \fBrpc_clnt_calls\fR(3NSL) for the definitions of other
parameters.
.sp
This procedure should normally be used for a "ping" and nothing else. This
routine allows programs to do lookup and call, all in one step.
.sp
Note: Even if the server is not running
.B rpcbind
does not return any
error messages to the caller. In such a case, the caller times out.
.sp
Note:
.B rpcb_rmtcall()
is only available for connectionless
transports.
.RE

.sp
.ne 2
.mk
.na
.B rpcb_set()
.ad
.RS 18n
.rt
An interface to the
.B rpcbind
service, which establishes a mapping
between the triple [\fIprognum\fR,
.IR versnum ,
\fInetconf\fR->\fInc_netid]\fR and \fIsvcaddr\fR on the machine's
.B rpcbind
service. The value of
.I nc_netid
must correspond to a
network identifier that is defined by the netconfig database. This routine
returns
.B TRUE
if it succeeds,
.B FALSE
otherwise. See also
.B svc_reg()
in \fBrpc_svc_calls\fR(3NSL). If there already exists such
an entry with
.BR rpcbind ,
.B rpcb_set()
will fail.
.RE

.sp
.ne 2
.mk
.na
.B rpcb_unset()
.ad
.RS 18n
.rt
An interface to the
.B rpcbind
service, which destroys the mapping
between the triple [\fIprognum\fR,
.IR versnum ,
\fInetconf\fR->\fInc_netid]\fR and the address on the machine's
.B rpcbind
service. If
.I netconf
is
.IR NULL ,
.B rpcb_unset()
destroys all mapping between the triple [\fIprognum\fR,
.IR versnum ,
\fIall-transports\fR] and the addresses on the machine's \fBrpcbind\fR
service. This routine returns
.B TRUE
if it succeeds,  \fBFALSE\fR
otherwise. Only the owner of the service or the super-user can destroy the
mapping. See also
.B svc_unreg()
in
.BR rpc_svc_calls (3NSL).
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR rpcbind (1M),
.BR rpcinfo (1M),
.BR rpc_clnt_calls (3NSL),
.BR rpc_clnt_create (3NSL),
.BR rpc_svc_calls (3NSL),
.BR attributes (5)
