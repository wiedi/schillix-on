'\" te
.\" Copyright 1994, The X/Open Company Ltd., All Rights Reserved.
.\" Portions Copyright 1989 AT&T.
.\" Portions Copyright (c) 1998, Sun Microsystems, Inc., All Rights Reserved
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH t_rcvvudata 3NSL "7 May 1998" "SunOS 5.11" "Networking Services Library Functions"
.SH NAME
t_rcvvudata \- receive a data unit into one or more noncontiguous buffers
.SH SYNOPSIS
.LP
.nf
#include <xti.h>



\fBint\fR \fBt_rcvvudata\fR(\fBint\fR \fIfd\fR, \fBstruct t_unitdata *\fIunitdata\fR, \fBstruct t_iovec *\fIiov\fR,
     \fBunsigned int\fR \fIiovcount\fR, \fBint *\fIflags\fR);
.fi

.SH DESCRIPTION
.sp
.LP
This function is used in connectionless mode to receive a data unit from
another transport user.  The argument  \fIfd\fR identifies the local
.RI "transport endpoint through which data will be received, " " unitdata"
holds information associated with the received data unit,  \fIiovcount\fR
contains the number of non-contiguous udata buffers which is limited to
\fBT_IOV_MAX,\fR which is an implementation-defined value of at least 16,
and \fIflags\fR is set on return to indicate that the complete data unit was
not received.  If the limit on
.I iovcount
is exceeded, the function
fails with
.BR TBADDATA .
The argument
.I unitdata
points to a
\fBt_unitdata\fR structure containing the following members:
.sp
.in +2
.nf
struct netbuf addr;
struct netbuf opt;
struct netbuf udata;
.fi
.in -2

.sp
.LP
The
.I maxlen
field of
.I addr
and
.I opt
must be set before
calling this function to indicate the maximum size of the buffer for each.
The
.I udata
field of
.B t_unitdata
.RI "is not used. The " " iov_len"
and \fIiov_base\fR fields of "\fIiov\fB0\fR" through  \fIiov
[iovcount-1]\fR must be set before calling  \fBt_rcvvudata()\fR to define
the buffer where the userdata will be placed.  If the maxlen field of
\fIaddr\fR or  \fIopt\fR is set to zero then no information is returned in
the \fIbuf\fR field for this parameter.
.sp
.LP
On return from this call,
.I addr
specifies the protocol address of the
sending user,
.I opt
identifies options that were associated with this
data unit, and  \fIiov\fB[0]\fI\&.iov_base\fR through \fIiov
[iovcount-1].iov_base\fR contains the user data that was received. The
return value of
.B t_rcvvudata()
is the number of bytes of user data
given to the user.
.sp
.LP
Note that the limit on the total number of bytes available in all buffers
passed:
.sp
.in +2
.nf
\fIiov(0).iov_len + . . + iov(iovcount-1).iov_len\fR)
.fi
.in -2

.sp
.LP
may be constrained by implementation limits. If no other constraint
applies, it will be limited by
.BR INT_MAX .
In practice, the availability
of memory to an application is likely to impose a lower limit on the amount
of data that can be sent or received using scatter/gather functions.
.sp
.LP
By default,
.B t_rcvvudata()
operates in synchronous mode and waits for
a data unit to arrive if none is currently available.  However, if
\fBO_NONBLOCK\fR is set by means of \fBt_open\fR(3NSL) or \fBfcntl\fR(2),
\fBt_rcvvudata()\fR executes in asynchronous mode and fails if no data units
are available.
.sp
.LP
If the buffers defined in the
.I iov[]
array are not large enough to
hold the current data unit, the buffers will be filled and  \fBT_MORE\fR
will be set in flags on return to indicate that another
.BR t_rcvvudata()
should be called to retrieve the rest of the data unit.  Subsequent calls to
\fBt_rcvvudata()\fR will return zero for the length of the address and
options, until the full data unit has been received.
.SH RETURN VALUES
.sp
.LP
On successful completion,
.B t_rcvvudata()
returns the number of bytes
received. Otherwise, it returns  -1 on failure and
.B t_errno
is set to
indicate the error.
.SH VALID STATES
.sp
.LP
.BR T_IDLE .
.SH ERRORS
.sp
.LP
On failure,
.B t_errno
is set to one of the following:
.sp
.ne 2
.mk
.na
.B TBADDATA
.ad
.RS 15n
.rt
\fIiovcount\fR is greater than  \fBT_IOV_MAX.\fR
.RE

.sp
.ne 2
.mk
.na
.B TBADF
.ad
.RS 15n
.rt
The specified file descriptor does not refer to a transport endpoint.
.RE

.sp
.ne 2
.mk
.na
.B TBUFOVFLW
.ad
.RS 15n
.rt
The number of bytes allocated for the incoming protocol address or options
(\fImaxlen\fR) is greater than  \fB0\fR but not sufficient to store the
information. The unit data information to be returned in
.I unitdata
will
be discarded.
.RE

.sp
.ne 2
.mk
.na
.B TLOOK
.ad
.RS 15n
.rt
An asynchronous event has occurred on this transport endpoint and requires
immediate attention.
.RE

.sp
.ne 2
.mk
.na
.B TNODATA
.ad
.RS 15n
.rt
\fBO_NONBLOCK\fR was set, but no data units are currently available from
the transport provider.
.RE

.sp
.ne 2
.mk
.na
.B TNOTSUPPORT
.ad
.RS 15n
.rt
This function is not supported by the underlying transport provider.
.RE

.sp
.ne 2
.mk
.na
.B TOUTSTATE
.ad
.RS 15n
.rt
The communications endpoint referenced by \fIfd\fR is not in one of the
states in which a call to this function is valid.
.RE

.sp
.ne 2
.mk
.na
.B TPROTO
.ad
.RS 15n
.rt
This error indicates that a communication problem has been detected between
XTI and the transport provider for which there is no other suitable XTI
error
.BR (t_errno) .
.RE

.sp
.ne 2
.mk
.na
.B TSYSERR
.ad
.RS 15n
.rt
A system error has occurred during execution of this function.
.RE

.SH TLI COMPATIBILITY
.sp
.LP
In the
.B TLI
interface definition, no counterpart of this routine was
defined.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR fcntl (2),
.BR t_alloc (3NSL),
.BR t_open (3NSL),
.BR t_rcvudata (3NSL),
.BR t_rcvuderr (3NSL),
.BR t_sndudata (3NSL),
.BR t_sndvudata (3NSL),
.BR attributes (5)
