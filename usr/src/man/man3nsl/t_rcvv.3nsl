'\" te
.\" Copyright 1994, The X/Open Company Ltd., All Rights Reserved.
.\" Portions Copyright 1989 AT&T.
.\" Portions Copyright (c) 1998, Sun Microsystems, Inc., All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH t_rcvv 3NSL "7 May 1998" "SunOS 5.11" "Networking Services Library Functions"
.SH NAME
t_rcvv \- receive data or expedited data sent over a connection and put the
data into one or more non-contiguous buffers
.SH SYNOPSIS
.LP
.nf
#include <xti.h>




\fBint\fR \fBt_rcvv\fR(\fBint\fR \fIfd\fR, \fBstruct t_iovec *\fIiov\fR, \fBunsigned int\fR \fIiovcount\fR, \fBint *\fIflags\fR);
.fi

.SH DESCRIPTION
.sp
.LP
This function receives either normal or expedited data.  The argument
.I fd
identifies the local transport endpoint through which data will
arrive,
.I iov
points to an array of buffer address/buffer size pairs
.RI ( iov_base ,
.IR iov_len ).
The
.B t_rcvv()
function receives data
into the buffers specified by  \fIiov\fB0\fI\&.iov_base\fR,
\fIiov\fB1\fI\&.iov_base\fR, through  \fIiov [iovcount-1].iov_base\fB,\fR always filling one buffer before proceeding
to the next.
.sp
.LP
Note that the limit on the total number of bytes available in all buffers
passed:
.sp
.in +2
.nf
\fIiov(0).iov_len + . . + iov(iovcount-1).iov_len)\fR
.fi
.in -2

.sp
.LP
may be constrained by implementation limits. If no other constraint
applies, it will be limited by
.BR INT_MAX .
In practice, the availability
of memory to an application is likely to impose a lower limit on the amount
of data that can be sent or received using scatter/gather functions.
.sp
.LP
The argument iovcount contains the number of buffers which is limited to
.B T_IOV_MAX,
which is an implementation-defined value  of at least 16.
If the limit is exceeded, the function will fail with
.BR TBADDATA .
.sp
.LP
The argument flags may be set on return from
.B t_rcvv()
and specifies
optional flags as described below.
.sp
.LP
By default,
.B t_rcvv()
operates in synchronous mode and will wait for
data to arrive if none is currently available. However, if
.B O_NONBLOCK
is set by means of
.BR t_open "(3NSL) or "
.BR fcntl (2),
.B t_rcvv()
will execute in asynchronous mode and will fail if no data is available. See
.B TNODATA
below.
.sp
.LP
On return from the call, if
.B T_MORE
is set in flags, this indicates
that there is more data, and the current transport service data unit (TSDU)
or expedited transport service data unit (ETSDU) must be received in
multiple
.B t_rcvv()
or
.BR t_rcv "(3NSL) calls.  In the asynchronous"
mode, or under unusual conditions (for example, the arrival of a signal or
.B T_EXDATA
event), the
.B T_MORE
flag may be set on return from the
.B t_rcvv()
call even when the number of bytes received is less than the
total size of all the receive buffers.  Each
.B t_rcvv()
with the
.B T_MORE
flag set indicates that another
.B t_rcvv()
must follow to
get more data for the current TSDU.  The end of the TSDU is identified by
the return of a
.B t_rcvv()
call with the
.B T_MORE
flag not set.
If the transport provider does not support the concept of a TSDU as
indicated in the
.I info
argument on return from
.BR t_open (3NSL)
or
.BR t_getinfo (3NSL),
the
.B T_MORE
flag is not meaningful and should
be ignored.  If the amount of buffer space passed in
.I iov
is greater
than zero on the call to
.BR t_rcvv() ,
then
.B t_rcvv()
will return
.B 0
only if the end of a TSDU is being returned to the user.
.sp
.LP
On return, the data is expedited if
.B T_EXPEDITED
is set in flags.  If
.B T_MORE
is also set, it indicates that the number of expedited bytes
exceeded nbytes, a signal has interrupted the  call, or that an entire ETSDU
was not available (only for transport protocols that support fragmentation
of ETSDUs).  The rest of the ETSDU will be returned by subsequent calls to
.B t_rcvv()
which will return with
.B T_EXPEDITED
set in flags. The
end of the ETSDU is identified by the return of a
.B t_rcvv()
call with
.B T_EXPEDITED
set and
.B T_MORE
cleared.  If the entire ETSDU is not
available it is possible for normal data fragments to be returned between
the initial and final fragments of an ETSDU.
.sp
.LP
If a signal arrives,
.B t_rcvv()
returns, giving the user any data
currently available.  If no data is available,
.B t_rcvv()
returns  -1,
sets
.B t_errno
to
.B TSYSERR
and
.B errno
to
.BR EINTR .
If some
data is available,
.B t_rcvv()
returns the number of bytes received and
.B T_MORE
is set in flags.
.sp
.LP
In synchronous mode, the only way for the user to be notified of the
arrival of normal or expedited data is to issue this function or check for
the
.B "T_DATA or"
.B T_EXDATA
events using the
.BR t_look (3NSL)
function.  Additionally, the process can arrange to be
notified via the EM interface.
.SH RETURN VALUES
.sp
.LP
On successful completion,
.B t_rcvv()
returns the number of bytes
received. Otherwise, it returns  -1 on failure and
.B t_errno
is set to
indicate the error.
.SH VALID STATES
.sp
.LP
.BR T_DATAXFER ,
.BR T_OUTREL .
.SH ERRORS
.sp
.LP
On failure,
.B t_errno
is set to one of the following:
.sp
.ne 2
.mk
.na
.B TBADDATA
.ad
.RS 15n
.rt
.I iovcount
is greater than
.BR T_IOV_MAX.
.RE

.sp
.ne 2
.mk
.na
.B TBADF
.ad
.RS 15n
.rt
The specified file descriptor does not refer to a transport endpoint.
.RE

.sp
.ne 2
.mk
.na
.B TLOOK
.ad
.RS 15n
.rt
An asynchronous event has occurred on this transport endpoint and requires
immediate attention.
.RE

.sp
.ne 2
.mk
.na
.B TNODATA
.ad
.RS 15n
.rt
.B O_NONBLOCK
was set, but no data is currently available from the
transport provider.
.RE

.sp
.ne 2
.mk
.na
.B TNOTSUPPORT
.ad
.RS 15n
.rt
This function is not supported by the underlying transport provider.
.RE

.sp
.ne 2
.mk
.na
.B TOUTSTATE
.ad
.RS 15n
.rt
The communications endpoint referenced by
.I fd
is not in one of the
states in which a call to this function is valid.
.RE

.sp
.ne 2
.mk
.na
.B TPROTO
.ad
.RS 15n
.rt
This error indicates that a communication problem has been detected between
XTI and the transport provider for which there is no other suitable XTI
error
.BR (t_errno) .
.RE

.sp
.ne 2
.mk
.na
.B TSYSERR
.ad
.RS 15n
.rt
A system error has occurred during execution of this function.
.RE

.SH TLI COMPATIBILITY
.sp
.LP
In the
.B TLI
interface definition, no counterpart of this routine was
defined.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR fcntl (2),
.BR t_getinfo (3NSL),
.BR t_look (3NSL),
.BR t_open (3NSL),
.BR t_rcv (3NSL),
.BR t_snd (3NSL),
.BR t_sndv (3NSL),
.BR attributes (5)
