'\" te
.\" Copyright 1989 AT&T  Copyright (c) 1996, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH elf_flagdata 3ELF "11 Jul 2001" "SunOS 5.11" "ELF Library Functions"
.SH NAME
elf_flagdata, elf_flagehdr, elf_flagelf, elf_flagphdr, elf_flagscn,
elf_flagshdr \- manipulate flags
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR .\|.\|. ] \fIfile\fR .\|.\|. \fB-lelf\fR [ \fIlibrary\fR .\|.\|. ]
#include <libelf.h>

\fBunsigned\fR \fBelf_flagdata\fR(\fBElf_Data *\fIdata\fR, \fBElf_Cmd\fR \fIcmd\fR, \fBunsigned\fR \fIflags\fR);
.fi

.LP
.nf
\fBunsigned\fR \fBelf_flagehdr\fR(\fBElf *\fIelf\fR, \fBElf_Cmd\fR \fIcmd\fR, \fBunsigned\fR \fIflags\fR);
.fi

.LP
.nf
\fBunsigned\fR \fBelf_flagelf\fR(\fBElf *\fIelf\fR, \fBElf_Cmd\fR \fIcmd\fR, \fBunsigned\fR \fIflags\fR);
.fi

.LP
.nf
\fBunsigned\fR \fBelf_flagphdr\fR(\fBElf *\fIelf\fR, \fBElf_Cmd\fR \fIcmd\fR, \fBunsigned\fR \fIflags\fR);
.fi

.LP
.nf
\fBunsigned\fR \fBelf_flagscn\fR(\fBElf_Scn *\fIscn\fR, \fBElf_Cmd\fR \fIcmd\fR, \fBunsigned\fR \fIflags\fR);
.fi

.LP
.nf
\fBunsigned\fR \fBelf_flagshdr\fR(\fBElf_Scn *\fIscn\fR, \fBElf_Cmd\fR \fIcmd\fR, \fBunsigned\fR \fIflags\fR);
.fi

.SH DESCRIPTION
.sp
.LP
These functions manipulate the flags associated with various structures of
an
.B ELF
file. Given an
.B ELF
descriptor (\fIelf\fR), a data
descriptor
.RI ( data ),
or a section descriptor
.RI ( scn ),
the functions
may set or clear the associated status bits, returning the updated bits. A
null descriptor is allowed, to simplify error handling; all functions return
\fB0\fR for this degenerate case.
.sp
.LP
\fIcmd\fR may have the following values:
.sp
.ne 2
.mk
.na
.B ELF_C_CLR
.ad
.RS 13n
.rt
The functions clear the bits that are asserted in
.IR flags .
Only the
non-zero bits in \fIflags\fR are cleared; zero bits do not change the status
of the descriptor.
.RE

.sp
.ne 2
.mk
.na
.B ELF_C_SET
.ad
.RS 13n
.rt
The functions set the bits that are asserted in
.IR flags .
Only the
non-zero bits in \fIflags\fR are set; zero bits do not change the status of
the descriptor.
.RE

.sp
.LP
Descriptions of the defined \fIflags\fR bits appear below:
.sp
.ne 2
.mk
.na
.B ELF_F_DIRTY
.ad
.RS 16n
.rt
When the program intends to write an
.B ELF
file, this flag asserts the
associated information needs to be written to the file. Thus, for example, a
program that wished to update the
.B ELF
header of an existing file would
call \fBelf_flagehdr()\fR with this bit set in \fIflags\fR and \fIcmd\fR
equal to
.BR ELF_C_SET .
A later call to \fBelf_update()\fR would write the
marked header to the file.
.RE

.sp
.ne 2
.mk
.na
.B ELF_F_LAYOUT
.ad
.RS 16n
.rt
Normally, the library decides how to arrange an output file. That is, it
automatically decides where to place sections, how to align them in the
file, etc. If this bit is set for an
.B ELF
descriptor, the program
assumes responsibility for determining all file positions. This bit is
meaningful only for \fBelf_flagelf()\fR and applies to the entire file
associated with the descriptor.
.RE

.sp
.LP
When a flag bit is set for an item, it affects all the subitems as well.
Thus, for example, if the program sets the
.B ELF_F_DIRTY
bit with
\fBelf_flagelf()\fR, the entire logical file is ``dirty.''
.SH EXAMPLES
.LP
\fBExample 1\fR A sample display of calling the \fBelf_flagdata()\fR
function.
.sp
.LP
The following fragment shows how one might mark the
.B ELF
header to be
written to the output file:

.sp
.in +2
.nf
\fB/* dirty ehdr \|.\|.\|. */
ehdr = elf32_getehdr(elf);
elf_flagehdr(elf, ELF_C_SET, ELF_F_DIRTY);\fR
.fi
.in -2

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStable
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
\fBelf\fR(3ELF), \fBelf32_getehdr\fR(3ELF), \fBelf_getdata\fR(3ELF),
\fBelf_update\fR(3ELF), \fBattributes\fR(5)
