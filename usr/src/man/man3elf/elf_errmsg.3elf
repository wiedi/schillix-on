'\" te
.\" Copyright 1989 AT&T  Copyright (c) 1996, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH elf_errmsg 3ELF "11 Jul 2001" "SunOS 5.11" "ELF Library Functions"
.SH NAME
elf_errmsg, elf_errno \- error handling
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR .\|.\|. ] \fIfile\fR .\|.\|. \fB-lelf\fR [ \fIlibrary\fR .\|.\|. ]
#include <libelf.h>

\fBconst char *\fBelf_errmsg\fR(\fBint\fR \fIerr\fR);
.fi

.LP
.nf
\fBint\fR \fBelf_errno\fR(\fBvoid\fR);
.fi

.SH DESCRIPTION
.sp
.LP
If an
.B ELF
library function fails, a program can call
.B elf_errno()
to retrieve the library's internal error number. As a side
effect, this function resets the internal error number to
.BR 0 ,
which
indicates no error.
.sp
.LP
The
.B elf_errmsg()
function takes an error number,
.IR err ,
and
returns a null-terminated error message (with no trailing new-line) that
describes the problem. A zero
.I err
retrieves a message for the most
recent error. If no error has occurred, the return value is a null pointer
(not a pointer to the null string). Using
.I err
of
.B \(mi1
also
retrieves the most recent error, except it guarantees a non-null return
value, even when no error has occurred. If no message is available for the
given number,
.B elf_errmsg()
returns a pointer to an appropriate
message. This function does not have the side effect of clearing the
internal error number.
.SH EXAMPLES
.LP
.B Example 1
A sample program of calling the
.B elf_errmsg()
function.
.sp
.LP
The following fragment clears the internal error number and checks it later
for errors. Unless an error occurs after the first call to
.BR elf_errno() ,
the next call will return
.BR 0 .

.sp
.in +2
.nf
\fB(void)elf_errno(\|);
/* processing \|.\|.\|. */
while (more_to_do)
{
	if ((err = elf_errno(\|)) != 0)
	{
		/* print msg */
		msg = elf_errmsg(err);
	}
}\fR
.fi
.in -2

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStable
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR elf (3ELF),
.BR libelf (3LIB),
.BR attributes (5)
