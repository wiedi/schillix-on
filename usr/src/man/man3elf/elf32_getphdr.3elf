'\" te
.\" Copyright 1989 AT&T  Copyright (c) 2001, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH elf32_getphdr 3ELF "11 Jul 2001" "SunOS 5.11" "ELF Library Functions"
.SH NAME
elf32_getphdr, elf32_newphdr, elf64_getphdr, elf64_newphdr \- retrieve
class-dependent program header table
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR .\|.\|. ] \fIfile\fR.\|.\|. \fB-lelf\fR [ \fIlibrary\fR .\|.\|. ]
#include <libelf.h>

\fBElf32_Phdr *\fBelf32_getphdr\fR(\fBElf *\fIelf\fR);
.fi

.LP
.nf
\fBElf32_Phdr *\fBelf32_newphdr\fR(\fBElf *\fIelf\fR, \fBsize_t\fR \fIcount\fR);
.fi

.LP
.nf
\fBElf64_Phdr *\fBelf64_getphdr\fR(\fBElf *\fIelf\fR);
.fi

.LP
.nf
\fBElf64_Phdr *\fBelf64_newphdr\fR(\fBElf *\fIelf\fR, \fBsize_t\fR \fIcount\fR);
.fi

.SH DESCRIPTION
.sp
.LP
For a 32-bit class file,
.B elf32_getphdr()
returns a pointer to the
program execution header table, if one is available for the
.B ELF
descriptor
.IR elf .
.sp
.LP
.B elf32_newphdr()
allocates a new table with
.I count
entries,
regardless of whether one existed previously, and sets the
.B ELF_F_DIRTY
bit for the table. See
.BR elf_flagdata (3ELF).
Specifying a zero
.I count
deletes an existing table. Note this behavior differs from that
of
.B elf32_newehdr()
allowing a program to replace or delete the program
header table, changing its size if necessary.  See
.BR elf32_getehdr (3ELF).
.sp
.LP
If no program header table exists, the file is not a 32-bit class file, an
error occurs, or
.IR elf " is "
.I NULL,
both functions return a null
pointer. Additionally,
.B elf32_newphdr()
returns a null pointer if
.I count
is
.BR 0 .
.sp
.LP
The table is an array of
.B Elf32_Phdr
structures, each of which
includes the following members:
.sp
.in +2
.nf
\fBElf32_Word	p_type;
Elf32_Off	p_offset;
Elf32_Addr	p_vaddr;
Elf32_Addr	p_paddr;
Elf32_Word	p_filesz;
Elf32_Word	p_memsz;
Elf32_Word	p_flags;
Elf32_Word	p_align;\fR
.fi
.in -2

.sp
.LP
The
.B Elf64_Phdr
structures include the following members:
.sp
.in +2
.nf
\fBElf64_Word	p_type;
Elf64_Word	p_flags;
Elf64_Off	p_offset;
Elf64_Addr	p_vaddr;
Elf64_Addr	p_paddr;
Elf64_Xword	p_filesz;
Elf64_Xword	p_memsz;
Elf64_Xword	p_align;\fR
.fi
.in -2

.sp
.LP
For the 64\(mibit class, replace 32 with 64 as appropriate.
.sp
.LP
The
.B ELF
header's
.B e_phnum
member tells how many entries the
program header table has. See
.BR elf32_getehdr (3ELF).
A program may
inspect this value to determine the size of an existing table;
.B elf32_newphdr()
automatically sets the member's value to
.IR count .
If the program is building a new file, it is responsible for creating the
file's
.B ELF
header before creating the program header table.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStable
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR elf (3ELF),
.BR elf32_getehdr (3ELF),
.BR elf_begin (3ELF),
.BR elf_flagdata (3ELF),
.BR libelf (3LIB),
.BR attributes (5)
