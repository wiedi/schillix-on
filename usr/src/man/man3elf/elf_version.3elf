'\" te
.\" Copyright 1989 AT&T  Copyright (c) 2001, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH elf_version 3ELF "11 Jul 2001" "SunOS 5.11" "ELF Library Functions"
.SH NAME
elf_version \- coordinate ELF library and application versions
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR .\|.\|. ] \fIfile\fR .\|.\|. \fB-lelf\fR [ \fIlibrary\fR .\|.\|. ]
#include <libelf.h>

\fBunsigned\fR \fBelf_version\fR(\fBunsigned\fR \fIver\fR);
.fi

.SH DESCRIPTION
.sp
.LP
As
.BR elf (3ELF)
explains, the program, the library, and an object file
have independent notions of the latest
.B ELF
version.
.B elf_version()
lets a program query the
.B ELF
library's \fIinternal version\fR. It further lets the program specify what memory types it uses by
giving its own
.IR "working version" ,
.BR ver ,
to the library. Every
program that uses the
.B ELF
library must coordinate versions as
described below.
.sp
.LP
The header
.RB < libelf.h >
supplies the version to the program with the
macro
.BR EV_CURRENT .
If the library's internal version (the highest
version known to the library) is lower than that known by the program
itself, the library may lack semantic knowledge assumed by the program.
Accordingly,
.B elf_version()
will not accept a working version unknown
to the library.
.sp
.LP
Passing
.I ver
equal to
.B EV_NONE
causes
.B elf_version()
to
return the library's internal version, without altering the working version.
If
.B ver
is a version known to the library,
.B elf_version()
returns
the previous (or initial) working version number. Otherwise, the working
version remains unchanged and
.B elf_version()
returns
.BR EV_NONE .
.SH EXAMPLES
.LP
.B Example 1
A sample display of using the
.B elf_version()
function.
.sp
.LP
The following excerpt from an application program protects itself from
using an older library:

.sp
.in +2
.nf
\fBif (elf_version(EV_CURRENT) == EV_NONE) {
	/* library out of date */
	/* recover from error */
}\fR
.fi
.in -2

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStable
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR elf (3ELF),
.BR elf32_xlatetof (3ELF),
.BR elf_begin (3ELF),
.BR libelf (3LIB),
.BR attributes (5)
.SH NOTES
.sp
.LP
The working version should be the same for all operations on a particular
.B ELF
descriptor. Changing the version between operations on a
descriptor will probably not give the expected results.
