'\" te
.\" Copyright (c) 2009, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH di_walk_node 3DEVINFO "16 Jan 2009" "SunOS 5.11" "Device Information Library Functions"
.SH NAME
di_walk_node \- traverse libdevinfo device nodes
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-ldevinfo\fR [ \fIlibrary\fR.\|.\|. ]
#include <libdevinfo.h>

\fBint\fR \fBdi_walk_node\fR(\fBdi_node_t\fR \fIroot\fR, \fBuint_t\fR \fIflag\fR, \fBvoid *\fIarg\fR,
     \fBint\fR \fI(*node_callback)\fR(\fBdi_node_t\fR \fInode\fR, \fBvoid *\fIarg\fR));
.fi

.SH DESCRIPTION
.sp
.LP
The
.B di_walk_node()
function visits all nodes in the subtree rooted at
.IR root .
For each node found, the caller-supplied function
.IR node_callback ()
is invoked. The return value of
.IR node_callback ()
specifies subsequent walking behavior.
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I arg
.ad
.RS 8n
.rt
Pointer to caller-specific data.
.RE

.sp
.ne 2
.mk
.na
.I flag
.ad
.RS 8n
.rt
Specifies walking order, either
.B DI_WALK_CLDFIRST
(depth first) or
.B DI_WALK_SIBFIRST
(breadth first).
.B DI_WALK_CLDFIRST
is the
default.
.RE

.sp
.ne 2
.mk
.na
.I node
.ad
.RS 8n
.rt
The node being visited.
.RE

.sp
.ne 2
.mk
.na
.I root
.ad
.RS 8n
.rt
The handle to the root node of the subtree to visit.
.RE

.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B di_walk_node()
returns 0. Otherwise,
.B -1
is returned and
.I errno
is set to indicate the error.
.sp
.LP
The
.IR node_callback ()
function can return one of the following:
.sp
.ne 2
.mk
.na
.B DI_WALK_CONTINUE
.ad
.RS 22n
.rt
Continue walking.
.RE

.sp
.ne 2
.mk
.na
.B DI_WALK_PRUNESIB
.ad
.RS 22n
.rt
Continue walking, but skip siblings and their child nodes.
.RE

.sp
.ne 2
.mk
.na
.B DI_WALK_PRUNECHILD
.ad
.RS 22n
.rt
Continue walking, but skip subtree rooted at current node.
.RE

.sp
.ne 2
.mk
.na
.B DI_WALK_TERMINATE
.ad
.RS 22n
.rt
Terminate the walk immediately.
.RE

.SH ERRORS
.sp
.LP
The
.B di_walk_node()
function will fail if:
.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
Invalid argument.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR di_init (3DEVINFO),
.BR libdevinfo (3LIB),
.BR attributes (5)
.sp
.LP
.I Writing Device Drivers
