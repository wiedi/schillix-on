'\" te
.\" Copyright (c) 2009, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH di_walk_minor 3DEVINFO "14 Jan 2009" "SunOS 5.11" "Device Information Library Functions"
.SH NAME
di_walk_minor \- traverse libdevinfo minor nodes
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-ldevinfo\fR [ \fIlibrary\fR.\|.\|. ]
#include <libdevinfo.h>

\fBint\fR \fBdi_walk_minor\fR(\fBdi_node_t\fR \fIroot\fR, \fBconst char *\fIminor_nodetype\fR,
     \fBuint_t\fR \fIflag\fR, \fBvoid *\fIarg\fR, \fBint\fR (\fI*minor_callback\fR)(di_node_t \fInode\fR,
     di_minor_t \fIminor\fR, void *\fIarg\fR));
.fi

.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I arg
.ad
.RS 18n
.rt
Pointer to caller- specific user data.
.RE

.sp
.ne 2
.mk
.na
.I flag
.ad
.RS 18n
.rt
Specify 0. Reserved for future use.
.RE

.sp
.ne 2
.mk
.na
.I minor
.ad
.RS 18n
.rt
The minor node visited.
.RE

.sp
.ne 2
.mk
.na
.I minor_nodetype
.ad
.RS 18n
.rt
A character string specifying the minor data type, which may be one of the
types defined by the Solaris DDI framework, for example,
.BR DDI_NT_BLOCK .
.B NULL
matches all
.I minor_node
types. See
.BR ddi_create_minor_node (9F).
.RE

.sp
.ne 2
.mk
.na
.I node
.ad
.RS 18n
.rt
The device node with which to  the minor node is associated.
.RE

.sp
.ne 2
.mk
.na
.I root
.ad
.RS 18n
.rt
Root of subtree to visit.
.RE

.SH DESCRIPTION
.sp
.LP
The
.B di_walk_minor()
function visits all minor nodes attached to
device nodes in a subtree rooted at
.IR root .
For each  minor node that
matches
.IR minor_nodetype ,
the caller-supplied function
.IR minor_callback ()
is invoked. The walk terminates immediately when
.IR minor_callback ()
returns
.BR DI_WALK_TERMINATE .
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B di_walk_minor()
returns 0. Otherwise, -1
is returned and errno is set to indicate the error.
.sp
.LP
The
.B minor_callback()
function returns one of the following:
.sp
.ne 2
.mk
.na
.B DI_WALK_CONTINUE
.ad
.RS 21n
.rt
Continue to visit subsequent minor data nodes.
.RE

.sp
.ne 2
.mk
.na
.B DI_WALK_TERMINATE
.ad
.RS 21n
.rt
Terminate the walk immediately.
.RE

.SH ERRORS
.sp
.LP
The
.B di_walk_minor()
function will fail if:
.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
Invalid argument.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR dladm (1M),
.BR di_minor_nodetype (3DEVINFO),
dlpi_walk(3DLPI),
.BR libdevinfo (3LIB),
.BR attributes (5),
.BR filesystem (5),
.BR ddi_create_minor_node (9F)
.sp
.LP
.I Writing Device Drivers
.SH NOTES
.sp
.LP
The
.B di_walk_minor()
function is no longer an accurate method for
walking network datalink interfaces on the system. Applications should use
.BR dlpi_walk (3DLPI)
instead. It has been common for applications to use
.B di_walk_minor()
to walk networking devices by passing in a
.B minor_nodetype
of
.BR DDI_NT_NET ,
in most cases to discover the set
of DLPI devices on the system. Solaris now makes a layering distinction
between networking devices (the objects displayed in the
.B DEVICE
field
by
.BR "dladm show-phys" )
and network datalink interfaces (the objects
displayed by
.BR "dladm show-link" ).
Datalink interfaces are
represented as the set of DLPI device nodes that applications can open by
using \fBdlpi_open\fR(3DLPI) or by opening DLPI nodes out of the
.B /dev/net
filesystem (see
.BR filesystem (5)).
The
.BR dlpi_walk (3DLPI)
function is the proper function to walk these
nodes.
