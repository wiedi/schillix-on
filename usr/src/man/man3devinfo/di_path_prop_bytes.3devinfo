'\" te
.\" Copyright (c) 2008, Sun Microsystems, Inc.  All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH di_path_prop_bytes 3DEVINFO "15 May 2008" "SunOS 5.11" "Device Information Library Functions"
.SH NAME
di_path_prop_bytes, di_path_prop_ints, di_path_prop_int64s,
di_path_prop_name, di_path_prop_strings, di_path_prop_type \- access path
property information
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-ldevinfo\fR [ \fIlibrary\fR.\|.\|. ]
#include <libdevinfo.h>

\fBchar *\fBdi_path_prop_bytes\fR(\fBdi_path_prop_t\fR \fIprop\fR);
.fi

.LP
.nf
\fBint\fR \fR(\fBdi_path_prop_t\fR \fIprop\fR);
.fi

.LP
.nf
\fBint\fR \fR(\fBdi_path_prop_t\fR \fIprop\fR, \fBuchar_t **\fIprop_data\fR);
.fi

.LP
.nf
\fBint\fR \fR(\fBdi_path_prop_t\fR \fIprop\fR, \fBint **\fIprop_data\fR);
.fi

.LP
.nf
\fBint\fR \fR(\fBdi_path_prop_t\fR \fIprop\fR, \fBint64_t **\fIprop_data\fR);
.fi

.LP
.nf
\fBint\fR \fBdi_path_prop_type\fR(\fBdi_path_prop_t\fR \fIprop\fR, \fBchar **\fIprop_data\fR);
.fi

.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I prop
.ad
.RS 13n
.rt
A handle to a property returned by
.BR di_path_prop_next (3DEVINFO).
.RE

.sp
.ne 2
.mk
.na
.I prop_data
.ad
.RS 13n
.rt
For
.BR di_path_prop_bytes() ,
the address of a pointer to an unsigned
character.
.sp
For
.BR di_path_prop_ints() ,
the address of a pointer to an integer.
.sp
For
.BR di_path_prop_int64() ,
the address of a pointer to a 64-bit
integer.
.sp
For
.BR di_path_prop_strings() ,
the address of pointer to a character.
.RE

.SH DESCRIPTION
.sp
.LP
These functions access information associated with path property values and
attributes such as the property name or data type.
.sp
.LP
The
.B di_path_prop_name()
function returns a pointer to a string
containing the name of the property.
.sp
.LP
The
.B di_path_prop_type()
function returns the type of the path
property. The type determines the appropriate interface to access property
values. Possible property types are the same as for
.BR di_prop_type (3DEVINFO),
excluding
.B DI_PROP_TYPE_UNKNOWN
and
.BR DI_PROP_UNDEFINED .
Thus,
.B di_path_prop_type()
can return one of
the following constants:
.sp
.ne 2
.mk
.na
.B DI_PROP_TYPE_INT
.ad
.RS 23n
.rt
Use
.B di_path_prop_ints()
to access property data.
.RE

.sp
.ne 2
.mk
.na
.B DI_PROP_TYPE_INT64
.ad
.RS 23n
.rt
Use
.B di_path_prop_int64s()
to access property data.
.RE

.sp
.ne 2
.mk
.na
.B DI_PROP_TYPE_STRING
.ad
.RS 23n
.rt
Use
.B di_path_prop_strings()
to access property data.
.RE

.sp
.ne 2
.mk
.na
.B DI_PROP_TYPE_BYTE
.ad
.RS 23n
.rt
Use
.B di_path_prop_bytes()
to access property data.
.RE

.sp
.LP
The
.B di_path_prop_bytes()
function returns the property data as a
series of unsigned characters.
.sp
.LP
The
.B di_path_prop_ints()
function returns the property data as a
series of integers.
.sp
.LP
The
.B di_path_prop_int64s()
function returns the property data as a
series of integers.
.sp
.LP
The
.B di_path_prop_strings()
function returns the property data as a
concatenation of null-terminated strings.
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.BR di_path_prop_bytes() ,
.BR di_path_prop_ints() ,
.BR di_path_prop_int64s() ,
and
\fBdi_path_prop_strings()\fR return a non-negative value, indicating the
number of entries in the property value buffer. If the property is found,
the number of entries in
.I prop_data
is returned. Otherwise, -1 is
returned and
.B errno
is set to indicate the error.
.sp
.LP
For
.BR di_path_prop_bytes() ,
the number of entries is the number of
unsigned characters contained in the buffer pointed to by
.IR prop_data .
.sp
.LP
For
.BR di_path_prop_ints() ,
the number of entries is the number of
integers contained in the buffer pointed to by
.IR prop_data .
.sp
.LP
For
.BR di_path_prop_ints() ,
the number of entries is the number of
64-bit integers contained in the buffer pointed to by
.IR prop_data .
.sp
.LP
For
.BR di_path_prop_strings() ,
the number of entries is the number of
null-terminated strings contained in the buffer. The strings are stored in a
concatenated format in the buffer.
.sp
.LP
The
.B di_path_prop_name()
function returns the name of the property.
.sp
.LP
The
.B di_path_prop_type()
function can return one of types described in
the Description.
.SH ERRORS
.sp
.LP
These functions will fail if:
.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 11n
.rt
One of the arguments is invalid. For example, the property type does not
match the interface.
.RE

.sp
.ne 2
.mk
.na
.B ENOTSUP
.ad
.RS 11n
.rt
The snapshot contains no property information.
.RE

.sp
.ne 2
.mk
.na
.B ENXIO
.ad
.RS 11n
.rt
The path property does not exist.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR di_path_prop_next (3DEVINFO),
.BR di_prop_type (3DEVINFO),
.BR libdevinfo (3LIB),
.BR attributes (5)
.sp
.LP
.I Writing Device Drivers
