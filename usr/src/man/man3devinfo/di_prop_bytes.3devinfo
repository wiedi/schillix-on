'\" te
.\" Copyright (c) 2001, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH di_prop_bytes 3DEVINFO "27 Mar 2001" "SunOS 5.11" "Device Information Library Functions"
.SH NAME
di_prop_bytes, di_prop_devt, di_prop_ints, di_prop_name, di_prop_strings,
di_prop_type, di_prop_int64 \- access property values and attributes
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-ldevinfo\fR [ \fIlibrary\fR.\|.\|. ]
#include <libdevinfo.h>

\fBint\fR \fBdi_prop_bytes\fR(\fBdi_prop_t\fR \fIprop\fR, \fBuchar_t **\fIprop_data\fR);
.fi

.LP
.nf
\fBdev_t\fR \fBdi_prop_devt\fR(\fBdi_prop_t\fR \fIprop\fR);
.fi

.LP
.nf
\fBint\fR \fBdi_prop_ints\fR(\fBdi_prop_t\fR \fIprop\fR, \fBint **\fIprop_data\fR);
.fi

.LP
.nf
\fBint\fR \fBdi_prop_int64\fR(\fBdi_prop_t\fR \fIprop\fR, \fBint64_t **\fIprop_data\fR);
.fi

.LP
.nf
\fBchar *\fBdi_prop_name\fR(\fBdi_prop_t\fR \fIprop\fR);
.fi

.LP
.nf
\fBint\fR \fBdi_prop_strings\fR(\fBdi_prop_t\fR \fIprop\fR, \fBchar **\fIprop_data\fR);
.fi

.LP
.nf
\fBint\fR \fBdi_prop_type\fR(\fBdi_prop_t\fR \fIprop\fR);
.fi

.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I prop
.ad
.RS 13n
.rt
Handle to a property returned by
.BR di_prop_next (3DEVINFO).
.RE

.sp
.ne 2
.mk
.na
.I prop_data
.ad
.RS 13n
.rt
For
.BR di_prop_bytes() ,
the address of a pointer to an unsigned
character.
.sp
For
.BR di_prop_ints() ,
the address of a pointer to an integer.
.sp
For
.BR di_prop_int64() ,
the address of a pointer to a 64-bit integer.
.sp
For
.BR di_prop_strings() ,
the address of pointer to a character.
.RE

.SH DESCRIPTION
.sp
.LP
These functions access information associated with property values and
attributes. All memory allocated by these functions is managed by the
library and must not be freed by the caller.
.sp
.LP
The
.B di_prop_bytes()
function returns the property data as a series of
unsigned characters.
.sp
.LP
The
.B di_prop_devt()
function returns the
.B dev_t
with which this
property is associated. If the value is
.BR DDI_DEV_T_NONE ,
the property
is not associated with any specific minor node.
.sp
.LP
The
.B di_prop_ints()
function returns the property data as a series of
integers.
.sp
.LP
The
.B di_prop_int64()
function returns the property data as a series of
64-bit integers.
.sp
.LP
The
.B di_prop_name()
function returns the name of the property.
.sp
.LP
The
.B di_prop_strings()
function returns the property data as a
concatenation of null-terminated strings.
.sp
.LP
The
.B di_prop_type()
function returns the type of the property. The
type determines the appropriate interface to access property values. The
following is a list of possible types:
.sp
.ne 2
.mk
.na
.B DI_PROP_TYPE_BOOLEAN
.ad
.RS 25n
.rt
There is no interface to call since there is no property data associated
with boolean properties. The existence of the property defines a \fBTRUE\fR
value.
.RE

.sp
.ne 2
.mk
.na
.B DI_PROP_TYPE_INT
.ad
.RS 25n
.rt
Use
.B di_prop_ints()
to access property data.
.RE

.sp
.ne 2
.mk
.na
.B DI_PROP_TYPE_INT64
.ad
.RS 25n
.rt
Use
.B di_prop_int64()
to access property data.
.RE

.sp
.ne 2
.mk
.na
.B DI_PROP_TYPE_STRING
.ad
.RS 25n
.rt
Use
.B di_prop_strings()
to access property data.
.RE

.sp
.ne 2
.mk
.na
.B DI_PROP_TYPE_BYTE
.ad
.RS 25n
.rt
Use
.B di_prop_bytes()
to access property data.
.RE

.sp
.ne 2
.mk
.na
.B DI_PROP_TYPE_UNKNOWN	
.ad
.RS 25n
.rt
Use
.B di_prop_bytes()
to access property data. Since the type of
property is unknown, the caller is responsible for interpreting the contents
of the data.
.RE

.sp
.ne 2
.mk
.na
.B DI_PROP_TYPE_UNDEF_IT
.ad
.RS 25n
.rt
The property has been undefined by the driver. No property data is
available.
.RE

.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.BR di_prop_bytes() ,
.BR di_prop_ints() ,
.BR di_prop_int64() ,
and
.B di_prop_strings()
return a non-negative
value, indicating the number of entries in the property value buffer. See
.BR di_prom_prop_lookup_bytes (3DEVINFO)
for a description of the return
values. Otherwise, -1 is returned and
.I errno
is set to indicate the
error.
.sp
.LP
The
.B di_prop_devt()
function returns the
.B dev_t
value associated
with the property.
.sp
.LP
The
.B di_prop_name()
function returns a pointer to a string containing
the name of the property.
.sp
.LP
The
.B di_prop_type()
function can return one of types described in the
DESCRIPTION section.
.SH ERRORS
.sp
.LP
These functions will fail if:
.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
Invalid argument. For example, the property type does not match the
interface.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityEvolving
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR di_prom_prop_lookup_bytes (3DEVINFO),
.BR di_prop_next (3DEVINFO),
.BR libdevinfo (3LIB),
.BR attributes (5)
.sp
.LP
.I Writing Device Drivers
