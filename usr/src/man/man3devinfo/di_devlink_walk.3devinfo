'\" te
.\" Copyright (c) 2008, Sun Microsystems, Inc.  All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH di_devlink_walk 3DEVINFO "15 May 2008" "SunOS 5.11" "Device Information Library Functions"
.SH NAME
di_devlink_walk \- walk through links in a devlink snapshot
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-ldevinfo\fR [ \fIlibrary\fR.\|.\|. ]
#include <libdevinfo.h>

\fBint\fR \fBdi_devlink_walk\fR(\fBdi_devlink_handle_t\fR \fIhdl\fR,\fBconst char *\fIre\fR,
     \fBconst char *\fImpath\fR, \fBuint_t\fR \fIflags\fR, \fBvoid *\fIarg\fR,
     \fBint\fR (*\fIdevlink_callback\fR)(\fBdi_devlink_t\fR \fIdevlink\fR, \fBvoid *\fIarg\fR));
.fi

.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I hdl
.ad
.RS 11n
.rt
A handle to a snapshot of devlinks in "\fB/dev\fR".
.RE

.sp
.ne 2
.mk
.na
.I re
.ad
.RS 11n
.rt
An extended regular expression as specified in
.BR regex (5)
describing
the paths of devlinks to visit. A null value matches all devlinks.  The
expression should not involve the "\fB/dev\fR" prefix. For example, the
"^\fBdsk/\fR" will invoke \fIdevlink_callback\fR() for all "\fB/dev/dsk/\fR"
links.
.RE

.sp
.ne 2
.mk
.na
.I mpath
.ad
.RS 11n
.rt
A path to a minor node below "\fB/devices\fR" for which "\fB/dev\fR" links
are to be looked up. A null value selects all devlinks.  This path should
not have a "\fB/devices\fR" prefix.
.RE

.sp
.ne 2
.mk
.na
.I flags
.ad
.RS 11n
.rt
Specify the type of devlinks to be selected.  If
.B DI_PRIMARY_LINK
is
used, only primary links (for instance, links which point only to
"\fB/devices\fR" entries) are selected. If \fBDI_SECONDARY_LINK\fR is
specified, only secondary links (for instance, devlinks which point to other
devlinks) are selected. If neither flag is specified, all devlinks are
selected.
.RE

.sp
.ne 2
.mk
.na
.I arg
.ad
.RS 11n
.rt
A pointer to caller private data.
.RE

.sp
.ne 2
.mk
.na
.I devlink
.ad
.RS 11n
.rt
The devlink being visited.
.RE

.SH DESCRIPTION
.sp
.LP
The
.B di_devlink_walk()
function visits every link in the snapshot that
meets the criteria specified by the caller. For each such devlink, the
caller-supplied function
.IR devlink_callback ()
is invoked. The return
value of 	\fIdevlink_callback\fR() determines subsequent walk behavior.
.SH RETURN VALUES
.sp
.LP
Upon success, the
.B di_devlink_walk()
function returns 0. Otherwise, -1
is returned and
.B errno
is set to indicate the error.
.sp
.LP
The
.IR devlink_callback ()
function can return the following values:
.sp
.ne 2
.mk
.na
.B DI_WALK_CONTINUE
.ad
.RS 21n
.rt
Continue walking.
.RE

.sp
.ne 2
.mk
.na
.B DI_WALK_TERMINATE
.ad
.RS 21n
.rt
Terminate the walk immediately.
.RE

.SH ERRORS
.sp
.LP
The
.B devlink_callback()
function will fail if:
.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
One or more arguments is invalid.
.RE

.sp
.ne 2
.mk
.na
.B ENOMEM
.ad
.RS 10n
.rt
Insufficient memory is available.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR di_devlink_init (3DEVINFO),
.BR di_devlink_path (3DEVINFO),
.BR libdevinfo (3LIB),
.BR malloc (3C),
.BR attributes (5),
.BR regex (5)
