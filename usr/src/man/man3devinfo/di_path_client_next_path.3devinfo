'\" te
.\" Copyright (c) 2008, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH di_path_client_next_path 3DEVINFO "15 May 2008" "SunOS 5.11" "Device Information Library Functions"
.SH NAME
di_path_client_next_path, di_path_phci_next_path \- libdevinfo path node
traversal functions
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-ldevinfo\fR [ \fIlibrary\fR.\|.\|. ]
#include <libdevinfo.h>

\fBdi_path_t\fR \fBdi_path_client_next_path\fR(\fBdi_node_t node\fR \fInode\fR,
     \fBdi_path_t\fR \fIpath\fR);
.fi

.LP
.nf
\fBdi_path_t\fR \fBdi_path_phci_next_path\fR(\fBdi_node_t node\fR \fInode\fR,
     \fBdi_path_t\fR \fIpath\fR);
.fi

.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I node
.ad
.RS 8n
.rt
The handle to a device node in a
.BR di_init "(3DEVINFO) snapshot.  For"
.BR di_path_client_next_path() ,
.I node
must be a client device node.
For
.BR di_path_phci_next_path() ,
.I node
must be a pHCI device node.
.RE

.sp
.ne 2
.mk
.na
.I path
.ad
.RS 8n
.rt
.BR DI_PATH_NIL ,
or the handle to a path node in a snapshot.
.RE

.SH DESCRIPTION
.sp
.LP
Each path node is an element in a pHCI-client matrix. The matrix is
implemented by dual linked lists: one list links path nodes related to a
common client head, and the other links path nodes related to a common pHCI
head.
.sp
.LP
The
.B di_path_client_next_path()
function is called on a multipathing
\&'client' device node, where a 'client' is the child of a vHCI device node,
and is associated with a specific endpoint device identity (independent of
physical paths).  If the path argument is
.IR NULL ,
.B di_path_client_next_path()
returns the first path node associated with
the client. To walk all path nodes associated with a client, returned
.B di_path_t
values are fed back into
.BR di_path_client_next_path() ,
via the
.I path
argument, until a null path node is returned.  For each
path node,
.BR di_path_bus_addr (3DEVINFO)
returns the pHCI child path node
unit-address.
.sp
.LP
The
.B di_path_phci_next_path()
function is called on a multipathing
pHCI device node. If the path argument is
.IR NULL ,
.B di_path_phci_next_path()
returns the first path node associated with
the pHCI. To walk all path nodes associated with a pHCI, returned
.B di_path_t
values are fed back into
.BR di_path_phci_next_path() ,
via
the
.I path
argument, until a null path node is returned.  For each path
node,
.BR di_path_client_node (3DEVINFO)
provides a pointer to the
associated client device node.
.sp
.LP
A device node can be a client device node of one multipathing class and a
pHCI device node of another class.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, a handle to the next path node is returned.
Otherwise,
.B DI_PATH_NIL
is returned and
.B errno
is set to indicate
the error.
.SH ERRORS
.sp
.LP
These functions will fail if:
.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 11n
.rt
One or more argument was invalid.
.RE

.sp
.ne 2
.mk
.na
.B ENOTSUP
.ad
.RS 11n
.rt
Path node information is not available in the snapshot.
.RE

.sp
.ne 2
.mk
.na
.B ENXIO
.ad
.RS 11n
.rt
The end of the path node list was reached.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR di_init (3DEVINFO),
.BR di_path_bus_addr (3DEVINFO),
.BR di_path_client_node (3DEVINFO),
.BR libdevinfo (3LIB),
.BR attributes (5)
.sp
.LP
.I Writing Device Drivers
