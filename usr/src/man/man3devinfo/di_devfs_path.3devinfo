'\" te
.\" Copyright (c) 2008, Sun Microsystems, Inc.  All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH di_devfs_path 3DEVINFO "15 May 2008" "SunOS 5.11" "Device Information Library Functions"
.SH NAME
di_devfs_path, di_devfs_minor_path, di_path_devfs_path,
di_path_client_devfs_path, di_devfs_path_free \- generate and free path
names
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-ldevinfo\fR [ \fIlibrary\fR.\|.\|. ]
#include <libdevinfo.h>

\fBchar *\fBdi_devfs_path\fR(\fBdi_node_t\fR \fInode\fR);
.fi

.LP
.nf
\fBchar *\fBdi_devfs_minor_path\fR(\fBdi_minor_t\fR \fIminor\fR);
.fi

.LP
.nf
\fBchar *\fBdi_path_devfs_path\fR(\fBdi_path_t\fR \fIpath\fR);
.fi

.LP
.nf
\fBchar *\fBdi_path_client_devfs_path\fR(\fBdi_path_t\fR \fIpath\fR);
.fi

.LP
.nf
\fBvoid\fR \fBdi_devfs_path_free\fR(\fBchar *\fIpath_buf\fR);
.fi

.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I node
.ad
.RS 12n
.rt
The handle to a device node in a
.BR di_init "(3DEVINFO) snapshot."
.RE

.sp
.ne 2
.mk
.na
.I minor
.ad
.RS 12n
.rt
The handle to a device minor node in a snapshot.
.RE

.sp
.ne 2
.mk
.na
.I path
.ad
.RS 12n
.rt
The handle to a device path node in a snapshot.
.RE

.sp
.ne 2
.mk
.na
.I path_buf
.ad
.RS 12n
.rt
A pointer returned by
.BR di_devfs_path() ,
.BR di_devfs_minor_path() ,
.BR di_path_devfs_path() ,
or \fBdi_path_client_devfs_path()\fR.
.RE

.SH DESCRIPTION
.sp
.LP
The
.B di_devfs_path()
function generates the physical path of the
device node specified by
.IR node .
.sp
.LP
The
.B di_devfs_minor_path()
function generates the physical path of the
device minor node specified by
.IR minor .
.sp
.LP
The
.B di_path_devfs_path()
function generates the pHCI physical path to
the device associated with the specified path node. The returned string is
identical to the
.B di_devfs_path()
for the device had the device not
been supported by multipath.
.sp
.LP
The
.B di_path_client_devfs_path()
function generates the vHCI physical
path of the multipath client device node associated with the device identity
of the specified path node. The returned string is identical to the
.B di_devfs_path()
of the multipath client device node.
.sp
.LP
The
.B di_devfs_path_free()
function frees memory that was allocated to
store the path returned by
.BR di_devfs_path() ,
.BR di_devfs_minor_path() ,
.BR di_path_devfs_path() ,
and
.BR di_path_client_devfs_path() .
The caller is responsible for freeing
this memory by calling
.BR di_devfs_path_free() .
.SH RETURN VALUES
.sp
.LP
Upon successful completion, the
.BR di_devfs_path() ,
.BR di_devfs_minor_path() ,
.BR di_path_devfs_path() ,
and
.B di_path_client_devfs_path()
functions return a pointer to the string
containing the path to a device node, a device minor node, or a device path
node, respectively. Otherwise, they return
.I NULL
and
.B errno
is set
to indicate the error. For a non-NULL return, the path will not have a
"/\fBdevices\fR" prefix.
.SH ERRORS
.sp
.LP
The
.BR di_devfs_path() ,
.BR di_devfs_minor_path() ,
.BR di_path_devfs_path() ,
and
.B di_path_client_devfs_path()
functions
will fail if:
.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The
.IR node ,
.IR minor ,
or
.I path
argument is not a valid
handle.
.RE

.sp
.LP
The
.BR di_devfs_path() ,
.BR di_devfs_minor_path() ,
.BR di_path_devfs_path() ,
and
.B di_path_client_devfs_path()
functions
can also return any error value returned by
.BR malloc (3C).
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR di_init (3DEVINFO),
.BR libdevinfo (3LIB),
.BR malloc (3C),
.BR attributes (5)
.sp
.LP
.I Writing Device Drivers
