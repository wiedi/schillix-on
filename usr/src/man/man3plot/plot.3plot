'\" te
.\" Copyright (c) 2004, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH plot 3PLOT "6 Oct 2004" "SunOS 5.11" "Graphics Interface Library Functions"
.SH NAME
plot, arc, box, circle, closepl, closevt, cont, erase, label, line,
linemod, move, openpl, openvt, point, space \- graphics interface
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR .\|.\|. ] \fIfile\fR .\|.\|. \fB-lplot\fR [ \fIlibrary\fR.\|.\|. ]
#include <plot.h>

\fBvoid\fR \fBarc\fR(\fBshort\fR \fIx0\fR, \fBshort\fR \fIy0\fR, \fBshort\fR \fIx1\fR, \fBshort\fR \fIy1\fR, \fBshort\fR \fIx2\fR,
     \fBshort\fR \fIy2\fR);
.fi

.LP
.nf
\fBvoid\fR \fBbox\fR(\fBshort\fR \fIx0\fR, \fBshort\fR \fIy0\fR, \fBshort\fR \fIx1\fR, \fBshort\fR \fIy1\fR);
.fi

.LP
.nf
\fBvoid\fR \fBcircle\fR(\fBshort\fR \fIx\fR, \fBshort\fR \fIy\fR, \fBshort\fR \fIr\fR);
.fi

.LP
.nf
\fBvoid\fR \fBclosepl\fR();
.fi

.LP
.nf
\fBvoid\fR \fBclosevt\fR();
.fi

.LP
.nf
\fBvoid\fR \fBcont\fR(\fBshort\fR \fIx\fR, \fBshort\fR \fIy\fR);
.fi

.LP
.nf
\fBvoid\fR \fBerase\fR();
.fi

.LP
.nf
\fBvoid\fR \fBlabel\fR(\fBchar *\fIs\fR);
.fi

.LP
.nf
\fBvoid\fR \fBline\fR(\fBshort\fR \fIx0\fR, \fBshort\fR \fIy0\fR, \fBshort\fR \fIx1\fR, \fBshort\fR \fIy1\fR);
.fi

.LP
.nf
\fBvoid\fR \fBlinemod\fR(\fBchar *\fIs\fR);
.fi

.LP
.nf
\fBvoid\fR \fBmove\fR(\fBshort\fR \fIx\fR, \fBshort\fR \fIy\fR);
.fi

.LP
.nf
\fBvoid\fR \fBopenpl\fR();
.fi

.LP
.nf
\fBvoid\fR \fBopenvt\fR();
.fi

.LP
.nf
\fBvoid\fR \fBpoint\fR(\fBshort\fR \fIx\fR, \fBshort\fR \fIy\fR);
.fi

.LP
.nf
\fBvoid\fR \fBspace\fR(\fBshort\fR \fIx0\fR, \fBshort\fR \fIy0\fR, \fBshort\fR \fIx1\fR, \fBshort\fR \fIy1\fR);
.fi

.SH DESCRIPTION
.sp
.LP
These functions generate graphics output for a set of output devices. The
format of the output is dependent upon which  link editor option is used
when the program is compiled and linked  (see
.BR "Link Editor" ).
.sp
.LP
The term "current point" refers to the current setting for the \fIx\fR and
.I y
coordinates.
.sp
.LP
The
.B arc()
function specifies a circular arc. The coordinates
\fB(\fIx0\fR, \fIy0\fR)\fR specify the center of the arc. The coordinates
\fB(\fIx1\fR, \fIy1\fR)\fR specify the starting point of the arc. The
coordinates \fB(\fIx2\fR, \fIy2\fR)\fR specify the end point of the circular
arc.
.sp
.LP
The
.B box()
function specifies a rectangle with coordinates
\fB(\fIx0\fR, \fIy0\fR)\fR, \fB(\fIx0\fR, \fIy1\fR)\fR, \fB(\fIx1\fR,
\fIy0\fR)\fR, and \fB(\fIx1\fR, \fIy1\fR)\fR. The current point is set to
\fB(\fIx1\fR, \fIy1\fR)\fR.
.sp
.LP
The
.B circle()
function specifies a circle with a center at the
coordinates \fB(\fIx\fR, \fIy\fR)\fR and a radius of \fIr\fR.
.sp
.LP
The
.B closevt()
and
.B closepl()
functions flush the output.
.sp
.LP
The
.B cont()
function specifies a line beginning at the current point
and ending at the coordinates \fB(\fIx\fR, \fIy\fR)\fR. The current point is
set to  \fB(\fIx\fR, \fIy\fR)\fR.
.sp
.LP
The
.B erase()
function starts another frame of output.
.sp
.LP
The
.B label()
function places the null terminated string
.I s
so
that the first character falls on the current point.  The  string is then
terminated by a
.B NEWLINE
character.
.sp
.LP
The
.B line()
function draws a line starting at the coordinates
\fB(\fIx0\fR, \fIy0\fR)\fR and ending at the coordinates \fB(\fIx1\fR,
\fIy1\fR)\fR. The current point is set to  \fB(\fIx1\fR, \fIy1\fR)\fR.
.sp
.LP
The
.B linemod()
function specifies the style for drawing future lines.
.I s
may contain one of the following:
.BR dotted ,
.BR solid ,
.BR longdashed ,
.BR shortdashed ,
or
.BR dotdashed .
.sp
.LP
The
.B move()
function sets the current point to the coordinates
\fB(\fIx\fR, \fIy\fR)\fR.
.sp
.LP
The
.B openpl()
or
.B openvt()
function must be called to open the
device before any other
.B plot
functions are called.
.sp
.LP
The
.B point()
function plots the point given by the coordinates
\fB(\fIx\fR, \fIy\fR)\fR. The current point is set to  \fB(\fIx\fR,
\fIy\fR)\fR.
.sp
.LP
The
.B space()
function specifies the size of the plotting area.  The
plot will be reduced or enlarged as necessary to fit the area specified. The
coordinates \fB(\fIx0\fR, \fIy0\fR)\fR specify the lower left hand corner of
the plotting area. The coordinates \fB(\fIx1\fR, \fIy1\fR)\fR specify the
upper right hand corner of the plotting area.
.SS "Link Editor"
.sp
.LP
Various flavors of these functions exist for different output devices.
They are obtained by using the following
.BR ld (1)
options:
.sp
.ne 2
.mk
.na
.B -lplot
.ad
.RS 10n
.rt
device-independent graphics stream on standard output in the format
described in
.BR plot (4B)
.RE

.sp
.ne 2
.mk
.na
.B -l300
.ad
.RS 10n
.rt
.B GSI
300 terminal
.RE

.sp
.ne 2
.mk
.na
.B -l300s
.ad
.RS 10n
.rt
.B GSI
300S terminal
.RE

.sp
.ne 2
.mk
.na
.B -l4014
.ad
.RS 10n
.rt
Tektronix 4014 terminal
.RE

.sp
.ne 2
.mk
.na
.B -l450
.ad
.RS 10n
.rt
.B GSI
450 terminal
.RE

.sp
.ne 2
.mk
.na
.B -lvt0
.ad
.RS 10n
.rt

.RE

.SH FILES
.sp
.ne 2
.mk
.na
.B /usr/lib/libplot.so.1
.ad
.RS 28n
.rt
shared object
.RE

.sp
.ne 2
.mk
.na
.B /usr/lib/64/libplot.so.1
.ad
.RS 28n
.rt
64-bit shared object
.RE

.sp
.ne 2
.mk
.na
.B /usr/lib/lib300.so.1
.ad
.RS 27n
.rt
shared object
.RE

.sp
.ne 2
.mk
.na
.B /usr/lib/64/lib300.so.1
.ad
.RS 27n
.rt
64-bit shared object
.RE

.sp
.ne 2
.mk
.na
.B /usr/lib/lib300s.so.1
.ad
.RS 28n
.rt
shared object
.RE

.sp
.ne 2
.mk
.na
.B /usr/lib/64/lib300s.so.1
.ad
.RS 28n
.rt
64-bit shared object
.RE

.sp
.ne 2
.mk
.na
.B /usr/lib/lib4014.so.1
.ad
.RS 28n
.rt
shared object
.RE

.sp
.ne 2
.mk
.na
.B /usr/lib/64/lib4014.so.1
.ad
.RS 28n
.rt
64-bit shared object
.RE

.sp
.ne 2
.mk
.na
.B /usr/lib/lib450.so.1
.ad
.RS 27n
.rt
shared object
.RE

.sp
.ne 2
.mk
.na
.B /usr/lib/64/lib450.so.1
.ad
.RS 27n
.rt
64-bit shared object
.RE

.sp
.ne 2
.mk
.na
.B /usr/lib/libvt0.so.1
.ad
.RS 27n
.rt
shared object
.RE

.sp
.ne 2
.mk
.na
.B /usr/lib/64/libvt0.so.1
.ad
.RS 27n
.rt
64-bit shared object
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelUnsafe
.TE

.SH SEE ALSO
.sp
.LP
.BR graph (1),
.BR ld (1),
.BR libplot (3LIB),
.BR plot (4B),
.BR attributes (5)
