'\" te
.\" Copyright (c) 2001, Sun Microsystems, Inc.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH aclsort 3SEC "10 Dec 2001" "SunOS 5.11" "File Access Control Library Functions"
.SH NAME
aclsort \- sort an ACL
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR .\|.\|. ] \fIfile\fR .\|.\|. \fB-lsec\fR [ \fIlibrary\fR .\|.\|. ]
#include <sys/acl.h>

\fBint\fR \fBaclsort\fR(\fBint\fR \fInentries\fR, \fBint\fR \fIcalclass\fR, \fBaclent_t *\fIaclbufp\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.I aclbufp
argument points to a buffer containing
.B ACL
entries.
The
.I nentries
argument specifies the number of
.B ACL
entries in the
buffer. The
.I calclass
argument, if non-zero, indicates that the
.B CLASS_OBJ
.RB ( ACL
mask) permissions should be recalculated. The
union of the permission bits associated with all
.B ACL
entries in the
buffer other than
.BR CLASS_OBJ ,
.BR OTHER_OBJ ,
and
.B USER_OBJ
is
calculated. The result is copied to the permission bits associated with the
.B CLASS_OBJ
entry.
.sp
.LP
The
.B aclsort()
function sorts the contents of the
.B ACL
buffer as
follows:
.RS +4
.TP
.ie t \(bu
.el o
Entries will be in the order
.BR USER_OBJ ,
.BR USER ,
.BR GROUP_OBJ ,
.BR GROUP ,
.B CLASS_OBJ
.RB ( ACL
mask),
.BR OTHER_OBJ ,
.BR DEF_USER_OBJ ,
.BR DEF_USER ,
.BR DEF_GROUP_OBJ ,
.BR DEF_GROUP ,
.B DEF_CLASS_OBJ
(default
.B ACL
mask), and
.BR DEF_OTHER_OBJ .
.RE
.RS +4
.TP
.ie t \(bu
.el o
Entries of type
.BR USER ,
.BR GROUP ,
.BR DEF_USER ,
and
.B DEF_GROUP
will be sorted in increasing order by
.BR ID .
.RE
.sp
.LP
The
.B aclsort()
function will succeed if all of the following are
true:
.RS +4
.TP
.ie t \(bu
.el o
There is exactly one entry each of type
.BR USER_OBJ ,
.BR GROUP_OBJ ,
.B CLASS_OBJ
.RB ( ACL
mask), and
.BR OTHER_OBJ .
.RE
.RS +4
.TP
.ie t \(bu
.el o
There is exactly one entry each of type
.BR DEF_USER_OBJ ,
.BR DEF_GROUP_OBJ ,
.B DEF_CLASS_OBJ
(default
.B ACL
mask), and
.B DEF_OTHER_OBJ
if there are any default entries.
.RE
.RS +4
.TP
.ie t \(bu
.el o
Entries of type
.BR USER ,
.BR GROUP ,
.BR DEF_USER ,
or
.BR DEF_GROUP
may not contain duplicate entries. A duplicate entry is one of the same type
containing the same numeric
.BR ID .
.RE
.SH RETURN VALUES
.sp
.LP
Upon successful completion, the function returns
.BR 0 .
Otherwise, it
returns
.BR \(mi1 \&.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityEvolving
_
MT-LevelUnsafe
.TE

.SH SEE ALSO
.sp
.LP
.BR acl (2),
.BR aclcheck (3SEC),
.BR attributes (5)
