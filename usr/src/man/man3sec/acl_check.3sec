'\" te
.\" Copyright (c) 2008, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH acl_check 3SEC "22 Apr 2008" "SunOS 5.11" "File Access Control Library Functions"
.SH NAME
acl_check \- check the validity of an ACL
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR\&.\|.\|. ] \fIfile\fR\&.\|.\|. \fB-lsec\fR [ \fIlibrary\fR\&.\|.\|. ]
#include <sys/acl.h>

\fBint\fR \fBacl_check\fR(\fBacl_t *\fIaclp\fR, \fBint\fR \fIisdir\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B acl_check()
function checks the validity of an ACL pointed to by
.IR aclp .
The
.I isdir
argument checks the validity of an ACL that will
be applied to a directory. The ACL can be either a POSIX draft ACL as
supported by UFS or NFSv4 ACL as supported by ZFS or NFSV4.
.sp
.LP
When the function verifies a POSIX draft ACL, the rules followed are
described in
.BR aclcheck (3SEC).
For NFSv4 ACL, the ACL is verified
against the following rules:
.RS +4
.TP
.ie t \(bu
.el o
The inheritance flags are valid.
.RE
.RS +4
.TP
.ie t \(bu
.el o
The ACL must have at least one ACL entry and no more than
.RB { MAX_ACL_ENTRIES }.
.RE
.RS +4
.TP
.ie t \(bu
.el o
The permission field contains only supported permissions.
.RE
.RS +4
.TP
.ie t \(bu
.el o
The entry type is valid.
.RE
.RS +4
.TP
.ie t \(bu
.el o
The flag fields contain only valid flags as supported by NFSv4/ZFS.
.RE
.sp
.LP
If any of the above rules are violated, the function fails with
.B errno
set to
.BR EINVAL .
.SH RETURN VALUES
.sp
.LP
If the ACL is valid,
.B acl_check()
returns 0. Otherwise
.B errno
is
set to
.B EINVAL
and the return value is set to one of the following:
.sp
.ne 2
.mk
.na
.B EACL_INHERIT_ERROR
.ad
.RS 23n
.rt
There are invalid inheritance flags specified.
.RE

.sp
.ne 2
.mk
.na
.B EACL_FLAGS_ERROR
.ad
.RS 23n
.rt
There are invalid flags specified on the ACL that don't map to supported
flags in NFSV4/ZFS ACL model.
.RE

.sp
.ne 2
.mk
.na
.B EACL_ENTRY_ERROR
.ad
.RS 23n
.rt
The ACL contains an unknown value in the type field.
.RE

.sp
.ne 2
.mk
.na
.B EACL_MEM_ERROR
.ad
.RS 23n
.rt
The system cannot allocate any memory.
.RE

.sp
.ne 2
.mk
.na
.B EACL_INHERIT_NOTDIR
.ad
.RS 23n
.rt
Inheritance flags are only allowed for ACLs on directories.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR acl (2),
.BR aclcheck (3SEC),
.BR aclsort (3SEC),
.BR acl (5),
.BR attributes (5)
