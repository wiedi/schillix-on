'\" te
.\" Copyright (c) 2005, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH acl_strip 3SEC "6 Oct 2005" "SunOS 5.11" "File Access Control Library Functions"
.SH NAME
acl_strip \- remove all ACLs from a file
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR\&.\|.\|. ] \fIfile\fR\&.\|.\|. \fB-lsec\fR [ \fIlibrary\fR\&.\|.\|. ]
#include <sys/acl.h>

\fBint\fR \fBacl_strip\fR(\fBconst char *\fIpath\fR, \fBuid_t\fR \fIuid\fR, \fBgid_t\fR \fIgid\fR, \fBmode_t\fR \fImode\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B acl_strip()
function removes all ACLs from a file and replaces
them with a trivial ACL based on the
.I mode
argument. After replacing
the ACL, the owner and group of the file are set to the values specified by
the
.I uid
and
.I gid
arguments.
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B acl_strip()
returns 0. Otherwise it
returns -1 and sets
.B errno
to indicate the error.
.SH ERRORS
.sp
.LP
The
.B acl_strip()
function will fail if:
.sp
.ne 2
.mk
.na
.B EACCES
.ad
.RS 16n
.rt
Search permission is denied on a component of the path prefix of
.IR path .
.RE

.sp
.ne 2
.mk
.na
.B EFAULT
.ad
.RS 16n
.rt
The
.I path
argument points to an illegal address.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 16n
.rt
The
.I uid
or
.I gid
argument is out of range.
.RE

.sp
.ne 2
.mk
.na
.B EIO
.ad
.RS 16n
.rt
A disk I/O error has occurred while storing or retrieving the ACL.
.RE

.sp
.ne 2
.mk
.na
.B ELOOP
.ad
.RS 16n
.rt
A loop exists in symbolic links encountered during the resolution of the
.I path
argument.
.RE

.sp
.ne 2
.mk
.na
.B ENAMETOOLONG
.ad
.RS 16n
.rt
The length of the
.I path
argument  exceeds {\fBPATH_MAX\fR},  or the
length of a path component exceeds {\fBNAME_MAX\fR} while
.B _POSIX_NO_TRUNC
is in effect.
.RE

.sp
.ne 2
.mk
.na
.B ENOENT
.ad
.RS 16n
.rt
A component of
.I path
does not exist.
.RE

.sp
.ne 2
.mk
.na
.B ENOTDIR
.ad
.RS 16n
.rt
A component of the prefix of
.I path
is not a directory.
.RE

.sp
.ne 2
.mk
.na
.B EPERM
.ad
.RS 16n
.rt
The effective user ID does not match the owner of the file and the process
does not have appropriate privileges.
.RE

.sp
.ne 2
.mk
.na
.B EROFS
.ad
.RS 16n
.rt
The file system is mounted read-only.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityEvolving
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR acl_get (3SEC),
.BR acl_trivial (3SEC),
.BR acl (5),
.BR attributes (5)
