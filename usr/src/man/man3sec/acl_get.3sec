'\" te
.\" Copyright (c) 2005, Sun Microsystems, Inc. All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH acl_get 3SEC "6 Oct 2005" "SunOS 5.11" "File Access Control Library Functions"
.SH NAME
acl_get, facl_get, acl_set, facl_set \- get or set a file's Access Control
List (ACL)
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR\&.\|.\|. ] \fIfile\fR\&.\|.\|. \fB-lsec\fR [ \fIlibrary\fR\&.\|.\|. ]
#include <sys/acl.h>

\fBint *\fBacl_get\fR(\fBconst char *\fIpath\fR, \fBint\fR \fIflag\fR, \fBacl_t **\fIaclp\fR);
.fi

.LP
.nf
\fBint *\fBfacl_get\fR(\fBint\fR \fIfd\fR, \fBint\fR \fIflag\fR, \fBacl_t **\fIaclp\fR);
.fi

.LP
.nf
\fBint\fR \fBacl_set\fR(\fBconst char *\fIpath\fR, \fBacl_t *\fIaclp\fR);
.fi

.LP
.nf
\fBint\fR \fBfacl_set\fR(\fBint\fR \fIfd\fR, \fBacl_t *\fIaclp\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B acl_get()
and \fBfacl_get()\fR functions retrieve an Access
Control List (ACL) of a file whose name is given by
.I path
or referenced
by the open file descriptor
.IR fd .
The \fIflag\fR argument specifies
whether a trivial ACL should be retrieved. When the \fIflag\fR argument is
.BR ACL_NO_TRIVIAL ,
only ACLs that are not trivial will be retrieved. The
ACL is returned in the
.I aclp
argument.
.sp
.LP
The
.B acl_set()
and \fBfacl_set()\fR functions are used for setting an
ACL of a file whose name is given by
.I path
or referenced by the open
file descriptor
.IR fd .
The
.I aclp
argument specifies the ACL to
set.
.sp
.LP
The
.B acl_get()
and
.B acl_set()
functions support multiple types of
ACLs. When possible, the
.B acl_set()
function translates an ACL to the
target file's style of ACL. Currently this is only possible when translating
from a POSIX-draft ACL such as on UFS to a file system that supports NFSv4
ACL semantics such as ZFS or NFSv4.
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B acl_get()
and \fBfacl_get()\fR return 0
and
.I aclp
is non-\fINULL\fR. The \fIaclp\fR argument can be \fINULL\fR
after successful completion if the file had a trivial ACL and the \fIflag\fR
argument was
.BR ACL_NO_TRIVIAL .
.RB "Otherwise, -1 is returned and" " errno"
is set to indicate the error.
.sp
.LP
Upon successful completion,
.B acl_set()
and \fBfacl_set()\fR return 0.
Otherwise, -1 is returned and
.B errno
is set to indicate the error.
.SH ERRORS
.sp
.LP
These functions will fail if:
.sp
.ne 2
.mk
.na
.B EACCES
.ad
.RS 11n
.rt
The caller does not have access to a component of
.IR path .
.RE

.sp
.ne 2
.mk
.na
.B EIO
.ad
.RS 11n
.rt
A disk I/O error has occured while retrieving the ACL.
.RE

.sp
.ne 2
.mk
.na
.B ENOENT
.ad
.RS 11n
.rt
A component of the
.I path
does not exist.
.RE

.sp
.ne 2
.mk
.na
.B ENOSYS
.ad
.RS 11n
.rt
The file system does not support ACLs.
.RE

.sp
.ne 2
.mk
.na
.B ENOTSUP
.ad
.RS 11n
.rt
The ACL supplied could not be translated to an NFSv4 ACL.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityEvolving
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR chmod (1),
.BR acl (2),
.BR acl (5),
.BR attributes (5)
