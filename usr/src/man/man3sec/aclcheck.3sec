'\" te
.\" Copyright (c) 2001, Sun Microsystems, Inc.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH aclcheck 3SEC "10 Dec 2001" "SunOS 5.11" "File Access Control Library Functions"
.SH NAME
aclcheck \- check the validity of an ACL
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lsec\fR [ \fIlibrary\fR.\|.\|. ]
#include <sys/acl.h>

\fBint\fR \fBaclcheck\fR(\fBaclent_t *\fIaclbufp\fR, \fBint\fR \fInentries\fR, \fBint *\fIwhich\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B aclcheck()
function checks the validity of an
.B ACL
pointed
to by \fIaclbufp.\fR The \fInentries\fR argument is the number of entries
contained in the buffer. The
.I which
parameter returns the index of the
first entry that is invalid.
.sp
.LP
The function verifies that an
.B ACL
pointed to by \fIaclbufp\fR is
valid according to the following rules:
.RS +4
.TP
.ie t \(bu
.el o
There must be exactly one
.B "GROUP_OBJ ACL"
entry.
.RE
.RS +4
.TP
.ie t \(bu
.el o
There must be exactly one
.B "USER_OBJ ACL"
entry.
.RE
.RS +4
.TP
.ie t \(bu
.el o
There must be exactly one
.B "OTHER_OBJ ACL"
entry.
.RE
.RS +4
.TP
.ie t \(bu
.el o
If there are any
.B "GROUP ACL"
entries, then the group
.B ID
in
each group
.B ACL
entry must be unique.
.RE
.RS +4
.TP
.ie t \(bu
.el o
If there are any
.B "USER ACL"
entries, then the user
.B ID
in
each user
.B ACL
entry must be unique.
.RE
.RS +4
.TP
.ie t \(bu
.el o
If there are any
.B GROUP
or
.B "USER ACL"
entries, then there
must be exactly one
.B CLASS_OBJ
(\fBACL\fR mask) entry.
.RE
.RS +4
.TP
.ie t \(bu
.el o
If there are any default
.B ACL
entries, then the following apply:
.RS +4
.TP
.ie t \(bu
.el o
There must be exactly one default
.B "GROUP_OBJ ACL"
entry.
.RE
.RS +4
.TP
.ie t \(bu
.el o
There must be exactly one default
.B "OTHER_OBJ ACL"
entry.
.RE
.RS +4
.TP
.ie t \(bu
.el o
There must be exactly one default
.B "USER_OBJ ACL"
entry.
.RE
.RS +4
.TP
.ie t \(bu
.el o
If there are any
.B DEF_GROUP
entries, then the group
.B ID
in each
\fBDEF_GROUP ACL\fR entry must be unique.
.RE
.RS +4
.TP
.ie t \(bu
.el o
If there are any
.B DEF_USER
entries, then the user
.B ID
in each
\fBDEF_USER ACL\fR entry must be unique.
.RE
.RS +4
.TP
.ie t \(bu
.el o
If there are any
.B DEF_GROUP
or
.B DEF_USER
entries, then there must
be exactly one
.B DEF_CLASS_OBJ
(default
.B ACL
mask) entry.
.RE
.RE
.RS +4
.TP
.ie t \(bu
.el o
If any of the above rules are violated, then the function fails with
\fBerrno\fR set to
.BR EINVAL .
.RE
.SH RETURN VALUES
.sp
.LP
If the
.B ACL
is valid,
.B alcheck()
will return
.BR 0 .
Otherwise
\fBerrno\fR is set to \fBEINVAL\fR and return code is set to one of the
following:
.sp
.ne 2
.mk
.na
.B GRP_ERROR
.ad
.RS 19n
.rt
There is more than one
.B GROUP_OBJ
or
.BR "DEF_GROUP_OBJ ACL"
entry.
.RE

.sp
.ne 2
.mk
.na
.B USER_ERROR
.ad
.RS 19n
.rt
There is more than one
.B USER_OBJ
or
.BR "DEF_USER_OBJ ACL"
entry.
.RE

.sp
.ne 2
.mk
.na
.B CLASS_ERROR
.ad
.RS 19n
.rt
There is more than one
.B CLASS_OBJ
(\fBACL\fR mask) or
\fBDEF_CLASS_OBJ\fR (default \fBACL\fR mask) entry.
.RE

.sp
.ne 2
.mk
.na
.B OTHER_ERROR
.ad
.RS 19n
.rt
There is more than one
.B OTHER_OBJ
or
.BR "DEF_OTHER_OBJ ACL"
entry.
.RE

.sp
.ne 2
.mk
.na
.B DUPLICATE_ERROR
.ad
.RS 19n
.rt
Duplicate entries of
.BR USER ,
.BR GROUP ,
.BR DEF_USER ,
or
.BR DEF_GROUP .
.RE

.sp
.ne 2
.mk
.na
.B ENTRY_ERROR
.ad
.RS 19n
.rt
The entry type is invalid.
.RE

.sp
.ne 2
.mk
.na
.B MISS_ERROR
.ad
.RS 19n
.rt
Missing an entry. The
.I which
parameter returns \fB\(mi1\fR in this
case.
.RE

.sp
.ne 2
.mk
.na
.B MEM_ERROR
.ad
.RS 19n
.rt
The system cannot allocate any memory. The
.B which
parameter returns
\fB\(mi1\fR in this case.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityEvolving
_
MT-LevelUnsafe
.TE

.SH SEE ALSO
.sp
.LP
.BR acl (2),
.BR aclsort (3SEC),
.BR attributes (5)
