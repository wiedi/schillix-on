'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mlib_ImageColorTrue2IndexInit 3MLIB "2 Mar 2007" "SunOS 5.11" "mediaLib Library Functions"
.SH NAME
mlib_ImageColorTrue2IndexInit \- initialization for true color to indexed
color conversion
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lmlib\fR [ \fIlibrary\fR.\|.\|. ]
#include <mlib.h>

\fBmlib_status\fR \fBmlib_ImageColorTrue2IndexInit\fR(\fBvoid **\fIcolormap\fR, \fBmlib_s32\fR \fIbits\fR,
     \fBmlib_type\fR \fIintype\fR, \fBmlib_type\fR \fIouttype\fR, \fBmlib_s32\fR \fIchannels\fR,
     \fBmlib_s32\fR \fIentries\fR, \fBmlib_s32\fR \fIoffset\fR, \fBconst void **\fItable\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B mlib_ImageColorTrue2IndexInit()
function creates and initializes
an internal data structure based on the input lookup table and other
parameters for inverse color mapping.
.sp
.LP
The lookup table can have either three or four channels. The number of
channels of the lookup table should match that of the source image provided
to the function that will use the
.I colormap
structure created by this
function.
.sp
.LP
The type of the lookup table can be one of the following:
.sp
.in +2
.nf
MLIB_BYTE in, MLIB_BYTE out (i.e., BYTE-to-BYTE)
MLIB_SHORT in, MLIB_SHORT out (i.e., SHORT-to-SHORT)
MLIB_SHORT in, MLIB_BYTE out (i.e., SHORT-to-BYTE)
.fi
.in -2

.sp
.LP
The input type of the lookup table should match the type of the destination
image; the output type of the lookup table should match the source image
type. The source and destination images are the images provided to the
function that is going to use the
.I colormap
structure created by
.B mlib_ImageColorTrue2IndexInit()
to do inverse color mapping.
.SH PARAMETERS
.sp
.LP
The function takes the following arguments:
.sp
.ne 2
.mk
.na
.I colormap
.ad
.RS 12n
.rt
Internal data structure for inverse color mapping.
.RE

.sp
.ne 2
.mk
.na
.I bits
.ad
.RS 12n
.rt
Number of bits per color component used in the colorcube of the colormap
structure. (If
.BR "bits = 0" ,
then no colorcube is created. But the inverse
color mapping might be done by using the original lookup table.)
.RE

.sp
.ne 2
.mk
.na
.I intype
.ad
.RS 12n
.rt
Data type of the source image and lookup table.
.RE

.sp
.ne 2
.mk
.na
.I outtype
.ad
.RS 12n
.rt
Data type of the destination indexed image.
.RE

.sp
.ne 2
.mk
.na
.I channels
.ad
.RS 12n
.rt
Number of channels of the lookup table.
.RE

.sp
.ne 2
.mk
.na
.I entries
.ad
.RS 12n
.rt
Number of entries of the lookup table.
.RE

.sp
.ne 2
.mk
.na
.I offset
.ad
.RS 12n
.rt
The first entry offset of the lookup table.
.RE

.sp
.ne 2
.mk
.na
.I table
.ad
.RS 12n
.rt
The lookup table (LUT).
.RE

.SH RETURN VALUES
.sp
.LP
The function returns
.B MLIB_SUCCESS
if successful. Otherwise it returns
.BR MLIB_FAILURE .
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR mlib_ImageColorErrorDiffusion3x3 (3MLIB),
.BR mlib_ImageColorOrderedDither8x8 (3MLIB),
.BR mlib_ImageColorTrue2Index (3MLIB),
.BR mlib_ImageColorTrue2IndexFree (3MLIB),
.BR attributes (5)
