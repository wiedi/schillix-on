'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mlib_VolumeFindMaxBMask_U8 3MLIB "2 Mar 2007" "SunOS 5.11" "mediaLib Library Functions"
.SH NAME
mlib_VolumeFindMaxBMask_U8, mlib_VolumeFindMaxBMask_S16 \- maximum
intensity searching
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lmlib\fR [ \fIlibrary\fR.\|.\|. ]
#include <mlib.h>

\fBmlib_status\fR \fBmlib_VolumeFindMaxBMask_U8\fR(\fBmlib_u8 *\fImax\fR,
     \fBconst mlib_rays *\fIrays\fR, \fBconst mlib_u8 *\fIbmask\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_VolumeFindMaxBMask_S16\fR(\fBmlib_s16 *\fImax\fR,
     \fBconst mlib_rays *\fIrays\fR, \fBconst mlib_u8 *\fIbmask\fR);
.fi

.SH DESCRIPTION
.sp
.LP
Each function performs maximum intensity searching.
.sp
.LP
It uses the following equation:
.sp
.in +2
.nf
max[i] = MAX{ rays->results[j][i]
              j = 0, 1, .\|.\|., rays->nsteps[i]; bmask[j] = 1 }
.fi
.in -2

.sp
.LP
where \fBi = 0, 1, .\|.\|., rays->nrays - 1\fR.
.SH PARAMETERS
.sp
.LP
The function takes the following arguments:
.sp
.ne 2
.mk
.na
.I max
.ad
.RS 9n
.rt
Pointer to an array of
.B rays->nrays
maximum values of the samples in
each ray.
.RE

.sp
.ne 2
.mk
.na
.I rays
.ad
.RS 9n
.rt
Pointer to an
.B mlib_rays
structure. The data
.B rays->results
are
organized with ray number (rather than ray step) varying fastest. Ray number
and ray step are the output of the ray casting functions. The data might
have values beyond the maximum step on a ray. For example,
\fBrays->results[rays->nsteps[i]][i]\fR on ray \fBi\fR might not equal
.BR 0 .
.RE

.sp
.ne 2
.mk
.na
.I bmask
.ad
.RS 9n
.rt
Pointer to a 1-bit mask array. Eight mask bits are packed into one byte. A
\fB1\fR corresponds to the data in the step to be considered.
.RE

.SH RETURN VALUES
.sp
.LP
The function returns
.B MLIB_SUCCESS
if successful. Otherwise it returns
.BR MLIB_FAILURE .
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR mlib_VolumeFindMax_U8 (3MLIB),
.BR mlib_VolumeFindMaxCMask_U8 (3MLIB),
.BR attributes (5)
