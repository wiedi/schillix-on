'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mlib_VectorReverseByteOrder_S16_S16 3MLIB "2 Mar 2007" "SunOS 5.11" "mediaLib Library Functions"
.SH NAME
mlib_VectorReverseByteOrder_S16_S16, mlib_VectorReverseByteOrder_U16_U16,
mlib_VectorReverseByteOrder_S32_S32, mlib_VectorReverseByteOrder_U32_U32,
mlib_VectorReverseByteOrder_S64_S64, mlib_VectorReverseByteOrder_U64_U64,
mlib_VectorReverseByteOrder_F32_F32, mlib_VectorReverseByteOrder_D64_D64 \-
reverse byte order of vector
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR... ] \fIfile\fR... \fB-lmlib\fR [ \fIlibrary\fR... ]
#include <mlib.h>

\fBmlib_status\fR \fBmlib_VectorReverseByteOrder_S16_S16\fR(\fBmlib_s16 *\fIz\fR,
      \fBconst mlib_s16 *\fIx\fR, \fBmlib_s32\fR \fIn\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_VectorReverseByteOrder_U16_U16\fR(\fBmlib_u16 *\fIz\fR,
     \fBconst mlib_u16 *\fIx\fR, \fBmlib_s32\fR \fIn\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_VectorReverseByteOrder_S32_S32\fR(\fBmlib_s32 *\fIz\fR,
     \fBconst mlib_s32 *\fIx\fR, \fBmlib_s32\fR \fIn\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_VectorReverseByteOrder_U32_U32\fR(\fBmlib_u32 *\fIz\fR,
     \fBconst mlib_u32 *\fIx\fR, \fBmlib_s32\fR \fIn\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_VectorReverseByteOrder_S64_S64\fR(\fBmlib_s64 *\fIz\fR,
     \fBconst mlib_s64 *\fIx\fR, \fBmlib_s32\fR \fIn\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_VectorReverseByteOrder_U64_U64\fR(\fBmlib_u64 *\fIz\fR,
     \fBconst mlib_u64 *\fIx\fR, \fBmlib_s32\fR \fIn\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_VectorReverseByteOrder_F32_F32\fR(\fBmlib_f32 *\fIz\fR,
     \fBconst mlib_f32 *\fIx\fR, \fBmlib_s32\fR \fIn\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_VectorReverseByteOrder_D64_D64\fR(\fBmlib_d64 *\fIz\fR,
     \fBconst mlib_d64 *\fIx\fR,  \fBmlib_s32\fR \fIn\fR);
.fi

.SH DESCRIPTION
.sp
.LP
Each of these functions changes the encoding of each element from big
endian to little endian, or from little endian to big endian.
.sp
.LP
It copies and reverses the byte order of each element of the input vector
into the output vector.
.SH PARAMETERS
.sp
.LP
Each of the functions takes the following arguments:
.sp
.ne 2
.mk
.na
\fIz\fR
.ad
.RS 5n
.rt
Pointer to the output vector.
.RE

.sp
.ne 2
.mk
.na
\fIx\fR
.ad
.RS 5n
.rt
Pointer to input vector.
.RE

.sp
.ne 2
.mk
.na
\fIn\fR
.ad
.RS 5n
.rt
Number of elements in the vectors.
.RE

.SH RETURN VALUES
.sp
.LP
Each of the functions returns \fBMLIB_SUCCESS\fR if successful. Otherwise
it returns \fBMLIB_FAILURE\fR.
.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
\fBmlib_VectorReverseByteOrder\fR(3MLIB),
\fBmlib_VectorReverseByteOrder_Inp\fR(3MLIB), \fBmlib_VectorReverseByteOrder_S16\fR(3MLIB),
\fBattributes\fR(5)
