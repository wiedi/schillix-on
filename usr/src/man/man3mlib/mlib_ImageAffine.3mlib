'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mlib_ImageAffine 3MLIB "2 Mar 2007" "SunOS 5.11" "mediaLib Library Functions"
.SH NAME
mlib_ImageAffine \- image affine transformation
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR... ] \fIfile\fR... \fB-lmlib\fR [ \fIlibrary\fR... ]
#include <mlib.h>

\fBmlib_status\fR \fBmlib_ImageAffine\fR(\fBmlib_image *\fIdst\fR, \fBconst mlib_image *\fIsrc\fR,
     \fBconst mlib_d64 *\fImtx\fR, \fBmlib_filter\fR \fIfilter\fR, \fBmlib_edge\fR \fIedge\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The \fBmlib_ImageAffine()\fR function does affine transformation on an
image according to the following equation:
.sp
.in +2
.nf
xd = a*xs + b*ys + tx
yd = c*xs + d*ys + ty
.fi
.in -2

.sp
.LP
where a point with coordinates \fB(xs, ys)\fR in the source image is mapped
to a point with coordinates \fB(xd, yd)\fR in the destination image.
.sp
.LP
The data type of the images can be \fBMLIB_BIT\fR, \fBMLIB_BYTE\fR,
\fBMLIB_SHORT\fR, \fBMLIB_USHORT\fR, or \fBMLIB_INT\fR.
.sp
.LP
The width and height of the destination image can be different from the
width and height of the source image.
.sp
.LP
The center of the upper-left corner pixel of an image is located at
\fB(0.5, 0.5)\fR.
.SH PARAMETERS
.sp
.LP
The function takes the following arguments:
.sp
.ne 2
.mk
.na
\fIdst\fR
.ad
.RS 10n
.rt
Pointer to destination image.
.RE

.sp
.ne 2
.mk
.na
\fIsrc\fR
.ad
.RS 10n
.rt
Pointer to source image.
.RE

.sp
.ne 2
.mk
.na
\fImtx\fR
.ad
.RS 10n
.rt
Transformation matrix. \fBmtx[0]\fR holds \fBa\fR; \fBmtx[1]\fR holds
\fBb\fR; \fBmtx[2]\fR holds \fBtx\fR; \fBmtx[3]\fR holds \fBc\fR;
\fBmtx[4]\fR holds \fBd\fR; \fBmtx[5]\fR holds \fBty\fR.
.RE

.sp
.ne 2
.mk
.na
\fIfilter\fR
.ad
.RS 10n
.rt
Type of resampling filter. It can be one of the following:
.sp
.in +2
.nf
MLIB_NEAREST
MLIB_BILINEAR
MLIB_BICUBIC
MLIB_BICUBIC2
.fi
.in -2

.RE

.sp
.ne 2
.mk
.na
\fIedge\fR
.ad
.RS 10n
.rt
Type of edge condition. It can be one of the following:
.sp
.in +2
.nf
MLIB_EDGE_DST_NO_WRITE
MLIB_EDGE_DST_FILL_ZERO
MLIB_EDGE_OP_NEAREST
MLIB_EDGE_SRC_EXTEND
MLIB_EDGE_SRC_PADDED
.fi
.in -2

.RE

.SH RETURN VALUES
.sp
.LP
The function returns \fBMLIB_SUCCESS\fR if successful. Otherwise it returns
\fBMLIB_FAILURE\fR.
.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
\fBmlib_ImageAffine_Fp\fR(3MLIB), \fBmlib_ImageAffineIndex\fR(3MLIB),
\fBmlib_ImageAffineTransform\fR(3MLIB), \fBmlib_ImageAffineTransform_Fp\fR(3MLIB),
\fBmlib_ImageAffineTransformIndex\fR(3MLIB),
\fBmlib_ImageSetPaddings\fR(3MLIB), \fBattributes\fR(5)
