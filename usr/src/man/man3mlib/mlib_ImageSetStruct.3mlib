'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mlib_ImageSetStruct 3MLIB "2 Mar 2007" "SunOS 5.11" "mediaLib Library Functions"
.SH NAME
mlib_ImageSetStruct \- set image data structure
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lmlib\fR [ \fIlibrary\fR.\|.\|. ]
#include <mlib.h>

\fBmlib_status\fR \fBmlib_ImageSetStruct\fR(\fBmlib_image *\fIimage\fR, \fBmlib_type\fR \fItype\fR,
     \fBmlib_s32\fR \fIchannels\fR, \fBmlib_s32\fR \fIwidth\fR, \fBmlib_s32\fR \fIheight\fR, \fBmlib_s32\fR \fIstride\fR,
     \fBconst void *\fIdatbuf\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B mlib_ImageSetStruct()
function sets a mediaLib image data
structure using parameters supplied by the user.
.sp
.LP
The
.B mlib_ImageSetStruct()
function returns
.B MLIB_FAILURE
if the
supplied parameters do not pass the following sanity checks:
.RS +4
.TP
.ie t \(bu
.el o
.B image
should not be
.BR NULL
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B type
should be
.BR MLIB_BIT ,
.BR MLIB_BYTE ,
.BR MLIB_SHORT ,
.BR MLIB_USHORT ,
.BR MLIB_INT ,
.BR MLIB_FLOAT ,
or
.BR MLIB_DOUBLE
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B channels
should be between 1 and 4
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B width
should be greater than 0
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B height
should be greater than 0
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B stride
should be no less than
.B
width * channels * (size of type in bytes)
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B datbuf
should not be
.BR NULL
.RE
.sp
.LP
Whenever
.B MLIB_FAILURE
is returned, the original image data structure
is not changed.
.sp
.LP
If the data buffer in the image data structure is not
.BR NULL ,
it is the
user's responsibility to free it if necessary.
.SH PARAMETERS
.sp
.LP
The function takes the following arguments:
.sp
.ne 2
.mk
.na
.I image
.ad
.RS 12n
.rt
Pointer to the image data structure.
.RE

.sp
.ne 2
.mk
.na
.I type
.ad
.RS 12n
.rt
Image data type. It can be
.BR MLIB_BIT ,
.BR MLIB_BYTE ,
.BR MLIB_SHORT ,
.BR MLIB_USHORT ,
.BR MLIB_INT ,
.BR MLIB_FLOAT ,
or
.BR MLIB_DOUBLE .
.RE

.sp
.ne 2
.mk
.na
.I channels
.ad
.RS 12n
.rt
Number of channels in the image.
.RE

.sp
.ne 2
.mk
.na
.I width
.ad
.RS 12n
.rt
Width of image in pixels.
.RE

.sp
.ne 2
.mk
.na
.I height
.ad
.RS 12n
.rt
Height of image in pixels.
.RE

.sp
.ne 2
.mk
.na
.I stride
.ad
.RS 12n
.rt
Stride of each row of the data space in bytes.
.RE

.sp
.ne 2
.mk
.na
.I datbuf
.ad
.RS 12n
.rt
Pointer to the image data buffer.
.RE

.SH RETURN VALUES
.sp
.LP
.B MLIB_SUCCESS
is returned if the image data structure is set
successfully.
.B MLIB_FAILURE
is returned when the image data structure
can not be set according to the parameters supplied.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR mlib_ImageCreate (3MLIB),
.BR mlib_ImageCreateSubimage (3MLIB),
.BR mlib_ImageCreateStruct (3MLIB),
.BR mlib_ImageResetStruct (3MLIB),
.BR mlib_ImageDelete (3MLIB),
.BR mlib_ImageSetFormat (3MLIB),
.BR mlib_ImageSetPaddings (3MLIB),
.BR attributes (5)
