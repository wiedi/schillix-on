'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mlib_SignalFFT_4 3MLIB "2 Mar 2007" "SunOS 5.11" "mediaLib Library Functions"
.SH NAME
mlib_SignalFFT_4, mlib_SignalFFT_4_S16_S16, mlib_SignalFFT_4_S16C_S16C,
mlib_SignalFFT_4_S16C_S16, mlib_SignalFFT_4_S16, mlib_SignalFFT_4_S16C \-
signal Fast Fourier Transform (FFT)
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lmlib\fR [ \fIlibrary\fR.\|.\|. ]
#include <mlib.h>

\fBmlib_status\fR \fBmlib_SignalFFT_4_S16_S16\fR(\fBmlib_s16 *\fIdstr\fR, \fBmlib_s16 *\fIdsti\fR,
     \fBconst mlib_s16 *\fIsrcr\fR, \fBconst mlib_s16 *\fIsrci\fR, \fBmlib_s32\fR \fIorder\fR,
    \fBmlib_s32 *\fIscale\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_SignalFFT_4_S16C_S16C\fR(\fBmlib_s16 *\fIdstc\fR,
     \fBconst mlib_s16 *\fIsrcc\fR,
     \fBmlib_s32\fR \fIorder\fR, \fBmlib_s32 *\fIscale\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_SignalFFT_4_S16C_S16\fR(\fBmlib_s16 *\fIdstc\fR,
     \fBconst mlib_s16 *\fIsrcr\fR,
     \fBmlib_s32\fR \fIorder\fR, \fBmlib_s32 *\fIscale\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_SignalFFT_4_S16\fR(\fBmlib_s16 *\fIsrcdstr\fR, \fBmlib_s16 *\fIsrcdsti\fR,
     \fBmlib_s32\fR \fIorder\fR, \fBmlib_s32 *\fIscale\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_SignalFFT_4_S16C\fR(\fBmlib_s16 *\fIsrcdstc\fR, \fBmlib_s32\fR \fIorder\fR,
     \fBmlib_s32 *\fIscale\fR);
.fi

.SH DESCRIPTION
.sp
.LP
Each of the functions in this group performs Fast Fourier Transform
(FFT).
.sp
.LP
The following equation is used for forward FFT:
.sp
.in +2
.nf
          1   N-1
dst[k] = ---- SUM {src[n] * exp(-j2*PI*n*k/N)}
          C1  n=0
.fi
.in -2

.sp
.LP
and the following equation is used for inverse FFT (IFFT):
.sp
.in +2
.nf
          1   N-1
dst[n] = ---- SUM {src[k] * exp(j2*PI*n*k/N)}
          C2  k=0
.fi
.in -2

.sp
.LP
where
.sp
.in +2
.nf
k = 0, 1, .\|.\|., (N - 1)
n = 0, 1, .\|.\|., (N - 1)
N = 2**order
.fi
.in -2

.sp
.LP
The signal FFT/IFFT functions can be categorized into four groups according
to the
.B ScaleMode
in the function names in the following form:
.sp
.in +2
.nf
mlib_Signal[FFT|IFFT]_ScaleMode_OutType_InType_OpMode()
mlib_Signal[FFT|IFFT]_ScaleMode_DataType_OpMode()
.fi
.in -2

.sp
.LP
The scaling factors C1 and C2 used in the equations are defined as
follows:
.RS +4
.TP
.ie t \(bu
.el o
For
.BR "ScaleMode = 1" ,
.B C1 = 1
and
.BR "C2 = 2**order" .
.RE
.RS +4
.TP
.ie t \(bu
.el o
For
.BR "ScaleMode = 2" ,
.B C1 = 2**order
and
.BR "C2 = 1" .
.RE
.RS +4
.TP
.ie t \(bu
.el o
For
.BR "ScaleMode = 3" ,
.B C1 = C2 = 2**(order/2)
when
.B order
is
even, or
.B "C1 = 2**((order+1)/2)"
and
.B "C2 = 2**((order-1)/2)"
when
.B order
is odd.
.RE
.RS +4
.TP
.ie t \(bu
.el o
For
.BR "ScaleMode = 4" ,
.B C1 = 2**P
and
.BR "C2 = 2**Q" ,
where
.BR P
and
.B Q
are adaptive scaling factors and are generated by the
functions.
.RE
.sp
.LP
For functions with only real parts for the source signal, the imaginary
parts are assumed to be all zero. For functions with only real parts for the
destination signal, the imaginary parts are discarded. The functions with
only one data type in their names perform the operation in place.
.SH PARAMETERS
.sp
.LP
Each function takes some of the following arguments:
.sp
.ne 2
.mk
.na
.I dstr
.ad
.RS 11n
.rt
Destination signal array that contains the real parts.
.RE

.sp
.ne 2
.mk
.na
.I dsti
.ad
.RS 11n
.rt
Destination signal array that contains the imaginary parts.
.RE

.sp
.ne 2
.mk
.na
.I srcr
.ad
.RS 11n
.rt
Source signal array that contains the real parts.
.RE

.sp
.ne 2
.mk
.na
.I srci
.ad
.RS 11n
.rt
Source signal array that contains the imaginary parts.
.RE

.sp
.ne 2
.mk
.na
.I dstc
.ad
.RS 11n
.rt
Complex destination signal array.
.B dstc[2*i]
contains the real parts,
and
.B dstc[2*i+1]
contains the imaginary parts.
.RE

.sp
.ne 2
.mk
.na
.I srcc
.ad
.RS 11n
.rt
Complex source signal array.
.B srcc[2*i]
contains the real parts, and
.B srcc[2*i+1]
contains the imaginary parts.
.RE

.sp
.ne 2
.mk
.na
.I srcdstr
.ad
.RS 11n
.rt
Source and destination signal array that contains the real parts.
.RE

.sp
.ne 2
.mk
.na
.I srcdsti
.ad
.RS 11n
.rt
Source and destination signal array that contains the imaginary parts.
.RE

.sp
.ne 2
.mk
.na
.I srcdstc
.ad
.RS 11n
.rt
Complex source and destination signal array.
.B srcdstc[2*i]
contains
the real parts, and
.B srcdstc[2*i+1]
contains the imaginary parts.
.RE

.sp
.ne 2
.mk
.na
.I order
.ad
.RS 11n
.rt
Order of the transformation. The base-2 logarithm of the number of data
samples.
.RE

.sp
.ne 2
.mk
.na
.I scale
.ad
.RS 11n
.rt
Adaptive scaling factor.
.RE

.SH RETURN VALUES
.sp
.LP
The function returns
.B MLIB_SUCCESS
if successful. Otherwise it returns
.BR MLIB_FAILURE .
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR mlib_SignalFFT_1 (3MLIB),
.BR mlib_SignalFFT_2 (3MLIB),
.BR mlib_SignalFFT_3 (3MLIB),
.BR mlib_SignalIFFT_1 (3MLIB),
.BR mlib_SignalIFFT_2 (3MLIB),
.BR mlib_SignalIFFT_3 (3MLIB),
.BR mlib_SignalIFFT_4 (3MLIB),
.BR attributes (5)
