'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved 
.\" The contents of this file are subject to the terms of the Common Development and Distribution License (the "License").  You may not use this file except in compliance with the License.
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE or http://www.opensolaris.org/os/licensing.  See the License for the specific language governing permissions and limitations under the License.
.\" When distributing Covered Code, include this CDDL HEADER in each file and include the License file at usr/src/OPENSOLARIS.LICENSE.  If applicable, add the following below this CDDL HEADER, with the fields enclosed by brackets "[]" replaced with your own identifying information: Portions Copyright [yyyy] [name of copyright owner]
.TH mlib_ImageDivShift 3MLIB "2 Mar 2007" "SunOS 5.11" "mediaLib Library Functions"
.SH NAME
mlib_ImageDivShift \- division with shifting
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR... ] \fIfile\fR... \fB-lmlib\fR [ \fIlibrary\fR... ]
#include <mlib.h>

\fBmlib_status\fR \fBmlib_ImageDivShift\fR(\fBmlib_image *\fR\fIdst\fR, \fBconst mlib_image *\fR\fIsrc1\fR,
     \fBconst mlib_image *\fR\fIsrc2\fR, \fBmlib_s32\fR \fIshift\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The \fBmlib_ImageDivShift()\fR function divides the second source image into the first source image on a pixel-by-pixel basis. It scales the result by a left shift and writes the result to the destination image on a pixel-by-pixel basis.
.sp
.LP
It uses the following equation:
.sp
.in +2
.nf
dst[x][y][i] = src1[x][y][i] / src2[x][y][i] * 2**shift
.fi
.in -2

.sp
.LP
In the case of src2[x][y][i] = 0,
.sp
.in +2
.nf
dst[x][y][i] = 0              if src1[x][y][i] = 0
dst[x][y][i] = DATA_TYPE_MAX  if src1[x][y][i] > 0
dst[x][y][i] = DATA_TYPE_MIN  if src1[x][y][i] < 0
.fi
.in -2

.sp
.LP
where \fBDATA_TYPE\fR is \fBMLIB_U8\fR, \fBMLIB_S16\fR, \fBMLIB_U16\fR, or \fBMLIB_S32\fR for an image of type \fBMLIB_BYTE\fR, \fBMLIB_SHORT\fR, \fBMLIB_USHORT\fR, or \fBMLIB_INT\fR, respectively.
.SH PARAMETERS
.sp
.LP
The function takes the following arguments:
.sp
.ne 2
.mk
.na
\fB\fIdst\fR\fR
.ad
.RS 9n
.rt  
Pointer to destination image.
.RE

.sp
.ne 2
.mk
.na
\fB\fIsrc1\fR\fR
.ad
.RS 9n
.rt  
Pointer to first source image.
.RE

.sp
.ne 2
.mk
.na
\fB\fIsrc2\fR\fR
.ad
.RS 9n
.rt  
Pointer to second source image.
.RE

.sp
.ne 2
.mk
.na
\fB\fIshift\fR\fR
.ad
.RS 9n
.rt  
Left shifting factor. \fB0 \(<= shift \(<= 31\fR.
.RE

.SH RETURN VALUES
.sp
.LP
The function returns \fBMLIB_SUCCESS\fR if successful. Otherwise it returns \fBMLIB_FAILURE\fR.
.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
\fBmlib_ImageDivShift1_Inp\fR(3MLIB), \fBmlib_ImageDivShift2_Inp\fR(3MLIB), \fBattributes\fR(5)
