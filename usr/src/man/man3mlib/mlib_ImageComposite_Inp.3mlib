'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mlib_ImageComposite_Inp 3MLIB "2 Mar 2007" "SunOS 5.11" "mediaLib Library Functions"
.SH NAME
mlib_ImageComposite_Inp \- image composition, in place
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lmlib\fR [ \fIlibrary\fR.\|.\|. ]
#include <mlib.h>

\fBmlib_status\fR \fBmlib_ImageComposite_Inp\fR(\fBmlib_image *\fIsrc1dst\fR,
     \fBconst mlib_image *\fIsrc2\fR, \fBmlib_blend\fR \fIbsrc1\fR, \fBmlib_blend\fR \fIbsrc2\fR,
     \fBmlib_s32\fR \fIcmask\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B mlib_ImageComposite_Inp()
function supports digital image
composition.
.sp
.LP
It is a wrapper of the
.B mlib_ImageBlend_BSCR1_BSRC2_Inp
group of
functions and can perform various types of composition based on the
parameters passed in, whereas each function in the
\fBmlib_ImageBlend_BSCR1_BSRC2_Inp\fR group can perform only the one kind of
composition denoted by its name.
.sp
.LP
The image type must be
.BR MLIB_BYTE .
The input and output images must
contain three or four channels. For three-channel images, the alpha value is
as if the alpha value is 1.
.sp
.LP
The following are predefined blend factor types used in mediaLib image
composition functions.
.sp
.in +2
.nf
/* image blend factors */
typedef enum {
    MLIB_BLEND_ZERO,
    MLIB_BLEND_ONE,
    MLIB_BLEND_DST_COLOR,
    MLIB_BLEND_SRC_COLOR,
    MLIB_BLEND_ONE_MINUS_DST_COLOR,
    MLIB_BLEND_ONE_MINUS_SRC_COLOR,
    MLIB_BLEND_DST_ALPHA,
    MLIB_BLEND_SRC_ALPHA,
    MLIB_BLEND_ONE_MINUS_DST_ALPHA,
    MLIB_BLEND_ONE_MINUS_SRC_ALPHA,
    MLIB_BLEND_SRC_ALPHA_SATURATE
} mlib_blend;
.fi
.in -2

.sp
.LP
See the following table for the definitions of the blend factors.
.sp

.sp
.TS
tab();
cw(2.97i) cw(1.85i) cw(.67i)
lw(2.97i) lw(1.85i) lw(.67i)
.
TypeBlend Factor [*]Abbr.
_
MLIB_BLEND_ZERO(0,0,0,0)ZERO
MLIB_BLEND_ONE(1,1,1,1)ONE
MLIB_BLEND_DST_COLOR(Rd,Gd,Bd,Ad)DC
MLIB_BLEND_SRC_COLOR(Rs,Gs,Bs,As)SC
MLIB_BLEND_ONE_MINUS_DST_COLOR(1,1,1,1)-(Rd,Gd,Bd,Ad)OMDC
MLIB_BLEND_ONE_MINUS_SRC_COLOR(1,1,1,1)-(Rs,Gs,Bs,As)OMSC
MLIB_BLEND_DST_ALPHA(Ad,Ad,Ad,Ad)DA
MLIB_BLEND_SRC_ALPHA(As,As,As,As)SA
MLIB_BLEND_ONE_MINUS_DST_ALPHA(1,1,1,1)-(Ad,Ad,Ad,Ad)OMDA
MLIB_BLEND_ONE_MINUS_SRC_ALPHA(1,1,1,1)-(As,As,As,As)OMSA
MLIB_BLEND_SRC_ALPHA_SATURATE(f,f,f,1)SAS
.TE

.sp
.LP
[*]: The components of the first source image pixel are
.BR (Rd,Gd,Bd,Ad) ,
and the components of the second source pixel are
.BR (Rs,Gs,Bs,As) .
Function
.BR "f = min(As, 1-Ad)" .
The first source
image is also the destination image.
.sp
.LP
The blending formula for in-place processing is:
.sp
.in +2
.nf
Cd = Cd*D + Cs*S
.fi
.in -2

.sp
.LP
where
.B Cd
is the destination pixel
.BR (Rd,Gd,Bd,Ad) ,
\fBCs\fR is
the source pixel
.BR (Rs,Gs,Bs,As) ,
and
.B D
and
.B S
are the blend
factors for the destination and source, respectively.
.SH PARAMETERS
.sp
.LP
The function takes the following arguments:
.sp
.ne 2
.mk
.na
.I src1dst
.ad
.RS 11n
.rt
Pointer to the first source and the destination image.
.RE

.sp
.ne 2
.mk
.na
.I src2
.ad
.RS 11n
.rt
Pointer to the second source image.
.RE

.sp
.ne 2
.mk
.na
.I bsrc1
.ad
.RS 11n
.rt
Blend factor type for the first source image.
.RE

.sp
.ne 2
.mk
.na
.I bsrc2
.ad
.RS 11n
.rt
Blend factor type for the second source image.
.RE

.sp
.ne 2
.mk
.na
.I cmask
.ad
.RS 11n
.rt
Channel mask to indicate the alpha channel. Each bit of the mask represents
a channel in the image. The channel corresponding to the 1 bit is the alpha
channel. cmask must be either 0x01 or 0x08.
.RE

.SH RETURN VALUES
.sp
.LP
The function returns
.B MLIB_SUCCESS
if successful. Otherwise it returns
.BR MLIB_FAILURE .
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR mlib_ImageBlend_BSRC1_BSRC2 (3MLIB),
.BR mlib_ImageBlend_BSRC1_BSRC2_Inp (3MLIB),
.BR mlib_ImageComposite (3MLIB),
.BR attributes (5)
