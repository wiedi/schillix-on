'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mlib_ImageSubsampleBinaryToGray 3MLIB "2 Mar 2007" "SunOS 5.11" "mediaLib Library Functions"
.SH NAME
mlib_ImageSubsampleBinaryToGray \- subsamples a binary image and converts
it to a grayscale image
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lmlib\fR [ \fIlibrary\fR.\|.\|. ]
#include <mlib.h>

\fBmlib_status\fR \fBmlib_ImageSubsampleBinaryToGray\fR(\fBmlib_image *\fIdst\fR,
     \fBconst mlib_image *\fIsrc\fR, \fBmlib_d64\fR \fIxscale\fR, \fBmlib_d64\fR \fIyscale\fR,
     \fBconst mlib_u8 *\fIlutGray\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B mlib_ImageSubsampleBinaryToGray()
function subsamples a binary
(\fBMLIB_BIT\fR) image and converts it to a grayscale (\fBMLIB_BYTE\fR)
image.
.sp
.LP
The subsampling algorithm performs the scaling operation by accumulating
all the bits in the source image that correspond to the destination pixel
and, based on the x and y scaling factors, reserving consecutive indexes in
the colormap for the maximum number of gray levels possible in the
destination image. The destination image pixel values of this function are
either gray levels or indexes (if
.BR lutGray==NULL ).
.sp
.LP
For representing the source block of pixels that is used to determine
destination pixel values, the index
.B 0
represents a block with no
\fB1\fR's (all \fB0\fR's), the index \fB1\fR represents a block with a
single
.BR 1 ,
and so on. If the scaling factors require a fractional block
of source pixels to determine a destination pixel value, the block size is
rounded up. For example, if a 2.2-by-2.2 block of source pixels would be
required to determine destination pixel values, a 3-by-3 block is used,
resulting in 10 possible gray levels and therefore 10 colormap indexes,
whose values are 0 through 9.
.sp
.LP
The width and height of the source block for a destination pixel are
computed as:
.sp
.in +2
.nf
  blockX = (int)ceil(1.0/xscale);
  blockY = (int)ceil(1.0/yscale);
.fi
.in -2

.sp
.LP
If we denote a pixel's location in an image by its column number and row
number (both counted from 0), the destination pixel at
.B "(i, j)"
is
backward mapped to the source block whose upper-left corner pixel is at
.BR "(xValues[i], yValues[j])" ,
where
.sp
.in +2
.nf
  xValues[i] = (int)(i/xscale + 0.5);
  yValues[j] = (int)(j/yscale + 0.5);
.fi
.in -2

.sp
.LP
The width and height of the filled area in the destination are restricted
by
.sp
.in +2
.nf
  dstW = (int)(srcWidth * xscale);
  dstH = (int)(srcHeight * yscale);
.fi
.in -2

.sp
.LP
where
.B srcWidth
and
.B srcHeight
are width and height of the source
image.
.sp
.LP
Since the block size in source is defined from scale factors with roundup,
some blocks (the rightmost and the bottommost blocks) may overrun the border
of the source image by 1 pixel. In this case, such blocks are moved by 1
pixel to left/up direction in order to be inside of the source image.
.SH PARAMETERS
.sp
.LP
The function takes the following arguments:
.sp
.ne 2
.mk
.na
.I dst
.ad
.RS 11n
.rt
Pointer to destination image . It must be of type
.B MLIB_BYTE
and have
just one channel.
.RE

.sp
.ne 2
.mk
.na
.I src
.ad
.RS 11n
.rt
Pointer to source image. It must be of type
.B MLIB_BIT
and have just
one channel.
.RE

.sp
.ne 2
.mk
.na
.I xscale
.ad
.RS 11n
.rt
X scale factor.
.BR "0.0 < xscale \(<= 1.0" .
.RE

.sp
.ne 2
.mk
.na
.I yscale
.ad
.RS 11n
.rt
Y scale factor.
.BR "0.0 < yscale \(<= 1.0" .
.RE

.sp
.ne 2
.mk
.na
.I lutGray
.ad
.RS 11n
.rt
Pointer to a grayscale lookup-table.
.RE

.SH RETURN VALUES
.sp
.LP
The function returns
.B MLIB_SUCCESS
if successful. Otherwise it returns
.BR MLIB_FAILURE .
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR mlib_ImageZoomTranslateToGray (3MLIB),
.BR mlib_ImageSubsampleAverage (3MLIB),
.BR attributes (5)
