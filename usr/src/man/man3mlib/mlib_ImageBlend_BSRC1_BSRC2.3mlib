'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mlib_ImageBlend_BSRC1_BSRC2 3MLIB "2 Mar 2007" "SunOS 5.11" "mediaLib Library Functions"
.SH NAME
mlib_ImageBlend_BSRC1_BSRC2, mlib_ImageBlend_DA_DA, mlib_ImageBlend_DA_DC,
mlib_ImageBlend_DA_OMDA, mlib_ImageBlend_DA_OMDC, mlib_ImageBlend_DA_OMSA,
mlib_ImageBlend_DA_ONE, mlib_ImageBlend_DA_SA, mlib_ImageBlend_DA_SAS,
mlib_ImageBlend_DA_ZERO, mlib_ImageBlend_OMDA_DA, mlib_ImageBlend_OMDA_DC,
mlib_ImageBlend_OMDA_OMDA, mlib_ImageBlend_OMDA_OMDC, mlib_ImageBlend_OMDA_OMSA,
mlib_ImageBlend_OMDA_ONE, mlib_ImageBlend_OMDA_SA, mlib_ImageBlend_OMDA_SAS,
mlib_ImageBlend_OMDA_ZERO, mlib_ImageBlend_OMSA_DA, mlib_ImageBlend_OMSA_DC,
mlib_ImageBlend_OMSA_OMDA, mlib_ImageBlend_OMSA_OMDC, mlib_ImageBlend_OMSA_OMSA,
mlib_ImageBlend_OMSA_ONE, mlib_ImageBlend_OMSA_SA, mlib_ImageBlend_OMSA_SAS,
mlib_ImageBlend_OMSA_ZERO, mlib_ImageBlend_OMSC_DA, mlib_ImageBlend_OMSC_DC,
mlib_ImageBlend_OMSC_OMDA, mlib_ImageBlend_OMSC_OMDC, mlib_ImageBlend_OMSC_OMSA,
mlib_ImageBlend_OMSC_ONE, mlib_ImageBlend_OMSC_SA, mlib_ImageBlend_OMSC_SAS,
mlib_ImageBlend_OMSC_ZERO, mlib_ImageBlend_ONE_DA, mlib_ImageBlend_ONE_DC,
mlib_ImageBlend_ONE_OMDA, mlib_ImageBlend_ONE_OMDC, mlib_ImageBlend_ONE_OMSA,
mlib_ImageBlend_ONE_ONE, mlib_ImageBlend_ONE_SA, mlib_ImageBlend_ONE_SAS,
mlib_ImageBlend_ONE_ZERO, mlib_ImageBlend_SA_DA, mlib_ImageBlend_SA_DC,
mlib_ImageBlend_SA_OMDA, mlib_ImageBlend_SA_OMDC, mlib_ImageBlend_SA_OMSA,
mlib_ImageBlend_SA_ONE, mlib_ImageBlend_SA_SA, mlib_ImageBlend_SA_SAS,
mlib_ImageBlend_SA_ZERO, mlib_ImageBlend_SC_DA, mlib_ImageBlend_SC_DC,
mlib_ImageBlend_SC_OMDA, mlib_ImageBlend_SC_OMDC, mlib_ImageBlend_SC_OMSA,
mlib_ImageBlend_SC_ONE, mlib_ImageBlend_SC_SA, mlib_ImageBlend_SC_SAS,
mlib_ImageBlend_SC_ZERO, mlib_ImageBlend_ZERO_DA, mlib_ImageBlend_ZERO_DC,
mlib_ImageBlend_ZERO_OMDA, mlib_ImageBlend_ZERO_OMDC, mlib_ImageBlend_ZERO_OMSA,
mlib_ImageBlend_ZERO_ONE, mlib_ImageBlend_ZERO_SA, mlib_ImageBlend_ZERO_SAS,
mlib_ImageBlend_ZERO_ZERO \- blending
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lmlib\fR [ \fIlibrary\fR.\|.\|. ]
#include <mlib.h>

\fBmlib_status\fR \fBmlib_ImageBlend_BSRC1_BSRC2\fR(\fBmlib_image *\fIdst\fR,
     \fBconst mlib_image *\fIsrc1\fR, \fBconst mlib_image *\fIsrc2\fR, \fBmlib_s32\fR \fIcmask\fR);
.fi

.SH DESCRIPTION
.sp
.LP
This group of functions supports digital image composition. They are low-level,
non-in-place, blending functions.
.sp
.LP
The image type must be
.BR MLIB_BYTE .
The input and output images must contain
three or four channels. For three-channel images, the alpha value is as if the
alpha value is 1.
.sp
.LP
BSRC1 is one of the following: ZERO, ONE, SC, OMSC, DA, SA, OMDA, or OMSA. BSRC2
is one of the following: ZERO, ONE, DC, OMDC, DA, SA, OMDA, OMSA, or SAS.
.sp
.LP
The following are predefined blend factor types used in mediaLib image
composition functions.
.sp
.in +2
.nf
/* image blend factors */
typedef enum {
    MLIB_BLEND_ZERO,
    MLIB_BLEND_ONE,
    MLIB_BLEND_DST_COLOR,
    MLIB_BLEND_SRC_COLOR,
    MLIB_BLEND_ONE_MINUS_DST_COLOR,
    MLIB_BLEND_ONE_MINUS_SRC_COLOR,
    MLIB_BLEND_DST_ALPHA,
    MLIB_BLEND_SRC_ALPHA,
    MLIB_BLEND_ONE_MINUS_DST_ALPHA,
    MLIB_BLEND_ONE_MINUS_SRC_ALPHA,
    MLIB_BLEND_SRC_ALPHA_SATURATE
} mlib_blend;
.fi
.in -2

.sp
.LP
See the following table for the definitions of the blend factors.
.sp

.sp
.TS
tab();
cw(2.97i) cw(1.85i) cw(.67i)
lw(2.97i) lw(1.85i) lw(.67i)
.
TypeBlend Factor [*]Abbr.
_
MLIB_BLEND_ZERO(0,0,0,0)ZERO
MLIB_BLEND_ONE(1,1,1,1)ONE
MLIB_BLEND_DST_COLOR(Rd,Gd,Bd,Ad)DC
MLIB_BLEND_SRC_COLOR(Rs,Gs,Bs,As)SC
MLIB_BLEND_ONE_MINUS_DST_COLOR(1,1,1,1)-(Rd,Gd,Bd,Ad)OMDC
MLIB_BLEND_ONE_MINUS_SRC_COLOR(1,1,1,1)-(Rs,Gs,Bs,As)OMSC
MLIB_BLEND_DST_ALPHA(Ad,Ad,Ad,Ad)DA
MLIB_BLEND_SRC_ALPHA(As,As,As,As)SA
MLIB_BLEND_ONE_MINUS_DST_ALPHA(1,1,1,1)-(Ad,Ad,Ad,Ad)OMDA
MLIB_BLEND_ONE_MINUS_SRC_ALPHA(1,1,1,1)-(As,As,As,As)OMSA
MLIB_BLEND_SRC_ALPHA_SATURATE(f,f,f,1)SAS
.TE

.sp
.LP
[*]: The components of the first source image pixel are (Rd,Gd,Bd,Ad), and the
components of the second source pixel are (Rs,Gs,Bs,As). Function f =
min(As,1-Ad).
.sp
.LP
The blending formula for non-in-place processing is:
.sp
.in +2
.nf
Cd = Cs1*S1 + Cs2*S2
.fi
.in -2

.sp
.LP
where Cd is the destination pixel (Rd,Gd,Bd,Ad), Cs1 is the first source pixel
(Rs1,Gs1,Bs1,As1), Cs2 is the second source pixel (Rs2,Gs2,Bs2,As2), and S1 and
S2 are the blend factors for the first and second sources, respectively.
.SH PARAMETERS
.sp
.LP
Each of the functions takes the following arguments:
.sp
.ne 2
.mk
.na
.I dst
.ad
.RS 9n
.rt
Pointer to destination image.
.RE

.sp
.ne 2
.mk
.na
.I src1
.ad
.RS 9n
.rt
Pointer to the first source image.
.RE

.sp
.ne 2
.mk
.na
.I src2
.ad
.RS 9n
.rt
Pointer to the second source image.
.RE

.sp
.ne 2
.mk
.na
.I cmask
.ad
.RS 9n
.rt
Channel mask to indicate the alpha channel. Each bit of the mask represents a
channel in the image. The channel corresponding to the 1 bit is the alpha
channel. cmask must be either 0x01 or 0x08.
.RE

.SH RETURN VALUES
.sp
.LP
Each of the functions returns
.B MLIB_SUCCESS
if successful. Otherwise it
returns
.BR MLIB_FAILURE .
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR mlib_ImageBlend_BSRC1_BSRC2_Inp (3MLIB),
.BR mlib_ImageComposite (3MLIB),
.BR mlib_ImageComposite_Inp (3MLIB),
.BR attributes (5)
