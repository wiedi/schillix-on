'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mlib_ImageBlend2_Inp 3MLIB "2 Mar 2007" "SunOS 5.11" "mediaLib Library Functions"
.SH NAME
mlib_ImageBlend2_Inp \- blend with an alpha image, in place
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lmlib\fR [ \fIlibrary\fR.\|.\|. ]
#include <mlib.h>

\fBmlib_status\fR \fBmlib_ImageBlend2_Inp\fR(\fBmlib_image *\fIsrc2dst\fR,
     \fBconst mlib_image *\fIsrc1\fR, \fBconst mlib_image *\fIalpha\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B mlib_ImageBlend2_Inp()
function blends two images together, in
place, on a pixel-by-pixel basis using an alpha image, when alpha is also on
a pixel basis. The
.I alpha
image can be a single-channel image or have
the same number of channels as the source and destination images.
.sp
.LP
It uses the following equation when the
.I alpha
image is a
single-channel image:
.sp
.in +2
.nf
src2dst[x][y][i] = a[x][y][0]*src1[x][y][i] +
                   (1 - a[x][y][0])*src2dst[x][y][i]
.fi
.in -2

.sp
.LP
It uses the following equation when the
.I alpha
image has the same
number of channels as the source and destination images:
.sp
.in +2
.nf
src2dst[x][y][i] = a[x][y][i]*src1[x][y][i] +
                   (1 - a[x][y][i])*src2dst[x][y][i]
.fi
.in -2

.SH PARAMETERS
.sp
.LP
The function takes the following arguments:
.sp
.ne 2
.mk
.na
.I src2dst
.ad
.RS 11n
.rt
Pointer to second source and destination image.
.RE

.sp
.ne 2
.mk
.na
.I src1
.ad
.RS 11n
.rt
Pointer to first source image.
.RE

.sp
.ne 2
.mk
.na
.I alpha
.ad
.RS 11n
.rt
Alpha image used to control blending. The
.B a
value equals \fB(alpha * 2**(-8))\fR for \fBMLIB_BYTE\fR image, \fB(alpha * 2**(-15))\fR for
.B MLIB_SHORT
image,
.B "(alpha * 2**(-16))"
for
.BR MLIB_USHORT
image, and
.B "(alpha * 2**(-31))"
for
.B MLIB_INT
image.
.RE

.SH RETURN VALUES
.sp
.LP
The function returns
.B MLIB_SUCCESS
if successful. Otherwise it returns
.BR MLIB_FAILURE .
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR mlib_ImageBlend (3MLIB),
.BR mlib_ImageBlend_Fp (3MLIB),
.BR mlib_ImageBlend1_Fp_Inp (3MLIB),
.BR mlib_ImageBlend1_Inp (3MLIB),
.BR mlib_ImageBlend2_Fp_Inp (3MLIB),
.BR attributes (5)
