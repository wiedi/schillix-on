'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mlib_ImageColorHSL2RGB 3MLIB "12 Sep 2007" "SunOS 5.11" "mediaLib Library Functions"
.SH NAME
mlib_ImageColorHSL2RGB \- HSL to RGB color conversion
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lmlib\fR [ \fIlibrary\fR.\|.\|. ]
#include <mlib.h>

\fBmlib_status\fR \fBmlib_ImageColorHSL2RGB\fR(\fBmlib_image *\fIdst\fR, \fBconst mlib_image *\fIsrc\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B mlib_ImageColorHSL2RGB()
function performs a conversion from
hue/saturation/lightness to red/green/blue. The source and destination
images must be three-channel images.
.sp
.LP
It uses the following equations:
.sp
.in +2
.nf
   L' = L          if L \(<= 1/2
   L' = 1 - L      if L > 1/2

   V = L + S*L'
   P = L - S*L'
   Q = L + S*L'*(1 - 2*fraction(H*6))
   T = L - S*L'*(1 - 2*fraction(H*6))

   R, G, B = V, T, P    if 0   \(<= H < 1/6
   R, G, B = Q, V, P    if 1/6 \(<= H < 2/6
   R, G, B = P, V, T    if 2/6 \(<= H < 3/6
   R, G, B = P, Q, V    if 3/6 \(<= H < 4/6
   R, G, B = T, P, V    if 4/6 \(<= H < 5/6
   R, G, B = V, P, Q    if 5/6 \(<= H < 1
.fi
.in -2

.sp
.LP
where \fB0 \(<= H < 1\fR and \fB0 \(<= S, L, L', V, P, Q, T, R, G, B \(<=
1\fR.
.sp
.LP
Assuming a pixel in the source image is
.B "(h, s, l)"
and its
corresponding pixel in the destination image is
.BR "(r, g, b)" ,
then for
.B MLIB_BYTE
images, the following applies:
.sp
.in +2
.nf
   H = h/256
   S = s/255
   L = l/255
   r = R*255
   g = G*255
   b = B*255
.fi
.in -2

.sp
.LP
for
.B MLIB_SHORT
images, the following applies:
.sp
.in +2
.nf
   H = (h + 32768)/65536
   S = (s + 32768)/65535
   L = (l + 32768)/65535
   r = R*65535 - 32768
   g = G*65535 - 32768
   b = B*65535 - 32768
.fi
.in -2

.sp
.LP
for
.B MLIB_USHORT
images, the following applies:
.sp
.in +2
.nf
   H = h/65536
   S = s/65535
   L = l/65535
   r = R*65535
   g = G*65535
   b = B*65535
.fi
.in -2

.sp
.LP
and for
.B MLIB_INT
images, the following applies:
.sp
.in +2
.nf
   H = (h + 2147483648)/4294967296
   S = (s + 2147483648)/4294967295
   L = (l + 2147483648)/4294967295
   r = R*4294967295 - 2147483648
   g = G*4294967295 - 2147483648
   b = B*4294967295 - 2147483648
.fi
.in -2

.SH PARAMETERS
.sp
.LP
The function takes the following arguments:
.sp
.ne 2
.mk
.na
.I dst
.ad
.RS 7n
.rt
Pointer to destination image.
.RE

.sp
.ne 2
.mk
.na
.I src
.ad
.RS 7n
.rt
Pointer to source image.
.RE

.SH RETURN VALUES
.sp
.LP
The function returns
.B MLIB_SUCCESS
if successful. Otherwise it returns
.BR MLIB_FAILURE .
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR mlib_ImageColorHSL2RGB_Fp (3MLIB),
.BR mlib_ImageColorRGB2HSL (3MLIB),
.BR mlib_ImageColorRGB2HSL_Fp (3MLIB),
.BR attributes (5)
