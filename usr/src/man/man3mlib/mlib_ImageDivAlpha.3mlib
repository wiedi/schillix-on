'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mlib_ImageDivAlpha 3MLIB "2 Mar 2007" "SunOS 5.11" "mediaLib Library Functions"
.SH NAME
mlib_ImageDivAlpha \- alpha channel division
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lmlib\fR [ \fIlibrary\fR.\|.\|. ]
#include <mlib.h>

\fBmlib_status\fR \fBmlib_ImageDivAlpha\fR(\fBmlib_image *\fIdst\fR, \fBconst mlib_image *\fIsrc\fR,
     \fBmlib_s32\fR \fIcmask\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B mlib_ImageDivAlpha()
function divides color channels by the alpha
channel on a pixel-by-pixel basis.
.sp
.LP
For the
.B MLIB_BYTE
image, it uses the following equation:
.sp
.in +2
.nf
dst[x][y][c] = src[x][y][c] / (src[x][y][a] * 2**(-8))
.fi
.in -2

.sp
.LP
For the
.B MLIB_SHORT
image, it uses the following equation:
.sp
.in +2
.nf
dst[x][y][c] = src[x][y][c] / (src[x][y][a] * 2**(-15))
.fi
.in -2

.sp
.LP
For the
.B MLIB_USHORT
image, it uses the following equation:
.sp
.in +2
.nf
dst[x][y][c] = src[x][y][c] / (src[x][y][a] * 2**(-16))
.fi
.in -2

.sp
.LP
For the
.B MLIB_INT
image, it uses the following equation:
.sp
.in +2
.nf
dst[x][y][c] = src[x][y][c] / (src[x][y][a] * 2**(-31))
.fi
.in -2

.sp
.LP
where
.B c
and
.B a
are the indices for the color channels and the
alpha channel, respectively, so
.BR "c != a" .
.sp
.LP
In the case of src[x][y][a] = 0,
.sp
.in +2
.nf
dst[x][y][c] = 0              if src[x][y][c] = 0
dst[x][y][c] = DATA_TYPE_MAX  if src[x][y][c] > 0
dst[x][y][c] = DATA_TYPE_MIN  if src[x][y][c] < 0
.fi
.in -2

.sp
.LP
where
.B DATA_TYPE
is
.BR MLIB_U8 ,
.BR MLIB_S16 ,
.BR MLIB_U16 ,
or
.B MLIB_S32
for an image of type
.BR MLIB_BYTE ,
.BR MLIB_SHORT ,
.BR MLIB_USHORT ,
or
.BR MLIB_INT ,
respectively.
.SH PARAMETERS
.sp
.LP
The function takes the following arguments:
.sp
.ne 2
.mk
.na
.I dst
.ad
.RS 9n
.rt
Pointer to destination image.
.RE

.sp
.ne 2
.mk
.na
.I src
.ad
.RS 9n
.rt
Pointer to source image.
.RE

.sp
.ne 2
.mk
.na
.I cmask
.ad
.RS 9n
.rt
Channel mask to indicate the alpha channel. Each bit of the mask represents
a channel in the image. The channel corresponding to the 1 bit of
.B cmask
is the alpha channel.
.RE

.SH RETURN VALUES
.sp
.LP
The function returns
.B MLIB_SUCCESS
if successful. Otherwise it returns
.BR MLIB_FAILURE .
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR mlib_ImageDivAlpha_Inp (3MLIB),
.BR mlib_ImageDivAlpha_Fp (3MLIB),
.BR mlib_ImageDivAlpha_Fp_Inp (3MLIB),
.BR attributes (5)
