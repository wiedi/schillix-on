'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mlib_ImageLookUp 3MLIB "12 Sep 2007" "SunOS 5.11" "mediaLib Library Functions"
.SH NAME
mlib_ImageLookUp \- table lookup
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lmlib\fR [ \fIlibrary\fR.\|.\|. ]
#include <mlib.h>

\fBmlib_status\fR \fBmlib_ImageLookUp\fR(\fBmlib_image *\fIdst\fR, \fBconst mlib_image *\fIsrc\fR,
     \fBconst void **\fItable\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B mlib_ImageLookUp()
function maps the source image to the
destination image by using the user-specified lookup table.
.sp
.LP
The source and destination images must have the same width and height. The
source image can be a single channel image or can have the same number of
channels as the destination image. One of the following equations is used
accordingly:
.sp
.in +2
.nf
dst[x][y][i] = table[i][src[x][y][0]]
dst[x][y][i] = table[i][src[x][y][i]]
.fi
.in -2

.sp
.LP
The source and destination images can have different data types. See the
following table for available variations of the table lookup function on
image types:
.sp

.sp
.TS
tab();
cw(1.38i) cw(0i) cw(0i) cw(1.38i) cw(1.38i) cw(0i) cw(1.38i)
lw(1.38i) lw(0i) lw(0i) lw(1.38i) lw(1.38i) lw(0i) lw(1.38i)
.
Type [*]BYTESHORTUSHORTINTFLOATDOUBLE
_
MLIB_BITY
MLIB_BYTEYYYYYY
_
MLIB_SHORTYYYYYY
_
MLIB_USHORTYYYYYY
_
MLIB_INTYYYYYY
.TE

.sp
.LP
[*] Each row represents a source data type. Each column represents a
destination data type.
.SH PARAMETERS
.sp
.LP
The function takes the following arguments:
.sp
.ne 2
.mk
.na
.I dst
.ad
.RS 9n
.rt
Pointer to destination image.
.RE

.sp
.ne 2
.mk
.na
.I src
.ad
.RS 9n
.rt
Pointer to source image.
.RE

.sp
.ne 2
.mk
.na
.I table
.ad
.RS 9n
.rt
Pointer to lookup table. The data type of the lookup table is the same as
the destination image. The number of entries in the lookup table is
determined by the type of the input image. The format of the lookup table
is:
.sp
.B table[channel][index]
.sp
The
.B MLIB_BIT
type entries are indexed from 0 to 1. The
.B MLIB_BYTE
type entries are indexed from 0 to 255. The \fBMLIB_SHORT\fR
type entries are indexed from -32768 to -1, then from 0 to 32767. The
.B MLIB_USHORT
type entries are indexed from 0 to 65535. The
.B MLIB_INT
type entries are indexed from -2147483648 to -1, and then
from 0 to 2147483647.
.sp
If a table covering the full range of input data type is not available or
not realistic, which is mostly true for doing table lookup with an
.B MLIB_INT
input image, a smaller table can be used.  In this case, the
pointer to the table has to be adjusted as if it is pointing to the element
for the smallest value of the input data type.  For example, to use a table
covering input data range of
.BR "[-65536, 65535]" ,
the pointer needs to be
adjusted as follows:
.sp
.B table_16_32[0] += MLIB_S32_MIN + 65536;
.sp
This might cause a pointer arithmetic overflow in 32-bit mode, but probably
works if the overflow is handled as a wrap-around.  If possible, function
.B mlib_ImageLookUp2()
should be used instead.
.RE

.SH RETURN VALUES
.sp
.LP
The function returns
.B MLIB_SUCCESS
if successful. Otherwise it returns
.BR MLIB_FAILURE .
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR mlib_ImageLookUp_Inp (3MLIB),
.BR mlib_ImageLookUp2 (3MLIB),
.BR mlib_ImageLookUpMask (3MLIB),
.BR attributes (5)
