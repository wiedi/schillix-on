'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mlib_GraphicsDrawCircle 3MLIB "2 Mar 2007" "SunOS 5.11" "mediaLib Library Functions"
.SH NAME
mlib_GraphicsDrawCircle, mlib_GraphicsDrawCircle_8,
mlib_GraphicsDrawCircle_32, mlib_GraphicsDrawCircle_X_8,
mlib_GraphicsDrawCircle_X_32, mlib_GraphicsDrawCircle_A_8,
mlib_GraphicsDrawCircle_A_32, mlib_GraphicsDrawCircle_B_8,
mlib_GraphicsDrawCircle_B_32, mlib_GraphicsDrawCircle_AB_8,
mlib_GraphicsDrawCircle_AB_32 \- draw circle
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lmlib\fR [ \fIlibrary\fR.\|.\|. ]
#include <mlib.h>

\fBmlib_status\fR \fBmlib_GraphicsDrawCircle_8\fR(\fBmlib_image *\fIbuffer\fR, \fBmlib_s16\fR \fIx\fR,
     \fBmlib_s16\fR \fIy\fR, \fBmlib_s32\fR \fIr\fR, \fBmlib_s32\fR \fIc\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawCircle_32\fR(\fBmlib_image *\fIbuffer\fR, \fBmlib_s16\fR \fIx\fR,
     \fBmlib_s16\fR \fIy\fR, \fBmlib_s32\fR \fIr\fR, \fBmlib_s32\fR \fIc\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawCircle_X_8\fR(\fBmlib_image *\fIbuffer\fR, \fBmlib_s16\fR \fIx\fR,
     \fBmlib_s16\fR \fIy\fR, \fBmlib_s32\fR \fIr\fR, \fBmlib_s32\fR \fIc\fR, \fBmlib_s32\fR \fIc2\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawCircle_X_32\fR(\fBmlib_image *\fIbuffer\fR, \fBmlib_s16\fR \fIx\fR,
     \fBmlib_s16\fR \fIy\fR, \fBmlib_s32\fR \fIr\fR, \fBmlib_s32\fR \fIc\fR, \fBmlib_s32\fR \fIc2\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawCircle_A_8\fR(\fBmlib_image *\fIbuffer\fR, \fBmlib_s16\fR \fIx\fR,
     \fBmlib_s16\fR \fIy\fR, \fBmlib_s32\fR \fIr\fR, \fBmlib_s32\fR \fIc\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawCircle_A_32\fR(\fBmlib_image *\fIbuffer\fR, \fBmlib_s16\fR \fIx\fR,
     \fBmlib_s16\fR \fIy\fR, \fBmlib_s32\fR \fIr\fR, \fBmlib_s32\fR \fIc\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawCircle_B_8\fR(\fBmlib_image *\fIbuffer\fR, \fBmlib_s16\fR \fIx\fR,
     \fBmlib_s16\fR \fIy\fR, \fBmlib_s32\fR \fIr\fR, \fBmlib_s32\fR \fIc\fR, \fBmlib_s32\fR \fIa\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawCircle_B_32\fR(\fBmlib_image *\fIbuffer\fR, \fBmlib_s16\fR \fIx\fR,
     \fBmlib_s16\fR \fIy\fR, \fBmlib_s32\fR \fIr\fR, \fBmlib_s32\fR \fIc\fR, \fBmlib_s32\fR \fIa\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawCircle_AB_8\fR(\fBmlib_image *\fIbuffer\fR, \fBmlib_s16\fR \fIx\fR,
     \fBmlib_s16\fR \fIy\fR, \fBmlib_s32\fR \fIr\fR, \fBmlib_s32\fR \fIc\fR, \fBmlib_s32\fR \fIa\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawCircle_AB_32\fR(\fBmlib_image *\fIbuffer\fR, \fBmlib_s16\fR \fIx\fR,
     \fBmlib_s16\fR \fIy\fR, \fBmlib_s32\fR \fIr\fR, \fBmlib_s32\fR \fIc\fR, \fBmlib_s32\fR \fIa\fR);
.fi

.SH DESCRIPTION
.sp
.LP
Each of the
.B mlib_GraphicsDrawCircle_*()
functions draws a circle with
the center at (\fIx\fR,
.IR y )
and radius
.IR r .
.sp
.LP
Each of the
.B mlib_GraphicsDrawCircle_X_*()
functions draws a circle in
Xor mode as follows:
.sp
.in +2
.nf
    data[x,y] ^= c ^ c2
.fi
.in -2

.sp
.LP
Each of the
.B mlib_GraphicsDrawCircle_A_*()
functions draws a circle
with antialiasing.
.sp
.LP
Each of the
.B mlib_GraphicsDrawCircle_B_*()
functions draws a circle
with alpha blending as follows:
.sp
.in +2
.nf
    data[x,y] = (data[x,y] * (255 - a) + c * a) / 255
.fi
.in -2

.sp
.LP
Each of the
.B mlib_GraphicsDrawCircle_AB_*()
functions draws a circle
with antialiasing and alpha blending.
.SH PARAMETERS
.sp
.LP
Each of the functions takes some of the following arguments:
.sp
.ne 2
.mk
.na
.I buffer
.ad
.RS 10n
.rt
Pointer to the image into which the function is drawing.
.RE

.sp
.ne 2
.mk
.na
.I x
.ad
.RS 10n
.rt
X coordinate of the center.
.RE

.sp
.ne 2
.mk
.na
.I y
.ad
.RS 10n
.rt
Y coordinate of the center.
.RE

.sp
.ne 2
.mk
.na
.I r
.ad
.RS 10n
.rt
Radius of the arc.
.RE

.sp
.ne 2
.mk
.na
.I c
.ad
.RS 10n
.rt
Color used in the drawing.
.RE

.sp
.ne 2
.mk
.na
.I c2
.ad
.RS 10n
.rt
Alternation color.
.RE

.sp
.ne 2
.mk
.na
.I a
.ad
.RS 10n
.rt
Alpha value for blending.
.BR "0 \(<= a \(<= 255" .
.RE

.SH RETURN VALUES
.sp
.LP
Each of the functions returns
.B MLIB_SUCCESS
if successful. Otherwise
it returns
.BR MLIB_FAILURE .
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR mlib_GraphicsDrawArc (3MLIB),
.BR mlib_GraphicsDrawEllipse (3MLIB),
.BR attributes (5)
