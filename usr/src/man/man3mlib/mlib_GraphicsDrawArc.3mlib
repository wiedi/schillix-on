'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved 
.\" The contents of this file are subject to the terms of the Common Development and Distribution License (the "License").  You may not use this file except in compliance with the License.
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE or http://www.opensolaris.org/os/licensing.  See the License for the specific language governing permissions and limitations under the License.
.\" When distributing Covered Code, include this CDDL HEADER in each file and include the License file at usr/src/OPENSOLARIS.LICENSE.  If applicable, add the following below this CDDL HEADER, with the fields enclosed by brackets "[]" replaced with your own identifying information: Portions Copyright [yyyy] [name of copyright owner]
.TH mlib_GraphicsDrawArc 3MLIB "2 Mar 2007" "SunOS 5.11" "mediaLib Library Functions"
.SH NAME
mlib_GraphicsDrawArc, mlib_GraphicsDrawArc_8, mlib_GraphicsDrawArc_32, mlib_GraphicsDrawArc_X_8, mlib_GraphicsDrawArc_X_32, mlib_GraphicsDrawArc_A_8, mlib_GraphicsDrawArc_A_32, mlib_GraphicsDrawArc_B_8, mlib_GraphicsDrawArc_B_32, mlib_GraphicsDrawArc_AB_8, mlib_GraphicsDrawArc_AB_32 \- draw arc
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR... ] \fIfile\fR... \fB-lmlib\fR [ \fIlibrary\fR... ]
#include <mlib.h>

\fBmlib_status\fR \fBmlib_GraphicsDrawArc_8\fR(\fBmlib_image *\fR\fIbuffer\fR, \fBmlib_s16\fR \fIx\fR,
     \fBmlib_s16\fR \fIy\fR, \fBmlib_s32\fR \fIr\fR, \fBmlib_f32\fR \fIt1\fR, \fBmlib_f32\fR \fIt2\fR, \fBmlib_s32\fR \fIc\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawArc_32\fR(\fBmlib_image *\fR\fIbuffer\fR, \fBmlib_s16\fR \fIx\fR,
     \fBmlib_s16\fR \fIy\fR, \fBmlib_s32\fR \fIr\fR, \fBmlib_f32\fR \fIt1\fR, \fBmlib_f32\fR \fIt2\fR, \fBmlib_s32\fR \fIc\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawArc_X_8\fR(\fBmlib_image *\fR\fIbuffer\fR, \fBmlib_s16\fR \fIx\fR,
     \fBmlib_s16\fR \fIy\fR, \fBmlib_s32\fR \fIr\fR, \fBmlib_f32\fR \fIt1\fR, \fBmlib_f32\fR \fIt2\fR, \fBmlib_s32\fR \fIc\fR,
     \fBmlib_s32\fR \fIc2\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawArc_X_32\fR(\fBmlib_image *\fR\fIbuffer\fR, \fBmlib_s16\fR \fIx\fR,
     \fBmlib_s16\fR \fIy\fR, \fBmlib_s32\fR \fIr\fR, \fBmlib_f32\fR \fIt1\fR, \fBmlib_f32\fR \fIt2\fR, \fBmlib_s32\fR \fIc\fR,
     \fBmlib_s32\fR \fIc2\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawArc_A_8\fR(\fBmlib_image *\fR\fIbuffer\fR, \fBmlib_s16\fR \fIx\fR,
     \fBmlib_s16\fR \fIy\fR, \fBmlib_s32\fR \fIr\fR, \fBmlib_f32\fR \fIt1\fR, \fBmlib_f32\fR \fIt2\fR, \fBmlib_s32\fR \fIc\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawArc_A_32\fR(\fBmlib_image *\fR\fIbuffer\fR, \fBmlib_s16\fR \fIx\fR,
     \fBmlib_s16\fR \fIy\fR, \fBmlib_s32\fR \fIr\fR, \fBmlib_f32\fR \fIt1\fR, \fBmlib_f32\fR \fIt2\fR, \fBmlib_s32\fR \fIc\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawArc_B_8\fR(\fBmlib_image *\fR\fIbuffer\fR, \fBmlib_s16\fR \fIx\fR,
     \fBmlib_s16\fR \fIy\fR, \fBmlib_s32\fR \fIr\fR, \fBmlib_f32\fR \fIt1\fR, \fBmlib_f32\fR \fIt2\fR, \fBmlib_s32\fR \fIc\fR,
     \fBmlib_s32\fR \fIa\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawArc_B_32\fR(\fBmlib_image *\fR\fIbuffer\fR, \fBmlib_s16\fR \fIx\fR,
     \fBmlib_s16\fR \fIy\fR, \fBmlib_s32\fR \fIr\fR, \fBmlib_f32\fR \fIt1\fR, \fBmlib_f32\fR \fIt2\fR, \fBmlib_s32\fR \fIc\fR,
     \fBmlib_s32\fR \fIa\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawArc_AB_8\fR(\fBmlib_image *\fR\fIbuffer\fR, \fBmlib_s16\fR \fIx\fR,
     \fBmlib_s16\fR \fIy\fR, \fBmlib_s32\fR \fIr\fR, \fBmlib_f32\fR \fIt1\fR, \fBmlib_f32\fR \fIt2\fR, \fBmlib_s32\fR \fIc\fR,
     \fBmlib_s32\fR \fIa\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawArc_AB_32\fR(\fBmlib_image *\fR\fIbuffer\fR, \fBmlib_s16\fR \fIx\fR,
     \fBmlib_s16\fR \fIy\fR, \fBmlib_s32\fR \fIr\fR, \fBmlib_f32\fR \fIt1\fR, \fBmlib_f32\fR \fIt2\fR, \fBmlib_s32\fR \fIc\fR,
     \fBmlib_s32\fR \fIa\fR);
.fi

.SH DESCRIPTION
.sp
.LP
Each of the \fBmlib_GraphicsDrawArc_*()\fR functions draws an arc with the center at (\fIx\fR, \fIy\fR), radius \fIr\fR, start angle \fIt1\fR, and end angle \fIt2\fR.
.sp
.LP
Each of the \fBmlib_GraphicsDrawArc_X_*()\fR functions draws an arc in Xor mode as follows:
.sp
.in +2
.nf
    data[x,y] ^= c ^ c2
.fi
.in -2

.sp
.LP
Each of the \fBmlib_GraphicsDrawArc_A_*()\fR functions draws an arc with antialiasing.
.sp
.LP
Each of the \fBmlib_GraphicsDrawArc_B_*()\fR functions draws an arc with alpha blending as follows:
.sp
.in +2
.nf
    data[x,y] = (data[x,y] * (255 - a) + c * a) / 255
.fi
.in -2

.sp
.LP
Each of the \fBmlib_GraphicsDrawArc_AB_*()\fR functions draws an arc with antialiasing and alpha blending.
.SH PARAMETERS
.sp
.LP
Each of the functions takes some of the following arguments:
.sp
.ne 2
.mk
.na
\fB\fIbuffer\fR\fR
.ad
.RS 10n
.rt  
Pointer to the image into which the function is drawing.
.RE

.sp
.ne 2
.mk
.na
\fB\fIx\fR\fR
.ad
.RS 10n
.rt  
X coordinate of the center.
.RE

.sp
.ne 2
.mk
.na
\fB\fIy\fR\fR
.ad
.RS 10n
.rt  
Y coordinate of the center.
.RE

.sp
.ne 2
.mk
.na
\fB\fIr\fR\fR
.ad
.RS 10n
.rt  
Radius of the arc.
.RE

.sp
.ne 2
.mk
.na
\fB\fIt1\fR\fR
.ad
.RS 10n
.rt  
Start angle of the arc in radians.
.RE

.sp
.ne 2
.mk
.na
\fB\fIt2\fR\fR
.ad
.RS 10n
.rt  
End angle of the arc in radians.
.RE

.sp
.ne 2
.mk
.na
\fB\fIc\fR\fR
.ad
.RS 10n
.rt  
Color used in the drawing.
.RE

.sp
.ne 2
.mk
.na
\fB\fIc2\fR\fR
.ad
.RS 10n
.rt  
Alternation color.
.RE

.sp
.ne 2
.mk
.na
\fB\fIa\fR\fR
.ad
.RS 10n
.rt  
Alpha value for blending. \fB0 \(<= a \(<= 255\fR.
.RE

.SH RETURN VALUES
.sp
.LP
Each of the functions returns \fBMLIB_SUCCESS\fR if successful. Otherwise it returns \fBMLIB_FAILURE\fR.
.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
\fBmlib_GraphicsDrawCircle\fR(3MLIB), \fBmlib_GraphicsDrawEllipse\fR(3MLIB), \fBattributes\fR(5)
