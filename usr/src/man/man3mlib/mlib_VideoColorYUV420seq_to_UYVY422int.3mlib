'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mlib_VideoColorYUV420seq_to_UYVY422int 3MLIB "2 Mar 2007" "SunOS 5.11" "mediaLib Library Functions"
.SH NAME
mlib_VideoColorYUV420seq_to_UYVY422int \- convert YUV sequential to
interleaved
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lmlib\fR [ \fIlibrary\fR.\|.\|. ]
#include <mlib.h>

\fBvoid\fR \fBmlib_VideoColorYUV420seq_to_UYVY422int\fR(\fBmlib_u32 *\fIUYVY\fR,
     \fBconst mlib_u8 *\fIY\fR,\fBconst mlib_u8 *\fIU\fR, \fBconst mlib_u8 *\fIV\fR,
     \fBmlib_s32\fR \fIw\fR, \fBmlib_s32\fR \fIh\fR, \fBmlib_s32\fR \fIdlb\fR,
     \fBmlib_s32\fR \fIylb\fR, \fBmlib_s32\fR \fIuvlb\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The Y, U, V pixel streams are combined into a UYVY pixel stream. All pixel
components are 8-bit unsigned integers. The Y buffer has dimensions
.I w
and
.IR h .
The U and V buffers have dimensions
.IR w /2
and
.IR h /2.
Dimensions
.I w
and
.I h
are assumed to be even. Successive rows of
the output buffer UYVY use successive rows of Y and the same rows of U and
V.
.sp
.LP
The following equation is used:
.sp
.in +2
.nf
UYVY[r][c/2]   = (U[r/2][c/2] << 24) |
                 (Y[r][c]     << 16) |
                 (V[r/2][c/2] << 8) |
                 (Y[r][c+1])

UYVY[r+1][c/2] = (U[r/2][c/2] << 24) |
                 (Y[r+1][c]   << 16) |
                 (V[r/2][c/2] << 8) |
                 (Y[r+1][c+1])
.fi
.in -2

.sp
.LP
where
\fBr = 0, 2, 4, .\|.\|., h-2\fR; and
.BR "c = 0, 2, 4, .\|.\|., w-2" .
.SH PARAMETERS
.sp
.LP
The function takes the following arguments:
.sp
.ne 2
.mk
.na
.I UYVY
.ad
.RS 8n
.rt
Pointer to output buffer.
.RE

.sp
.ne 2
.mk
.na
.I Y
.ad
.RS 8n
.rt
Pointer to Y input buffer.
.RE

.sp
.ne 2
.mk
.na
.I U
.ad
.RS 8n
.rt
Pointer to U input buffer.
.RE

.sp
.ne 2
.mk
.na
.I V
.ad
.RS 8n
.rt
Pointer to V input buffer.
.RE

.sp
.ne 2
.mk
.na
.I w
.ad
.RS 8n
.rt
Image width in pixels.
.RE

.sp
.ne 2
.mk
.na
.I h
.ad
.RS 8n
.rt
Image height in lines.
.RE

.sp
.ne 2
.mk
.na
.I dlb
.ad
.RS 8n
.rt
Linebytes for UYVY buffer.
.RE

.sp
.ne 2
.mk
.na
.I ylb
.ad
.RS 8n
.rt
Linebytes for Y buffer.
.RE

.sp
.ne 2
.mk
.na
.I uvlb
.ad
.RS 8n
.rt
Linebytes for U and V buffers.
.RE

.SH RETURN VALUES
.sp
.LP
None.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR mlib_VideoColorYUV420seq_to_YUYV422int (3MLIB),
.BR mlib_VideoColorYUV411seq_to_YUYV422int (3MLIB),
.BR mlib_VideoColorYUV422seq_to_YUYV422int (3MLIB),
.BR mlib_VideoColorYUV411seq_to_UYVY422int (3MLIB),
.BR mlib_VideoColorYUV422seq_to_UYVY422int (3MLIB),
.BR attributes (5)
