'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mlib_ImageColorErrorDiffusionMxN 3MLIB "2 Mar 2007" "SunOS 5.11" "mediaLib Library Functions"
.SH NAME
mlib_ImageColorErrorDiffusionMxN \- true-color to indexed-color or
grayscale to black-white conversion, using error diffusion
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR... ] \fIfile\fR... \fB-lmlib\fR [ \fIlibrary\fR... ]
#include <mlib.h>

\fBmlib_status\fR \fBmlib_ImageColorErrorDiffusionMxN\fR(\fBmlib_image *\fR\fIdst\fR,
     \fBconst mlib_image *\fR\fIsrc\fR, \fBconst mlib_s32 *\fR\fIkernel\fR,
     \fBmlib_s32\fR \fIm\fR, \fBmlib_s32\fR \fIn\fR, \fBmlib_s32\fR \fIdm\fR, \fBmlib_s32\fR \fIdn\fR,
     \fBmlib_s32\fR \fIscale\fR, \fBconst void *\fR\fIcolormap\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The \fBmlib_ImageColorErrorDiffusionMxN()\fR function converts a 3-channel
image to a 1-channel indexed image, or converts a 1-channel grayscale image
to a 1-channel \fBMLIB_BIT\fR image, with the method of error diffusion.
.sp
.LP
The \fIsrc\fR can be an \fBMLIB_BYTE\fR image with 1 or 3 channels. The
\fIdst\fR must be a 1-channel \fBMLIB_BIT\fR or \fBMLIB_BYTE\fR image.
.sp
.LP
The \fIcolormap\fR must be created by \fBmlib_ImageColorDitherInit()\fR. It
may or may not have a colorcube included. If it does, the colorcube is used.
Otherwise, the general lookup table included in \fIcolormap\fR is used.
.sp
.LP
The kernel is required to have the following property:
.sp
.in +2
.nf
kernel[0] = kernel[1] = ... = kernel[m*dn+dm] = 0;
kernel[m*dn+dm+1] + ... + kernel[m*n-1] = 2**scale;
scale \(>= 0
.fi
.in -2

.SH PARAMETERS
.sp
.LP
The function takes the following arguments:
.sp
.ne 2
.mk
.na
\fB\fIdst\fR\fR
.ad
.RS 12n
.rt
Pointer to destination image.
.RE

.sp
.ne 2
.mk
.na
\fB\fIsrc\fR\fR
.ad
.RS 12n
.rt
Pointer to source image.
.RE

.sp
.ne 2
.mk
.na
\fB\fIkernel\fR\fR
.ad
.RS 12n
.rt
Pointer to the error-distribution kernel, in row major order.
.RE

.sp
.ne 2
.mk
.na
\fB\fIm\fR\fR
.ad
.RS 12n
.rt
Kernel width. \fBm > 1\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fIn\fR\fR
.ad
.RS 12n
.rt
Kernel height. \fBn > 1\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fIdm\fR\fR
.ad
.RS 12n
.rt
X coordinate of the key element in the kernel. \fB0 \(<= dm < m\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fIdn\fR\fR
.ad
.RS 12n
.rt
Y coordinate of the key element in the kernel. \fB0 \(<= dn < n\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fIscale\fR\fR
.ad
.RS 12n
.rt
The scaling factor for kernel to convert the input integer coefficients
into floating-point coefficients:
.sp
.in +2
.nf
floating-point coefficient = integer coefficient * \e
2**(-scale)
.fi
.in -2

.RE

.sp
.ne 2
.mk
.na
\fB\fIcolormap\fR\fR
.ad
.RS 12n
.rt
Internal data structure for image dithering.
.RE

.SH RETURN VALUES
.sp
.LP
The function returns \fBMLIB_SUCCESS\fR if successful. Otherwise it returns
\fBMLIB_FAILURE\fR.
.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
\fBmlib_ImageColorDitherInit\fR(3MLIB),
\fBmlib_ImageColorDitherFree\fR(3MLIB), \fBmlib_ImageColorErrorDiffusion3x3\fR(3MLIB),
\fBmlib_ImageColorOrderedDither8x8\fR(3MLIB),
\fBmlib_ImageColorOrderedDitherMxN\fR(3MLIB), \fBattributes\fR(5)
