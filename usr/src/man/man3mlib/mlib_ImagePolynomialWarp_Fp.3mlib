'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mlib_ImagePolynomialWarp_Fp 3MLIB "2 Mar 2007" "SunOS 5.11" "mediaLib Library Functions"
.SH NAME
mlib_ImagePolynomialWarp_Fp \- polynomial-based image warp
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lmlib\fR [ \fIlibrary\fR.\|.\|. ]
#include <mlib.h>

\fBmlib_status\fR \fBmlib_ImagePolynomialWarp_Fp\fR(\fBmlib_image *\fIdst\fR,
     \fBconst mlib_image *\fIsrc\fR, \fBconst mlib_d64 *\fIxCoeffs\fR,
     \fBconst mlib_d64 *\fIyCoeffs\fR, \fBmlib_s32\fR \fIn\fR, \fBmlib_d64\fR \fIpreShiftX\fR,
     \fBmlib_d64\fR \fIpreShiftY\fR, \fBmlib_d64\fR \fIpostShiftX\fR, \fBmlib_d64\fR \fIpostShiftY\fR,
     \fBmlib_d64\fR \fIpreScaleX\fR, \fBmlib_d64\fR \fIpreScaleY\fR, \fBmlib_d64\fR \fIpostScaleX\fR,
     \fBmlib_d64\fR \fIpostScaleY\fR, \fBmlib_filter\fR \fIfilter\fR, \fBmlib_edge\fR \fIedge\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B mlib_ImagePolynomialWarp_Fp()
function performs a
polynomial-based image warp on a floating-point image.
.sp
.LP
The images must have the same type, and the same number of channels. The
images can have 1, 2, 3, or 4 channels. The data type of the images can be
.B MLIB_FLOAT
or
.BR MLIB_DOUBLE .
The source and destination images may
have different sizes.
.sp
.LP
The
.IR xCoeffs " and "
.I yCoeffs
parameters must contain the same number
of coefficients of the form
.B "(n + 1)(n + 2)/2"
for some
.IR n ,
where
.I n
is the degree power of the polynomial. The coefficients, in order,
are associated with the terms:
.sp
.in +2
.nf
1, x, y, x**2, x*y, y**2, .\|.\|.,
x**n, x**(n-1)*y, .\|.\|., x*y**(n-1), y**n
.fi
.in -2

.sp
.LP
and coefficients of value
.B 0
cannot be omitted.
.sp
.LP
The image pixels are assumed to be centered at \fB\&.5\fR coordinate
points. In other words, the upper-left corner pixel of an image is located
at
.BR "(0.5, 0.5)" .
.sp
.LP
For each pixel in the destination image, its center point
.B D
is
backward mapped to a point
.B S
in the source image. Then the source
pixels with their centers surrounding point
.B S
are selected to do one
of the interpolations specified by the
.I filter
parameter to generate
the pixel value for point
.BR D .
.sp
.LP
The mapping is defined by the two bivariate polynomial functions \fBX(x, y)\fR and
.B "Y(x, y)"
that map destination
.B "(x, y)"
coordinates to
source
.B X
and
.B Y
positions respectively.
.sp
.LP
The functions
.B "X(x, y)"
and
.B "Y(x, y)"
are:
.sp
.in +2
.nf
preX = (x + preShiftX)*preScaleX

preY = (y + preShiftY)*preScaleY

           n    i
warpedX = SUM {SUM {xCoeffs_ij * preX**(i-j) * preY**j}}
          i=0  j=0

           n    i
warpedY = SUM {SUM {yCoeffs_ij * preX**(i-j) * preY**j}}
          i=0  j=0

X(x, y) = warpedX*postScaleX - postShiftX

Y(x, y) = warpedY*postScaleY - postShiftY
.fi
.in -2

.sp
.LP
The destination
.B "(x, y)"
coordinates are pre-shifted by \fB(preShiftX, preShiftY)\fR and pre-scaled by the factors
.B preScaleX
and
.B preScaleY
prior to the evaluation of the polynomial. The results of
the polynomial evaluations are scaled by
.B postScaleX
and
.BR postScaleY ,
and then shifted by
.B "(-postShiftX, -postShiftY)"
to
produce the source pixel coordinates. This process allows for better
precision of the results and supports tiled images.
.SH PARAMETERS
.sp
.LP
The function takes the following arguments:
.sp
.ne 2
.mk
.na
.I dst
.ad
.RS 14n
.rt
Pointer to destination image.
.RE

.sp
.ne 2
.mk
.na
.I src
.ad
.RS 14n
.rt
Pointer to source image.
.RE

.sp
.ne 2
.mk
.na
.I xCoeffs
.ad
.RS 14n
.rt
Destination to source transform coefficients for the X coordinate.
.RE

.sp
.ne 2
.mk
.na
.I yCoeffs
.ad
.RS 14n
.rt
Destination to source transform coefficients for the Y coordinate.
.RE

.sp
.ne 2
.mk
.na
.I n
.ad
.RS 14n
.rt
Degree power of the polynomial.
.RE

.sp
.ne 2
.mk
.na
.I preShiftX
.ad
.RS 14n
.rt
Displacement to apply to destination X positions.
.RE

.sp
.ne 2
.mk
.na
.I preShiftY
.ad
.RS 14n
.rt
Displacement to apply to destination Y positions.
.RE

.sp
.ne 2
.mk
.na
.I postShiftX
.ad
.RS 14n
.rt
Displacement to apply to source X positions.
.RE

.sp
.ne 2
.mk
.na
.I postShiftY
.ad
.RS 14n
.rt
Displacement to apply to source Y positions.
.RE

.sp
.ne 2
.mk
.na
.I preScaleX
.ad
.RS 14n
.rt
Scale factor to apply to destination X positions.
.RE

.sp
.ne 2
.mk
.na
.I preScaleY
.ad
.RS 14n
.rt
Scale factor to apply to destination Y positions.
.RE

.sp
.ne 2
.mk
.na
.I postScaleX
.ad
.RS 14n
.rt
Scale factor to apply to source X positions.
.RE

.sp
.ne 2
.mk
.na
.I postScaleY
.ad
.RS 14n
.rt
Scale factor to apply to source Y positions.
.RE

.sp
.ne 2
.mk
.na
.I filter
.ad
.RS 14n
.rt
Type of resampling filter. It can be one of the following:
.sp
.in +2
.nf
MLIB_NEAREST
MLIB_BILINEAR
MLIB_BICUBIC
MLIB_BICUBIC2
.fi
.in -2

.RE

.sp
.ne 2
.mk
.na
.I edge
.ad
.RS 14n
.rt
Type of edge condition. It can be one of the following:
.sp
.in +2
.nf
MLIB_EDGE_DST_NO_WRITE
MLIB_EDGE_SRC_PADDED
.fi
.in -2

.RE

.SH RETURN VALUES
.sp
.LP
The function returns
.B MLIB_SUCCESS
if successful. Otherwise it returns
.BR MLIB_FAILURE .
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR mlib_ImagePolynomialWarp (3MLIB),
.BR mlib_ImagePolynomialWarpTable (3MLIB),
.BR mlib_ImagePolynomialWarpTable_Fp (3MLIB),
.BR attributes (5)
