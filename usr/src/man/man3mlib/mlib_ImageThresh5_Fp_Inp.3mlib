'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mlib_ImageThresh5_Fp_Inp 3MLIB "2 Mar 2007" "SunOS 5.11" "mediaLib Library Functions"
.SH NAME
mlib_ImageThresh5_Fp_Inp \- image thresholding
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lmlib\fR [ \fIlibrary\fR.\|.\|. ]
#include <mlib.h>

\fBmlib_status\fR \fBmlib_ImageThresh5_Fp_Inp\fR(\fBmlib_image *\fIsrcdst\fR,
     \fBconst mlib_d64 *\fIthigh\fR, \fBconst mlib_d64 *\fItlow\fR, \fBconst mlib_d64 *\fIgray\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The \fBmlib_ImageThresh5_Fp_Inp()\fR function compares each pixel in the
source image to two threshold values, \fItlow\fR and \fIthigh\fR. If the
pixel is in between the lower threshold value, \fItlow\fR, and the higher
threshold value, \fIthigh\fR, (inclusive on both sides), then the
destination pixel is set to the value \fIgray\fR. Otherwise, the destination
pixel is set to the value of the source pixel.
.sp
.LP
It uses the following equation:
.sp
.in +2
.nf
srcdst[x][y][i] = gray[i]  if tlow[i] \(<= srcdst[x][y][i] \(<= thigh[i]
.fi
.in -2

.SH PARAMETERS
.sp
.LP
The function takes the following arguments:
.sp
.ne 2
.mk
.na
\fIsrcdst\fR
.ad
.RS 10n
.rt
Pointer to source and destination image.
.RE

.sp
.ne 2
.mk
.na
\fIthigh\fR
.ad
.RS 10n
.rt
High threshold value. \fBthigh[i]\fR holds the high threshold for channel
\fBi\fR.
.RE

.sp
.ne 2
.mk
.na
\fItlow\fR
.ad
.RS 10n
.rt
Low threshold value. \fBtlow[i]\fR holds the low threshold for channel
\fBi\fR.
.RE

.sp
.ne 2
.mk
.na
\fIgray\fR
.ad
.RS 10n
.rt
Output grayscale level. \fBgray[i]\fR holds the output grayscale level for
channel \fBi\fR.
.RE

.SH RETURN VALUES
.sp
.LP
The function returns \fBMLIB_SUCCESS\fR if successful. Otherwise it returns
\fBMLIB_FAILURE\fR.
.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
\fBmlib_ImageThresh1\fR(3MLIB), \fBmlib_ImageThresh1_Fp\fR(3MLIB),
\fBmlib_ImageThresh1_Fp_Inp\fR(3MLIB), \fBmlib_ImageThresh1_Inp\fR(3MLIB),
\fBmlib_ImageThresh2\fR(3MLIB), \fBmlib_ImageThresh2_Fp\fR(3MLIB),
\fBmlib_ImageThresh2_Fp_Inp\fR(3MLIB), \fBmlib_ImageThresh2_Inp\fR(3MLIB),
\fBmlib_ImageThresh3\fR(3MLIB), \fBmlib_ImageThresh3_Fp\fR(3MLIB),
\fBmlib_ImageThresh3_Fp_Inp\fR(3MLIB), \fBmlib_ImageThresh3_Inp\fR(3MLIB),
\fBmlib_ImageThresh4\fR(3MLIB), \fBmlib_ImageThresh4_Fp\fR(3MLIB),
\fBmlib_ImageThresh4_Fp_Inp\fR(3MLIB), \fBmlib_ImageThresh4_Inp\fR(3MLIB),
\fBmlib_ImageThresh5\fR(3MLIB), \fBmlib_ImageThresh5_Fp\fR(3MLIB),
\fBmlib_ImageThresh5_Inp\fR(3MLIB), \fBattributes\fR(5)
