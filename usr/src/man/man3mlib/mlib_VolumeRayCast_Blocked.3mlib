'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\"  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mlib_VolumeRayCast_Blocked 3MLIB "2 Mar 2007" "SunOS 5.11" "mediaLib Library Functions"
.SH NAME
mlib_VolumeRayCast_Blocked,
mlib_VolumeRayCast_Blocked_Parallel_Nearest_U8_U8, mlib_VolumeRayCast_Blocked_Parallel_Nearest_S16_S16,
mlib_VolumeRayCast_Blocked_Parallel_Trilinear_U8_U8,
mlib_VolumeRayCast_Blocked_Parallel_Trilinear_S16_S16, mlib_VolumeRayCast_Blocked_Divergent_Nearest_U8_U8,
mlib_VolumeRayCast_Blocked_Divergent_Nearest_S16_S16,
mlib_VolumeRayCast_Blocked_Divergent_Trilinear_U8_U8, mlib_VolumeRayCast_Blocked_Divergent_Trilinear_S16_S16
\- cast a ray (or rays) through a 3D data set
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lmlib\fR [ \fIlibrary\fR.\|.\|. ]
#include <mlib.h>
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_VolumeRayCast_Blocked_Parallel_Nearest_U8_U8\fR
     (\fBmlib_rays *\fIrays\fR, \fBconst mlib_blkvolume *\fIblk\fR, \fBvoid *\fIbuffer\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_VolumeRayCast_Blocked_Parallel_Nearest_S16_S16\fR
     (\fBmlib_rays *\fIrays\fR, \fBconst mlib_blkvolume *\fIblk\fR, \fBvoid *\fIbuffer\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_VolumeRayCast_Blocked_Parallel_Trilinear_U8_U8\fR
     (\fBmlib_rays *\fIrays\fR, \fBconst mlib_blkvolume *\fIblk\fR, \fBvoid *\fIbuffer\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_VolumeRayCast_Blocked_Parallel_Trilinear_S16_S16\fR
     (\fBmlib_rays *\fIrays\fR  \fBconst mlib_blkvolume *\fIblk\fR, \fBvoid *\fIbuffer\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_VolumeRayCast_Blocked_Divergent_Nearest_U8_U8\fR
     (\fBmlib_rays *\fIrays\fR, \fBconst mlib_blkvolume *\fIblk\fR, \fBvoid *\fIbuffer\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_VolumeRayCast_Blocked_Divergent_Nearest_S16_S16\fR
     (\fBmlib_rays *\fIrays\fR, \fBconst mlib_blkvolume *\fIblk\fR, \fBvoid *\fIbuffer\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_VolumeRayCast_Blocked_Divergent_Trilinear_U8_U8\fR
     (\fBmlib_rays *\fIrays\fR, \fBconst mlib_blkvolume *\fIblk\fR, \fBvoid *\fIbuffer\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_VolumeRayCast_Blocked_Divergent_Trilinear_S16_S16\fR
     (\fBmlib_rays *\fIrays\fR, \fBconst mlib_blkvolume *\fIblk\fR, \fBvoid *\fIbuffer\fR);
.fi

.SH DESCRIPTION
.sp
.LP
Each of these functions casts a ray (or rays) through a three-dimensional
(3D) data set, then computes and returns the interpolated samples at each
step along the way.
.sp
.LP
In trilinear interpolation, the value at point P is computed from its eight
surrounding neighbors based on the equation below.
.sp
.in +2
.nf
P = (1-a)*(1-b)*(1-c)*P0 +
    a*(1-b)*(1-c)*Px + (1-a)*b*(1-c)*Py + (1-a)*(1-b)*c*Pz +
    a*b*(1-c)*Pxy + a*(1-b)*c*Pxz + (1-a)*b*c*Pyz +
    a*b*c*Pxyz
.fi
.in -2

.sp
.LP
where a, b, and c are the fractional parts of the coordinates of point P.
.sp
.LP
The trilinear interpolation is represented by the following figure:
.sp
Printed copy or docs.sun.com displays a figure that represents the
trilinear interpolation.
.sp
.LP
In nearest neighbor operation, the sample value at point P is replaced by
the value of the nearest neighbor voxel.
.SH PARAMETERS
.sp
.LP
Each of the functions takes the following arguments:
.sp
.ne 2
.mk
.na
.I rays
.ad
.RS 10n
.rt
Casting rays.
.RE

.sp
.ne 2
.mk
.na
.I blk
.ad
.RS 10n
.rt
Volume data in the blocked format.
.RE

.sp
.ne 2
.mk
.na
.I buffer
.ad
.RS 10n
.rt
Working buffer.
.RE

.SH RETURN VALUES
.sp
.LP
Each of the functions returns
.B MLIB_SUCCESS
if successful. Otherwise
it returns
.BR MLIB_FAILURE .
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR mlib_VolumeRayCast_General (3MLIB),
.BR attributes (5)
