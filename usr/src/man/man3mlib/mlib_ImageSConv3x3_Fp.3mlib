'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mlib_ImageSConv3x3_Fp 3MLIB "2 Mar 2007" "SunOS 5.11" "mediaLib Library Functions"
.SH NAME
mlib_ImageSConv3x3_Fp \- separable 3x3 convolution
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lmlib\fR [ \fIlibrary\fR.\|.\|. ]
#include <mlib.h>

\fBmlib_status\fR \fBmlib_ImageSConv3x3_Fp\fR(\fBmlib_image *\fIdst\fR, \fBconst mlib_image *\fIsrc\fR,
     \fBconst mlib_d64 *\fIhkernel\fR, \fBconst mlib_d64 *\fIvkernel\fR, \fBmlib_s32\fR \fIcmask\fR,
     \fBmlib_edge\fR \fIedge\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B mlib_ImageSConv3x3_Fp()
function performs a separable 3x3
convolution on the source image by using the user-supplied kernel.
.sp
.LP
It uses the following equation:
.sp
.in +2
.nf
               m-1-dm n-1-dn
dst[x][y][i] =  SUM    SUM  src[x+p][y+q][i]*h[p]*v[q]
               p=-dm  q=-dn
.fi
.in -2

.sp
.LP
where
.BR "m = 3, n = 3, dm = (m - 1)/2 = 1, dn = (n - 1)/2 = 1" .
.SH PARAMETERS
.sp
.LP
The function takes the following arguments:
.sp
.ne 2
.mk
.na
.I dst
.ad
.RS 11n
.rt
Pointer to destination image.
.RE

.sp
.ne 2
.mk
.na
.I src
.ad
.RS 11n
.rt
Pointer to source image.
.RE

.sp
.ne 2
.mk
.na
.I hkernel
.ad
.RS 11n
.rt
Pointer to the horizontal kernel.
.RE

.sp
.ne 2
.mk
.na
.I vkernel
.ad
.RS 11n
.rt
Pointer to the vertical kernel.
.RE

.sp
.ne 2
.mk
.na
.I cmask
.ad
.RS 11n
.rt
Channel mask to indicate the channels to be convolved, each bit of which
represents a channel in the image. The channels corresponding to one bits
are those to be processed. For a single-channel image, the channel mask is
ignored.
.RE

.sp
.ne 2
.mk
.na
.I edge
.ad
.RS 11n
.rt
Type of edge condition. It can be one of the following:
.sp
.in +2
.nf
MLIB_EDGE_DST_NO_WRITE
MLIB_EDGE_DST_FILL_ZERO
MLIB_EDGE_DST_COPY_SRC
MLIB_EDGE_SRC_EXTEND
.fi
.in -2

.RE

.SH RETURN VALUES
.sp
.LP
The function returns
.B MLIB_SUCCESS
if successful. Otherwise it returns
.BR MLIB_FAILURE .
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR mlib_ImageConv2x2 (3MLIB),
.BR mlib_ImageConv2x2_Fp (3MLIB),
.BR mlib_ImageConv2x2Index (3MLIB),
.BR mlib_ImageConv3x3 (3MLIB),
.BR mlib_ImageConv3x3_Fp (3MLIB),
.BR mlib_ImageConv3x3Index (3MLIB),
.BR mlib_ImageConv4x4 (3MLIB),
.BR mlib_ImageConv4x4_Fp (3MLIB),
.BR mlib_ImageConv4x4Index (3MLIB),
.BR mlib_ImageConv5x5 (3MLIB),
.BR mlib_ImageConv5x5_Fp (3MLIB),
.BR mlib_ImageConv5x5Index (3MLIB),
.BR mlib_ImageConv7x7 (3MLIB),
.BR mlib_ImageConv7x7_Fp (3MLIB),
.BR mlib_ImageConv7x7Index (3MLIB),
.BR mlib_ImageConvKernelConvert (3MLIB),
.BR mlib_ImageConvMxN (3MLIB),
.BR mlib_ImageConvMxN_Fp (3MLIB),
.BR mlib_ImageConvMxNIndex (3MLIB),
.BR mlib_ImageConvolveMxN (3MLIB),
.BR mlib_ImageConvolveMxN_Fp (3MLIB),
.BR mlib_ImageSConv3x3 (3MLIB),
.BR mlib_ImageSConv5x5 (3MLIB),
.BR mlib_ImageSConv5x5_Fp (3MLIB),
.BR mlib_ImageSConv7x7 (3MLIB),
.BR mlib_ImageSConv7x7_Fp (3MLIB),
.BR mlib_ImageSConvKernelConvert (3MLIB),
.BR attributes (5)
