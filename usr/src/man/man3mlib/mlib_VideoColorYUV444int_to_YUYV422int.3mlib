'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mlib_VideoColorYUV444int_to_YUYV422int 3MLIB "2 Mar 2007" "SunOS 5.11" "mediaLib Library Functions"
.SH NAME
mlib_VideoColorYUV444int_to_YUYV422int \- convert YUV interleaved with
subsampling
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lmlib\fR [ \fIlibrary\fR.\|.\|. ]
#include <mlib.h>

\fBvoid\fR \fBmlib_VideoColorYUV444int_to_YUYV422int\fR(\fBmlib_u32 *\fIYUYV\fR,
     \fBconst mlib_u8 *\fIYUV\fR, \fBmlib_s32\fR \fIw\fR, \fBmlib_s32\fR \fIh\fR, \fBmlib_s32\fR \fIdlb\fR,
     \fBmlib_s32\fR \fIslb\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The YUV pixel stream is broken apart and recombined into a YUYV pixel
stream. All pixel components are 8-bit unsigned integers. The YUV buffer has
dimensions
.I w
and
.IR h .
Dimension
.I w
is assumed to be a
multiple of 2. Adjacent U and V values are averaged to get the output U and
V values. The sequence of values in the input stream is Y[r][c], U[r][c],
V[r][c], Y[r][c+1], U[r][c+1], V[r][c+1], .\|.\|.
.sp
.LP
The following equation is used:
.sp
.in +2
.nf
YUYV[r][c/2] = (Y[r][c]  << 24) |
               (((U[r][c] + U[r][c+1]) / 2) << 16) |
               (Y[r][c+1] << 8) |
               (((V[r][c] + V[r][c+1]) / 2))
.fi
.in -2

.sp
.LP
where \fBr = 0, 1, 2, .\|.\|., h-1\fR; and \fBc = 0, 2, 4, .\|.\|., w-2\fR.
.SH PARAMETERS
.sp
.LP
The function takes the following arguments:
.sp
.ne 2
.mk
.na
.I YUYV
.ad
.RS 8n
.rt
Pointer to output buffer.
.RE

.sp
.ne 2
.mk
.na
.I YUV
.ad
.RS 8n
.rt
Pointer to input buffer.
.RE

.sp
.ne 2
.mk
.na
.I w
.ad
.RS 8n
.rt
Image width in pixels.
.RE

.sp
.ne 2
.mk
.na
.I h
.ad
.RS 8n
.rt
Image height in lines.
.RE

.sp
.ne 2
.mk
.na
.I dlb
.ad
.RS 8n
.rt
Linebytes for output buffer.
.RE

.sp
.ne 2
.mk
.na
.I slb
.ad
.RS 8n
.rt
Linebytes for input buffers.
.RE

.SH RETURN VALUES
.sp
.LP
None.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR mlib_VideoColorYUV444seq_to_YUYV422int (3MLIB),
.BR mlib_VideoColorYUV444seq_to_UYVY422int (3MLIB),
.BR mlib_VideoColorYUV444int_to_UYVY422int (3MLIB),
.BR mlib_VideoColorUYV444int_to_YUYV422int (3MLIB),
.BR mlib_VideoColorUYV444int_to_UYVY422int (3MLIB),
.BR attributes (5)
