'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mlib_ImageRankFilterMxN_Fp 3MLIB "2 Mar 2007" "SunOS 5.11" "mediaLib Library Functions"
.SH NAME
mlib_ImageRankFilterMxN_Fp \- MxN rank filter
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lmlib\fR [ \fIlibrary\fR.\|.\|. ]
#include <mlib.h>

\fBmlib_status\fR \fBmlib_ImageRankFilterMxN_Fp\fR(\fBmlib_image *\fIdst\fR,
     \fBconst mlib_image *\fIsrc\fR, \fBmlib_s32\fR \fIm\fR, \fBmlib_s32\fR \fIn\fR, \fBmlib_s32\fR \fIrank\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B mlib_ImageRankFilterMxN_Fp()
function performs floating-point MxN
rank filtering on an image. Each pixel of the destination image is the pixel
with the user-specified rank in the filter window.
.sp
.LP
The source and destination images must be single-channel images.
.SH PARAMETERS
.sp
.LP
The function takes the following arguments:
.sp
.ne 2
.mk
.na
.I dst
.ad
.RS 8n
.rt
Pointer to destination image.
.RE

.sp
.ne 2
.mk
.na
.I src
.ad
.RS 8n
.rt
Pointer to source image.
.RE

.sp
.ne 2
.mk
.na
.I m
.ad
.RS 8n
.rt
Width of the filter window.
.B m
must be odd number greater than
.BR 1 .
.RE

.sp
.ne 2
.mk
.na
.I n
.ad
.RS 8n
.rt
Height of the filter window.
.B n
must be odd number greater than
.BR 1 .
.RE

.sp
.ne 2
.mk
.na
.I rank
.ad
.RS 8n
.rt
The rank of the destination pixel. The pixel with minimum value is
designated rank
.BR 0 .
.RE

.SH RETURN VALUES
.sp
.LP
The function returns
.B MLIB_SUCCESS
if successful. Otherwise it returns
.BR MLIB_FAILURE .
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR mlib_ImageMaxFilter3x3 (3MLIB),
.BR mlib_ImageMaxFilter3x3_Fp (3MLIB),
.BR mlib_ImageMaxFilter5x5 (3MLIB),
.BR mlib_ImageMaxFilter5x5_Fp (3MLIB),
.BR mlib_ImageMaxFilter7x7 (3MLIB),
.BR mlib_ImageMaxFilter7x7_Fp (3MLIB),
.BR mlib_ImageMedianFilter3x3 (3MLIB),
.BR mlib_ImageMedianFilter3x3_Fp (3MLIB),
.BR mlib_ImageMedianFilter3x3_US (3MLIB),
.BR mlib_ImageMedianFilter5x5 (3MLIB),
.BR mlib_ImageMedianFilter5x5_Fp (3MLIB),
.BR mlib_ImageMedianFilter5x5_US (3MLIB),
.BR mlib_ImageMedianFilter7x7 (3MLIB),
.BR mlib_ImageMedianFilter7x7_Fp (3MLIB),
.BR mlib_ImageMedianFilter7x7_US (3MLIB),
.BR mlib_ImageMedianFilterMxN (3MLIB),
.BR mlib_ImageMedianFilterMxN_Fp (3MLIB),
.BR mlib_ImageMedianFilterMxN_US (3MLIB),
.BR mlib_ImageMinFilter3x3 (3MLIB),
.BR mlib_ImageMinFilter3x3_Fp (3MLIB),
.BR mlib_ImageMinFilter5x5 (3MLIB),
.BR mlib_ImageMinFilter5x5_Fp (3MLIB),
.BR mlib_ImageMinFilter7x7 (3MLIB),
.BR mlib_ImageMinFilter7x7_Fp (3MLIB),
.BR mlib_ImageRankFilter3x3 (3MLIB),
.BR mlib_ImageRankFilter3x3_Fp (3MLIB),
.BR mlib_ImageRankFilter3x3_US (3MLIB),
.BR mlib_ImageRankFilter5x5 (3MLIB),
.BR mlib_ImageRankFilter5x5_Fp (3MLIB),
.BR mlib_ImageRankFilter5x5_US (3MLIB),
.BR mlib_ImageRankFilter7x7 (3MLIB),
.BR mlib_ImageRankFilter7x7_Fp (3MLIB),
.BR mlib_ImageRankFilter7x7_US (3MLIB),
.BR mlib_ImageRankFilterMxN (3MLIB),
.BR mlib_ImageRankFilterMxN_US (3MLIB),
.BR attributes (5)
