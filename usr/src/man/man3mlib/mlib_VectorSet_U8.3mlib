'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved 
.\" The contents of this file are subject to the terms of the Common Development and Distribution License (the "License").  You may not use this file except in compliance with the License.
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE or http://www.opensolaris.org/os/licensing.  See the License for the specific language governing permissions and limitations under the License.
.\" When distributing Covered Code, include this CDDL HEADER in each file and include the License file at usr/src/OPENSOLARIS.LICENSE.  If applicable, add the following below this CDDL HEADER, with the fields enclosed by brackets "[]" replaced with your own identifying information: Portions Copyright [yyyy] [name of copyright owner]
.TH mlib_VectorSet_U8 3MLIB "2 Mar 2007" "SunOS 5.11" "mediaLib Library Functions"
.SH NAME
mlib_VectorSet_U8, mlib_VectorSet_U8C, mlib_VectorSet_S8, mlib_VectorSet_S8C, mlib_VectorSet_S16, mlib_VectorSet_S16C, mlib_VectorSet_S32, mlib_VectorSet_S32C \- set vector to specified value
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR... ] \fIfile\fR... \fB-lmlib\fR [ \fIlibrary\fR... ]
#include <mlib.h>

\fBmlib_status\fR \fBmlib_VectorSet_U8\fR(\fBmlib_u8 *\fR\fIz\fR, \fBconst mlib_u8 *\fR\fIc\fR, 
     \fBmlib_s32\fR \fIn\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_VectorSet_U8C\fR(\fBmlib_u8 *\fR\fIz\fR, \fBconst mlib_u8 *\fR\fIc\fR, 
     \fBmlib_s32\fR \fIn\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_VectorSet_S8\fR(\fBmlib_s8 *\fR\fIz\fR, \fBconst mlib_s8 *\fR\fIc\fR, 
     \fBmlib_s32\fR \fIn\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_VectorSet_S8C\fR(\fBmlib_s8 *\fR\fIz\fR, \fBconst mlib_s8 *\fR\fIc\fR, 
     \fBmlib_s32\fR \fIn\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_VectorSet_S16\fR(\fBmlib_s16 *\fR\fIz\fR, \fBconst mlib_s16 *\fR\fIc\fR, 
     \fBmlib_s32\fR \fIn\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_VectorSet_S16C\fR(\fBmlib_s16 *\fR\fIz\fR, \fBconst mlib_s16 *\fR\fIc\fR, 
     \fBmlib_s32\fR \fIn\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_VectorSet_S32\fR(\fBmlib_s32 *\fR\fIz\fR, \fBconst mlib_s32 *\fR\fIc\fR, 
     \fBmlib_s32\fR \fIn\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_VectorSet_S32C\fR(\fBmlib_s32 *\fR\fIz\fR, \fBconst mlib_s32 *\fR\fIc\fR, 
     \fBmlib_s32\fR \fIn\fR);
.fi

.SH DESCRIPTION
.sp
.LP
Each of these functions sets a vector to a specified value.
.sp
.LP
For real data, the following equation is used:
.sp
.in +2
.nf
z[i] = c[0]
.fi
.in -2

.sp
.LP
where \fBi = 0, 1, ..., (n - 1)\fR.
.sp
.LP
For complex data, the following equation is used:
.sp
.in +2
.nf
z[2*i]     = c[0]
z[2*i + 1] = c[1]
.fi
.in -2

.sp
.LP
where \fBi = 0, 1, ..., (n - 1)\fR.
.SH PARAMETERS
.sp
.LP
Each of the functions takes the following arguments:
.sp
.ne 2
.mk
.na
\fB\fIz\fR\fR
.ad
.RS 5n
.rt  
Pointer to the first element of the destination vector.
.RE

.sp
.ne 2
.mk
.na
\fB\fIc\fR\fR
.ad
.RS 5n
.rt  
Pointer to the source scalar. When the function is used with complex data types, \fBc[0]\fR contains the scaling factor for the real part, and \fBc[1]\fR contains the scaling factor for the imaginary part.
.RE

.sp
.ne 2
.mk
.na
\fB\fIn\fR\fR
.ad
.RS 5n
.rt  
Number of elements in the vector.
.RE

.SH RETURN VALUES
.sp
.LP
Each of the functions returns \fBMLIB_SUCCESS\fR if successful. Otherwise it returns \fBMLIB_FAILURE\fR.
.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
\fBattributes\fR(5)
