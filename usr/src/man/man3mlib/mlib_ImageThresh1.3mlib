'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mlib_ImageThresh1 3MLIB "2 Mar 2007" "SunOS 5.11" "mediaLib Library Functions"
.SH NAME
mlib_ImageThresh1 \- image thresholding
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lmlib\fR [ \fIlibrary\fR.\|.\|. ]
#include <mlib.h>

\fBmlib_status\fR \fBmlib_ImageThresh1\fR(\fBmlib_image *\fIdst\fR, \fBconst mlib_image *\fIsrc\fR,
     \fBconst mlib_s32 *\fIthresh\fR, \fBconst mlib_s32 *\fIghigh\fR, \fBconst mlib_s32 *\fIglow\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B mlib_ImageThresh1()
function compares each pixel in the source
image to a threshold value. If the pixel is less than or equal to the
threshold value, then the destination pixel is set to the low output level. If
the pixel is greater than the threshold value, then the destination pixel is
set to the high output level.
.sp
.LP
The data type of the destination image can be
.B MLIB_BIT
or can be the
same as the data type of the source image.
.sp
.LP
It uses the following equation:
.sp
.in +2
.nf
dst[x][y][i] = glow[i]   if src[x][y][i] \(<= thresh[i]
dst[x][y][i] = ghigh[i]  if src[x][y][i] > thresh[i]
.fi
.in -2

.SH PARAMETERS
.sp
.LP
The function takes the following arguments:
.sp
.ne 2
.mk
.na
.I dst
.ad
.RS 10n
.rt
Pointer to destination image.
.RE

.sp
.ne 2
.mk
.na
.I src
.ad
.RS 10n
.rt
Pointer to source image.
.RE

.sp
.ne 2
.mk
.na
.I thresh
.ad
.RS 10n
.rt
Threshold value.
.B thresh[i]
contains the threshold for channel
.BR i .
.RE

.sp
.ne 2
.mk
.na
.I ghigh
.ad
.RS 10n
.rt
High output level.
.B ghigh[i]
contains the high output level for channel
.BR i .
.RE

.sp
.ne 2
.mk
.na
.I glow
.ad
.RS 10n
.rt
Low output level.
.B glow[i]
contains the low output level for channel
.BR i .
.RE

.SH RETURN VALUES
.sp
.LP
The function returns
.B MLIB_SUCCESS
if successful. Otherwise it returns
.BR MLIB_FAILURE .
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR mlib_ImageThresh1_Fp (3MLIB),
.BR mlib_ImageThresh1_Fp_Inp (3MLIB),
.BR mlib_ImageThresh1_Inp (3MLIB),
.BR mlib_ImageThresh2 (3MLIB),
.BR mlib_ImageThresh2_Fp (3MLIB),
.BR mlib_ImageThresh2_Fp_Inp (3MLIB),
.BR mlib_ImageThresh2_Inp (3MLIB),
.BR mlib_ImageThresh3 (3MLIB),
.BR mlib_ImageThresh3_Fp (3MLIB),
.BR mlib_ImageThresh3_Fp_Inp (3MLIB),
.BR mlib_ImageThresh3_Inp (3MLIB),
.BR mlib_ImageThresh4 (3MLIB),
.BR mlib_ImageThresh4_Fp (3MLIB),
.BR mlib_ImageThresh4_Fp_Inp (3MLIB),
.BR mlib_ImageThresh4_Inp (3MLIB),
.BR mlib_ImageThresh5 (3MLIB),
.BR mlib_ImageThresh5_Fp (3MLIB),
.BR mlib_ImageThresh5_Fp_Inp (3MLIB),
.BR mlib_ImageThresh5_Inp (3MLIB),
.BR attributes (5)
