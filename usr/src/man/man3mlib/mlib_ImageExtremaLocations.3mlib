'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mlib_ImageExtremaLocations 3MLIB "2 Mar 2007" "SunOS 5.11" "mediaLib Library Functions"
.SH NAME
mlib_ImageExtremaLocations, mlib_ImageExtremaLocations_Fp \- image extrema
and their locations
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lmlib\fR [ \fIlibrary\fR.\|.\|. ]
#include <mlib.h>

\fBmlib_status\fR \fBmlib_ImageExtremaLocations\fR(\fB mlib_s32 *\fImin\fR, \fBmlib_s32 *\fImax\fR,
     \fBconst mlib_image *\fIimg\fR, \fBmlib_s32\fR \fIxStart\fR, \fBmlib_s32\fR \fIyStart\fR,
     \fBmlib_s32\fR \fIxPeriod\fR, \fBmlib_s32\fR \fIyPeriod\fR, \fBmlib_s32\fR \fIsaveLocations\fR,
     \fBmlib_s32\fR \fImaxRuns\fR, \fBmlib_s32 *\fIminCounts\fR, \fBmlib_s32 *\fImaxCounts\fR,
     \fBmlib_s32 **\fIminLocations\fR, \fBmlib_s32 **\fImaxLocations\fR, \fBmlib_s32\fR \fIlen\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_ImageExtremaLocations_Fp\fR(\fB mlib_d64 *\fImin\fR, \fBmlib_d64 *\fImax\fR,
     \fBconst mlib_image *\fIimg\fR, \fBmlib_s32\fR \fIxStart\fR, \fBmlib_s32\fR \fIyStart\fR,
     \fBmlib_s32\fR \fIxPeriod\fR, \fBmlib_s32\fR \fIyPeriod\fR, \fBmlib_s32\fR \fIsaveLocations\fR,
     \fBmlib_s32\fR \fImaxRuns\fR, \fBmlib_s32 *\fIminCounts\fR, \fBmlib_s32 *\fImaxCounts\fR,
     \fBmlib_s32 **\fIminLocations\fR, \fBmlib_s32 **\fImaxLocations\fR, \fBmlib_s32\fR \fIlen\fR);
.fi

.SH DESCRIPTION
.sp
.LP
Each of the functions finds the image-wise minimum and maximum pixel values
for each channel, and optionally, their locations.
.sp
.LP
Each of the functions scans an image, finds the minimum and maximum pixel
values for each channel, and finds the locations of those pixels with the
minimum or maximum values.
.sp
.LP
The user provides initial minimum/maximum values through the arguments
\fBmin\fR and
.BR max .
This function will update them based on
findings.
.sp
.LP
The set of pixels scanned may furthermore be reduced by specifying
\fBxPeriod\fR and \fByPeriod\fR parameters that specify the sampling rate
along each axis.
.sp
.LP
The set of pixels to be scanned may be obtained from the following
equation: 
.sp
.in +2
.nf
x = xStart + p*xPeriod;  0 \(<= p < (w - xStart)/xPeriod
y = yStart + q*yPeriod;  0 \(<= q < (h - yStart)/yPeriod
.fi
.in -2

.sp
.LP
The locations of the minimum/maximum, if asked, are recorded in a format of
run-length coding. Each run-length code, or simply called a run, has a
format of
.BR "(xStart, yStart, length)" .
Here
.B length
is defined on
the low-resolution image (with downsampling factors of \fB1/xPeriod\fR,
.BR 1/yPeriod )
and does not cross rows. So the run-length code \fB(xStart,
yStart, length)\fR means that the pixels at \fB(xStart, yStart), (xStart +
xPeriod, yStart), .\|.\|., (xStart + (length - 1)*xPeriod, yStart)\fR of the
original image have a value of the minimum/maximum.
.sp
.LP
The buffers for
.B minLocations
and
.B maxLocations
are organized in
the following format for each channel
.BR i :
.sp
.in +2
.nf
minLocations[i][0] = xStart0;  // the 1st run
minLocations[i][1] = yStart0;
minLocations[i][2] = length0;
minLocations[i][3] = xStart1;  // the 2nd run
minLocations[i][4] = yStart1;
minLocations[i][5] = length1;
            ......             // more runs
minLocations[i][len-1] = .\|.\|.;
.fi
.in -2

.sp
.LP
It is the user's responsibility to allocate enough memory for the buffers
for
.B minLocations
and
.BR maxLocations .
This function may return
.BR MLIB_OUTOFRANGE ,
if any of the buffers is not big enough.
.SH PARAMETERS
.sp
.LP
The function takes the following arguments:
.sp
.ne 2
.mk
.na
.I min
.ad
.RS 17n
.rt
Pointer to the minimum values.
.RE

.sp
.ne 2
.mk
.na
.I max
.ad
.RS 17n
.rt
Pointer to the maximum values.
.RE

.sp
.ne 2
.mk
.na
.I img
.ad
.RS 17n
.rt
Pointer to the input image.
.RE

.sp
.ne 2
.mk
.na
.I xStart
.ad
.RS 17n
.rt
Initial X sample coordinate.
.RE

.sp
.ne 2
.mk
.na
.I yStart
.ad
.RS 17n
.rt
Initial Y sample coordinate.
.RE

.sp
.ne 2
.mk
.na
.I xPeriod
.ad
.RS 17n
.rt
X sampling rate. \fBxPeriod \(>= 1\fR.
.RE

.sp
.ne 2
.mk
.na
.I yPeriod
.ad
.RS 17n
.rt
Y sampling rate. \fByPeriod \(>= 1\fR.
.RE

.sp
.ne 2
.mk
.na
.I saveLocations
.ad
.RS 17n
.rt
If true (i.e.,
.BR "saveLocations != 0" ),
find the extrema locations;
otherwise only find the extrema.
.RE

.sp
.ne 2
.mk
.na
.I maxRuns
.ad
.RS 17n
.rt
 Number of runs of the minimum/maximum the caller expects for each channel. \fBmaxRuns \(>= 1\fR. If it is
.BR MLIB_S32_MAX ,
all the minimum/maximum locations should be recorded.
.RE

.sp
.ne 2
.mk
.na
.I minCounts
.ad
.RS 17n
.rt
Pointer to the numbers of runs of the minimum recorded in
.BR minLocations .
.RE

.sp
.ne 2
.mk
.na
.I maxCounts
.ad
.RS 17n
.rt
Pointer to the numbers of runs of the maximum recorded in
.BR maxLocations .
.RE

.sp
.ne 2
.mk
.na
.I minLocations
.ad
.RS 17n
.rt
Pointer to the minimum locations in a format of run-length coding.
.RE

.sp
.ne 2
.mk
.na
.I maxLocations
.ad
.RS 17n
.rt
Pointer to the maximum locations in a format of run-length coding.
.RE

.sp
.ne 2
.mk
.na
.I len
.ad
.RS 17n
.rt
Length of the buffers for the minimum/maximum locations in each channel.
.RE

.SH RETURN VALUES
.sp
.LP
The function returns
.B MLIB_SUCCESS
if successful. Otherwise it returns
.BR MLIB_FAILURE .
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR mlib_ImageExtrema2 (3MLIB),
.BR mlib_ImageMaximum (3MLIB),
.BR mlib_ImageMaximum_Fp (3MLIB),
.BR mlib_ImageMinimum (3MLIB),
.BR mlib_ImageMinimum_Fp (3MLIB),
.BR attributes (5)
