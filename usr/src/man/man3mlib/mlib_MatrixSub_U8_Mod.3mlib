'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mlib_MatrixSub_U8_Mod 3MLIB "2 Mar 2007" "SunOS 5.11" "mediaLib Library Functions"
.SH NAME
mlib_MatrixSub_U8_Mod, mlib_MatrixSub_U8_Sat, mlib_MatrixSub_U8C_Mod,
mlib_MatrixSub_U8C_Sat, mlib_MatrixSub_S8_Mod, mlib_MatrixSub_S8_Sat,
mlib_MatrixSub_S8C_Mod, mlib_MatrixSub_S8C_Sat, mlib_MatrixSub_S16_Mod,
mlib_MatrixSub_S16_Sat, mlib_MatrixSub_S16C_Mod, mlib_MatrixSub_S16C_Sat,
mlib_MatrixSub_S32_Mod, mlib_MatrixSub_S32_Sat, mlib_MatrixSub_S32C_Mod,
mlib_MatrixSub_S32C_Sat \- matrix subtraction, in place
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lmlib\fR [ \fIlibrary\fR.\|.\|. ]
#include <mlib.h>

\fBmlib_status\fR \fBmlib_MatrixSub_U8_Mod\fR(\fBmlib_u8 *\fIxz\fR,
    \fBconst mlib_u8 *\fIy\fR, \fBmlib_s32\fR \fIm\fR, \fBmlib_s32\fR \fIn\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_MatrixSub_U8_Sat\fR(\fBmlib_u8 *\fIxz\fR,
     \fBconst mlib_u8 *\fIy\fR, \fBmlib_s32\fR \fIm\fR, \fBmlib_s32\fR \fIn\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_MatrixSub_U8C_Mod\fR(\fBmlib_u8 *\fIxz\fR,
     \fBconst mlib_u8 *\fIy\fR, \fBmlib_s32\fR \fIm\fR, \fBmlib_s32\fR \fIn\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_MatrixSub_U8C_Sat\fR(\fBmlib_u8 *\fIxz\fR,
     \fBconst mlib_u8 *\fIy\fR, \fBmlib_s32\fR \fIm\fR, \fBmlib_s32\fR \fIn\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_MatrixSub_S8_Mod\fR(\fBmlib_s8 *\fIxz\fR,
     \fBconst mlib_s8 *\fIy\fR, \fBmlib_s32\fR \fIm\fR, \fBmlib_s32\fR \fIn\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_MatrixSub_S8_Sat\fR(\fBmlib_s8 *\fIxz\fR,
     \fBconst mlib_s8 *\fIy\fR, \fBmlib_s32\fR \fIm\fR, \fBmlib_s32\fR \fIn\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_MatrixSub_S8C_Mod\fR(\fBmlib_s8 *\fIxz\fR,
     \fBconst mlib_s8 *\fIy\fR, \fBmlib_s32\fR \fIm\fR, \fBmlib_s32\fR \fIn\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_MatrixSub_S8C_Sat\fR(\fBmlib_s8 *\fIxz\fR,
     \fBconst mlib_s8 *\fIy\fR, \fBmlib_s32\fR \fIm\fR, \fBmlib_s32\fR \fIn\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_MatrixSub_S16_Mod\fR(\fBmlib_s16 *\fIxz\fR,
     \fBconst mlib_s16 *\fIy\fR, \fBmlib_s32\fR \fIm\fR, \fBmlib_s32\fR \fIn\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_MatrixSub_S16_Sat\fR(\fBmlib_s16 *\fIxz\fR,
     \fBconst mlib_s16 *\fIy\fR, \fBmlib_s32\fR \fIm\fR, \fBmlib_s32\fR \fIn\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_MatrixSub_S16C_Mod\fR(\fBmlib_s16 *\fIxz\fR,
     \fBconst mlib_s16 *\fIy\fR, \fBmlib_s32\fR \fIm\fR, \fBmlib_s32\fR \fIn\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_MatrixSub_S16C_Sat\fR(\fBmlib_s16 *\fIxz\fR,
     \fBconst mlib_s16 *\fIy\fR, \fBmlib_s32\fR \fIm\fR, \fBmlib_s32\fR \fIn\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_MatrixSub_S32_Mod\fR(\fBmlib_s32 *\fIxz\fR,
     \fBconst mlib_s32 *\fIy\fR, \fBmlib_s32\fR \fIm\fR, \fBmlib_s32\fR \fIn\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_MatrixSub_S32_Sat\fR(\fBmlib_s32 *\fIxz\fR,
     \fBconst mlib_s32 *\fIy\fR, \fBmlib_s32\fR \fIm\fR, \fBmlib_s32\fR \fIn\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_MatrixSub_S32C_Mod\fR(\fBmlib_s32 *\fIxz\fR,
     \fBconst mlib_s32 *\fIy\fR, \fBmlib_s32\fR \fIm\fR, \fBmlib_s32\fR \fIn\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_MatrixSub_S32C_Sat\fR(\fBmlib_s32 *\fIxz\fR,
     \fBconst mlib_s32 *\fIy\fR, \fBmlib_s32\fR \fIm\fR, \fBmlib_s32\fR \fIn\fR);
.fi

.SH DESCRIPTION
.sp
.LP
Each of these functions performs an in-place subtraction of the second
matrix from the first matrix.
.sp
.LP
It uses the following equation:
.sp
.in +2
.nf
xz[i] = xz[i] - y[i]
.fi
.in -2

.sp
.LP
where
\fBi = 0, 1, .\|.\|., (m*n - 1)\fR for real data; \fBi = 0, 1, .\|.\|.,
(m*n*2 - 1)\fR for complex data.
.SH PARAMETERS
.sp
.LP
Each of the functions takes the following arguments:
.sp
.ne 2
.mk
.na
.I xz
.ad
.RS 6n
.rt
Pointer to the first source and destination matrix.
.RE

.sp
.ne 2
.mk
.na
.I y
.ad
.RS 6n
.rt
Pointer to the second source matrix.
.RE

.sp
.ne 2
.mk
.na
.I m
.ad
.RS 6n
.rt
Number of rows in the matrices.
.RE

.sp
.ne 2
.mk
.na
.I n
.ad
.RS 6n
.rt
Number of columns in the matrices.
.RE

.SH RETURN VALUES
.sp
.LP
Each of the functions returns
.B MLIB_SUCCESS
if successful. Otherwise
it returns
.BR MLIB_FAILURE .
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR mlib_MatrixSub_U8_U8_Mod (3MLIB),
.BR attributes (5)
