'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mlib_ImageConvKernelConvert 3MLIB "2 Mar 2007" "SunOS 5.11" "mediaLib Library Functions"
.SH NAME
mlib_ImageConvKernelConvert \- convolution kernel conversion
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lmlib\fR [ \fIlibrary\fR.\|.\|. ]
#include <mlib.h>

\fBmlib_status\fR \fBmlib_ImageConvKernelConvert\fR(\fBmlib_s32 *\fIikernel\fR, \fBmlib_s32 *\fIiscale\fR,
     \fBconst mlib_d64 *\fIfkernel\fR, \fBmlib_s32\fR \fIm\fR, \fBmlib_s32\fR \fIn\fR, \fBmlib_type\fR \fItype\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B mlib_ImageConvKernelConvert()
function converts a floating-point
convolution kernel to an integer kernel with its scaling factor suitable to
be used in convolution functions.
.SH PARAMETERS
.sp
.LP
The function takes the following arguments:
.sp
.ne 2
.mk
.na
.I ikernel
.ad
.RS 11n
.rt
Pointer to integer convolution kernel, in row major order.
.RE

.sp
.ne 2
.mk
.na
.I iscale
.ad
.RS 11n
.rt
Pointer to scaling factor of the integer convolution kernel.
.RE

.sp
.ne 2
.mk
.na
\fIfkernel\fR
.ad
.RS 11n
.rt
Pointer to floating-point convolution kernel, in row major order.
.RE

.sp
.ne 2
.mk
.na
.I m
.ad
.RS 11n
.rt
Width of the convolution kernel.
.BR "m \(>= 1" .
.RE

.sp
.ne 2
.mk
.na
.I n
.ad
.RS 11n
.rt
Height of the convolution kernel.
.BR "n \(>= 1" .
.RE

.sp
.ne 2
.mk
.na
.I type
.ad
.RS 11n
.rt
The image type. It can be one of the following:
.sp
.in +2
.nf
MLIB_BIT
MLIB_BYTE
MLIB_SHORT
MLIB_USHORT
MLIB_INT
.fi
.in -2

.RE

.SH RETURN VALUES
.sp
.LP
The function returns
.B MLIB_SUCCESS
if successful. Otherwise it returns
.BR MLIB_FAILURE .
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR mlib_ImageConv2x2 (3MLIB),
.BR mlib_ImageConv2x2_Fp (3MLIB),
.BR mlib_ImageConv2x2Index (3MLIB),
.BR mlib_ImageConv3x3 (3MLIB),
.BR mlib_ImageConv3x3_Fp (3MLIB),
.BR mlib_ImageConv3x3Index (3MLIB),
.BR mlib_ImageConv4x4 (3MLIB),
.BR mlib_ImageConv4x4_Fp (3MLIB),
.BR mlib_ImageConv4x4Index (3MLIB),
.BR mlib_ImageConv5x5 (3MLIB),
.BR mlib_ImageConv5x5_Fp (3MLIB),
.BR mlib_ImageConv5x5Index (3MLIB),
.BR mlib_ImageConv7x7 (3MLIB),
.BR mlib_ImageConv7x7_Fp (3MLIB),
.BR mlib_ImageConv7x7Index (3MLIB),
.BR mlib_ImageConvMxN (3MLIB),
.BR mlib_ImageConvMxN_Fp (3MLIB),
.BR mlib_ImageConvMxNIndex (3MLIB),
.BR mlib_ImageConvolveMxN (3MLIB),
.BR mlib_ImageConvolveMxN_Fp (3MLIB),
.BR mlib_ImageSConv3x3 (3MLIB),
.BR mlib_ImageSConv3x3_Fp (3MLIB),
.BR mlib_ImageSConv5x5 (3MLIB),
.BR mlib_ImageSConv5x5_Fp (3MLIB),
.BR mlib_ImageSConv7x7 (3MLIB),
.BR mlib_ImageSConv7x7_Fp (3MLIB),
.BR mlib_ImageSConvKernelConvert (3MLIB),
.BR attributes (5)
