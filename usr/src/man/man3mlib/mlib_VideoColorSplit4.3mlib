'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mlib_VideoColorSplit4 3MLIB "2 Mar 2007" "SunOS 5.11" "mediaLib Library Functions"
.SH NAME
mlib_VideoColorSplit4 \- color conversion (color channel split)
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lmlib\fR [ \fIlibrary\fR.\|.\|. ]
#include <mlib.h>

\fBmlib_status\fR \fBmlib_VideoColorSplit4\fR(\fBmlib_u8 *\fIcolor1\fR, \fBmlib_u8 *\fIcolor2\fR,
     \fBmlib_u8 *\fIcolor3\fR, \fBmlib_u8 *\fIcolor4\fR, \fBconst mlib_u8 *\fIcolors\fR, \fBmlib_s32\fR \fIn\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B mlib_VideoColorSplit4()
function performs color channel split.
.sp
.LP
The elements of the colors array are selected in consecutive groups of
four. As each group is processed, the first element is stored in the color1
array; the second element, in the color2 array; and so on. This process is
repeated untill the end of the colors array is reached.
.SH PARAMETERS
.sp
.LP
The function takes the following arguments:
.sp
.ne 2
.mk
.na
.I color1
.ad
.RS 10n
.rt
Pointer to first color component row. color1 must be 8-byte aligned.
.RE

.sp
.ne 2
.mk
.na
.I color2
.ad
.RS 10n
.rt
Pointer to second color component row. color2 must be 8-byte aligned.
.RE

.sp
.ne 2
.mk
.na
.I color3
.ad
.RS 10n
.rt
Pointer to third color component row. color3 must be 8-byte aligned.
.RE

.sp
.ne 2
.mk
.na
.I color4
.ad
.RS 10n
.rt
Pointer to fourth color component row. color4 must be 8-byte aligned.
.RE

.sp
.ne 2
.mk
.na
.I colors
.ad
.RS 10n
.rt
Pointer to colors multi-component row. colors must be 8-byte aligned.
.RE

.sp
.ne 2
.mk
.na
.I n
.ad
.RS 10n
.rt
Length of color1, color2, color3, and color4 arrays. Length of colors must
be 4*n.
.RE

.SH RETURN VALUES
.sp
.LP
The function returns
.B MLIB_SUCCESS
if successful. Otherwise it returns
.BR MLIB_FAILURE .
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR mlib_VideoColorMerge2 (3MLIB),
.BR mlib_VideoColorMerge2_S16 (3MLIB),
.BR mlib_VideoColorMerge3 (3MLIB),
.BR mlib_VideoColorMerge3_S16 (3MLIB),
.BR mlib_VideoColorMerge4 (3MLIB),
.BR mlib_VideoColorMerge4_S16 (3MLIB),
.BR mlib_VideoColorSplit2 (3MLIB),
.BR mlib_VideoColorSplit2_S16 (3MLIB),
.BR mlib_VideoColorSplit3 (3MLIB),
.BR mlib_VideoColorSplit3_S16 (3MLIB),
.BR mlib_VideoColorSplit4_S16 (3MLIB),
.BR attributes (5)
