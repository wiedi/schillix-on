'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mlib_GraphicsDrawLineSet 3MLIB "2 Mar 2007" "SunOS 5.11" "mediaLib Library Functions"
.SH NAME
mlib_GraphicsDrawLineSet, mlib_GraphicsDrawLineSet_8,
mlib_GraphicsDrawLineSet_32, mlib_GraphicsDrawLineSet_X_8,
mlib_GraphicsDrawLineSet_X_32, mlib_GraphicsDrawLineSet_A_8,
mlib_GraphicsDrawLineSet_A_32, mlib_GraphicsDrawLineSet_B_8,
mlib_GraphicsDrawLineSet_B_32, mlib_GraphicsDrawLineSet_G_8,
mlib_GraphicsDrawLineSet_G_32, mlib_GraphicsDrawLineSet_Z_8,
mlib_GraphicsDrawLineSet_Z_32, mlib_GraphicsDrawLineSet_AB_8,
mlib_GraphicsDrawLineSet_AB_32, mlib_GraphicsDrawLineSet_ABG_8,
mlib_GraphicsDrawLineSet_ABG_32, mlib_GraphicsDrawLineSet_ABGZ_8,
mlib_GraphicsDrawLineSet_ABGZ_32, mlib_GraphicsDrawLineSet_ABZ_8,
mlib_GraphicsDrawLineSet_ABZ_32, mlib_GraphicsDrawLineSet_AG_8,
mlib_GraphicsDrawLineSet_AG_32, mlib_GraphicsDrawLineSet_AGZ_8,
mlib_GraphicsDrawLineSet_AGZ_32, mlib_GraphicsDrawLineSet_AZ_8,
mlib_GraphicsDrawLineSet_AZ_32, mlib_GraphicsDrawLineSet_BG_8,
mlib_GraphicsDrawLineSet_BG_32, mlib_GraphicsDrawLineSet_BGZ_8,
mlib_GraphicsDrawLineSet_BGZ_32, mlib_GraphicsDrawLineSet_BZ_8,
mlib_GraphicsDrawLineSet_BZ_32, mlib_GraphicsDrawLineSet_GZ_8,
mlib_GraphicsDrawLineSet_GZ_32 \- draw line set where each member can have
different end points
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lmlib\fR [ \fIlibrary\fR.\|.\|. ]
#include <mlib.h>

\fBmlib_status\fR \fBmlib_GraphicsDrawLineSet_8\fR(\fBmlib_image *\fIbuffer\fR,
     \fBconst mlib_s16 *\fIx\fR, \fBconst mlib_s16 *\fIy\fR, \fBmlib_s32\fR \fInpoints\fR, \fBmlib_s32\fR \fIc\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawLineSet_32\fR(\fBmlib_image *\fIbuffer\fR,
     \fBconst mlib_s16 *\fIx\fR, \fBconst mlib_s16 *\fIy\fR, \fBmlib_s32\fR \fInpoints\fR, \fBmlib_s32\fR \fIc\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawLineSet_X_8\fR(\fBmlib_image *\fIbuffer\fR,
     \fBconst mlib_s16 *\fIx\fR, \fBconst mlib_s16 *\fIy\fR, \fBmlib_s32\fR \fInpoints\fR,
     \fBmlib_s32\fR \fIc\fR, \fBmlib_s32\fR \fIc2\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawLineSet_X_32\fR(\fBmlib_image *\fIbuffer\fR,
     \fBconst mlib_s16 *\fIx\fR, \fBconst mlib_s16 *\fIy\fR, \fBmlib_s32\fR \fInpoints\fR,
     \fBmlib_s32\fR \fIc\fR, \fBmlib_s32\fR \fIc2\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawLineSet_A_8\fR(\fBmlib_image *\fIbuffer\fR,
     \fBconst mlib_s16 *\fIx\fR, \fBconst mlib_s16 *\fIy\fR, \fBmlib_s32\fR \fInpoints\fR, \fBmlib_s32\fR \fIc\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawLineSet_A_32\fR(\fBmlib_image *\fIbuffer\fR,
     \fBconst mlib_s16 *\fIx\fR, \fBconst mlib_s16 *\fIy\fR, \fBmlib_s32\fR \fInpoints\fR, \fBmlib_s32\fR \fIc\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawLineSet_B_8\fR(\fBmlib_image *\fIbuffer\fR,
     \fBconst mlib_s16 *\fIx\fR, \fBconst mlib_s16 *\fIy\fR, \fBmlib_s32\fR \fInpoints\fR,
     \fBmlib_s32\fR \fIc\fR, \fBmlib_s32\fR \fIa\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawLineSet_B_32\fR(\fBmlib_image *\fIbuffer\fR,
     \fBconst mlib_s16 *\fIx\fR, \fBconst mlib_s16 *\fIy\fR, \fBmlib_s32\fR \fInpoints\fR,
     \fBmlib_s32\fR \fIc\fR, \fBmlib_s32\fR \fIa\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawLineSet_G_8\fR(\fBmlib_image *\fIbuffer\fR,
     \fBconst mlib_s16 *\fIx\fR, \fBconst mlib_s16 *\fIy\fR, \fBmlib_s32\fR \fInpoints\fR,
     \fBconst mlib_s32 *\fIc\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawLineSet_G_32\fR(\fBmlib_image *\fIbuffer\fR,
     \fBconst mlib_s16 *\fIx\fR, \fBconst mlib_s16 *\fIy\fR, \fBmlib_s32\fR \fInpoints\fR,
      \fBconst mlib_s32 *\fIc\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawLineSet_Z_8\fR(\fBmlib_image *\fIbuffer\fR,
     \fBmlib_image *\fIzbuffer\fR, \fBconst mlib_s16 *\fIx\fR, \fBconst mlib_s16 *\fIy\fR,
     \fBconst mlib_s16 *\fIz\fR, \fBmlib_s32\fR \fInpoints\fR, \fBmlib_s32\fR \fIc\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawLineSet_Z_32\fR(\fBmlib_image *\fIbuffer\fR,
     \fBmlib_image *\fIzbuffer\fR, \fBconst mlib_s16 *\fIx\fR, \fBconst mlib_s16 *\fIy\fR,
     \fBconst mlib_s16 *\fIz\fR, \fBmlib_s32\fR \fInpoints\fR, \fBmlib_s32\fR \fIc\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawLineSet_AB_8\fR(\fBmlib_image *\fIbuffer\fR,
     \fBconst mlib_s16 *\fIx\fR, \fBconst mlib_s16 *\fIy\fR, \fBmlib_s32\fR \fInpoints\fR,
     \fBmlib_s32\fR \fIc\fR, \fBmlib_s32\fR \fIa\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawLineSet_AB_32\fR(\fBmlib_image *\fIbuffer\fR,
     \fBconst mlib_s16 *\fIx\fR, \fBconst mlib_s16 *\fIy\fR, \fBmlib_s32\fR \fInpoints\fR,
     \fBmlib_s32\fR \fIc\fR, \fBmlib_s32\fR \fIa\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawLineSet_ABG_8\fR(\fBmlib_image *\fIbuffer\fR,
     \fBconst mlib_s16 *\fIx\fR, \fBconst mlib_s16 *\fIy\fR, \fBmlib_s32\fR \fInpoints\fR,
     \fBconst mlib_s32 *\fIc\fR, \fBmlib_s32\fR \fIa\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawLineSet_ABG_32\fR(\fBmlib_image *\fIbuffer\fR,
     \fBconst mlib_s16 *\fIx\fR, \fBconst mlib_s16 *\fIy\fR, \fBmlib_s32\fR \fInpoints\fR,
     \fBconst mlib_s32 *\fIc\fR, \fBmlib_s32\fR \fIa\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawLineSet_ABGZ_8\fR(\fBmlib_image *\fIbuffer\fR,
     \fBmlib_image *\fIzbuffer\fR, \fBconst mlib_s16 *\fIx\fR, \fBconst mlib_s16 *\fIy\fR,
     \fBconst mlib_s16 *\fIz\fR, \fBmlib_s32\fR \fInpoints\fR,
     \fBconst mlib_s32 *\fIc\fR, \fBmlib_s32\fR \fIa\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawLineSet_ABGZ_32\fR(\fBmlib_image *\fIbuffer\fR,
     \fBmlib_image *\fIzbuffer\fR, \fBconst mlib_s16 *\fIx\fR, \fBconst mlib_s16 *\fIy\fR,
     \fBconst mlib_s16 *\fIz\fR, \fBmlib_s32\fR \fInpoints\fR,
     \fBconst mlib_s32 *\fIc\fR, \fBmlib_s32\fR \fIa\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawLineSet_ABZ_8\fR(\fBmlib_image *\fIbuffer\fR,
     \fBmlib_image *\fIzbuffer\fR, \fBconst mlib_s16 *\fIx\fR, \fBconst mlib_s16 *\fIy\fR,
     \fBconst mlib_s16 *\fIz\fR, \fBmlib_s32\fR \fInpoints\fR, \fBmlib_s32\fR \fIc\fR, \fBmlib_s32\fR \fIa\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawLineSet_ABZ_32\fR(\fBmlib_image *\fIbuffer\fR,
     \fBmlib_image *\fIzbuffer\fR, \fBconst mlib_s16 *\fIx\fR, \fBconst mlib_s16 *\fIy\fR,
     \fBconst mlib_s16 *\fIz\fR, \fBmlib_s32\fR \fInpoints\fR, \fBmlib_s32\fR \fIc\fR, \fBmlib_s32\fR \fIa\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawLineSet_AG_8\fR(\fBmlib_image *\fIbuffer\fR,
     \fBconst mlib_s16 *\fIx\fR, \fBconst mlib_s16 *\fIy\fR, \fBmlib_s32\fR \fInpoints\fR,
     \fBconst mlib_s32 *\fIc\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawLineSet_AG_32\fR(\fBmlib_image *\fIbuffer\fR,
     \fBconst mlib_s16 *\fIx\fR, \fBconst mlib_s16 *\fIy\fR, \fBmlib_s32\fR \fInpoints\fR,
     \fBconst mlib_s32 *\fIc\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawLineSet_AGZ_8\fR(\fBmlib_image *\fIbuffer\fR,
     \fBmlib_image *\fIzbuffer\fR, \fBconst mlib_s16 *\fIx\fR, \fBconst mlib_s16 *\fIy\fR,
     \fBconst mlib_s16 *\fIz\fR, \fBmlib_s32\fR \fInpoints\fR, \fBconst mlib_s32 *\fIc\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawLineSet_AGZ_32\fR(\fBmlib_image *\fIbuffer\fR,
     \fBmlib_image *\fIzbuffer\fR, \fBconst mlib_s16 *\fIx\fR, \fBconst mlib_s16 *\fIy\fR,
     \fBconst mlib_s16 *\fIz\fR, \fBmlib_s32\fR \fInpoints\fR, \fBconst mlib_s32 *\fIc\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawLineSet_AZ_8\fR(\fBmlib_image *\fIbuffer\fR,
     \fBmlib_image *\fIzbuffer\fR, \fBconst mlib_s16 *\fIx\fR, \fBconst mlib_s16 *\fIy\fR,
     \fBconst mlib_s16 *\fIz\fR, \fBmlib_s32\fR \fInpoints\fR, \fBmlib_s32\fR \fIc\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawLineSet_AZ_32\fR(\fBmlib_image *\fIbuffer\fR,
     \fBmlib_image *\fIzbuffer\fR, \fBconst mlib_s16 *\fIx\fR, \fBconst mlib_s16 *\fIy\fR,
     \fBconst mlib_s16 *\fIz\fR, \fBmlib_s32\fR \fInpoints\fR, \fBmlib_s32\fR \fIc\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawLineSet_BG_8\fR(\fBmlib_image *\fIbuffer\fR,
     \fBconst mlib_s16 *\fIx\fR, \fBconst mlib_s16 *\fIy\fR, \fBmlib_s32\fR \fInpoints\fR,
     \fBconst mlib_s32 *\fIc\fR, \fBmlib_s32\fR \fIa\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawLineSet_BG_32\fR(\fBmlib_image *\fIbuffer\fR,
     \fBconst mlib_s16 *\fIx\fR, \fBconst mlib_s16 *\fIy\fR, \fBmlib_s32\fR \fInpoints\fR,
     \fBconst mlib_s32 *\fIc\fR, \fBmlib_s32\fR \fIa\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawLineSet_BGZ_8\fR(\fBmlib_image *\fIbuffer\fR,
     \fBmlib_image *\fIzbuffer\fR, \fBconst mlib_s16 *\fIx\fR, \fBconst mlib_s16 *\fIy\fR,
     \fBconst mlib_s16 *\fIz\fR, \fBmlib_s32\fR \fInpoints\fR, \fBconst mlib_s32 *\fIc\fR, \fBmlib_s32\fR \fIa\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawLineSet_BGZ_32\fR(\fBmlib_image *\fIbuffer\fR,
     \fBmlib_image *\fIzbuffer\fR, \fBconst mlib_s16 *\fIx\fR, \fBconst mlib_s16 *\fIy\fR,
     \fBconst mlib_s16 *\fIz\fR, \fBmlib_s32\fR \fInpoints\fR, \fBconst mlib_s32 *\fIc\fR, \fBmlib_s32\fR \fIa\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawLineSet_BZ_8\fR(\fBmlib_image *\fIbuffer\fR,
     \fBmlib_image *\fIzbuffer\fR, \fBconst mlib_s16 *\fIx\fR, \fBconst mlib_s16 *\fIy\fR,
     \fBconst mlib_s16 *\fIz\fR, \fBmlib_s32\fR \fInpoints\fR, \fBmlib_s32\fR \fIc\fR, \fBmlib_s32\fR \fIa\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawLineSet_BZ_32\fR(\fBmlib_image *\fIbuffer\fR,
     \fBmlib_image *\fIzbuffer\fR, \fBconst mlib_s16 *\fIx\fR, \fBconst mlib_s16 *\fIy\fR,
     \fBconst mlib_s16 *\fIz\fR, \fBmlib_s32\fR \fInpoints\fR, \fBmlib_s32\fR \fIc\fR, \fBmlib_s32\fR \fIa\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawLineSet_GZ_8\fR(\fBmlib_image *\fIbuffer\fR,
     \fBmlib_image *\fIzbuffer\fR, \fBconst mlib_s16 *\fIx\fR, \fBconst mlib_s16 *\fIy\fR,
     \fBconst mlib_s16 *\fIz\fR, \fBmlib_s32\fR \fInpoints\fR, \fBconst mlib_s32 *\fIc\fR);
.fi

.LP
.nf
\fBmlib_status\fR \fBmlib_GraphicsDrawLineSet_GZ_32\fR(\fBmlib_image *\fIbuffer\fR,
     \fBmlib_image *\fIzbuffer\fR, \fBconst mlib_s16 *\fIx\fR, \fBconst mlib_s16 *\fIy\fR,
     \fBconst mlib_s16 *\fIz\fR, \fBmlib_s32\fR \fInpoints\fR, \fBconst mlib_s32 *\fIc\fR);
.fi

.SH DESCRIPTION
.sp
.LP
Each of the
.B mlib_GraphicsDrawLineSet_*()
functions draws a set of
lines connecting
.B (x1,y1)
with
.BR (x2,y2) ,
\fB(x3,y3)\fR with
.BR (x4,y4) ,
\&.\|.\|., and \fB(xn-1,yn-1)\fR with
.BR (xn,yn) .
.sp
.LP
Each of the
.B mlib_GraphicsDrawLineSet_X_*()
functions draws a set of
lines in Xor mode as follows:
.sp
.in +2
.nf
    data[x,y] ^= c ^ c2
.fi
.in -2

.sp
.LP
Each of the
.B mlib_GraphicsDrawLineSet_A_*()
functions draws a set of
lines with antialiasing.
.sp
.LP
Each of the
.B mlib_GraphicsDrawLineSet_B_*()
functions draws a set of
lines with alpha blending as follows:
.sp
.in +2
.nf
    data[x,y] = (data[x,y] * (255 - a) + c * a) / 255
.fi
.in -2

.sp
.LP
Each of the
.B mlib_GraphicsDrawLineSet_G_*()
functions draws a set of
lines with Gouraud shading.
.sp
.LP
Each of the
.B mlib_GraphicsDrawLineSet_Z_*()
functions draws a set of
lines with Z buffering.
.sp
.LP
Each of the other functions draws a set of lines with a combination of two
or more features like antialiasing (A), alpha blending (B), Gouraud shading
(G), and Z buffering (Z).
.SH PARAMETERS
.sp
.LP
Each of the functions takes some of the following arguments:
.sp
.ne 2
.mk
.na
\fIbuffer\fR
.ad
.RS 11n
.rt
Pointer to the image into which the function is drawing.
.RE

.sp
.ne 2
.mk
.na
\fIzbuffer\fR
.ad
.RS 11n
.rt
Pointer to the image that holds the Z buffer.
.RE

.sp
.ne 2
.mk
.na
.I x
.ad
.RS 11n
.rt
Pointer to array of X coordinates of the points.
.RE

.sp
.ne 2
.mk
.na
.I y
.ad
.RS 11n
.rt
Pointer to array of Y coordinates of the points.
.RE

.sp
.ne 2
.mk
.na
.I z
.ad
.RS 11n
.rt
Pointer to array of Z coordinates of the points.
.RE

.sp
.ne 2
.mk
.na
.I npoints
.ad
.RS 11n
.rt
Number of points in the arrays.
.B npoints
must be a multiple of 2.
.RE

.sp
.ne 2
.mk
.na
.I c
.ad
.RS 11n
.rt
Color used in the drawing, or pointer to array of colors of the points in
the case of Gouraud shading.
.RE

.sp
.ne 2
.mk
.na
.I c2
.ad
.RS 11n
.rt
Alternation color.
.RE

.sp
.ne 2
.mk
.na
.I a
.ad
.RS 11n
.rt
Alpha value for blending.
.BR "0 \(<= a \(<= 255" .
.RE

.SH RETURN VALUES
.sp
.LP
Each of the functions returns
.B MLIB_SUCCESS
if successful. Otherwise
it returns
.BR MLIB_FAILURE .
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR mlib_GraphicsDrawLine (3MLIB),
.BR mlib_GraphicsDrawLineFanSet (3MLIB),
.BR mlib_GraphicsDrawLineStripSet (3MLIB),
.BR attributes (5)
