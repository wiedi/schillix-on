'\" te
.\" Copyright (c) 2006, Sun Microsystems, Inc.
.\" All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH atomic_inc 9F "16 Jan 2006" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
atomic_inc, atomic_inc_8, atomic_inc_uchar, atomic_inc_16,
atomic_inc_ushort, atomic_inc_32, atomic_inc_uint, atomic_inc_ulong,
atomic_inc_64, atomic_inc_ptr, atomic_inc_8_nv, atomic_inc_uchar_nv,
atomic_inc_16_nv, atomic_inc_ushort_nv, atomic_inc_32_nv,
atomic_inc_uint_nv, atomic_inc_ulong_nv, atomic_inc_64_nv, atomic_inc_ptr_nv
\- atomic inrement operations
.SH SYNOPSIS
.LP
.nf
#include <sys/atomic.h>

\fBvoid\fR \fBatomic_inc_8\fR(\fBvolatile uint8_t *\fItarget\fR);
.fi

.LP
.nf
\fBvoid\fR \fBatomic_inc_uchar\fR(\fBvolatile uchar_t *\fItarget\fR);
.fi

.LP
.nf
\fBvoid\fR \fBatomic_inc_16\fR(\fBvolatile uint16_t *\fItarget\fR);
.fi

.LP
.nf
\fBvoid\fR \fBatomic_inc_ushort\fR(\fBvolatile ushort_t *\fItarget\fR);
.fi

.LP
.nf
\fBvoid\fR \fBatomic_inc_32\fR(\fBvolatile uint32_t *\fItarget\fR);
.fi

.LP
.nf
\fBvoid\fR \fBatomic_inc_uint\fR(\fBvolatile uint_t *\fItarget\fR);
.fi

.LP
.nf
\fBvoid\fR \fBatomic_inc_ulong\fR(\fBvolatile ulong_t *\fItarget\fR);
.fi

.LP
.nf
\fBvoid\fR \fBatomic_inc_64\fR(\fBvolatile uint64_t *\fItarget\fR);
.fi

.LP
.nf
\fBvoid\fR \fBatomic_inc_ptr\fR(\fBvolatile void *\fItarget\fR);
.fi

.LP
.nf
\fBuint8_t\fR \fBatomic_inc_8_nv\fR(\fBvolatile uint8_t *\fItarget\fR);
.fi

.LP
.nf
\fBuchar_t\fR \fBatomic_inc_uchar_nv\fR(\fBvolatile uchar_t *\fItarget\fR);
.fi

.LP
.nf
\fBuint16_t\fR \fBatomic_inc_16_nv\fR(\fBvolatile uint16_t *\fItarget\fR);
.fi

.LP
.nf
\fBushort_t\fR \fBatomic_inc_ushort_nv\fR(\fBvolatile ushort_t *\fItarget\fR);
.fi

.LP
.nf
\fBuint32_t\fR \fBatomic_inc_32_nv\fR(\fBvolatile uint32_t *\fItarget\fR);
.fi

.LP
.nf
\fBuint_t\fR \fBatomic_inc_uint_nv\fR(\fBvolatile uint_t *\fItarget\fR);
.fi

.LP
.nf
\fBulong_t\fR \fBatomic_inc_ulong_nv\fR(\fBvolatile ulong_t *\fItarget\fR);
.fi

.LP
.nf
\fBuint64_t\fR \fBatomic_inc_64_nv\fR(\fBvolatile uint64_t *\fItarget\fR);
.fi

.LP
.nf
\fBvoid *\fBatomic_inc_ptr_nv\fR(\fBvolatile void *\fItarget\fR);
.fi

.SH DESCRIPTION
.sp
.LP
These functions enable the inrementing (by one) of the value stored in
\fItarget\fR to occur in an atomic manner.
.SH RETURN VALUES
.sp
.LP
The *\fB_nv()\fR variants of these functions return the new value of
.IR target .
.SH ERRORS
.sp
.LP
No errors are defined.
.SH CONTEXT
.sp
.LP
These functions can be called from user, interrupt, or kernel context.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
.TE

.SH SEE ALSO
.sp
.LP
.BR atomic_add (9F),
.BR atomic_and (9F),
.BR atomic_bits (9F),
.BR atomic_cas (9F),
.BR atomic_dec (9F),
.BR atomic_or (9F),
.BR atomic_swap (9F),
.BR membar_ops (9F),
.BR attributes (5),
.BR atomic_ops (3C)
.SH NOTES
.sp
.LP
The *\fB_nv()\fR variants are substantially more expensive on some
platforms than the versions that do not return values. Do not use them
unless you need to know the new value
.BR atomically .
