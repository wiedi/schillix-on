'\" te
.\" Copyright (c) 2006, Sun Microsystems, Inc., All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH get_pktiopb 9F "16 Jan 2006" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
get_pktiopb, free_pktiopb \- allocate/free a SCSI packet in the iopb map
.SH SYNOPSIS
.LP
.nf
#include <sys/scsi/scsi.h>



\fBstruct scsi_pkt *\fBget_pktiopb\fR(\fBstruct scsi_address *\fIap\fR,
     \fBcaddr_t *\fIdatap\fR, \fBint\fR \fIcdblen\fR, \fBint\fR \fIstatuslen\fR, \fBint\fR \fIdatalen\fR,
     \fBint\fR \fIreadflag\fR, \fBint (*\fIcallback\fR);
.fi

.LP
.nf
\fBvoid\fR \fBfree_pktiopb\fR(\fBstruct scsi_pkt *\fIpkt\fR, \fBcaddr_t\fR \fIdatap\fR, \fBint\fR \fIdatalen\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
These interfaces are obsolete. Use \fBscsi_alloc_consistent_buf\fR(9F)
instead of
.BR get_pktiopb() .
Use
.BR scsi_free_consistent_buf (9F)
instead of
.BR free_pktiopb() .
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I ap
.ad
.RS 13n
.rt
Pointer to the target's
.B scsi_address
structure.
.RE

.sp
.ne 2
.mk
.na
.I datap
.ad
.RS 13n
.rt
Pointer to the address of the packet, set by this function.
.RE

.sp
.ne 2
.mk
.na
.I cdblen
.ad
.RS 13n
.rt
Number of bytes required for the
.B SCSI
command descriptor block
(CDB).
.RE

.sp
.ne 2
.mk
.na
.I statuslen
.ad
.RS 13n
.rt
Number of bytes required for the
.B SCSI
status area.
.RE

.sp
.ne 2
.mk
.na
.I datalen
.ad
.RS 13n
.rt
Number of bytes required for the data area of the
.B SCSI
command.
.RE

.sp
.ne 2
.mk
.na
.I readflag
.ad
.RS 13n
.rt
If non-zero, data will be transferred from the
.B SCSI
target.
.RE

.sp
.ne 2
.mk
.na
.I callback
.ad
.RS 13n
.rt
Pointer to a callback function, or
.B NULL_FUNC
or
.BR SLEEP_FUNC
.RE

.sp
.ne 2
.mk
.na
.I pkt
.ad
.RS 13n
.rt
Pointer to a
.BR scsi_pkt "(9S) structure."
.RE

.SH DESCRIPTION
.sp
.LP
The
.B get_pktiopb()
function allocates a
.B scsi_pkt
structure that
has a small data area allocated. It is used by some
.B SCSI
commands such
as
.BR REQUEST_SENSE ,
which involve a small amount of data and require
cache-consistent memory for proper operation. It uses
.BR ddi_iopb_alloc (9F)
for allocating the data area and
.BR scsi_resalloc (9F)
to allocate the packet and
.B DMA
resources.
.sp
.LP
.I callback
indicates what
.B get_pktiopb()
should do when resources
are not available:
.sp
.ne 2
.mk
.na
.B NULL_FUNC
.ad
.RS 16n
.rt
Do not wait for resources. Return a
.I NULL
pointer.
.RE

.sp
.ne 2
.mk
.na
.B SLEEP_FUNC
.ad
.RS 16n
.rt
Wait indefinitely for resources.
.RE

.sp
.ne 2
.mk
.na
.B Other Values
.ad
.RS 16n
.rt
.I callback
points to a function which is called when resources may have
become available.
.I callback
.B must
return either
.BR 0
(indicating that it attempted to allocate resources but failed to do so
again), in which case it is put back on a list to be called again later, or
.B 1
indicating either success in allocating resources or indicating that
it no longer cares for a retry.
.RE

.sp
.LP
The
.B free_pktiopb()
function is used for freeing the packet and its
associated resources.
.SH RETURN VALUES
.sp
.LP
The
.B get_pktiopb()
function returns a pointer to the newly allocated
.B scsi_pkt
or a
.I NULL
pointer.
.SH CONTEXT
.sp
.LP
If
.I callback
is
.BR SLEEP_FUNC ,
then this routine can be called only
from user or kernel context. Otherwise, it can be called from user,
interrupt, or kernel context. The
.I callback
function should not block
or call routines that block.
.sp
.LP
The
.B free_pktiopb()
function can be called from user, interrupt, or
kernel context.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for a description of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
\fBATTRIBUTE TYPE\fR\fBATTRIBUTE VALUE\fR
_
Stability LevelObsolete
.TE

.SH SEE ALSO
.sp
.LP
.BR attributes (5),
.BR ddi_iopb_alloc (9F),
.BR scsi_alloc_consistent_buf (9F),
.BR scsi_free_consistent_buf (9F),
.BR scsi_pktalloc (9F),
.BR scsi_resalloc (9F),
.BR scsi_pkt (9S)
.sp
.LP
.I Writing Device Drivers
.SH NOTES
.sp
.LP
The
.B get_pktiopb()
and
.B free_pktiopb()
functions are obsolete and
will be discontinued in a future release. These functions have been replaced
by, respectively,
.BR scsi_alloc_consistent_buf (9F)
and
.BR scsi_free_consistent_buf (9F).
.sp
.LP
The
.B get_pktiopb()
function uses scarce resources. For this reason and
its obsolescence (see above), its use is discouraged.
