'\" te
.\" Copyright (c) 2004, Sun Microsystems, Inc., All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH usb_pipe_get_state 9F "5 Jan 2004" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
usb_pipe_get_state \- Return USB pipe state
.SH SYNOPSIS
.LP
.nf
#include <sys/usb/usba.h>



\fBint\fR \fBusb_pipe_get_state\fR(\fBusb_pipe_handle_t\fR \fIpipe_handle\fR,
     \fBusb_pipe_state_t *\fIpipe_state\fR, \fBusb_flags_t\fR \fIusb_flags\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris DDI specific (Solaris DDI)
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I pipe_handle
.ad
.RS 15n
.rt
Handle of the pipe to retrieve the state.
.RE

.sp
.ne 2
.mk
.na
.I pipe_state
.ad
.RS 15n
.rt
Pointer to where pipe state is returned.
.RE

.sp
.ne 2
.mk
.na
\fIusb_flags\fR
.ad
.RS 15n
.rt
No flags are recognized. Reserved for future expansion.
.RE

.SH DESCRIPTION
.sp
.LP
The
.B usb_pipe_get_state()
function retrieves the state of the pipe
referred to by
.I pipe_handle
into the location pointed to by
.IR pipe_state .
.sp
.LP
Possible pipe states are:
.sp
.ne 2
.mk
.na
.B USB_PIPE_STATE_CLOSED
.ad
.RS 26n
.rt
Pipe is closed.
.RE

.sp
.ne 2
.mk
.na
.B USB_PIPE_STATE_ACTIVE
.ad
.RS 26n
.rt
Pipe is active and can send/receive data. Polling is active for isochronous
and interrupt pipes.
.RE

.sp
.ne 2
.mk
.na
.B USB_PIPE_STATE_IDLE
.ad
.RS 26n
.rt
Polling is stopped for isochronous and interrupt-IN pipes.
.RE

.sp
.ne 2
.mk
.na
.B USB_PIPE_STATE_ERROR
.ad
.RS 26n
.rt
An error occurred. Client must call
.BR usb_pipe_reset() .
Note that this
status is not seen by a client driver if USB_ATTRS_AUTOCLEARING is set in
the request attributes.
.RE

.sp
.ne 2
.mk
.na
.B USB_PIPE_STATE_CLOSING
.ad
.RS 26n
.rt
Pipe is being closed. Requests are being drained from the pipe and other
cleanup is in progress.
.RE

.SH RETURN VALUES
.sp
.ne 2
.mk
.na
.B USB_SUCCESS
.ad
.RS 20n
.rt
Pipe state returned in second argument.
.RE

.sp
.ne 2
.mk
.na
.B USB_INVALID_ARGS
.ad
.RS 20n
.rt
Pipe_state argument is
.BR NULL .
.RE

.sp
.ne 2
.mk
.na
.B USB_INVALID_PIPE
.ad
.RS 20n
.rt
Pipe_handle argument is
.BR NULL .
.RE

.SH CONTEXT
.sp
.LP
May be called from user, kernel or interrupt context.
.SH EXAMPLES
.sp
.in +2
.nf
    usb_pipe_handle_t pipe;
    usb_pipe_state_t state;

    /* Recover if the pipe is in an error state. */
    if ((usb_pipe_get_state(pipe, &state, 0) == USB_SUCCESS) &&
        (state == USB_PIPE_STATE_ERROR)) {
            cmn_err (CE_WARN, "%s%d: USB Pipe error.",
                ddi_driver_name(dip), ddi_get_instance(dip));
            do_recovery();
    }

.fi
.in -2

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
ArchitecturePCI-based systems
_
Interface stabilityCommitted
_
AvailabilitySUNWusb
.TE

.SH SEE ALSO
.sp
.LP
.BR attributes (5),
\fBusb_clr_feature\fR(9F), \fBusb_get_cfg\fR(9F).
.BR usb_get_status (9F),
.BR usb_pipe_close (9F),
\fBusb_pipe_ctrl_xfer\fR(9F), \fBusb_pipe_open\fR(9F).
.BR usb_pipe_reset (9F)
