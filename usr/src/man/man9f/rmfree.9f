'\" te
.\" Copyright (c) 2006, Sun Microsystems, Inc.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH rmfree 9F "16 Jan 2006" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
rmfree \- free space back into a resource map
.SH SYNOPSIS
.LP
.nf
#include <sys/map.h>
#include <sys/ddi.h>



\fBvoid\fR \fBrmfree\fR(\fBstruct map *\fImp\fR, \fBsize_t\fR \fIsize\fR, \fBulong_t\fR \fIindex\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Architecture independent level 1 (DDI/DKI).
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I mp
.ad
.RS 9n
.rt
Pointer to the map structure.
.RE

.sp
.ne 2
.mk
.na
.I size
.ad
.RS 9n
.rt
Number of units being freed.
.RE

.sp
.ne 2
.mk
.na
.I index
.ad
.RS 9n
.rt
Index of the first unit of the allocated resource.
.RE

.SH DESCRIPTION
.sp
.LP
The
.B rmfree()
function releases space back into a resource map. It is
the opposite of
.BR rmalloc "(9F), which allocates space that is controlled"
by a resource map structure.
.sp
.LP
When releasing resources using
.B rmfree()
the size and index passed to
.B rmfree()
must exactly match the size and index values passed to and
returned from a previous call to
.BR rmalloc() .
Resources cannot be
returned piecemeal.
.sp
.LP
Drivers may define resource maps for resource allocation, in terms of
arbitrary units, using the \fBrmallocmap\fR(9F) function. The system
maintains the resource map structure by size and index, computed in units
appropriate for the resource. For example, units may be byte addresses,
pages of memory, or blocks.
.B rmfree()
frees up unallocated space for
re-use.
.sp
.LP
The
.B rmfree()
function can also be used to initialize a resource map,
in which case the size and index should cover the entire resource area.
.SH CONTEXT
.sp
.LP
The
.B rmfree()
function can be called from user, interrupt, or kernel
context.
.SH SEE ALSO
.sp
.LP
.BR rmalloc (9F),
.BR rmalloc_wait (9F),
.BR rmallocmap (9F),
.BR rmfreemap (9F)
.sp
.LP
.I Writing Device Drivers
