'\" te
.\" Copyright (c) ,2006, Sun Microsystems, Inc.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH ddi_intr_hilevel 9F "16 Jan 2006" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
ddi_intr_hilevel \- indicate interrupt handler type
.SH SYNOPSIS
.LP
.nf
#include <sys/ddi.h>
#include <sys/sunddi.h>



\fBint\fR \fBddi_intr_hilevel\fR(\fBdev_info_t *\fIdip\fR, \fBuint_t\fR \fIinumber\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris DDI specific (Solaris DDI). This interface is obsolete. Use the new
interrupt interfaces referenced in \fBIntro\fR(9F). Refer to \fIWriting
Device Drivers\fR for more information.
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I dip
.ad
.RS 11n
.rt
Pointer to
.B dev_info
structure.
.RE

.sp
.ne 2
.mk
.na
.I inumber
.ad
.RS 11n
.rt
Interrupt number.
.RE

.SH DESCRIPTION
.sp
.LP
The
.B ddi_intr_hilevel()
function returns non-zero if the specified
interrupt is a "high level" interrupt.
.sp
.LP
High level interrupts must be handled without using system services that
manipulate thread or process states, because these interrupts are not
blocked by the scheduler.
.sp
.LP
In addition, high level interrupt handlers must take care to do a minimum
of work because they are not preemptable.
.sp
.LP
A typical high level interrupt handler would put data into a circular
buffer and schedule a soft interrupt by calling
.BR ddi_trigger_softintr() .
The circular buffer could be protected by
using a mutex that was properly initialized for the interrupt handler.
.sp
.LP
The
.B ddi_intr_hilevel()
function can be used before calling
.B ddi_add_intr()
to decide which type of interrupt handler should be
used. Most device drivers are designed with the knowledge that the devices
they support will always generate low level interrupts, however some
devices, for example those using SBus or VME bus level 6 or 7 interrupts
must use this test because on some machines those interrupts are high level
(above the scheduler level) and on other machines they are not.
.SH RETURN VALUES
.sp
.ne 2
.mk
.na
.B non-zero
.ad
.RS 12n
.rt
indicates a high-level interrupt.
.RE

.SH CONTEXT
.sp
.LP
These functions can be called from useruser, interrupt, or kernel
context.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityObsolete
.TE

.SH SEE ALSO
.sp
.LP
.BR ddi_add_intr (9F),
.BR Intro (9F),
.BR mutex (9F)
.sp
.LP
.I Writing Device Drivers
