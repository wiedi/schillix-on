'\" te
.\" Copyright (C) 2008, Sun Microsystems, Inc. All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH net_instance_notify_register 9F "30 Oct 2008" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
net_instance_notify_register, net_instance_notify_unregister \- add/delete
a function to be called for changes to an instance
.SH SYNOPSIS
.LP
.nf
#include <sys/hook.h>
#include <sys/neti.h>

\fBint\fR \fBnet_instance_notify_register\fR(\fBnet id_t\fR \fInet_id\fR,
     \fBhook_notify_fn_t\fR *\fIcallback\fR, \fBvoid\fR *\fIarg\fR);

\fBint\fR \fBnet_instance_notify_unregister\fR(\fBnet id_t\fR \fInet_id\fR,
     \fBhook_notify_fn_t\fR *\fIcallback\fR);

\fBtypedef int\fR (* \fBhook_notify_fn_t\fR)(\fBhook_notify_cmd_t command,\fR
     \fBvoid\fR *\fIarg\fR, \fBconst char\fR *\fIname1\fR, \fBconst char\fR *\fIname2\fR, \fBconst char\fR
     *\fIname3\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris DDI specific (Solaris DDI).
.SH PARAMETERS
.sp
.ne 2
.mk
.na
\fInetid\fR
.ad
.RS 12n
.rt
value from either \fIcallback\fR registered with
\fBnet_instance_register()\fR or \fBnet_zoneidtonetid()\fR.
.RE

.sp
.ne 2
.mk
.na
\fIcallback\fR
.ad
.RS 12n
.rt
function to call when a change occurs.
.RE

.sp
.ne 2
.mk
.na
\fIarg\fR
.ad
.RS 12n
.rt
pointer to pass into the \fBcallback()\fR function when a change occurs.
.RE

.SH DESCRIPTION
.sp
.LP
The \fBnet_instance_notify_register()\fR function registers a function
represented by the pointer \fIcallback\fR to be called when there is a new
instance added or removed from the given network instance (represented by
\fInetid\fR.)
.sp
.LP
The \fBnet_instance_notify_unregister()\fR function indicates that there is
no longer any desire to receive notification of changes to the instance
through function calls to the specified \fIcallback\fR.
.sp
.LP
Multiple \fIcallback\fR functions may be registered through this interface.
The same set of parameters is passed to each \fIcallback\fR function. The
memory referenced through the pointers passed to the \fIcallback\fR should
be treated as pointing to read-only memory. Changing this data is strictly
prohibited.
.sp
.LP
The function that is called must not block any other events.
.sp
.LP
The arguments passed through to the \fBcallback\fR are as follows (the
command is either \fBHN_REGISTER\fR or \fBHN_UNREGISTER\fR):
.sp
.ne 2
.mk
.na
\fIname1\fR
.ad
.RS 9n
.rt
is the \fInetid\fR represented as a string.
.RE

.sp
.ne 2
.mk
.na
\fIname2\fR
.ad
.RS 9n
.rt
is \fBNULL\fR.
.RE

.sp
.ne 2
.mk
.na
\fIname3\fR
.ad
.RS 9n
.rt
is the name of the instance being added/removed
.RE

.SH RETURN VALUES
.sp
.LP
If these functions succeed, 0 is returned. Otherwise, the following error
is returned:
.sp
.ne 2
.mk
.na
\fBEEXIST\fR
.ad
.RS 10n
.rt
the given callback function is already registered.
.RE

.SH CONTEXT
.sp
.LP
These functions may be called from user or kernel context.
.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcsu
_
Interface StabilityCommitted
.TE

.SH SEE ALSO
.sp
.LP
\fBattributes\fR(5), \fBnet_instance_register\fR(9F),
\fBnet_instance_unregister\fR(9F), \fBnet_zoneidtonetid\fR(9F)
