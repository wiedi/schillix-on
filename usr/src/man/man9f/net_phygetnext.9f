'\" te
.\" Copyright (C) 2008, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH net_phygetnext 9F "1 May 2008" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
net_phygetnext \- search through the current list of network interfaces
.SH SYNOPSIS
.LP
.nf
#include <sys/neti.h>

\fBphy_if_t\fR \fBnet_phygetnext\fR(\fBconst\fR \fBnet_data_t\fR \fInet\fR, \fBconst\fR \fBphy_if_t\fR \fIifp\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris DDI specific (Solaris DDI).
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I net
.ad
.RS 7n
.rt
value returned from a successful call to
.BR net_protocol_lookup (9F).
.RE

.sp
.ne 2
.mk
.na
.I ifp
.ad
.RS 7n
.rt
value returned from a successful call to this function or
.BR net_phylookup (9F).
.RE

.SH DESCRIPTION
.sp
.LP
The
.B net_phygetnext()
function searches through all of the network
interfaces that a network protocol "owns". To start searching through all of
the interfaces owned by a protocol, a value of 0 should be passed through as
the value of
.BR ifp .
When 0 is returned by this function, the last of the
interfaces owned by this protocol has been reached.
.sp
.LP
When called successfully, the value returned represents a network interface
that exists, at the time of the call, within the scope of the network
interface. This value is only guaranteed to be unique for a name within the
scope of the network protocol.
.SH EXAMPLES
.sp
.in +2
.nf
   net_data_t net;
    phy_if_t ifp;
    char buffer[32];

    net = net_protocol_lookup("inet");

    if (net != NULL) {
         for (ifp = net_phygetnext(net, 0); ifp != 0;
              ifp = net_phygetnext(net, ifp)) {
              /* Do something with ifp */
              if (net_getifname(net, ifp, buffer,
                   sizeof(buffer) >= 0)
                    printf("Interface %s0, buffer);
          }
      }
.fi
.in -2
.sp

.SH RETURN VALUES
.sp
.LP
The
.B net_phygetnext()
function returns -1 if it is not supported by
the network  protocol or 0 if an attempt to go beyond the last network
interface is  made. Otherwise, it returns  a  value representing a network
interface.
.SH CONTEXT
.sp
.LP
The
.B net_phygetnext()
function may be called from user,  kernel, or
interrupt context.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcsu
_
Interface StabilityCommitted
.TE

.SH SEE ALSO
.sp
.LP
.BR net_phylookup (9F),
.BR net_protocol_lookup (9F),
.BR attributes (5)
