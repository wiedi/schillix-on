'\" te
.\" Copyright 1989 AT&T
.\" Copyright (c) 2006, Sun Microsystems, Inc.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH testb 9F "16 Jan 2006" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
testb \- check for an available buffer
.SH SYNOPSIS
.LP
.nf
#include <sys/stream.h>



\fBint\fR \fBtestb\fR(\fBsize_t\fR \fIsize\fR, \fBuint_t\fR \fIpri\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Architecture independent level 1 (DDI/DKI).
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I size
.ad
.RS 8n
.rt
Size of the requested buffer.
.RE

.sp
.ne 2
.mk
.na
.I pri
.ad
.RS 8n
.rt
Priority of the allocb request.
.RE

.SH DESCRIPTION
.sp
.LP
The
.B testb()
function checks to see if an
.BR allocb "(9F) call is"
likely to succeed if a buffer of
.B size
bytes at priority
.I pri
is
requested. Even if
.B testb()
returns successfully, the call to
.BR allocb (9F)
can fail. The
.I pri
argument is no longer used, but is
retained for compatibility.
.SH RETURN VALUES
.sp
.LP
Returns
.B 1
if a buffer of the requested size is available, and
.B 0
if one is not.
.SH CONTEXT
.sp
.LP
The
.B testb()
function can be called user, interrupt, or kernel
context.
.SH EXAMPLES
.LP
.B Example 1 testb()
example
.sp
.LP
In a service routine, if
.BR copymsg (9F)
fails (line 6), the message is
put back on the queue (line 7) and a routine,
.BR tryagain ,
is scheduled
to be run in one tenth of a second. Then the service routine returns.

.sp
.LP
When the
.BR timeout (9F)
function runs, if there is no message on the
front of the queue, it just returns. Otherwise, for each message block in
the first message, check to see if an allocation would succeed.  If the
number of message blocks equals the number we can allocate, then enable the
service procedure. Otherwise, reschedule
.B tryagain
to run again in
another tenth of a second. Note that
.B tryagain
is merely an
approximation. Its accounting may be faulty. Consider the case of a message
comprised of two 1024-byte message blocks. If there is only one free
1024-byte message block and no free 2048-byte message blocks, then
.B testb()
will still succeed twice. If no message blocks are freed of
these sizes before the service procedure runs again, then the
.BR copymsg (9F)
will still fail. The reason
.B testb()
is used here is
because it is significantly faster than calling
.BR copymsg .
We must
minimize the amount of time spent in a
.B timeout()
routine.

.sp
.in +2
.nf
\fB1  xxxsrv(q)
 2      queue_t *q;
 3  {
 4	mblk_t *mp;
 5	mblk_t *nmp;
        . . .
 6	if ((nmp = copymsg(mp)) == NULL) {
 7		putbq(q, mp);
 8		timeout(tryagain, (intptr_t)q, drv_usectohz(100000));
 9		return;
10	}
	. . .
11  }
12
13  tryagain(q)
14      queue_t *q;
15  {
16	register int can_alloc = 0;
17	register int num_blks = 0;
18	register mblk_t *mp;
19
20	if (!q->q_first)
21		return;
22	for (mp = q->q_first; mp; mp = mp->b_cont) {
23		num_blks++;
24		can_alloc += testb((mp->b_datap->db_lim -
25		    mp->b_datap->db_base), BPRI_MED);
26	}
27	if (num_blks == can_alloc)
28		qenable(q);
29	else
30		timeout(tryagain, (intptr_t)q, drv_usectohz(100000));
31  }\fR
.fi
.in -2

.SH SEE ALSO
.sp
.LP
.BR allocb (9F),
.BR bufcall (9F),
.BR copymsg (9F),
.BR timeout (9F)
.sp
.LP
.I Writing Device Drivers
.sp
.LP
.I STREAMS Programming Guide
.SH NOTES
.sp
.LP
The
.I pri
argument is provided for compatibility only. Its value is
ignored.
