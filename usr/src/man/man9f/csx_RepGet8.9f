'\" te
.\" Copyright (c) 1996, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH csx_RepGet8 9F "19 Jul 1996" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
csx_RepGet8, csx_RepGet16, csx_RepGet32, csx_RepGet64 \- read repetitively
from the device register
.SH SYNOPSIS
.LP
.nf
#include <sys/pccard.h>



\fBvoid\fR \fBcsx_RepGet8\fR(\fBacc_handle_t\fR \fIhandle\fR, \fBuint8_t *\fIhostaddr\fR, \fBuint32_t\fR \fIoffset\fR,
     \fBuint32_t\fR \fIrepcount\fR, \fBuint32_t\fR \fIflags\fR);
.fi

.LP
.nf
\fBvoid\fR \fBcsx_RepGet16\fR(\fBacc_handle_t\fR \fIhandle\fR, \fBuint16_t *\fIhostaddr\fR, \fBuint32_t\fR \fIoffset\fR,
     \fBuint32_t\fR \fIrepcount\fR, \fBuint32_t\fR \fIflags\fR);
.fi

.LP
.nf
\fBvoid\fR \fBcsx_RepGet32\fR(\fBacc_handle_t\fR \fIhandle\fR, \fBuint32_t *\fIhostaddr\fR, \fBuint32_t\fR \fIoffset\fR,
     \fBuint32_t\fR \fIrepcount\fR, \fBuint32_t\fR \fIflags\fR);
.fi

.LP
.nf
\fBvoid\fR \fBcsx_RepGet64\fR(\fBacc_handle_t\fR \fIhandle\fR, \fBuint64_t *\fIhostaddr\fR, \fBuint32_t\fR \fIoffset\fR,
     \fBuint32_t\fR \fIrepcount\fR, \fBuint32_t\fR \fIflags\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris
.B DDI
Specific (Solaris
.BR DDI )
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I handle
.ad
.RS 13n
.rt
The access handle returned from
.BR csx_RequestIO (9F),
.BR csx_RequestWindow (9F),
or
.BR csx_DupHandle (9F).
.RE

.sp
.ne 2
.mk
.na
.I hostaddr
.ad
.RS 13n
.rt
Source host address.
.RE

.sp
.ne 2
.mk
.na
.I offset
.ad
.RS 13n
.rt
The offset in bytes from the base of the mapped resource.
.RE

.sp
.ne 2
.mk
.na
.I repcount
.ad
.RS 13n
.rt
Number of data accesses to perform.
.RE

.sp
.ne 2
.mk
.na
.I flags
.ad
.RS 13n
.rt
Device address flags.
.RE

.SH DESCRIPTION
.sp
.LP
These functions generate multiple reads of various sizes from the mapped
memory or device register.
.sp
.LP
The
.BR csx_RepGet8() ,
.BR csx_RepGet16() ,
.BR csx_RepGet32() ,
and
.B csx_RepGet64()
functions generate
.I repcount
reads of 8 bits, 16
bits, 32 bits, and 64 bits of data, respectively, from the device address
represented by the handle,
.IR handle ,
at an offset in bytes represented
by the offset,
.IR offset .
The data read is stored consecutively into the
buffer pointed to by the host address pointer,
.IR hostaddr .
.sp
.LP
Data that consists of more than one byte will automatically be translated
to maintain a consistent view between the host and the device based on the
encoded information in the data access handle. The translation may involve
byte swapping if the host and the device have incompatible endian
characteristics.
.sp
.LP
When the
.I flags
argument is set to
.BR CS_DEV_AUTOINCR ,
these
functions increment the  device offset,
.IR offset ,
after each datum read
operation. However, when the
.I flags
argument is set to
.BR CS_DEV_NO_AUTOINCR ,
the same device offset will be used for every
datum access. For example, this flag may be useful when reading from a data
register.
.SH CONTEXT
.sp
.LP
These functions may be called from user, kernel, or interrupt context.
.SH SEE ALSO
.sp
.LP
.BR csx_DupHandle (9F),
.BR csx_Get8 (9F),
.BR csx_GetMappedAddr (9F),
.BR csx_Put8 (9F),
.BR csx_RepPut8 (9F),
.BR csx_RequestIO (9F),
.BR csx_RequestWindow (9F)
.sp
.LP
.IR "PC Card 95 Standard" ,
PCMCIA/JEIDA
