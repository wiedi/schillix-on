'\" te
.\" Copyright (c) 2005, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH ddi_put8 9F "1 Nov 2005" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
ddi_put8, ddi_put16, ddi_put32, ddi_put64, ddi_putb, ddi_putl, ddi_putll,
ddi_putw \- write data to the mapped memory address, device register or
allocated DMA memory address
.SH SYNOPSIS
.LP
.nf
#include <sys/ddi.h>
#include <sys/sunddi.h>



\fBvoid\fR \fBddi_put8\fR(\fBddi_acc_handle_t\fR \fIhandle\fR, \fBuint8_t\fR \fI*dev_addr\fR,
     \fBuint8_t\fR \fIvalue\fR);
.fi

.LP
.nf
\fBvoid\fR \fBddi_put16\fR(\fBddi_acc_handle_t\fR \fIhandle\fR, \fBuint16_t\fR \fI*dev_addr\fR,
     \fBuint16_t\fR \fIvalue\fR);
.fi

.LP
.nf
\fBvoid\fR \fBddi_put32\fR(\fBddi_acc_handle_t\fR \fIhandle\fR, \fBuint32_t\fR \fI*dev_addr\fR,
     \fBuint32_t\fR \fIvalue\fR);
.fi

.LP
.nf
\fBvoid\fR \fBddi_put64\fR(\fBddi_acc_handle_t\fR \fIhandle\fR, \fBuint64_t\fR \fI*dev_addr\fR,
     \fBuint64_t\fR \fIvalue\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris DDI specific (Solaris DDI). The
.BR ddi_putb() ,
.BR ddi_putl() ,
.BR ddi_putll() ,
and
.B ddi_putw()
functions are obsolete. The
.B ddi_put8()
function replaces
.BR ddi_putb() .
The
.BR ddi_put32()
function replaces
.BR ddi_putl() .
The
.B ddi_put64()
function replaces
.BR ddi_putll() .
The
.B ddi_put16()
function replaces
.BR ddi_putw() .
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I handle
.ad
.RS 12n
.rt
The data access handle returned from setup calls, such as
.BR ddi_regs_map_setup (9F).
.RE

.sp
.ne 2
.mk
.na
.I value
.ad
.RS 12n
.rt
The data to be written to the device.
.RE

.sp
.ne 2
.mk
.na
.I dev_addr
.ad
.RS 12n
.rt
Base device address.
.RE

.SH DESCRIPTION
.sp
.LP
These routines generate a write of various sizes to the mapped memory or
device register. The
.BR ddi_put8() ,
.BR ddi_put16() ,
.BR ddi_put32() ,
and
.B ddi_put64()
functions write 8 bits, 16 bits, 32 bits and 64 bits
of data, respectively, to the device address,
.IR dev_addr .
.sp
.LP
Each individual datum will automatically be translated to maintain a
consistent view between the host and the device based on the encoded
information in the data access handle. The translation may involve
byte-swapping if the host and the device have incompatible endian
characteristics.
.sp
.LP
For certain bus types, you can call these
.B DDI
functions from a
high-interrupt context. These types include
.B ISA
and SBus buses.  See
.BR sysbus (4),
.BR isa (4),
and
.BR sbus (4)
for details. For the PCI
bus, you can, under certain conditions, call these
.B DDI
functions from
a high-interrupt context. See
.BR pci (4).
.SH CONTEXT
.sp
.LP
These functions can be called from user, kernel, or interrupt context.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityT{
\fBddi_putb()\fR, \fBddi_putl()\fR, \fBddi_putll()\fR, and \fBddi_putw()\fR are Obsolete \fBddi_put8()\fR, \fBddi_put16()\fR, \fBddi_put32()\fR, \fBddi_put64()\fR are Committed
T}
.TE

.SH SEE ALSO
.sp
.LP
.BR ddi_get8 (9F),
.BR ddi_regs_map_free (9F),
.BR ddi_regs_map_setup (9F),
.BR ddi_rep_get8 (9F),
.BR ddi_rep_put8 (9F),
.BR ddi_device_acc_attr (9S)
