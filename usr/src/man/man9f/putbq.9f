'\" te
.\" Copyright 1989 AT&T
.\" Copyright (c) 2006, Sun Microsystems, Inc.,  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH putbq 9F "16 Jan 2006" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
putbq \- place a message at the head of a queue
.SH SYNOPSIS
.LP
.nf
#include <sys/stream.h>



\fBint\fR \fBputbq\fR(\fBqueue_t *\fIq\fR, \fBmblk_t *\fIbp\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Architecture independent level 1 (DDI/DKI).
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I q
.ad
.RS 6n
.rt
Pointer to the queue.
.RE

.sp
.ne 2
.mk
.na
.I bp
.ad
.RS 6n
.rt
Pointer to the message block.
.RE

.SH DESCRIPTION
.sp
.LP
The
.B putbq()
function places a message at the beginning of the
appropriate section of the message queue. There are always sections for high
priority and ordinary messages. If other priority bands are used, each will
have its own section of the queue, in priority band order, after high
priority messages and before ordinary messages.
.B putbq()
can be used
for ordinary, priority band, and high priority messages. However, unless
precautions are taken, using
.B putbq()
with a high priority message is
likely to lead to an infinite loop of putting the message back on the queue,
being rescheduled, pulling it off, and putting it back on.
.sp
.LP
This function is usually called when
.BR bcanput "(9F) or"
.BR canput (9F)
determines that the message cannot be passed on to the next stream
component. The flow control parameters are updated to reflect the change in
the queue's status. If
.B QNOENB
is not set, the service routine is
enabled.
.SH RETURN VALUES
.sp
.LP
The
.B putbq()
function returns
.B 1
upon success and
.B 0
upon
failure.
.sp
.LP
Upon failure, the caller should call
.BR freemsg (9F)
to free the pointer
to the message block.
.SH CONTEXT
.sp
.LP
The
.B putbq()
function can be called from user, interrupt, or kernel
context.
.SH EXAMPLES
.sp
.LP
See the
.BR bufcall (9F)
function page for an example of
.BR putbq() .
.SH SEE ALSO
.sp
.LP
.BR bcanput (9F),
.BR bufcall (9F),
.BR canput (9F),
.BR getq (9F),
.BR putq (9F)
.sp
.LP
.I Writing Device Drivers
.sp
.LP
.I STREAMS Programming Guide
