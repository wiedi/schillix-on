'\" te
.\" Copyright (c) 2004, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mioc2ack 9F "9 June 2004" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
mioc2ack \- Convert an M_IOCTL message to an M_IOCACK message
.SH SYNOPSIS
.LP
.nf
#include <sys/stream.h>
#include <sys/strsun.h>



\fBvoid\fR \fBmioc2ack\fR(\fBmblk_t *\fImp\fR, \fBmblk_t *\fIdp\fR, \fBsize_t\fR \fIcount\fR, \fBint\fR \fIrval\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris DDI specific (Solaris DDI).
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I mp
.ad
.RS 9n
.rt
M_IOCTL message.
.RE

.sp
.ne 2
.mk
.na
.I dp
.ad
.RS 9n
.rt
Payload to associate with M_IOCACK message.
.RE

.sp
.ne 2
.mk
.na
.I count
.ad
.RS 9n
.rt
Value to set the ioc_count of the
.BR iocblk "(9S) to."
.RE

.sp
.ne 2
.mk
.na
.I rval
.ad
.RS 9n
.rt
Value to set the ioc_rval of the
.BR iocblk "(9S) to."
.RE

.SH DESCRIPTION
.sp
.LP
The
.B mioc2ack()
function converts an M_IOCTL message into an M_IOCACK
message using the supplied arguments.
.sp
.LP
To convert the message,
.B mioc2ack()
changes the message type to
M_IOCACK, sets the
.B ioc_count
and
.B ioc_rval
members of the
.BR iocblk (9S)
associated with
.I mp
to the passed-in values, and clears
the
.B ioc_error
field. Further, it frees any message blocks chained off
of
.B mp->b_cont
and resets
.B mp->b_cont
to
.IR dp .
Finally, if
.I dp
is not NULL,
.B mioc2ack()
resets
.B dp->b_wptr
to be
.B dp->b_rptr + count
(that is, it sets
.I dp
to be exactly
.IR count
bytes in length).
.SH RETURN VALUES
.sp
.LP
None.
.SH CONTEXT
.sp
.LP
This function can be called from user, kernel or interrupt context.
.SH SEE ALSO
.sp
.LP
.BR miocack (9F),
.BR miocnak (9F),
.BR iocblk (9S)
.sp
.LP
.I STREAMS Programming Guide
