'\" te
.\" Copyright (C) 2008, Sun Microsystems, Inc. All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH net_inject 9F "1 May 2008" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
net_inject \- determine if a network interface name exists for a network
protocol
.SH SYNOPSIS
.LP
.nf
#include <sys/neti.h>

\fBint\fR \fBnet_inject\fR(\fBconst\fR \fBnet_data_t\fR \fInet\fR, \fBinject_t\fR \fIstyle\fR,
      \fBnet_inject_t\fR *\fIpacket\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris DDI specific (Solaris DDI).
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I net
.ad
.RS 10n
.rt
value returned from a successful call to
.BR net_protocol_lookup (9F).
.RE

.sp
.ne 2
.mk
.na
.I style
.ad
.RS 10n
.rt
method that determines how this packet is to be injected into the network or
kernel.
.RE

.sp
.ne 2
.mk
.na
.I packet
.ad
.RS 10n
.rt
details about the packet to be injected.
.RE

.SH DESCRIPTION
.sp
.LP
The
.B net_inject()
function provides an interface to allow delivery of
network layer (layer 3) packets either into the kernel or onto the network. The
method of delivery is determined by style.
.sp
.LP
If
.B NI_QUEUE_IN
is specified, the packet is scheduled for delivery up
into the kernel, imitating its reception by a network interface. In this mode,
.B packet->ni_addr
is ignored and
.B " packet->ni_physical"
specifies the
interface for which the packet is made to appear as if it arrived on.
.sp
.LP
If
.B NI_QUEUE_OUT
is specified, the packet is scheduled for delivery out
of the kernel, as if it were being sent by a raw socket. In this mode,
.B packet->ni_addr
and
.B packet->ni_physical
are both ignored.
.sp
.LP
Neither
.B NI_QUEUE_IN
or
.B NI_QUEUE_OUT
cause the packet to be
immediately processed by the kernel. Instead, the packet is added to a list and
a timeout is scheduled (if there are none already pending) to deliver the
packet. The call to
.B net_inject()
returns once the setup has been
completed, and not after the packet has been processed. The packet processing
is completed on a different thread and in a different context to that of the
original packet. Thus, a packet queued up using
.B net_inject()
for either
.B NI_QUEUE_IN
or
.B NI_QUEUE_OUT
is presented to the packet event again.
A packet received by a hook from
.B NH_PHYSICAL_IN
and then queued up with
.B NI_QUEUE_IN
is seen by the hook as another
.B NH_PHYSICAL_IN
packet.
This also applies to both
.B NH_PHYSICAL_OUT
and
.BR NI_QUEUE_OUT
packets.
.sp
.LP
If
.B NI_DIRECT_OUT
is specified, an attempt is made to send the packet out
to a network interface immediately. No processing on the packet, aside from
prepending any required layer 2 information, is made. In this instance,
.B packet->ni_addr
may be used to specify the next hop (for the purpose of
link layer address resolution) and
.B packet->ni_physical
determines which
interface the packet should be sent out.
.sp
.LP
For all three packets,
.B packet->ni_packet
must point to an
.BR mblk
structure with the packet to be delivered.
.sp
.LP
See \fBnet_inject_t\fR(9S) for more details on the structure
.BR net_inject_t .
.SH RETURN VALUES
.sp
.LP
The
.B net_inject()
function returns:
.sp
.ne 2
.mk
.na
.B -1
.ad
.RS 6n
.rt
The network protocol does not support this function.
.RE

.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 6n
.rt
The packet is successfully queued or sent.
.RE

.sp
.ne 2
.mk
.na
.B 1
.ad
.RS 6n
.rt
The packet could not be queued up or sent out immediately.
.RE

.SH CONTEXT
.sp
.LP
The
.B net_inject()
function may be called from user,  kernel, or interrupt
context.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcsu
_
Interface StabilityCommitted
.TE

.SH SEE ALSO
.sp
.LP
.BR net_protocol_lookup (9F),
.BR netinfo (9F),
.BR net_inject_t (9S)
