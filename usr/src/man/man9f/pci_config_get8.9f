'\" te
.\" Copyright (c) 2005, Sun Microsystems, Inc.,  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH pci_config_get8 9F "1 Nov 2005" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
pci_config_get8, pci_config_get16, pci_config_get32, pci_config_get64,
pci_config_put8, pci_config_put16, pci_config_put32, pci_config_put64,
pci_config_getb, pci_config_getl, pci_config_getll, pci_config_getw,
pci_config_putb, pci_config_putl, pci_config_putll, pci_config_putw \- read
or write single datum of various sizes to the PCI Local Bus Configuration
space
.SH SYNOPSIS
.LP
.nf
#include <sys/ddi.h>
#include <sys/sunddi.h>



\fBuint8_t\fR \fBpci_config_get8\fR(\fBddi_acc_handle_t\fR \fIhandle\fR, \fBoff_t\fR \fIoffset\fR);
.fi

.LP
.nf
\fBuint16_t\fR \fBpci_config_get16\fR(\fBddi_acc_handle_t\fR \fIhandle\fR, \fBoff_t\fR \fIoffset\fR);
.fi

.LP
.nf
\fBuint32_t\fR \fBpci_config_get32\fR(\fBddi_acc_handle_t\fR \fIhandle\fR, \fBoff_t\fR \fIoffset\fR);
.fi

.LP
.nf
\fBuint64_t\fR \fBpci_config_get64\fR(\fBddi_acc_handle_t\fR \fIhandle\fR, \fBoff_t\fR \fIoffset\fR);
.fi

.LP
.nf
\fBvoid\fR \fBpci_config_put8\fR(\fBddi_acc_handle_t\fR \fIhandle\fR, \fBoff_t\fR \fIoffset\fR,
     \fBuint8_t\fR \fIvalue\fR);
.fi

.LP
.nf
\fBvoid\fR \fBpci_config_put16\fR(\fBddi_acc_handle_t\fR \fIhandle\fR, \fBoff_t\fR \fIoffset\fR,
     \fBuint16_t\fR \fIvalue\fR);
.fi

.LP
.nf
\fBvoid\fR \fBpci_config_put32\fR(\fBddi_acc_handle_t\fR \fIhandle\fR, \fBoff_t\fR \fIoffset\fR,
     \fBuint32_t\fR \fIvalue\fR);
.fi

.LP
.nf
\fBvoid\fR \fBpci_config_put64\fR(\fBddi_acc_handle_t\fR \fIhandle\fR, \fBoff_t\fR \fIoffset\fR,
     \fBuint64_t\fR \fIvalue\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris DDI specific (Solaris DDI). The
.BR pci_config_getb() ,
.BR pci_config_getl() ,
.BR pci_config_getll() ,
.BR pci_config_getw() ,
.BR pci_config_putb() ,
.BR pci_config_putl() ,
.BR pci_config_putll() ,
and
.B pci_config_putw()
functions are obsolete. The
.B pci_config_get8()
function replaces
.BR pci_config_getb() .
The
.B pci_config_get32()
function replaces
.BR pci_config_getl() .
The
.B pci_config_get64()
function replaces
.BR pci_config_getll() .
The
.B pci_config_get16()
function replaces
.BR pci_config_getw() .
The
.B pci_config_put8()
function replaces
.BR pci_config_putb() .
The
.B pci_config_put32()
function replaces
.BR pci_config_putl() .
The
.B pci_config_put64()
function replaces
.BR pci_config_putll() .
The
.B pci_config_put16()
function replaces
.BR pci_config_putw() .
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I handle
.ad
.RS 10n
.rt
The data access handle returned from
.BR pci_config_setup (9F).
.RE

.sp
.ne 2
.mk
.na
.I offset
.ad
.RS 10n
.rt
Byte offset from the beginning of the
.B PCI
Configuration space.
.RE

.sp
.ne 2
.mk
.na
.I value
.ad
.RS 10n
.rt
Output data.
.RE

.SH DESCRIPTION
.sp
.LP
These routines read or write a single datum of various sizes from or to the
.B PCI
Local Bus Configuration space. The
.BR pci_config_get8() ,
.BR pci_config_get16() ,
.BR pci_config_get32() ,
and
.B pci_config_get64()
functions read 8 bits, 16 bits, 32 bits, and 64
bits of data, respectively. The
.BR pci_config_put8() ,
.BR pci_config_put16() ,
.BR pci_config_put32() ,
and
.B pci_config_put64()
functions write 8 bits, 16 bits, 32 bits, and 64
bits of data, respectively. The
.I offset
argument must be a multiple of
the datum size.
.sp
.LP
Since th
.B PCI
Local Bus Configuration space is represented in little
endian data format, these functions translate the data from or to native
host format to or from little endian format.
.sp
.LP
.BR pci_config_setup (9F)
must be called before invoking these
functions.
.SH RETURN VALUES
.sp
.LP
.BR pci_config_get8() ,
.BR pci_config_get16() ,
.BR pci_config_get32() ,
and
.B pci_config_get64()
return the value read
from the
.B PCI
Local Bus Configuration space.
.SH CONTEXT
.sp
.LP
These routines can be called from user, kernel, or interrupt context.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityT{
\fBpci_config_getb()\fR, \fBpci_config_getl()\fR, \fBpci_config_getll()\fR, \fBpci_config_getw()\fR, \fBpci_config_putb()\fR, \fBpci_config_putl()\fR, \fBpci_config_putll()\fR, \fBpci_config_putw()\fR are Obsolete \fBpci_config_get8()\fR, \fBpci_config_get16()\fR, \fBpci_config_get32()\fR, \fBpci_config_get64()\fR, \fBpci_config_put8()\fR, \fBpci_config_put16()\fR, \fBpci_config_put32()\fR, \fBpci_config_put64()\fR are Committed
T}
.TE

.SH SEE ALSO
.sp
.LP
.BR attributes (5),
.BR pci_config_setup (9F),
.BR pci_config_teardown (9F)
