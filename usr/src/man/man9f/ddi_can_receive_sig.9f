'\" te
.\" Copyright (c) 2003, Sun Microsystems, Inc., All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH ddi_can_receive_sig 9F "15 Dec 2003" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
ddi_can_receive_sig \- Test for ability to receive signals
.SH SYNOPSIS
.LP
.nf
#include <sys/ddi.h>
#include <sys/sunddi.h>



\fBboolean_t\fR ddi_can_receive_sig(\fBvoid\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris DDI specific (Solaris DDI).
.SH PARAMETERS
.sp
.LP
None.
.SH DESCRIPTION
.sp
.LP
The
.B ddi_can_receive_sig()
function returns a boolean value
indicating whether the current thread can receive signals sent by
.BR kill (2).
If the return value is
.BR B_FALSE ,
then the calling
thread cannot receive  signals, and any call to
.BR qwait_sig (9F),
.BR cv_wait_sig (9F),
or
.BR cv_timedwait_sig "(9F) implicitly becomes"
.BR qwait (9F),
.BR cv_wait (9F),
or
.BR cv_timedwait (9F),
respectively. Drivers that can block indefinitely awaiting an event should
use this function to determine if additional means (such as
.BR timeout (9F))
may be necessary to avoid creating unkillable threads.
.SH RETURN VALUES
.sp
.ne 2
.mk
.na
.B B_FALSE
.ad
.RS 12n
.rt
The  calling thread is in a state in which signals cannot be
received. For  example, the thread is not associated with a user process or
is in the midst of
.BR exit (2)
handling.
.RE

.sp
.ne 2
.mk
.na
.B B_TRUE
.ad
.RS 12n
.rt
The calling thread may receive a signal while blocked on a
condition variable. Note that this function does not check to determine
whether signals are blocked (see
.BR sigprocmask (2)).
.RE

.SH CONTEXT
.sp
.LP
The
.B ddi_can_receive_sig()
function  may be called from user, kernel,
or interrupt context.
.SH SEE ALSO
.sp
.LP
.BR close (9E),
.BR cv_wait (9F),
.BR qwait (9F)
