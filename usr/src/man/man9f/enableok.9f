'\" te
.\" Copyright (c) 2006, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" Copyright 1989 AT&T
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH enableok 9F "16 Jan 2006" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
enableok \- reschedule a queue for service
.SH SYNOPSIS
.LP
.nf
#include <sys/stream.h>
#include <sys/ddi.h>



\fBvoid\fR \fBenableok\fR(\fBqueue_t *\fIq\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Architecture independent level 1 (DDI/DKI).
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I q
.ad
.RS 5n
.rt
A pointer to the queue to be rescheduled.
.RE

.SH DESCRIPTION
.sp
.LP
The
.B enableok()
function enables queue
.I q
to be rescheduled for
service. It reverses the effect of a previous call to
.BR noenable (9F)
on
.I q
by turning off the
.B QNOENB
flag in the queue.
.SH CONTEXT
.sp
.LP
The
.B enableok()
function can be called from user, interrupt, or kernel
context.
.SH EXAMPLES
.LP
.B Example 1
Using
.BR emableok()
.sp
.LP
The
.B qrestart()
routine uses two STREAMS functions to restart a queue
that has been disabled. The
.B enableok()
function turns off the
.B QNOENB
flag, allowing the
.BR qenable (9F)
to schedule the queue for
immediate processing.

.sp
.in +2
.nf
1  void
2  qrestart(rdwr_q)
3          register queue_t *rdwr_q;
4  {
5     enableok(rdwr_q);
6     /* re-enable a queue that has been disabled */
7     (void) qenable(rdwr_q);
8  }
.fi
.in -2

.SH SEE ALSO
.sp
.LP
.BR noenable (9F),
.BR qenable (9F)
.sp
.LP
.I Writing Device Drivers
.sp
.LP
.I STREAMS Programming Guide
