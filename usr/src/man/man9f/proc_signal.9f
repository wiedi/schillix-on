'\" te
.\" Copyright (c) 2006, Sun Microsystems, Inc.,
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH proc_signal 9F "16 Jan 2006" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
proc_signal, proc_ref, proc_unref \- send a signal to a process
.SH SYNOPSIS
.LP
.nf
#include <sys/ddi.h>
#include <sys/sunddi.h>
#include <sys/signal.h>



\fBvoid *\fBproc_ref\fR(void)
.fi

.LP
.nf
\fBvoid\fBproc_unref\fR(\fBvoid\fR \fI*pref\fR);
.fi

.LP
.nf
\fBint\fR \fBproc_signal\fR(\fBvoid\fR \fI*pref\fR, \fBint\fR \fIsig\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris DDI specific (Solaris DDI).
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I pref
.ad
.RS 8n
.rt
A handle for the process to be signalled.
.RE

.sp
.ne 2
.mk
.na
.I sig
.ad
.RS 8n
.rt
Signal number to be sent to the process.
.RE

.SH DESCRIPTION
.sp
.LP
This set of routines allows a driver to send a signal to a process. The
routine
.B proc_ref()
is used to retrieve an unambiguous reference to the
process for signalling purposes. The return value can be used as a unique
handle on the process, even if the process dies. Because system resources
are committed to a process reference,
.B proc_unref()
should be used to
remove it as soon as it is no longer needed.\fBproc_signal()\fR is used to
send signal
.I sig
to the referenced process. The following set of
signals may be sent to a process from a driver:
.sp
.ne 2
.mk
.na
.B SIGHUP
.ad
.RS 12n
.rt
The device has been disconnected.
.RE

.sp
.ne 2
.mk
.na
.B SIGINT
.ad
.RS 12n
.rt
The interrupt character has been received.
.RE

.sp
.ne 2
.mk
.na
.B SIGQUIT
.ad
.RS 12n
.rt
The quit character has been received.
.RE

.sp
.ne 2
.mk
.na
.B SIGPOLL
.ad
.RS 12n
.rt
A pollable event has occurred.
.RE

.sp
.ne 2
.mk
.na
.B SIGKILL
.ad
.RS 12n
.rt
Kill the process (cannot be caught or ignored).
.RE

.sp
.ne 2
.mk
.na
.B SIGWINCH
.ad
.RS 12n
.rt
Window size change.
.RE

.sp
.ne 2
.mk
.na
.B SIGURG
.ad
.RS 12n
.rt
Urgent data are available.
.RE

.sp
.LP
See \fBsignal.h\fR(3HEAD) for more details on the meaning of these
signals.
.sp
.LP
If the process has exited at the time the signal was sent,
.B proc_signal()
returns an error code; the caller should remove the
reference on the process by calling
.BR proc_unref() .
.sp
.LP
The driver writer must ensure that for each call made to
.BR proc_ref() ,
there is exactly one corresponding call to
.BR proc_unref() .
.SH RETURN VALUES
.sp
.LP
The
.B proc_ref()
returns the following:
.sp
.ne 2
.mk
.na
.I pref
.ad
.RS 8n
.rt
An opaque handle used to refer to the current process.
.RE

.sp
.LP
The
.B proc_signal()
returns the following:
.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 6n
.rt
The process existed before the signal was sent.
.RE

.sp
.ne 2
.mk
.na
.B -1
.ad
.RS 6n
.rt
The process no longer exists; no signal was sent.
.RE

.SH CONTEXT
.sp
.LP
The \fBproc_unref()\fR and \fBproc_signal()\fR functions can be called from
user, interrupt, or kernel context. The
.B proc_ref()
function should be
called only from user context.
.SH SEE ALSO
.sp
.LP
.BR signal.h (3HEAD),
.BR putnextctl1 (9F)
.sp
.LP
.I Writing Device Drivers
