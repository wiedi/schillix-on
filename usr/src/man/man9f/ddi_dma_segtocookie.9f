'\" te
.\" Copyright (c) 2006, Sun Microsystems, Inc.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH ddi_dma_segtocookie 9F "16 Jan 2006" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
ddi_dma_segtocookie \- convert a DMA segment to a DMA address cookie
.SH SYNOPSIS
.LP
.nf
#include <sys/ddi.h>
#include <sys/sunddi.h>



\fBint\fR \fBddi_dma_segtocookie\fR(\fBddi_dma_seg_t\fR \fIseg\fR, \fBoff_t *\fIoffp\fR, \fBoff_t *\fIlenp\fR,
     \fBddi_dma_cookie_t *\fIcookiep\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
This interface is obsolete.
.BR ddi_dma_nextcookie (9F)
should be used
instead.
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I seg
.ad
.RS 11n
.rt
A
.B DMA
segment.
.RE

.sp
.ne 2
.mk
.na
.I offp
.ad
.RS 11n
.rt
A pointer to an
.BR off_t .
Upon a successful return, it is filled in with
the offset. This segment is addressing within the object.
.RE

.sp
.ne 2
.mk
.na
.I lenp
.ad
.RS 11n
.rt
The byte length. This segment is addressing within the object.
.RE

.sp
.ne 2
.mk
.na
.I cookiep
.ad
.RS 11n
.rt
A pointer to a
.B DMA
cookie (see
.BR ddi_dma_cookie (9S)).
.RE

.SH DESCRIPTION
.sp
.LP
The
.B ddi_dma_segtocookie()
function takes a
.B DMA
segment and
fills in the cookie pointed to by
.I cookiep
with the appropriate
address, length, and bus type to be used to program the
.B DMA
engine.
.B ddi_dma_segtocookie()
also fills in
.I *offp
and
.IR *lenp ,
which
specify the range within the object.
.SH RETURN VALUES
.sp
.LP
The
.B ddi_dma_segtocookie()
function returns:
.sp
.ne 2
.mk
.na
.B DDI_SUCCESS
.ad
.RS 15n
.rt
Successfully filled in all values.
.RE

.sp
.ne 2
.mk
.na
.B DDI_FAILURE
.ad
.RS 15n
.rt
Failed to successfully fill in all values.
.RE

.SH CONTEXT
.sp
.LP
The
.B ddi_dma_segtocookie()
function can be called from user,
interrupt, or kernel context.
.SH EXAMPLES
.LP
.B Example 1 ddi_dma_segtocookie()
example
.sp
.in +2
.nf
for (win = NULL; (retw = ddi_dma_nextwin(handle, win, &nwin)) !=
    DDI_DMA_DONE; win = nwin) {
	if (retw != DDI_SUCCESS) {
		/* do error handling */
	} else {
		for (seg = NULL; (rets = ddi_dma_nextseg(nwin, seg, &nseg)) !=
		    DDI_DMA_DONE; seg = nseg) {
			if (rets != DDI_SUCCESS) {

				/* do error handling */
			} else {
				ddi_dma_segtocookie(nseg, &off, &len, &cookie);

				/* program DMA engine */
			}
		}
	}
}
.fi
.in -2

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for a description of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
\fBATTRIBUTE TYPE\fR\fBATTRIBUTE VALUE\fR
_
Stability LevelObsolete
.TE

.SH SEE ALSO
.sp
.LP
.BR attributes (5),
.BR ddi_dma_nextcookie (9F).
.BR ddi_dma_nextseg (9F),
.BR ddi_dma_nextwin (9F),
.BR ddi_dma_sync (9F),
.BR ddi_dma_cookie (9S)
.sp
.LP
.I Writing Device Drivers
