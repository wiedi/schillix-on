'\" te
.\" Copyright (c) 2006, Sun Microsystems, Inc.,
.\" All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH scsi_pktalloc 9F "16 Jan 2006" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
scsi_pktalloc, scsi_resalloc, scsi_pktfree, scsi_resfree \- SCSI packet
utility routines
.SH SYNOPSIS
.LP
.nf
#include <sys/scsi/scsi.h>

\fBstruct scsi_pkt *\fBscsi_pktalloc\fR (\fBstruct scsi_address*\fR \fIap\fR, \fBint\fR \fIcmdlen\fR,
     \fBint\fR \fIstatuslen\fR, \fBint\fR (\fI*callback\fR)(\fIvoid\fR));
.fi

.LP
.nf
\fBstruct scsi_pkt *\fBscsi_resalloc\fR (\fBstruct scsi_address*\fR \fIap\fR, \fBint\fR \fIcmdlen\fR,
     \fBint\fR \fIstatuslen\fR, \fBopaque_t\fR \fIdmatoken\fR, \fBint\fR (\fI*callback\fR)(\fIvoid\fR));
.fi

.LP
.nf
\fBvoid\fR \fBscsi_pktfree\fR (\fBstruct scsi_pkt*\fR \fIpkt\fR);
.fi

.LP
.nf
\fBvoid\fR \fBscsi_resfree\fR (\fBstruct scsi_pkt*\fR \fIpkt\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
The
.BR scsi_pktalloc() ,
.BR scsi_pktfree() ,
.BR scsi_resalloc() ,
and
\fBscsi_resfree()\fR functions are obsolete. The \fBscsi_pktalloc()\fR and
\fBscsi_resalloc()\fR functions have been replaced by
.BR scsi_init_pkt (9F).
The \fBscsi_pktfree()\fR and \fBscsi_resfree()\fR
functions have been replaced by
.BR scsi_destroy_pkt (9F).
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I ap
.ad
.RS 13n
.rt
Pointer to a
.B scsi_address
structure.
.RE

.sp
.ne 2
.mk
.na
.I cmdlen
.ad
.RS 13n
.rt
The required length for the
.B SCSI
command descriptor block (\fBCDB\fR)
in bytes.
.RE

.sp
.ne 2
.mk
.na
.I statuslen
.ad
.RS 13n
.rt
The required length for the
.B SCSI
status completion block (\fBSCB\fR)
in bytes.
.RE

.sp
.ne 2
.mk
.na
.I dmatoken
.ad
.RS 13n
.rt
Pointer to an implementation-dependent object.
.RE

.sp
.ne 2
.mk
.na
.I callback
.ad
.RS 13n
.rt
A pointer to a callback function, or
.B NULL_FUNC
or
.BR SLEEP_FUNC .
.RE

.sp
.ne 2
.mk
.na
.I pkt
.ad
.RS 13n
.rt
Pointer to a
.BR scsi_pkt "(9S) structure."
.RE

.SH DESCRIPTION
.sp
.LP
The
.B scsi_pktalloc()
function requests the host adapter driver to
allocate a command packet. For commands that have a data transfer associated
with them,
.B scsi_resalloc()
should be used.
.sp
.LP
\fIap\fR is a pointer to a \fBscsi_address\fR structure. Allocator routines
use it to determine the associated host adapter.
.sp
.LP
The
.I cmdlen
parameter is the required length for the \fBSCSI
\fRcommand descriptor block. This block is allocated such that a kernel
virtual address is established in the
.B pkt_cdbp
field of the allocated
\fBscsi_pkt\fR structure.
.sp
.LP
\fIstatuslen\fR is the required length for the \fBSCSI\fR status completion
block. The address of the allocated block is placed into the \fBpkt_scbp\fR
field of the
.B scsi_pkt
structure.
.sp
.LP
The
.I dmatoken
parameter is a pointer to an implementation dependent
object which defines the length, direction, and address of the data transfer
associated with this
.B SCSI
packet (command). The
.I dmatoken
must be
a pointer to a \fBbuf\fR(9S) structure. If
.I dmatoken
is
.IR NULL ,
no
\fBDMA\fR resources are required by this \fBSCSI\fR command, so none are
allocated. Only one transfer direction is allowed per command. If there is
an unexpected data transfer phase (either no data transfer phase expected,
or the wrong direction encountered), the command is terminated with the
\fBpkt_reason\fR set to
.BR CMD_DMA_DERR .
\fIdmatoken\fR provides the
information to determine if the transfer count is correct.
.sp
.LP
\fIcallback\fR indicates what the allocator routines should do when
resources are not available:
.sp
.ne 2
.mk
.na
.B NULL_FUNC
.ad
.RS 16n
.rt
Do not wait for resources. Return a
.I NULL
pointer.
.RE

.sp
.ne 2
.mk
.na
.B SLEEP_FUNC
.ad
.RS 16n
.rt
Wait indefinitely for resources.
.RE

.sp
.ne 2
.mk
.na
.B Other Values
.ad
.RS 16n
.rt
\fIcallback\fR points to a function which is called when resources may have
become available.
.I callback
must return either
.B 0
(indicating that
it attempted to allocate resources but again failed to do so), in which case
it is put back on a list to be called again later, or
.B 1
indicating
either success in allocating resources or indicating that it no longer cares
for a retry.
.RE

.sp
.LP
The \fBscsi_pktfree()\fR function frees the packet.
.sp
.LP
The \fBscsi_resfree()\fR function free all resources held by the packet and
the packet itself.
.SH RETURN VALUES
.sp
.LP
Both allocation routines return a pointer to a
.B scsi_pkt
structure on
success, or
.I NULL
on failure.
.SH CONTEXT
.sp
.LP
If
.I callback
is
.BR SLEEP_FUNC ,
then this routine can be called only
from user or kernel context. Otherwise, it can be called from user, kernel,
or interrupt context. The
.I callback
function may not block or call
routines that block. Both deallocation routines can be called from user,
kernel, or interrupt context.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for a description of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
\fBATTRIBUTE TYPE\fR\fBATTRIBUTE VALUE\fR
_
Stability LevelObsolete
.TE

.SH SEE ALSO
.sp
.LP
.BR attributes (5),
.BR scsi_dmafree (9F),
.BR scsi_dmaget (9F),
.BR buf (9S),
.BR scsi_pkt (9S)
.sp
.LP
.I Writing Device Drivers
.SH NOTES
.sp
.LP
The
.BR scsi_pktalloc() ,
.BR scsi_pktfree() ,
.BR scsi_resalloc() ,
and
\fBscsi_resfree()\fR functions are obsolete and will be discontinued in a
future release. The
.B scsi_pktalloc()
and
.BR scsi_resalloc()
functions have been replaced by
.BR scsi_init_pkt "(9F). The"
\fBscsi_pktfree()\fR and \fBscsi_resfree()\fR functions have been replaced
by
.BR scsi_destroy_pkt (9F).
