'\" te
.\" Copyright 1989 AT&T
.\" Copyright (c) 2006, Sun Microsystems, Inc., All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH WR 9F "16 Jan 2006" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
WR, wr \- get pointer to the write queue for this module or driver
.SH SYNOPSIS
.LP
.nf
#include <sys/stream.h>
#include <sys/ddi.h>



\fBqueue_t *\fBWR\fR(\fBqueue_t *\fIq\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Architecture independent level 1 (DDI/DKI).
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I q
.ad
.RS 5n
.rt
Pointer to the
.I read
queue whose
.I write
queue is to be
returned.
.RE

.SH DESCRIPTION
.sp
.LP
The
.B WR()
function accepts a
.I read
queue pointer as an argument
and returns a pointer to the
.I write
queue of the same module.
.sp
.LP
CAUTION: Make sure the argument to this function is a pointer to a
.I read
queue.
.B WR()
will not check for queue type, and a system
panic could result if the pointer is not to a
.I read
queue.
.SH RETURN VALUES
.sp
.LP
The pointer to the
.I write
queue.
.SH CONTEXT
.sp
.LP
The
.B WR()
function can be called from user, interrupt, or kernel
context.
.SH EXAMPLES
.LP
.B Example 1
Using
.BR WR()
.sp
.LP
In a STREAMS
.BR close "(9E) routine, the driver or module is passed a"
pointer to the
.I read
queue. These usually are set to the address of the
module-specific data structure for the minor device.

.sp
.in +2
.nf

1   xxxclose(q, flag)
2       queue_t *q;
3       int flag;
4   {
5	         q->q_ptr = NULL;
6         WR(q)->q_ptr = NULL;
	         . . .
7   }
.fi
.in -2

.SH SEE ALSO
.sp
.LP
.BR close (9E),
.BR OTHERQ (9F),
.BR RD (9F)
.sp
.LP
.I Writing Device Drivers
.sp
.LP
.I STREAMS Programming Guide
