'\" te
.\" Copyright (c) 2001 Sun Microsystems, Inc.
.\"  All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH ddi_mmap_get_model 9F "8 Feb 2001" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
ddi_mmap_get_model \- return data model type of current thread
.SH SYNOPSIS
.LP
.nf
#include <sys/ddi.h>
#include <sys/sunddi.h>



\fBuint_t\fR \fBddi_mmap_get_model\fR(\fBvoid\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris DDI specific (Solaris DDI).
.SH DESCRIPTION
.sp
.LP
\fBddi_mmap_get_model()\fR returns the \fIC\fR Language Type Model which
the current thread expects.
.B ddi_mmap_get_model()
is used in
combination with \fBddi_model_convert_from\fR(9F) in the \fBmmap\fR(9E)
driver entry point to determine whether there is a data model mismatch
between the current thread and the device driver. The device driver might
have to adjust the shape of data structures before exporting them to a user
thread which supports a different data model.
.SH RETURN VALUES
.sp
.ne 2
.mk
.na
.B DDI_MODEL_ILP32
.ad
.RS 20n
.rt
Current thread expects 32-bit
.I (ILP32)
semantics.
.RE

.sp
.ne 2
.mk
.na
.B DDI_MODEL_LP64
.ad
.RS 20n
.rt
Current thread expects 64-bit
.I (LP64)
semantics.
.RE

.sp
.ne 2
.mk
.na
.B DDI_FAILURE
.ad
.RS 20n
.rt
The
.B ddi_mmap_get_model()
function was not called from the
.BR mmap (9E)
entry point.
.RE

.SH CONTEXT
.sp
.LP
The
.B ddi_mmap_get_model()
function can only be called from the
.BR mmap (9E)
driver entry point.
.SH EXAMPLES
.LP
\fBExample 1\fR : Using \fBddi_mmap_get_model()\fR
.sp
.LP
The following is an example of the
.BR mmap "(9E) entry point and how to"
support 32-bit and 64-bit applications with the same device driver.

.sp
.in +2
.nf
struct data32 {
        int len;
        caddr32_t addr;
};

struct data {
        int len;
        caddr_t addr;
};
xxmmap(dev_t dev, off_t off, int prot) {
        struct data dtc; /* a local copy for clash resolution */
        struct data *dp = (struct data *)shared_area;

        switch (ddi_model_convert_from(ddi_mmap_get_model())) {
        case DDI_MODEL_ILP32:
        {
                struct data32 *da32p;

                da32p = (struct data32 *)shared_area;
                dp = &dtc;
                dp->len = da32p->len;
                dp->address = da32->address;
                break;
        }
        case DDI_MODEL_NONE:
                break;
        }
        /* continues along using dp */
       \&.\|.\|.
}
.fi
.in -2

.SH SEE ALSO
.sp
.LP
.BR mmap (9E),
.BR ddi_model_convert_from (9F)
.sp
.LP
.I Writing Device Drivers
