'\" te
.\" Copyright (c) 2005 Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH ddi_mem_rep_get8 9F "1 Nov 2005" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
ddi_mem_rep_get8, ddi_mem_rep_get16, ddi_mem_rep_get32, ddi_mem_rep_get64,
ddi_mem_rep_getb, ddi_mem_rep_getl, ddi_mem_rep_getll, ddi_mem_rep_getw \-
read multiple data from mapped device in the memory space or allocated DMA
memory
.SH SYNOPSIS
.LP
.nf
#include <sys/ddi.h>
#include <sys/sunddi.h>



\fBvoid\fR \fBddi_mem_rep_get8\fR(\fBddi_acc_handle_t\fR \fIhandle\fR,
     \fBuint8_t *\fIhost_addr\fR, \fBuint8_t *\fIdev_addr\fR, \fBsize_t\fR \fIrepcount\fR,
     \fBuint_t\fR \fIflags\fR);
.fi

.LP
.nf
\fBvoid\fR \fBddi_mem_rep_get16\fR(\fBddi_acc_handle_t\fR \fIhandle\fR,
     \fBuint16_t *\fIhost_addr\fR, \fBuint16_t *\fIdev_addr\fR, \fBsize_t\fR \fIrepcount\fR,
     \fBuint_t\fR \fIflags\fR);
.fi

.LP
.nf
\fBvoid\fR \fBddi_mem_rep_get32\fR(\fBddi_acc_handle_t\fR \fIhandle\fR,
     \fBuint32_t *\fIhost_addr\fR, \fBuint32_t *\fIdev_addr\fR, \fBsize_t\fR \fIrepcount\fR,
     \fBuint_t\fR \fIflags\fR);
.fi

.LP
.nf
\fBvoid\fR \fBddi_mem_rep_get64\fR(\fBddi_acc_handle_t\fR \fIhandle\fR,
     \fBuint64_t *\fIhost_addr\fR, \fBuint64_t *\fIdev_addr\fR, \fBsize_t\fR \fIrepcount\fR,
     \fBuint_t\fR \fIflags\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris DDI specific (Solaris DDI). The
.BR ddi_mem_rep_get8() ,
.BR ddi_mem_rep_get16() ,
.BR ddi_mem_rep_get32() ,
.BR ddi_mem_rep_get64() ,
.BR ddi_mem_rep_getb() ,
.BR ddi_mem_rep_getl() ,
.BR ddi_mem_rep_getll() ,
and
.B ddi_mem_rep_getw()
functions are obsolete. The
.BR ddi_rep_get8 (9F)
function replaces
.BR ddi_mem_rep_get8() .
The
.BR ddi_rep_get16 (9F)
function replaces
.BR ddi_mem_rep_get16() .
The
.BR ddi_rep_get32 (9F)
function replaces
.BR ddi_mem_rep_get32() .
The
.BR ddi_rep_get64 (9F)
function replaces
.BR ddi_mem_rep_get64() .
The
.BR ddi_rep_get8 (9F)
function replaces
.BR ddi_mem_rep_getb() .
The
.BR ddi_rep_get32 (9F)
function replaces
.BR ddi_mem_rep_getl() .
The
.BR ddi_rep_get64 (9F)
function replaces
.BR ddi_mem_rep_getll() .
The
.BR ddi_rep_get16 (9F)
function replaces
.BR ddi_mem_rep_getw() .
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I handle
.ad
.RS 13n
.rt
The data access handle returned from setup calls, such as
.BR ddi_regs_map_setup (9F).
.RE

.sp
.ne 2
.mk
.na
.I host_addr
.ad
.RS 13n
.rt
Base host address.
.RE

.sp
.ne 2
.mk
.na
.I dev_addr
.ad
.RS 13n
.rt
Base device address.
.RE

.sp
.ne 2
.mk
.na
.I repcount
.ad
.RS 13n
.rt
Number of data accesses to perform.
.RE

.sp
.ne 2
.mk
.na
.I flags
.ad
.RS 13n
.rt
Device address flags:
.sp
.ne 2
.mk
.na
.B DDI_DEV_AUTOINCR
.ad
.RS 23n
.rt
Automatically increment the device address,
.IR dev_addr ,
during data
accesses.
.RE

.sp
.ne 2
.mk
.na
.B DDI_DEV_NO_AUTOINCR
.ad
.RS 23n
.rt
Do not advance the device address,
.IR dev_addr ,
during data accesses.
.RE

.RE

.SH DESCRIPTION
.sp
.LP
These routines generate multiple reads from memory space or allocated
.B DMA
memory.
.I repcount
data is copied from the device address,
.IR dev_addr ,
in memory space to the host address,
.IR host_addr .
For
each input datum, the
.BR ddi_mem_rep_get8() ,
.BR ddi_mem_rep_get16() ,
.BR ddi_mem_rep_get32() ,
and
.B ddi_mem_rep_get64()
functions read 8
bits, 16 bits, 32 bits and 64 bits of data, respectively, from the device
address,
.IR dev_addr .
.I dev_addr
and
.I host_addr
must be aligned
to the datum boundary described by the function.
.sp
.LP
Each individual datum will automatically be translated to maintain a
consistent view between the host and the device based on the encoded
information in the data access handle. The translation may involve
byte-swapping if the host and the device have incompatible endian
characteristics.
.sp
.LP
When the
.I flags
argument is set to
.BR DDI_DEV_AUTOINCR ,
these
functions will treat the device address,
.IR dev_addr ,
as a memory buffer
location on the device and increments its address on the next input datum.
However, when the
.I flags
argument is set to
.BR DDI_DEV_NO_AUTOINCR ,
the same device address will be used for every datum access. For example,
this flag may be useful when reading from a data register.
.SH CONTEXT
.sp
.LP
These functions can be called from user, kernel, or interrupt context.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityObsolete
.TE

.SH SEE ALSO
.sp
.LP
.BR ddi_mem_get8 (9F),
.BR ddi_mem_put8 (9F),
.BR ddi_mem_rep_put8 (9F),
.BR ddi_regs_map_setup (9F),
.BR ddi_rep_get8 (9F),
.BR ddi_rep_get16 (9F),
.BR ddi_rep_get32 (9F),
.BR ddi_rep_get64 (9F),
.BR ddi_device_acc_attr (9S)
