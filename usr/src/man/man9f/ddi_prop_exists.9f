'\" te
.\" Copyright (c) 1995, Sun Microsystems, Inc.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH ddi_prop_exists 9F "22 May 1995" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
ddi_prop_exists \- check for the existence of a property
.SH SYNOPSIS
.LP
.nf
#include <sys/ddi.h>
#include <sys/sunddi.h>



\fBint\fR \fBddi_prop_exists\fR(\fBdev_t\fR \fImatch_dev\fR, \fBdev_info_t *\fIdip\fR, \fBuint_t\fR \fIflags\fR,
     \fBchar *\fIname\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris DDI specific (Solaris DDI).
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I match_dev
.ad
.RS 14n
.rt
Device number associated with property or
.BR DDI_DEV_T_ANY.
.RE

.sp
.ne 2
.mk
.na
.I dip
.ad
.RS 14n
.rt
Pointer to the device info node of device whose property list should be
searched.
.RE

.sp
.ne 2
.mk
.na
\fIflags\fR
.ad
.RS 14n
.rt
Possible flag values are some combination of:
.sp
.ne 2
.mk
.na
.B DDI_PROP_DONTPASS
.ad
.RS 22n
.rt
Do not pass request to parent device information node if the property  is
not found.
.RE

.sp
.ne 2
.mk
.na
.B DDI_PROP_NOTPROM
.ad
.RS 22n
.rt
Do not look at
.B PROM
properties (ignored on platforms that do not
support
.B PROM
properties).
.RE

.RE

.sp
.ne 2
.mk
.na
.I name
.ad
.RS 14n
.rt
String containing the name of the property.
.RE

.SH DESCRIPTION
.sp
.LP
\fBddi_prop_exists()\fR checks for the existence of a property regardless
of the property value data type.
.sp
.LP
Properties are searched for based on the
.IR dip ,
.IR name ,
and
.IR match_dev .
The property search order is as follows:
.RS +4
.TP
1.
Search software properties created by the driver.
.RE
.RS +4
.TP
2.
Search the software properties created by the system (or nexus nodes in the
device info tree).
.RE
.RS +4
.TP
3.
Search the driver global properties list.
.RE
.RS +4
.TP
4.
If
.B DDI_PROP_NOTPROM
is not set, search the
.B PROM
properties (if
they exist).
.RE
.RS +4
.TP
5.
If
.B DDI_PROP_DONTPASS
is not set, pass this request to the parent
device information node.
.RE
.RS +4
.TP
6.
Return
.B 0
if not found and
.B 1
if found.
.RE
.sp
.LP
Usually, the
.I match_dev
argument should be set to the actual device
number that this property is associated with.  However, if the
\fImatch_dev\fR argument is \fBDDI_DEV_T_ANY,\fR then
\fBddi_prop_exists()\fR will match the request  regardless of the
\fImatch_dev\fR the property was created with.  That is the first property
whose name matches
.I name
will be returned.  If a property was created
with
.I match_dev
set to
.B DDI_DEV_T_NONE
then the only way to look
up this property is with a
.I match_dev
set to
.BR DDI_DEV_T_ANY.
\fBPROM\fR properties are always created with \fImatch_dev\fR set to
.B DDI_DEV_T_NONE.
.sp
.LP
\fIname\fR must always be set to the name of the property being looked
up.
.SH RETURN VALUES
.sp
.LP
\fBddi_prop_exists()\fR returns  \fB1\fR if the property exists and
\fB0\fR otherwise.
.SH CONTEXT
.sp
.LP
These functions can be called from user or kernel context.
.SH EXAMPLES
.LP
\fBExample 1\fR : Using \fBddi_prop_exists()\fR
.sp
.LP
The following example demonstrates the use of
.BR ddi_prop_exists() .

.sp
.in +2
.nf
/*
	* Enable "whizzy" mode if the "whizzy-mode" property exists
	*/
	if (ddi_prop_exists(xx_dev, xx_dip, DDI_PROP_NOTPROM,
	        "whizzy-mode") == 1) {
	      xx_enable_whizzy_mode(xx_dip);
	} else {
	      xx_disable_whizzy_mode(xx_dip);
	}
.fi
.in -2

.SH SEE ALSO
.sp
.LP
.BR ddi_prop_get_int (9F),
.BR ddi_prop_lookup (9F),
.BR ddi_prop_remove (9F),
.BR ddi_prop_update (9F)
.sp
.LP
.I Writing Device Drivers
