'\" te
.\" Copyright (c) 1996, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH csx_MakeDeviceNode 9F "19 Jul 1996" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
csx_MakeDeviceNode, csx_RemoveDeviceNode \- create and remove minor nodes
on behalf of the client
.SH SYNOPSIS
.LP
.nf
#include <sys/pccard.h>



\fBint32_t\fR \fBcsx_MakeDeviceNode\fR(\fBclient_handle_t\fR \fIch\fR, \fBmake_device_node_t *\fIdn\fR);
.fi

.LP
.nf
\fBint32_t\fR \fBcsx_RemoveDeviceNode\fR(\fBclient_handle_t\fR \fIch\fR, \fBremove_device_node_t *\fIdn\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris
.B DDI
Specific (Solaris
.B DDI)
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I ch
.ad
.RS 7n
.rt
Client handle returned from
.BR csx_RegisterClient (9F).
.RE

.sp
.ne 2
.mk
.na
.I dn
.ad
.RS 7n
.rt
Pointer to a
.B make_device_node_t
or
.BR remove_device_node_t
structure.
.RE

.SH DESCRIPTION
.sp
.LP
.B csx_MakeDeviceNode()
and
.B csx_RemoveDeviceNode()
are
Solaris-specific extensions to allow the client to request that device nodes
in the filesystem are created or removed, respectively, on its behalf.
.SH STRUCTURE MEMBERS
.sp
.LP
The structure members of
.B make_device_node_t
are:
.sp
.in +2
.nf
uint32_t        Action;         /* device operation */
uint32_t        NumDevNodes;    /* number of nodes to create */
devnode_desc_t  *devnode_desc;  /* description of device nodes */
.fi
.in -2

.sp
.LP
The structure members of
.B remove_device_node_t
are:
.sp
.in +2
.nf
uint32_t       Action;          /* device operation */
uint32_t       NumDevNodes;     /* number of nodes to remove */
devnode_desc_t *devnode_desc;   /* description of device nodes */
.fi
.in -2

.sp
.LP
The structure members of
.B devnode_desc_t
are:
.sp
.in +2
.nf
char           *name;           /* device node path and name */
int32_t        spec_type;       /* device special type (block or char) */
int32_t        minor_num;       /* device node minor number */
char           *node_type;      /* device node type */
.fi
.in -2

.sp
.LP
The
.B Action
field is used to specify the operation that
.B csx_MakeDeviceNode()
and
.B csx_RemoveDeviceNode()
should
perform.
.sp
.LP
The following
.B Action
values are defined for
.BR csx_MakeDeviceNode() :
.sp
.ne 2
.mk
.na
.B CREATE_DEVICE_NODE
.ad
.RS 22n
.rt
Create
.B NumDevNodes
minor nodes
.RE

.sp
.LP
The following
.B Action
values are defined for
.BR csx_RemoveDeviceNode() :
.sp
.ne 2
.mk
.na
.B REMOVE_DEVICE_NODE
.ad
.RS 27n
.rt
Remove
.B NumDevNodes
minor nodes
.RE

.sp
.ne 2
.mk
.na
.B REMOVE_ALL_DEVICE_NODES
.ad
.RS 27n
.rt
Remove all minor nodes for this client
.RE

.sp
.LP
For
.BR csx_MakeDeviceNode() ,
if the
.B Action
field is:
.sp
.ne 2
.mk
.na
.B CREATE_DEVICE_NODE
.ad
.RS 23n
.rt
The
.B NumDevNodes
field must be set to the number of minor devices to
create, and the client must allocate the quantity of \fBdevnode_desc_t\fR
structures specified by
.B NumDevNodes
and fill out the fields in the
.B devnode_desc_t
structure with the appropriate minor node information.
The meanings of the fields in the
.B devnode_desc_t
structure are
identical to the parameters of the same name to the
.BR ddi_create_minor_node (9F)
.B DDI
function.
.RE

.sp
.LP
For
.BR csx_RemoveDeviceNode() ,
if the
.B Action
field is:
.sp
.ne 2
.mk
.na
.B REMOVE_DEVICE_NODE
.ad
.RS 28n
.rt
The
.B NumDevNodes
field must be set to the number of minor devices to
remove, and the client must allocate the quantity of \fBdevnode_desc_t\fR
structures specified by
.B NumDevNodes
and fill out the fields in the
.B devnode_desc_t
structure with the appropriate minor node information.
The meanings of the fields in the
.B devnode_desc_t
structure are
identical to the parameters of the same name to the
.BR ddi_remove_minor_node (9F)
.B DDI
function.
.RE

.sp
.ne 2
.mk
.na
.B REMOVE_ALL_DEVICE_NODES
.ad
.RS 28n
.rt
The
.B NumDevNodes
field must be set to
.B 0
and the
.B devnode_desc_t
structure pointer must be set to
.IR NULL .
All device
nodes for this client will be removed from the filesystem.
.RE

.SH RETURN VALUES
.sp
.ne 2
.mk
.na
.B CS_SUCCESS
.ad
.RS 28n
.rt
Successful operation.
.RE

.sp
.ne 2
.mk
.na
.B CS_BAD_HANDLE
.ad
.RS 28n
.rt
Client handle is invalid.
.RE

.sp
.ne 2
.mk
.na
.B CS_BAD_ATTRIBUTE
.ad
.RS 28n
.rt
The value of one or more arguments is invalid.
.RE

.sp
.ne 2
.mk
.na
.B CS_BAD_ARGS
.ad
.RS 28n
.rt
Action is invalid.
.RE

.sp
.ne 2
.mk
.na
.B CS_OUT_OF_RESOURCE
.ad
.RS 28n
.rt
Unable to create or remove device node.
.RE

.sp
.ne 2
.mk
.na
.B CS_UNSUPPORTED_FUNCTION
.ad
.RS 28n
.rt
No
.B PCMCIA
hardware installed.
.RE

.SH CONTEXT
.sp
.LP
These functions may be called from user or kernel context.
.SH SEE ALSO
.sp
.LP
.BR csx_RegisterClient (9F),
.BR ddi_create_minor_node (9F),
.BR ddi_remove_minor_node (9F)
.sp
.LP
.I PC Card 95 Standard, PCMCIA/JEIDA
