'\" te
.\" Copyright (c) 2006, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH ddi_dma_addr_setup 9F "04 Apr 2006" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
ddi_dma_addr_setup \- easier DMA setup for use with virtual addresses
.SH SYNOPSIS
.LP
.nf
#include <sys/ddi.h>
#include <sys/sunddi.h>

\fBint\fR \fBddi_dma_addr_setup\fR(\fBdev_info_t *\fIdip\fR, \fBstruct as *\fIas\fR, \fBcaddr_t\fR \fIaddr\fR,
     \fBsize_t\fR \fIlen\fR, \fBuint_t\fR \fIflags\fR, \fBint (*\fIwaitfp\fR) (caddr_t), \fBcaddr_t\fR \fIarg\fR,
     \fBddi_dma_lim_t *\fR \fIlim\fR, \fBddi_dma_handle_t *\fIhandlep\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
This interface is obsolete.
.BR ddi_dma_addr_bind_handle (9F)
should be
used instead.
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I dip
.ad
.RS 11n
.rt
A pointer to the device's
.B dev_info
structure.
.RE

.sp
.ne 2
.mk
.na
.I as
.ad
.RS 11n
.rt
A pointer to an address space structure. Should be set to
.IR NULL ,
which
implies kernel address space.
.RE

.sp
.ne 2
.mk
.na
.I addr
.ad
.RS 11n
.rt
Virtual address of the memory object.
.RE

.sp
.ne 2
.mk
.na
.I len
.ad
.RS 11n
.rt
Length of the memory object in bytes.
.RE

.sp
.ne 2
.mk
.na
.I flags
.ad
.RS 11n
.rt
Flags that would go into the
.B ddi_dma_req
structure (see
.BR ddi_dma_req (9S)).
.RE

.sp
.ne 2
.mk
.na
.I waitfp
.ad
.RS 11n
.rt
The address of a function to call back later if resources aren't available
now. The special function addresses
.B DDI_DMA_SLEEP
and
.B DDI_DMA_DONTWAIT
(see \fBddi_dma_req\fR(9S)) are taken to mean,
respectively, wait until resources are available  or, do not wait at all and
do not schedule a callback.
.RE

.sp
.ne 2
.mk
.na
.I arg
.ad
.RS 11n
.rt
Argument to be passed to a callback function, if such a function is
specified.
.RE

.sp
.ne 2
.mk
.na
.I lim
.ad
.RS 11n
.rt
A pointer to a
.B DMA
limits structure for this device (see
.BR ddi_dma_lim_sparc (9S)
or \fBddi_dma_lim_x86\fR(9S)). If this pointer
is
.IR NULL ,
a default set of
.B DMA
limits is assumed.
.RE

.sp
.ne 2
.mk
.na
.I handlep
.ad
.RS 11n
.rt
Pointer to a
.B DMA
handle. See
.BR ddi_dma_setup (9F)
for a discussion
of handle.
.RE

.SH DESCRIPTION
.sp
.LP
The
.B ddi_dma_addr_setup()
function is an interface to
.BR ddi_dma_setup (9F).
It uses its arguments to construct an appropriate
.B ddi_dma_req
structure and calls
.BR ddi_dma_setup "(9F) with it."
.SH RETURN VALUES
.sp
.LP
See \fBddi_dma_setup\fR(9F) for the possible return values for this
function.
.SH CONTEXT
.sp
.LP
The
.B ddi_dma_addr_setup()
can be called from user, interrupt, or
kernel context, except when
.I waitfp
is set to
.BR DDI_DMA_SLEEP ,
in
which case it cannot be called from interrupt context.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for a description of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
\fBATTRIBUTE TYPE\fR\fBATTRIBUTE VALUE\fR
_
Stability LevelObsolete
.TE

.SH SEE ALSO
.sp
.LP
.BR attributes (5),
.BR ddi_dma_buf_setup (9F),
.BR ddi_dma_free (9F),
.BR ddi_dma_htoc (9F),
.BR ddi_dma_setup (9F),
.BR ddi_dma_sync (9F),
.BR ddi_iopb_alloc (9F),
.BR ddi_dma_lim_sparc (9S),
.BR ddi_dma_lim_x86 (9S),
.BR ddi_dma_req (9S)
.sp
.LP
.I Writing Device Drivers
