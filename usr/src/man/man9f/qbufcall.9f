'\" te
.\" Copyright (c) 2006, Sun Microsystems, Inc.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH qbufcall 9F "16 Jan 2006" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
qbufcall \- call a function when a buffer becomes available
.SH SYNOPSIS
.LP
.nf
#include <sys/stream.h>
#include <sys/ddi.h>



\fBbufcall_id_t\fR \fBqbufcall\fR(\fBqueue_t *\fIq\fR, \fBsize_t\fR \fIsize\fR, \fBuint_t\fR \fIpri\fR,
     \fBvoid\fR(\fI*func\fR)(\fBvoid\fR \fI*arg\fR), \fBvoid\fR \fI*arg\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris DDI specific (Solaris DDI).
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I q
.ad
.RS 8n
.rt
Pointer to
.B STREAMS
queue structure.
.RE

.sp
.ne 2
.mk
.na
.I size
.ad
.RS 8n
.rt
Number of bytes required for the buffer.
.RE

.sp
.ne 2
.mk
.na
.I pri
.ad
.RS 8n
.rt
Priority of the
.BR allocb "(9F) allocation request (not used)."
.RE

.sp
.ne 2
.mk
.na
.I func
.ad
.RS 8n
.rt
Function or driver routine to be called when a buffer becomes available.
.RE

.sp
.ne 2
.mk
.na
.I arg
.ad
.RS 8n
.rt
Argument to the function to be called when a buffer becomes available.
.RE

.SH DESCRIPTION
.sp
.LP
The \fBqbufcall()\fR function serves as a \fBqtimeout\fR(9F) call of
indeterminate length. When a buffer allocation request fails,
.B qbufcall()
can be used to schedule the routine
.I func
to be called
with the argument
.I arg
when a buffer becomes available.
.I func
may
call
.B allocb()
or it may do something else.
.sp
.LP
The
.B qbufcall()
function is tailored to be used with the enhanced
.B STREAMS
framework interface, which is based on the concept of
perimeters. (See \fBmt-streams\fR(9F).) \fBqbufcall()\fR schedules the
specified function to execute after entering the perimeters associated with
the queue passed in as the first parameter to
.BR qbufcall() .
All
outstanding timeouts and bufcalls must be cancelled (using, respectively,
.BR quntimeout (9F)
and \fBqunbufcall\fR(9F)) before a driver close routine
can block and before the close  routine calls \fBqprocsoff\fR(9F).
.sp
.LP
.BR qprocson (9F)
must be called before calling either
.B qbufcall()
or
.BR qtimeout (9F).
.SH RETURN VALUES
.sp
.LP
If successful, the \fBqbufcall()\fR function returns a \fBqbufcall\fR
.B ID
that can be used in a call to \fBqunbufcall\fR(9F) to cancel the
request. If the \fBqbufcall()\fR scheduling fails, \fIfunc\fR is never
called and
.B 0
is returned.
.SH CONTEXT
.sp
.LP
The
.B qbufcall()
function can be called from user, interrupt, or kernel
context.
.SH SEE ALSO
.sp
.LP
.BR allocb (9F),
.BR mt-streams (9F),
.BR qprocson (9F),
.BR qtimeout (9F),
.BR qunbufcall (9F),
.BR quntimeout (9F)
.sp
.LP
.I Writing Device Drivers
.sp
.LP
.I STREAMS Programming Guide
.SH WARNINGS
.sp
.LP
Even when
.I func
is called by
.BR qbufcall() ,
.BR allocb (9F)
can
fail if another module or driver had allocated the memory before \fIfunc\fR
was able to call
.BR allocb (9F).
