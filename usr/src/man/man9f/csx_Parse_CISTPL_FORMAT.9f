'\" te
.\" Copyright (c) 1997, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH csx_Parse_CISTPL_FORMAT 9F "24 Jan 1997" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
csx_Parse_CISTPL_FORMAT \- parse the Data Recording Format tuple
.SH SYNOPSIS
.LP
.nf
#include <sys/pccard.h>



\fBint32_t\fR \fBcsx_Parse_CISTPL_FORMAT\fR(\fBclient_handle_t\fR \fIch\fR, \fBtuple_t *\fItu\fR,
     \fBcistpl_format_t *\fIpt\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris
.B DDI
Specific (Solaris
.B DDI)
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I ch
.ad
.RS 6n
.rt
Client handle returned from
.BR csx_RegisterClient (9F).
.RE

.sp
.ne 2
.mk
.na
.I tu
.ad
.RS 6n
.rt
Pointer to a
.B tuple_t
structure (see
.BR tuple (9S))
returned by a
call to
.BR csx_GetFirstTuple "(9F) or"
.BR csx_GetNextTuple (9F).
.RE

.sp
.ne 2
.mk
.na
.I pt
.ad
.RS 6n
.rt
Pointer to a
.B cistpl_format_t
structure which contains the parsed
.B CISTPL_FORMAT
tuple information upon return from this function.
.RE

.SH DESCRIPTION
.sp
.LP
This function parses the Data Recording Format tuple, \fBCISTPL_FORMAT,\fR
into a form usable by
.B PC
Card drivers.
.sp
.LP
The
.B CISTPL_FORMAT
tuple indicates the data recording format for a
device partition.
.SH STRUCTURE MEMBERS
.sp
.LP
The structure members of
.B cistpl_format_t
are:
.sp
.in +2
.nf
uint32_t     type;
uint32_t     edc_length;
uint32_t     edc_type;
uint32_t     offset;
uint32_t     nbytes;
uint32_t     dev.disk.bksize;
uint32_t     dev.disk.nblocks;
uint32_t     dev.disk.edcloc;
uint32_t     dev.mem.flags;
uint32_t     dev.mem.reserved;
caddr_t      dev.mem.address;
uint32_t     dev.mem.edcloc;
.fi
.in -2

.sp
.LP
The fields are defined as follows:
.sp
.ne 2
.mk
.na
.B type
.ad
.RS 20n
.rt
This field indicates the type of device:
.sp
.ne 2
.mk
.na
.B TPLFMTTYPE_DISK
.ad
.RS 19n
.rt
disk-like device
.RE

.sp
.ne 2
.mk
.na
.B TPLFMTTYPE_MEM
.ad
.RS 19n
.rt
memory-like device
.RE

.sp
.ne 2
.mk
.na
.B TPLFMTTYPE_VS
.ad
.RS 19n
.rt
vendor-specific device
.RE

.RE

.sp
.ne 2
.mk
.na
.B edc_length
.ad
.RS 20n
.rt
This field indicates the error detection code length.
.RE

.sp
.ne 2
.mk
.na
.B edc_type
.ad
.RS 20n
.rt
This field indicates the error detection code type.
.RE

.sp
.ne 2
.mk
.na
.B offset
.ad
.RS 20n
.rt
This field indicates the offset of the first byte of data in this
partition.
.RE

.sp
.ne 2
.mk
.na
.B nbytes
.ad
.RS 20n
.rt
This field indicates the number of bytes of data in this partition
.RE

.sp
.ne 2
.mk
.na
.B dev.disk.bksize
.ad
.RS 20n
.rt
This field indicates the block size, for disk devices.
.RE

.sp
.ne 2
.mk
.na
.B dev.disk.nblocks
.ad
.RS 20n
.rt
This field indicates the number of blocks, for disk devices.
.RE

.sp
.ne 2
.mk
.na
.B dev.disk.edcloc
.ad
.RS 20n
.rt
This field indicates the location of the error detection code, for disk
devices.
.RE

.sp
.ne 2
.mk
.na
.B dev.mem.flags
.ad
.RS 20n
.rt
This field provides flags, for memory devices.  Valid flags are:
.sp
.ne 2
.mk
.na
.B TPLFMTFLAGS_ADDR
.ad
.RS 20n
.rt
address is valid
.RE

.sp
.ne 2
.mk
.na
.B TPLFMTFLAGS_AUTO
.ad
.RS 20n
.rt
automatically map memory region
.RE

.RE

.sp
.ne 2
.mk
.na
.B dev.mem.reserved
.ad
.RS 20n
.rt
This field is reserved.
.RE

.sp
.ne 2
.mk
.na
.B dev.mem.address
.ad
.RS 20n
.rt
This field indicates the physical address, for memory devices.
.RE

.sp
.ne 2
.mk
.na
.B dev.mem.edcloc
.ad
.RS 20n
.rt
This field indicates the location of the error detection code, for memory
devices.
.RE

.SH RETURN VALUES
.sp
.ne 2
.mk
.na
.B CS_SUCCESS
.ad
.RS 27n
.rt
Successful operation.
.RE

.sp
.ne 2
.mk
.na
.B CS_BAD_HANDLE
.ad
.RS 27n
.rt
Client handle is invalid.
.RE

.sp
.ne 2
.mk
.na
.B CS_UNKNOWN_TUPLE
.ad
.RS 27n
.rt
Parser does not know how to parse tuple.
.RE

.sp
.ne 2
.mk
.na
.B CS_NO_CARD
.ad
.RS 27n
.rt
No
.B PC
Card in socket.
.RE

.sp
.ne 2
.mk
.na
.B CS_NO_CIS
.ad
.RS 27n
.rt
No Card Information Structure (CIS) on
.B PC
Card.
.RE

.sp
.ne 2
.mk
.na
.B CS_UNSUPPORTED_FUNCTION
.ad
.RS 27n
.rt
No
.B PCMCIA
hardware installed.
.RE

.SH CONTEXT
.sp
.LP
This function may be called from user or kernel context.
.SH SEE ALSO
.sp
.LP
.BR csx_GetFirstTuple (9F),
.BR csx_GetTupleData (9F),
.BR csx_RegisterClient (9F),
.BR csx_ValidateCIS (9F),
.BR tuple (9S)
.sp
.LP
.I PC Card 95 Standard, PCMCIA/JEIDA
