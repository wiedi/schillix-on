'\" te
.\" Copyright (c) 2002, Sun Microsystems, Inc.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH scsi_probe 9F "26 Feb 2002" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
scsi_probe \- utility for probing a scsi device
.SH SYNOPSIS
.LP
.nf
#include <sys/scsi/scsi.h>



\fBint\fR \fBscsi_probe\fR(\fBstruct scsi_device *\fIdevp\fR, \fBint (*\fIwaitfunc\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris DDI specific (Solaris DDI).
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I devp
.ad
.RS 13n
.rt
Pointer to a
.BR scsi_device "(9S) structure"
.RE

.sp
.ne 2
.mk
.na
.I waitfunc
.ad
.RS 13n
.rt
.B NULL_FUNC
or
.BR SLEEP_FUNC
.RE

.SH DESCRIPTION
.sp
.LP
.B scsi_probe()
determines whether a
.B target/lun
is present and
sets up the
.B scsi_device
structure with inquiry data.
.sp
.LP
.B scsi_probe()
uses the SCSI Inquiry command to test if the device
exists. It can retry the Inquiry command as appropriate. If
.B scsi_probe()
is successful, it will allocate space for the
.B scsi_inquiry
structure and assign the address to the
.BR sd_inq
member of the
.BR scsi_device "(9S) structure."
.B scsi_probe()
will then
fill in this
.BR scsi_inquiry "(9S) structure and return"
.BR SCSIPROBE_EXISTS .
If
.B scsi_probe()
is unsuccessful, it returns
.B SCSIPROBE_NOMEM
in spite of callback set to
.BR SLEEP_FUNC .
.sp
.LP
.BR scsi_unprobe (9F)
is used to undo the effect of
.BR scsi_probe() .
.sp
.LP
If the target is a non-CCS device,
.B SCSIPROBE_NONCCS
will be
returned.
.sp
.LP
.I waitfunc
indicates what the allocator routines should do when
resources are not available; the valid values are:
.sp
.ne 2
.mk
.na
.B NULL_FUNC
.ad
.RS 15n
.rt
Do not wait for resources. Return
.B SCSIPROBE_NOMEM
or
.B SCSIPROBE_FAILURE
.RE

.sp
.ne 2
.mk
.na
.B SLEEP_FUNC
.ad
.RS 15n
.rt
Wait indefinitely for resources.
.RE

.SH RETURN VALUES
.sp
.LP
.B scsi_probe()
returns:
.sp
.ne 2
.mk
.na
.B SCSIPROBE_BUSY
.ad
.RS 23n
.rt
Device exists but is currently busy.
.RE

.sp
.ne 2
.mk
.na
.B SCSIPROBE_EXISTS
.ad
.RS 23n
.rt
Device exists and inquiry data is valid.
.RE

.sp
.ne 2
.mk
.na
.B SCSIPROBE_FAILURE
.ad
.RS 23n
.rt
Polled command failure.
.RE

.sp
.ne 2
.mk
.na
.B SCSIPROBE_NOMEM
.ad
.RS 23n
.rt
No space available for structures.
.RE

.sp
.ne 2
.mk
.na
.B SCSIPROBE_NOMEM_CB
.ad
.RS 23n
.rt
No space available for structures but callback request has been queued.
.RE

.sp
.ne 2
.mk
.na
.B SCSIPROBE_NONCCS
.ad
.RS 23n
.rt
Device exists but inquiry data is not valid.
.RE

.sp
.ne 2
.mk
.na
.B SCSIPROBE_NORESP
.ad
.RS 23n
.rt
Device does not respond to an INQUIRY.
.RE

.SH CONTEXT
.sp
.LP
.B scsi_probe()
is normally called from the target driver's
.BR probe (9E)
or
.BR attach "(9E) routine. In any case, this routine"
should not be called from interrupt context, because it can sleep waiting
for memory to be allocated.
.SH EXAMPLES
.LP
.B Example 1
Using
.BR scsi_probe()
.sp
.in +2
.nf
    switch (scsi_probe(devp, NULL_FUNC)) {
    default:
    case SCSIPROBE_NORESP:
    case SCSIPROBE_NONCCS:
    case SCSIPROBE_NOMEM:
    case SCSIPROBE_FAILURE:
    case SCSIPROBE_BUSY:
            break;
    case SCSIPROBE_EXISTS:
            switch (devp->sd_inq->inq_dtype) {
            case DTYPE_DIRECT:
                    rval = DDI_PROBE_SUCCESS;
                    break;
            case DTYPE_RODIRECT:
                    rval = DDI_PROBE_SUCCESS;
                    break;
            case DTYPE_NOTPRESENT:
            default:
                    break;
            }
    }
    scsi_unprobe(devp);
.fi
.in -2

.SH SEE ALSO
.sp
.LP
.BR attach (9E),
.BR probe (9E),
.BR scsi_slave (9F),
.BR scsi_unprobe (9F),
.BR scsi_unslave (9F),
.BR scsi_device (9S),
.BR scsi_inquiry (9S)
.sp
.LP
.I "ANSI Small Computer System Interface-2 (SCSI-2)
.sp
.LP
.I Writing Device Drivers
.SH NOTES
.sp
.LP
A
.I waitfunc
function other than
.B NULL_FUNC
or
.B SLEEP_FUNC
is
not supported and may have unexpected results.
