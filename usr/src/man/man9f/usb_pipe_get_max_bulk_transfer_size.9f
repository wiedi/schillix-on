'\" te
.\" Copyright (c) 2004, Sun Microsystems, Inc.,
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH usb_pipe_get_max_bulk_transfer_size 9F "5 Jan 2004" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
usb_pipe_get_max_bulk_transfer_size \- Get maximum bulk transfer size
.SH SYNOPSIS
.LP
.nf
#include <sys/usb/usba.h>



\fBint\fR \fBusb_pipe_get_max_bulk_transfer_size\fR(\fBdev_info_t\fR \fIdip\fR, \fBsize_t *\fIsize\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris DDI specific (Solaris DDI)
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I dip
.ad
.RS 8n
.rt
Pointer to the device's dev_info structure.
.RE

.sp
.ne 2
.mk
.na
.I size
.ad
.RS 8n
.rt
Returns the bulk transfer size.
.RE

.SH DESCRIPTION
.sp
.LP
The
.B usb_pipe_get_max_bulk_transfer_size()
function returns the
maximum data transfer size in bytes that the host controller driver can
support per bulk request. This information can be used to limit or break
down larger requests to manageable sizes.
.SH RETURN VALUES
.sp
.ne 2
.mk
.na
.B USB_SUCCESS
.ad
.RS 20n
.rt
Size is returned in size argument.
.RE

.sp
.ne 2
.mk
.na
.B USB_INVALID_ARGS
.ad
.RS 20n
.rt
.I dip
and/or
.I size
argument is
.BR NULL .
.RE

.sp
.ne 2
.mk
.na
.B USB_FAILURE
.ad
.RS 20n
.rt
Size could not be returned. Zero is returned in
.I size
arg.
.RE

.SH CONTEXT
.sp
.LP
May be called from user, kernel or interrupt context.
.SH EXAMPLES
.sp
.in +2
.nf
    int xxx_attach(dev_info_t *dip, int command)
    {
           ...
           usb_pipe_get_max_bulk_transfer_size(dip, &state>max_xfer_size);
           ...
    }

    void xxx_minphys(struct buf bp)
    {
           ...
           if (bp->b_bcount > state->max_xfer_size) {
                   bp->b_bcount = state->max_xfer_size;
           }
           ...
    }


.fi
.in -2

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
ArchitecturePCI-based systems
_
Interface stabilityCommitted
_
AvailabilitySUNWusb
.TE

.SH SEE ALSO
.sp
.LP
.BR attributes (5),
.BR usb_pipe_bulk_xfer (9F),
.BR usb_alloc_request (9F),
.BR usb_bulk_request (9S)
