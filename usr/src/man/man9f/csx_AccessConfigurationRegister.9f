'\" te
.\" Copyright (c) 1996, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH csx_AccessConfigurationRegister 9F "19 Jul 1996" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
csx_AccessConfigurationRegister \- read or write a PC Card Configuration
Register
.SH SYNOPSIS
.LP
.nf
#include <sys/pccard.h>



\fBint32_t\fR \fBcsx_AccessConfigurationRegister\fR(\fBclient_handle_t\fR \fIch\fR,
     \fBaccess_config_reg_t *\fIacr\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris
.B DDI
Specific (Solaris
.B DDI)
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I ch
.ad
.RS 7n
.rt
Client handle returned from
.BR csx_RegisterClient (9F).
.RE

.sp
.ne 2
.mk
.na
.I acr
.ad
.RS 7n
.rt
Pointer to an \fBaccess_config_reg_t\fR structure.
.RE

.SH DESCRIPTION
.sp
.LP
This function allows a client to read or write a \fBPC\fRCard Configuration
Register.
.SH STRUCTURE MEMBERS
.sp
.LP
The structure members of \fBaccess_config_reg_t\fR are:
.sp
.in +2
.nf
uint32_t     Socket;     /* socket number*/
uint32_t     Action;     /* register access operation*/
uint32_t     Offset;     /* config register offset*/
uint32_t     Value;      /* value read or written*/
.fi
.in -2

.sp
.LP
The fields are defined as follows:
.sp
.ne 2
.mk
.na
.B Socket
.ad
.RS 10n
.rt
Not used in Solaris, but for portability with other Card Services
implementations, it should be set to the logical socket number.
.RE

.sp
.ne 2
.mk
.na
.B Action
.ad
.RS 10n
.rt
May be set to
.B CONFIG_REG_READ
or
.BR CONFIG_REG_WRITE .
All other
values in the
.B Action
field are reserved for future use. If the
\fBAction\fR field is set to \fBCONFIG_REG_WRITE,\fR the \fBValue\fR field
is written to the specified configuration register. Card Services does not
read the configuration register after a write operation. For that reason,
the
.B Value
field is only updated by a
.B CONFIG_REG_READ
request.
.RE

.sp
.ne 2
.mk
.na
\fBOffset\fR
.ad
.RS 10n
.rt
Specifies the byte offset for the desired configuration register from the
\fBPC\fR Card configuration register base specified in
.BR csx_RequestConfiguration (9F).
.RE

.sp
.ne 2
.mk
.na
.B Value
.ad
.RS 10n
.rt
Contains the value read from the
.B PC
Card Configuration Register for a
read operation. For a write operation, the
.B Value
field contains the
value to write to the configuration register. As noted above, on return from
a write request, the
.B Value
field is the value written to the \fBPC
\fRCard and not any changed value that may have resulted from the write
request (that is, no read after write is performed).
.RE

.sp
.LP
A client must be very careful when writing to the
.B COR
(Configuration
Option Register) at offset
.BR 0 .
This has the potential to change the
type of interrupt request generated by the
.B PC
Card or place the card
in the reset state. Either request may have undefined results. The client
should read the register to determine the appropriate setting for the
interrupt mode (Bit 6) before writing to the register.
.sp
.LP
If a client wants to reset a
.BR PC "Card, the"
.BR csx_ResetFunction (9F)
function should be used. Unlike
.BR csx_AccessConfigurationRegister() ,
the
.BR csx_ResetFunction (9F)
function generates a series of event
notifications to all clients using the
.B PC
Card, so they can
re-establish the appropriate card state after the reset operation is
complete.
.SH RETURN VALUES
.sp
.ne 2
.mk
.na
.B CS_SUCCESS
.ad
.RS 27n
.rt
Successful operation.
.RE

.sp
.ne 2
.mk
.na
.B CS_BAD_ARGS
.ad
.RS 27n
.rt
Specified arguments are invalid. Client specifies an \fBOffset\fR that is
out of range or neither
.B CONFIG_REG_READ
or
.B CONFIG_REG_WRITE
is
set.
.RE

.sp
.ne 2
.mk
.na
.B CS_UNSUPPORTED_MODE
.ad
.RS 27n
.rt
Client has not called \fBcsx_RequestConfiguration\fR(9F) before calling
this function.
.RE

.sp
.ne 2
.mk
.na
.B CS_BAD_HANDLE
.ad
.RS 27n
.rt
Client handle is invalid.
.RE

.sp
.ne 2
.mk
.na
.B CS_NO_CARD
.ad
.RS 27n
.rt
No
.B PC
card in socket.
.RE

.sp
.ne 2
.mk
.na
.B CS_UNSUPPORTED_FUNCTION
.ad
.RS 27n
.rt
No
.B PCMCIA
hardware installed.
.RE

.SH CONTEXT
.sp
.LP
This function may be called from user or kernel context.
.SH SEE ALSO
.sp
.LP
.BR csx_ParseTuple (9F),
.BR csx_RegisterClient (9F),
.BR csx_RequestConfiguration (9F),
.BR csx_ResetFunction (9F)
.sp
.LP
.I PCCard 95 Standard, PCMCIA/JEIDA
