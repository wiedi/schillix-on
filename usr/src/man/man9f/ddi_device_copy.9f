'\" te
.\" Copyright (c) 1996, Sun Microsystems, Inc  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH ddi_device_copy 9F "15 Nov 1996" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
ddi_device_copy \- copy data from one device register to another device
register
.SH SYNOPSIS
.LP
.nf
#include <sys/ddi.h>
#include <sys/sunddi.h>



\fBint\fR \fBddi_device_copy\fR(\fBddi_acc_handle_t\fR \fIsrc_handle\fR, \fBcaddr_t\fR \fIsrc_addr\fR,
     \fBssize_t\fR \fIsrc_advcnt\fR, \fBddi_acc_handle_t\fR \fIdest_handle\fR,
     \fBcaddr_t\fR \fIdest_addr\fR, \fBssize_t\fR \fIdest_advcnt\fR,
     \fBsize_t\fR \fIbytecount\fR, \fBuint_t\fR \fIdev_datasz\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris DDI specific (Solaris DDI).
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I src_handle
.ad
.RS 16n
.rt
The data access handle of the source device.
.RE

.sp
.ne 2
.mk
.na
.I src_addr
.ad
.RS 16n
.rt
Base data source address.
.RE

.sp
.ne 2
.mk
.na
.I src_advcnt
.ad
.RS 16n
.rt
Number of
.I dev_datasz
units to advance on every access.
.RE

.sp
.ne 2
.mk
.na
.I dest_handle
.ad
.RS 16n
.rt
The data access handle of the destination device.
.RE

.sp
.ne 2
.mk
.na
.I dest_addr
.ad
.RS 16n
.rt
Base data destination address.
.RE

.sp
.ne 2
.mk
.na
.I dest_advcnt
.ad
.RS 16n
.rt
Number of
.I dev_datasz
units to advance on every access.
.RE

.sp
.ne 2
.mk
.na
.I bytecount
.ad
.RS 16n
.rt
Number of bytes to transfer.
.RE

.sp
.ne 2
.mk
.na
.I dev_datasz
.ad
.RS 16n
.rt
The size of each data word. Possible values are defined as:
.sp
.ne 2
.mk
.na
.B DDI_DATA_SZ01_ACC
.ad
.RS 22n
.rt
1 byte data size
.RE

.sp
.ne 2
.mk
.na
.B DDI_DATA_SZ02_ACC
.ad
.RS 22n
.rt
2 bytes data size
.RE

.sp
.ne 2
.mk
.na
.B DDI_DATA_SZ04_ACC
.ad
.RS 22n
.rt
4 bytes data size
.RE

.sp
.ne 2
.mk
.na
.B DDI_DATA_SZ08_ACC
.ad
.RS 22n
.rt
8 bytes data size
.RE

.RE

.SH DESCRIPTION
.sp
.LP
\fBddi_device_copy()\fR copies  \fIbytecount\fR bytes from the source
address,
.IR src_addr ,
to the destination address,
.IR dest_addr .
The
attributes encoded in the access handles,
.I src_handle
and
.IR dest_handle ,
govern how data is actually copied from the source to
the destination. Only matching data sizes between the source and destination
are supported.
.sp
.LP
Data will automatically be translated to maintain a consistent view
between the source and the destination. The translation may involve
byte-swapping if the source and the destination devices  have incompatible
endian characteristics.
.sp
.LP
The
.I src_advcnt
and
.I dest_advcnt
arguments specifies the number
of
.I dev_datasz
units to advance with each access to the device
addresses. A value of
.B 0
will use the same source and destination
device address  on every access. A positive value increments the
corresponding device  address by certain number of data size units in the
next access.  On the other hand, a negative value decrements the device
address.
.sp
.LP
The
.I dev_datasz
argument determines the size of the data word on each
access. The data size must be the same between the source and destination.
.SH RETURN VALUES
.sp
.LP
\fBddi_device_copy()\fR returns:
.sp
.ne 2
.mk
.na
.B DDI_SUCCESS
.ad
.RS 16n
.rt
Successfully transferred the data.
.RE

.sp
.ne 2
.mk
.na
.B DDI_FAILURE
.ad
.RS 16n
.rt
The byte count is not a multiple
.IR dev_datasz .
.RE

.SH CONTEXT
.sp
.LP
\fBddi_device_copy()\fR can be called from user, kernel, or interrupt
context.
.SH SEE ALSO
.sp
.LP
.BR ddi_regs_map_free (9F),
.BR ddi_regs_map_setup (9F)
.sp
.LP
.I Writing Device Drivers
