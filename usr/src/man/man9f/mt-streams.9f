'\" te
.\" Copyright (c) 2002, Sun Microsystems, Inc.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mt-streams 9F "5 May 2009" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
mt-streams \- STREAMS multithreading
.SH SYNOPSIS
.LP
.nf
#include <sys/conf.h>
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris DDI specific (Solaris DDI).
.SH DESCRIPTION
.sp
.LP
STREAMS drivers configure the degree of concurrency using the \fBcb_flag\fR
field in the
.B cb_ops
structure (see
.BR cb_ops (9S)).
The
corresponding field for
.B STREAMS
modules is the
.B f_flag
in the
.B fmodsw
structure.
.sp
.LP
For the purpose of restricting and controlling the concurrency in
drivers/modules, we define the concepts of
.B inner
and \fBouter
perimeters\fR. A driver/module can be configured either to have no
perimeters, to have only an inner or an outer perimeter, or to have both an
inner and an outer perimeter. Each perimeter acts as a readers-writers lock,
that is, there can be multiple concurrent readers or a single writer. Thus,
each perimeter can be entered in two modes: shared (reader) or exclusive
(writer). The mode depends on the perimeter configuration and can be
different for the different
.B STREAMS
entry points (
.BR open (9E),
.BR close (9E),
.BR put (9E),
or
.BR srv (9E)).
.sp
.LP
The concurrency for the different entry points is (unless specified
otherwise) to enter with exclusive access at the inner perimeter (if
present) and shared access at the outer perimeter (if present).
.sp
.LP
The perimeter configuration consists of flags that define the presence and
scope of the inner perimeter, the presence of the outer perimeter (which can
only have one scope), and flags that modify the default concurrency for the
different entry points.
.sp
.LP
All MT safe modules/drivers specify the
.B D_MP
flag.
.SS "Inner Perimeter Flags"
.sp
.LP
The inner perimeter presence and scope are controlled by the mutually
exclusive flags:
.sp
.ne 2
.mk
.na
.B D_MTPERQ
.ad
.RS 21n
.rt
The module/driver has an inner perimeter around each queue.
.RE

.sp
.ne 2
.mk
.na
.B D_MTQPAIR
.ad
.RS 21n
.rt
The module/driver has an inner perimeter around each read/write pair of
queues.
.RE

.sp
.ne 2
.mk
.na
.B D_MTPERMOD
.ad
.RS 21n
.rt
The module/driver has an inner perimeter that encloses all the
module's/driver's queues.
.RE

.sp
.ne 2
.mk
.na
.B None of the above
.ad
.RS 21n
.rt
The module/driver has no inner perimeter.
.RE

.SS "Outer Perimeter Flags"
.sp
.LP
The outer perimeter presence is configured using:
.sp
.ne 2
.mk
.na
.B D_MTOUTPERIM
.ad
.RS 16n
.rt
In addition to any inner perimeter, the module/driver has an outer
perimeter that encloses all the module's/driver's queues. This can be
combined with all the inner perimeter options except
.BR D_MTPERMOD.
.RE

.sp
.LP
Note that acquiring exclusive access at the outer perimeter (that is, using
.BR qwriter (9F)
with the
.B PERIM_OUTER
flag) can incur significant
performance penalties, which grow linearly with the number of open instances
of the module or driver in the system.
.sp
.LP
The default concurrency can be modified using:
.sp
.ne 2
.mk
.na
.B D_MTPUTSHARED
.ad
.RS 17n
.rt
This flag modifies the default behavior when
.BR put "(9E) procedure are"
invoked so that the inner perimeter is entered shared instead of
exclusively.
.RE

.sp
.ne 2
.mk
.na
.B D_MTOCEXCL
.ad
.RS 17n
.rt
This flag modifies the default behavior when
.BR open "(9E) and"
.BR close (9E)
procedures are invoked so the outer perimeter is entered
exclusively instead of shared.
.sp
Note that drivers and modules using this flag can cause significant system
performance degradation during stream open or close when many instances of
the driver or module are in use simultaneously. For this reason, use of this
flag is discouraged. Instead, since
.BR open (9E)
and
.BR close (9E)
both
execute with user context, developers are encouraged to use traditional
synchronization routines such as
.BR cv_wait_sig "(9F) to coordinate with"
other open instances of the module or driver.
.RE

.sp
.LP
The module/driver can use
.BR qwait (9F)
or
.B qwait_sig()
in the
\fBopen\fR(9E) and \fBclose\fR(9E) procedures if it needs to wait "outside"
the perimeters.
.sp
.LP
The module/driver can use
.BR qwriter (9F)
to upgrade the access at the
inner or outer perimeter from shared to exclusive.
.sp
.LP
The use and semantics of
.B qprocson()
and
.BR qprocsoff "(9F) is"
independent of the inner and outer perimeters.
.SH SEE ALSO
.sp
.LP
.BR close (9E),
.BR open (9E),
.BR put (9E),
.BR srv (9E),
.BR qprocsoff (9F),
.BR qprocson (9F),
.BR qwait (9F),
.BR qwriter (9F),
.BR cb_ops (9S)
.sp
.LP
.I STREAMS Programming Guide
.sp
.LP
.I Writing Device Drivers
