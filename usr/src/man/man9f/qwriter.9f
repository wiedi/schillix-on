'\" te
.\" Copyright (c) 1993, Sun Microsystems, Inc., All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH qwriter 9F "1 Mar 1993" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
qwriter \- asynchronous STREAMS perimeter upgrade
.SH SYNOPSIS
.LP
.nf
#include <sys/stream.h>
#include <sys/ddi.h>



\fBvoid\fR \fBqwriter\fR(\fBqueue_t *\fIqp\fR, \fBmblk_t *\fImp\fR, \fBvoid (*\fIfunc\fR)(), \fBint\fR \fIperimeter\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris DDI specific (Solaris DDI).
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I qp
.ad
.RS 14n
.rt
Pointer to the queue.
.RE

.sp
.ne 2
.mk
.na
.I mp
.ad
.RS 14n
.rt
Pointer to a message that will be passed in to the callback function.
.RE

.sp
.ne 2
.mk
.na
\fIfunc\fR
.ad
.RS 14n
.rt
A function that will be called when exclusive (writer) access has been
acquired at the specified perimeter.
.RE

.sp
.ne 2
.mk
.na
.I perimeter
.ad
.RS 14n
.rt
Either
.B PERIM_INNER
or
.BR PERIM_OUTER .
.RE

.SH DESCRIPTION
.sp
.LP
\fBqwriter()\fR is used to upgrade the access at either the inner or the
outer perimeter from shared to exclusive and call the specified callback
function when the upgrade has succeeded. See
.BR mt-streams (9F).
The
callback function is called as:
.sp
.in +2
.nf
\fB(*func)(queue_t *\fIqp\fB, mblk_t *\fImp\fB);\fR
.fi
.in -2

.sp
.LP
\fBqwriter()\fR will acquire exclusive access immediately if possible, in
which case the specified callback function will be executed before
\fBqwriter()\fR returns. If this is not possible, \fBqwriter()\fR will defer
the upgrade until later and return before the callback function has been
executed. Modules should not assume that the callback function has been
executed when
.B qwriter()
returns. One way to avoid dependencies on the
execution of the callback function is to immediately return after calling
\fBqwriter()\fR and let the callback function finish the processing of the
message.
.sp
.LP
When
.B qwriter()
defers calling the callback function, the STREAMS
framework will prevent other messages from entering the inner perimeter
associated with the queue until the upgrade has completed and the callback
function has finished executing.
.SH CONTEXT
.sp
.LP
\fBqwriter()\fR can only be called from an \fBput\fR(9E) or \fBsrv\fR(9E)
routine, or from a
.BR qwriter() ,
.BR qtimeout (9F),
or
\fBqbufcall\fR(9F) callback function.
.SH SEE ALSO
.sp
.LP
.BR put (9E),
.BR srv (9E),
.BR mt-streams (9F),
\fBqbufcall\fR(9F),
.BR qtimeout (9F)
.sp
.LP
.I STREAMS Programming Guide
.sp
.LP
.I Writing Device Drivers
