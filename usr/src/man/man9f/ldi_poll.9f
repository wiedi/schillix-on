'\" te
.\" Copyright (c) 2003, Sun Microsystems, Inc.,  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH ldi_poll 9F "3 June 2003" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
ldi_poll \- Poll a device
.SH SYNOPSIS
.LP
.nf
#include <sys/sunldi.h>



\fBint\fR \fBldi_poll\fR(\fBldi_handle_t\fR \fIlh\fR, \fBshort\fR \fIevents\fR, \fBint\fR \fIanyyet\fR, \fBshort *\fIreventsp\fR,
     \fBstruct pollhead **\fIphpp\fR);
.fi

.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I lh
.ad
.RS 13n
.rt
Layered handle.
.RE

.sp
.ne 2
.mk
.na
.I events
.ad
.RS 13n
.rt
Potential events. Valid events are:
.sp
.ne 2
.mk
.na
.B POLLIN
.ad
.RS 14n
.rt
Data other than high priority data may be read without blocking.
.RE

.sp
.ne 2
.mk
.na
.B POLLOUT
.ad
.RS 14n
.rt
Normal data may be written without blocking.
.RE

.sp
.ne 2
.mk
.na
.B POLLPRI
.ad
.RS 14n
.rt
High priority data may be received without blocking.
.RE

.sp
.ne 2
.mk
.na
.B POLLHUP
.ad
.RS 14n
.rt
Device hangup has occurred.
.RE

.sp
.ne 2
.mk
.na
.B POLLERR
.ad
.RS 14n
.rt
An error has occurred on the device.
.RE

.sp
.ne 2
.mk
.na
.B POLLRDNORM
.ad
.RS 14n
.rt
Normal data (priority band = 0) may be read without blocking.
.RE

.sp
.ne 2
.mk
.na
.B POLLRDBAND
.ad
.RS 14n
.rt
Data from a non-zero priority band may be read without blocking.
.RE

.sp
.ne 2
.mk
.na
.B POLLWRNORM
.ad
.RS 14n
.rt
Data other than high priority data may be read without blocking.
.RE

.sp
.ne 2
.mk
.na
.B POLLWRBAND
.ad
.RS 14n
.rt
Priority data (priority band > 0) may be written.
.RE

.RE

.sp
.ne 2
.mk
.na
.I anyyet
.ad
.RS 13n
.rt
A flag that is non-zero if any other file descriptors                 in
the pollfd array have events pending. The
.BR poll (2)
system call takes a
pointer to an array of pollfd                 structures as one of its
arguments. See
.BR poll (2)
for more details.
.RE

.sp
.ne 2
.mk
.na
.I reventsp
.ad
.RS 13n
.rt
Pointer to a bitmask of the returned events satisfied.
.RE

.sp
.ne 2
.mk
.na
.I phpp
.ad
.RS 13n
.rt
Pointer to a pointer to a pollhead structure.
.RE

.SH DESCRIPTION
.sp
.LP
The
.B ldi_poll()
function passes a poll request to the device entry
point for the device specified by the layered handle. This operation is
supported for block, character, and streams devices.
.SH RETURN VALUES
.sp
.LP
The
.B ldi_poll()
function returns
.B 0
upon success. If a failure
occurs before the request is passed on to the device, possible return values
are:
.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 11n
.rt
Invalid input parameters.
.RE

.sp
.ne 2
.mk
.na
.B ENOTSUP
.ad
.RS 11n
.rt
Operation is not supported for this device.
.RE

.SH CONTEXT
.sp
.LP
These functions may be called from user or kernel context.
