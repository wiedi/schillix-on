'\" te
.\" Copyright (c) 2006, Sun Microsystems, Inc.,  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH scsi_transport 9F "16 Jan 2006" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
scsi_transport \- request by a SCSI target driver to start a command
.SH SYNOPSIS
.LP
.nf
#include <sys/scsi/scsi.h>



\fBint\fR \fBscsi_transport\fR(\fBstruct scsi_pkt *\fIpkt\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris DDI specific (Solaris DDI).
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I pkt
.ad
.RS 7n
.rt
Pointer to a
.BR scsi_pkt "(9S) structure."
.RE

.SH DESCRIPTION
.sp
.LP
Target drivers use
.B scsi_transport()
to request the host adapter driver to
transport a command to the
.B SCSI
target device specified by
.IR pkt .
The
target driver must obtain resources for the packet using
.BR scsi_init_pkt (9F)
prior to calling this function. The packet may be initialized using one of the
.BR makecom (9F)
functions.
.B scsi_transport()
does not wait for the
.B SCSI
command to complete. See
.BR scsi_poll (9F)
for a description of
polled
.B SCSI
commands. Upon completion of the
.B SCSI
command the host
adapter calls the completion routine provided by the target driver in the
.B pkt_comp
member of the
.B scsi_pkt
pointed to by
.IR pkt .
.SH RETURN VALUES
.sp
.LP
The
.B scsi_transport()
function returns:
.sp
.ne 2
.mk
.na
.B TRAN_ACCEPT
.ad
.RS 20n
.rt
The packet was accepted by the transport layer.
.RE

.sp
.ne 2
.mk
.na
.B TRAN_BUSY
.ad
.RS 20n
.rt
The packet could not be accepted because there was already a packet in progress
for this target/lun, the host adapter queue was full, or the target device
queue
was full.
.RE

.sp
.ne 2
.mk
.na
.B TRAN_BADPKT
.ad
.RS 20n
.rt
The
.B DMA
count in the packet exceeded the
.B DMA
engine's maximum
.B DMA
size.
.RE

.sp
.ne 2
.mk
.na
.B TRAN_FATAL_ERROR
.ad
.RS 20n
.rt
A fatal error has occurred in the transport layer.
.RE

.SH CONTEXT
.sp
.LP
The
.B scsi_transport()
function can be called from user, interrupt, or
kernel context.
.SH EXAMPLES
.LP
.B Example 1
Using
.BR scsi_transport()
.sp
.in +2
.nf
if ((status = scsi_transport(rqpkt)) != TRAN_ACCEPT) {
      scsi_log(devp, sd_label, CE_WARN,
          "transport of request sense pkt fails (0x%x)\en", status);
}
.fi
.in -2

.SH SEE ALSO
.sp
.LP
.BR tran_start (9E),
.BR makecom (9F),
.BR scsi_init_pkt (9F),
.BR scsi_pktalloc (9F),
.BR scsi_poll (9F),
.BR scsi_pkt (9S)
.sp
.LP
.I Writing Device Drivers
