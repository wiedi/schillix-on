'\" te
.\" Copyright (c) 2006, Sun Microsystems, Inc.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH disksort 9F "16 Jan 2006" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
disksort \- single direction elevator seek sort for buffers
.SH SYNOPSIS
.LP
.nf
#include <sys/conf.h>
#include <sys/ddi.h>
#include <sys/sunddi.h>
void

\fBdisksort\fR(\fBstruct diskhd\fR \fI*dp\fR, \fBstruct buf\fR \fI*bp\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris DDI specific (Solaris DDI).
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I dp
.ad
.RS 6n
.rt
A pointer to a
.B diskhd
structure. A
.B diskhd
structure is
essentially identical to head of a buffer structure (see
.BR buf (9S)).
The
only defined items of interest for this structure are the
.B av_forw
and
.B av_back
structure elements which are used to maintain the front and
tail pointers of the forward linked
.B I/O
request queue.
.RE

.sp
.ne 2
.mk
.na
.I bp
.ad
.RS 6n
.rt
A pointer to a buffer structure. Typically this is the
.B I/O
request
that the driver receives in its strategy routine (see
.BR strategy (9E)).
The driver is responsible for initializing the
.B b_resid
structure
element to a meaningful sort key value prior to calling
.BR disksort() .
.RE

.SH DESCRIPTION
.sp
.LP
The function
.B disksort()
sorts a pointer to a buffer into a single
forward linked list headed by the
.B av_forw
element of the argument
.IR *dp .
.sp
.LP
It uses a one-way elevator algorithm that sorts buffers into the queue in
ascending order based upon a key value held in the argument buffer structure
element
.BR b_resid .
.sp
.LP
This value can either be the driver calculated cylinder number for the
.B I/O
request described by the buffer argument, or simply the absolute
logical block for the
.B I/O
request, depending on how fine grained the
sort is desired to be or how applicable either quantity is to the device in
question.
.sp
.LP
The head of the linked list is found by use of the
.B av_forw
structure
element of the argument
.IR *dp .
The tail of the linked list is found by
use of the
.B av_back
structure element of the argument
.IR *dp .
The
.B av_forw
element of the
.I *bp
argument is used by
.BR disksort()
to maintain the forward linkage. The value at the head of the list
presumably indicates the currently active disk area.
.SH CONTEXT
.sp
.LP
This function can be called from user, interrupt, or kernel context.
.SH SEE ALSO
.sp
.LP
.BR strategy (9E),
.BR buf (9S)
.sp
.LP
.I Writing Device Drivers
.SH WARNINGS
.sp
.LP
The
.B disksort()
function does no locking. Therefore, any locking is
completely the responsibility of the caller.
