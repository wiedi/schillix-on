'\" te
.\" Copyright (c) 2006, Sun Microsystems, Inc.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH ddi_dma_nextseg 9F "04 Apr 2006" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
ddi_dma_nextseg \- get next DMA segment
.SH SYNOPSIS
.LP
.nf
#include <sys/ddi.h>
#include <sys/sunddi.h>



\fBint\fR \fBddi_dma_nextseg\fR(\fBddi_dma_win_t\fR \fIwin\fR, \fBddi_dma_seg_t\fR \fIseg\fR,
     \fBddi_dma_seg_t *\fInseg\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
This interface is obsolete.
.BR ddi_dma_nextcookie (9F)
should be used
instead.
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I win
.ad
.RS 8n
.rt
A
.B DMA
window.
.RE

.sp
.ne 2
.mk
.na
.I seg
.ad
.RS 8n
.rt
The current
.B DMA
segment or
.IR NULL .
.RE

.sp
.ne 2
.mk
.na
.I nseg
.ad
.RS 8n
.rt
A pointer to the next
.B DMA
segment to be filled in. If
.I seg
is
.IR NULL ,
a pointer to the first segment within the specified window is
returned.
.RE

.SH DESCRIPTION
.sp
.LP
The
.B ddi_dma_nextseg()
function gets the next
.B DMA
segment within
the specified window
.IR win .
If the current segment is
.IR NULL ,
the
first
.B DMA
segment within the window is returned.
.sp
.LP
A
.B DMA
segment is always required for a
.B DMA
.RB "window.  A" " DMA"
segment is a contiguous portion of a
.B DMA
window (see
.BR ddi_dma_nextwin (9F))
which is entirely addressable by the device for a
data transfer operation.
.sp
.LP
An example where multiple
.B DMA
segments are allocated is where the
system does not contain
.B DVMA
capabilities and the object may be
non-contiguous. In this example the object will be broken into smaller
contiguous
.B DMA
segments. Another example is where the device has  an
upper limit on its transfer size (for example an 8-bit address register) and
has expressed this in the
.B DMA
limit structure (see
.BR ddi_dma_lim_sparc (9S)
or
.BR ddi_dma_lim_x86 "(9S)). In this example"
the object will be broken into smaller addressable
.B DMA
segments.
.SH RETURN VALUES
.sp
.LP
The
.B ddi_dma_nextseg()
function returns:
.sp
.ne 2
.mk
.na
.B DDI_SUCCESS
.ad
.RS 17n
.rt
Successfully filled in the next segment pointer.
.RE

.sp
.ne 2
.mk
.na
.B DDI_DMA_DONE
.ad
.RS 17n
.rt
There is no next segment. The current segment is the final segment within
the specified window.
.RE

.sp
.ne 2
.mk
.na
.B DDI_DMA_STALE
.ad
.RS 17n
.rt
\fIwin\fR does not refer to the currently active window.
.RE

.SH CONTEXT
.sp
.LP
The
.B ddi_dma_nextseg()
function can be called from user, interrupt, or
kernel context.
.SH EXAMPLES
.sp
.LP
For an example, see \fBddi_dma_segtocookie\fR(9F).
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for a description of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Stability LevelObsolete
.TE

.SH SEE ALSO
.sp
.LP
.BR attributes (5),
.BR ddi_dma_addr_setup (9F),
\fBddi_dma_buf_setup\fR(9F), \fBddi_dma_nextcookie\fR(9F),
.BR ddi_dma_nextwin (9F),
.BR ddi_dma_segtocookie (9F),
.BR ddi_dma_sync (9F),
.BR ddi_dma_lim_sparc (9S),
.BR ddi_dma_lim_x86 (9S),
.BR ddi_dma_req (9S)
.sp
.LP
.I Writing Device Drivers
