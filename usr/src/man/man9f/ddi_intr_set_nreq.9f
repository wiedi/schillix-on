'\" te
.\" Copyright (c) 2009, Sun Microsystems, Inc.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH ddi_intr_set_nreq 9F "5 Jan 2009" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
ddi_intr_set_nreq \- set the number of interrupts requested for a device
driver instance
.SH SYNOPSIS
.LP
.nf
#include <sys/ddi_intr.h>



\fBint\fR \fBddi_intr_set_nreq\fR(\fBdev_info_t *\fIdip\fR, \fBint\fR \fInreq\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris DDI specific (Solaris DDI).
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I dip
.ad
.RS 8n
.rt
Pointer to the
.B dev_info
structure.
.RE

.sp
.ne 2
.mk
.na
.I nreq
.ad
.RS 8n
.rt
Number of interrupts requested.
.RE

.SH DESCRIPTION
.sp
.LP
The
.B ddi_intr_set_nreq()
function changes the number of interrupts
requested by a device driver instance.
.sp
.LP
The
.I nreq
parameter is the total number of interrupt resources that
this instance of the device driver would like to have available. The
.I nreq
parameter includes any interrupt resources already allocated by
the driver. For example, if the driver instance already has two MSI-X
vectors and it wants two more, it should call this function with an
.I nreq
parameter set to four.
.sp
.LP
The
.I nreq
parameter can be any value between one and the maximum
number of interrupts supported by the device hardware, as reported by a call
to the
.BR ddi_intr_get_nintrs (9F)
function. The driver receives a
callback notifying it in cases when it must release any previously allocated
interrupts, or when it is allowed to allocate more interrupts as a result of
its new
.I nreq
parameter.
.sp
.LP
The
.BR ddi_intr_set_nreq() function
is not supported unless a driver is
already consuming interrupts, and if it has a registered callback handler
that can process actions related to changes in interrupt availability. See
.BR ddi_cb_register (9F)
for an explanation on how to enable this
functionality.
.SH RETURN VALUES
.sp
.LP
The
.B ddi_intr_set_nreq()
function returns:
.sp
.ne 2
.mk
.na
.B DDI_SUCCESS
.ad
.RS 15n
.rt
on success
.RE

.sp
.ne 2
.mk
.na
.B DDI_EINVAL
.ad
.RS 15n
.rt
The operation is invalid because the
.I nreq
parameter is not a legal
value
.RE

.sp
.ne 2
.mk
.na
.B DDI_ENOTSUP
.ad
.RS 15n
.rt
The operation is not supported. The driver must have a registered callback,
and the system must have interrupt pools implemented.
.RE

.sp
.ne 2
.mk
.na
.B DDI_FAILURE
.ad
.RS 15n
.rt
Implementation specific failure
.RE

.SH CONTEXT
.sp
.LP
These functions can be called from kernel, non-interrupt context.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityPrivate
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR attributes (5),
.BR attach (9E),
.BR ddi_cb_register (9F),
.BR ddi_intr_alloc (9F),
.BR ddi_intr_get_nintrs (9F)
.SH NOTES
.sp
.LP
The Interrupt Resource Management feature is limited to device driver
instances that are using MSI-X interrupts (interrupt type
.BR DDI_INTR_TYPE_MSIX ).
Attempts to use this function for any other type
of interrupts fails with
.BR DDI_ENOTSUP .
.sp
.LP
The total number of interrupts requested by the driver is initially defined
by the
.I count
parameter provided by the driver's first call to the
.BR ddi_intr_alloc (9F)
function, specifically during the driver instance's
.BR attach (9E)
routine. The
.B ddi_intr_set_nreq()
function is only
used if the driver instance experiences changes in its I/O load. In response
to increased I/O load, the driver may want to request additional interrupt
resources. In response to diminished I/O load. the driver may volunteer to
return extra interrupt resources back to the system.
