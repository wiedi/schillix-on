'\" te
.\" Copyright (c) 1996, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH csx_RequestSocketMask 9F "19 Jul 1996" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
csx_RequestSocketMask, csx_ReleaseSocketMask \- set or clear the client's
client event mask
.SH SYNOPSIS
.LP
.nf
#include <sys/pccard.h>



\fBint32_t\fR \fBcsx_RequestSocketMask\fR(\fBclient_handle_t\fR \fIch\fR,
     \fBrequest_socket_mask_t *\fIsm\fR);
.fi

.LP
.nf
\fBint32_t\fR \fBcsx_ReleaseSocketMask\fR(\fBclient_handle_t\fR \fIch\fR,
     \fBrelease_socket_mask_t *\fIrm\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris
.B DDI
Specific (Solaris
.BR DDI )
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I ch
.ad
.RS 6n
.rt
Client handle returned from
.BR csx_RegisterClient (9F).
.RE

.sp
.ne 2
.mk
.na
.I sm
.ad
.RS 6n
.rt
Pointer to a
.B request_socket_mask_t
structure.
.RE

.sp
.ne 2
.mk
.na
.I rm
.ad
.RS 6n
.rt
Pointer to a
.B release_socket_mask_t
structure.
.RE

.SH DESCRIPTION
.sp
.LP
The function
.B csx_RequestSocketMask()
sets the client's client event
mask and enables the client to start receiving events at its event callback
handler. Once this function returns successfully, the client can start
receiving events at its event callback handler. Any pending events generated
from the call to
.BR csx_RegisterClient "(9F) will be delivered to the"
client after this call as well. This allows the client to set up the event
handler mutexes before the event handler gets called.
.sp
.LP
.B csx_RequestSocketMask()
must be used before calling
.BR csx_GetEventMask (9F)
or
.BR csx_SetEventMask (9F)
for the client
event mask for this socket.
.sp
.LP
The function
.B csx_ReleaseSocketMask()
clears the client's client event
mask.
.SH STRUCTURE MEMBERS
.sp
.LP
The structure members of
.B request_socket_mask_t
are:
.sp
.in +2
.nf
 uint32_t    Socket;       /* socket number */
  uint32_t    EventMask;    /* event mask to set or return */
.fi
.in -2

.sp
.LP
The structure members of
.B release_socket_mask_t
are:
.sp
.in +2
.nf
  uint32_t    Socket;       /* socket number */
.fi
.in -2

.sp
.LP
The fields are defined as follows:
.sp
.ne 2
.mk
.na
.B Socket
.ad
.RS 13n
.rt
Not used in Solaris, but for portability with other Card Services
implementations, it should be set to the logical socket number.
.RE

.sp
.ne 2
.mk
.na
.B EventMask
.ad
.RS 13n
.rt
This field is bit-mapped. Card Services performs event notification based
on this field. See
.BR csx_event_handler (9E)
for valid event definitions
and for additional information about handling events.
.RE

.SH RETURN VALUES
.sp
.ne 2
.mk
.na
.B CS_SUCCESS
.ad
.RS 27n
.rt
Successful operation.
.RE

.sp
.ne 2
.mk
.na
.B CS_BAD_HANDLE
.ad
.RS 27n
.rt
Client handle is invalid.
.RE

.sp
.ne 2
.mk
.na
.B CS_IN_USE
.ad
.RS 27n
.rt
.B csx_ReleaseSocketMask()
has not been done.
.RE

.sp
.ne 2
.mk
.na
.B CS_BAD_SOCKET
.ad
.RS 27n
.rt
.B csx_RequestSocketMask()
has not been done.
.RE

.sp
.ne 2
.mk
.na
.B CS_UNSUPPORTED_FUNCTION
.ad
.RS 27n
.rt
No
.B PCMCIA
hardware installed.
.RE

.SH CONTEXT
.sp
.LP
These functions may be called from user or kernel context.
.SH SEE ALSO
.sp
.LP
.BR csx_event_handler (9E),
.BR csx_GetEventMask (9F),
.BR csx_RegisterClient (9F),
.BR csx_SetEventMask (9F)
.sp
.LP
.IR "PC Card 95 Standard" ,
PCMCIA/JEIDA
