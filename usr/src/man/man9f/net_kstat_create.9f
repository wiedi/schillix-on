'\" te
.\" Copyright (C) 2008, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH net_kstat_create 9F "1 May 2008" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
net_kstat_create \- create and initialize a new kstat for a specific instance
of IP
.SH SYNOPSIS
.LP
.nf
#include <sys/types.h>
#include <sys/kstat.h>
#include <sys/neti.h>

\fBkstat_t\fR *\fBnet_kstat_create\fR(\fBnetid_t\fR \fInetid\fR, \fBchar\fR *\fImodule\fR,
     \fBint\fR \fIinstance\fR, \fBchar\fR *\fIname\fR, \fBchar\fR *\fIclass\fR, \fBuchar_type\fR \fItype\fR,
     \fBulong_t\fR \fIndata\fR, \fBuchar_t\fR \fIks_flag\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris DDI specific (Solaris DDI).
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I netid
.ad
.RS 12n
.rt
.B IP
instance identifier.
.RE

.sp
.ne 2
.mk
.na
.I module
.ad
.RS 12n
.rt
The name of the provider's module (such as "\fBsd\fR", "\fBesp\fR", .\|.\|.). The
"\fBcore\fR" kernel uses the name "unix".
.RE

.sp
.ne 2
.mk
.na
.I instance
.ad
.RS 12n
.rt
The provider's instance number, as from
.BR ddi_get_instance (9F).
Modules
which do not have a meaningful instance number should use
.BR 0 .
.RE

.sp
.ne 2
.mk
.na
.I name
.ad
.RS 12n
.rt
A pointer to a string that uniquely identifies this structure. Only
\fBKSTAT_STRLEN \(mi 1\fR characters are significant.
.RE

.sp
.ne 2
.mk
.na
.I class
.ad
.RS 12n
.rt
The general class that this kstat belongs to. The following classes are
currently in use:
.BR disk ,
.BR tape ,
.BR net ,
.BR controller ,
.BR vm ,
.BR kvm ,
.BR hat ,
.BR streams ,
.BR kstat ,
and
.BR misc .
.RE

.sp
.ne 2
.mk
.na
.I type
.ad
.RS 12n
.rt
The type of
.B kstat
to allocate. Valid types are:
.sp
.ne 2
.mk
.na
.B KSTAT_TYPE_NAMED
.ad
.sp .6
.RS 4n
Allows more than one data record per
.BR kstat .
.RE

.sp
.ne 2
.mk
.na
.B KSTAT_TYPE_INTR
.ad
.sp .6
.RS 4n
Interrupt; only one data record per
.BR kstat .
.RE

.sp
.ne 2
.mk
.na
.B KSTAT_TYPE_IO
.ad
.sp .6
.RS 4n
.BR I/O ;
only one data record per
.BR kstat
.RE

.RE

.sp
.ne 2
.mk
.na
.I ndata
.ad
.RS 12n
.rt
The number of type-specific data records to allocate.
.RE

.sp
.ne 2
.mk
.na
.I ks_flag
.ad
.RS 12n
.rt
A bit-field of various flags for this
.BR kstat .
.I ks_flag
is some
combination of:
.sp
.ne 2
.mk
.na
.B KSTAT_FLAG_VIRTUAL
.ad
.sp .6
.RS 4n
Tells
.B kstat_create()
not to allocate memory for the
.B kstat
data
section; instead, the driver will set the
.B ks_data
field to point to the
data it wishes to export. This provides a convenient way to export existing
data structures.
.RE

.sp
.ne 2
.mk
.na
.B KSTAT_FLAG_WRITABLE
.ad
.sp .6
.RS 4n
Makes the
.B kstat
data section writable by root.
.RE

.sp
.ne 2
.mk
.na
.B KSTAT_FLAG_PERSISTENT
.ad
.sp .6
.RS 4n
Indicates that this
.B kstat
is to be persistent over time. For persistent
\fBkstat\fRs, \fBkstat_delete\fR(9F) simply marks the \fBkstat\fR as dormant;
a subsequent
.B kstat_create()
reactivates the kstat. This feature is
provided so that statistics are not lost across driver close/open (such as raw
disk
.B I/O
on a disk with no mounted partitions.) Note: Persistent
\fBkstat\fRs cannot be virtual, since \fBks_data\fR points to garbage as soon
as the driver goes away.
.RE

.RE

.SH DESCRIPTION
.sp
.LP
The
.B net_kstat_create()
function allocates and initializes a
.BR kstat (9S)
structure. See
.BR kstat_create (9F)
for a complete
discussion of this function.
.SH RETURN VALUES
.sp
.LP
If successful,
.B net_kstat_create()
returns a pointer to the allocated
.BR kstat .
.I NULL
is returned upon failure.
.SH CONTEXT
.sp
.LP
The
.B net_kstat_create()
function may be called from user or kernel
context.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcsu
_
Interface StabilityCommitted
.TE

.SH SEE ALSO
.sp
.LP
.BR ddi_get_instance (9F),
.BR kstat_create (9F),
.BR kstat_delete (9F),
.BR net_kstat_delete (9F),
.BR hook_t (9S),
.BR kstat_named (9S)
