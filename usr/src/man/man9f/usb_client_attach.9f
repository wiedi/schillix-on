'\" te
.\" Copyright (c) 2004, Sun Microsystems, Inc.,
.\" All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH usb_client_attach 9F "5 Jan 2004" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
usb_client_attach, usb_client_detach \- USBA framework registration of
client USB drivers
.SH SYNOPSIS
.LP
.nf
#define USBDRV_MAJOR_VER    <major>
#define USBDRV_MINOR_VER    <minor>
#include <sys/usb/usba.h>



\fBint\fR \fBusb_client_attach\fR(\fBdev_info_t *\fIdip\fR,
    \fBuint_t\fR \fIversion\fR, \fBusb_flags_t\fR \fIflags\fR);
.fi

.LP
.nf
\fBvoid\fR \fBusb_client_detach\fR(\fBdev_info_t *\fIdip\fR,
    \fBusb_client_dev_data_t *\fIdev_data\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris DDI specific (Solaris DDI)
.SH PARAMETERS
.sp
.LP
For
.BR usb_client_attach() :
.sp
.ne 2
.mk
.na
.I dip
.ad
.RS 11n
.rt
Pointer to the device's dev_info structure.
.RE

.sp
.ne 2
.mk
.na
.I version
.ad
.RS 11n
.rt
Must be set to USBDRV_VERSION. (See below.)
.RE

.sp
.ne 2
.mk
.na
.I flags
.ad
.RS 11n
.rt
Not used.
.RE

.sp
.LP
For
.BR usb_client_detach() :
.sp
.ne 2
.mk
.na
.I dip
.ad
.RS 12n
.rt
Pointer to the device's dev_info structure.
.RE

.sp
.ne 2
.mk
.na
.I dev_data
.ad
.RS 12n
.rt
Pointer to a usb_client_dev_data_t to free. Can be NULL.
.RE

.SH DESCRIPTION
.sp
.LP
The
.B usb_client_attach()
function registers a driver with the USBA
framework and must be called before any other USBA function. Usually,
.B usb_client_attach()
is followed by a call to
.BR usb_get_dev_data (9F).
.sp
.LP
The
.B usb_client_detach()
function unregisters a driver with the USBA
framework. The
.B usb_client_detach()
function releases memory for all
strings, descriptors and trees set up by
.BR usb_get_dev_data (9F)
when its
dev_data argument is non-NULL.  The
.B usb_client_detach()
function is
the last USBA function a client calls before completing
.BR detach "(9E). It"
is not necessary to call
.B usb_client_detach()
during a suspend
operation.
.SS "VERSIONING"
.sp
.LP
USBDRV_VERSION is a macro which creates a version number based on the
USBDRV_MAJOR_VER and USBDRV_MINOR_VER definitions. It must be passed as the
version argument.
.sp
.LP
For drivers version 2.0 or greater, the value of USBDRV_MAJOR_VERSION must
match its corresponding USBA_MAJOR_VER value in <\fBsys/usb/usbai.h\fR>, and
the value of USBDRV_MINOR_VERSION must not be greater than its corresponding
USBA_MINOR_VER value also in <sys/usb/usbai.h>.
.sp
.LP
Version 0.8 drivers from previous releases are binary compatible and run on
Solaris 10, but are not compilable. Version 0.8 binary compatibility will
not be supported in subsequent Solaris OS releases.
.sp
.LP
Definitions of USBDRV_MAJOR_VERSION and USBDRV_MINOR_VERSION must appear in
the client driver above the reference to <\fBsys/usb/usba.h\fR>. Note that
different releases have different USBA_[MAJOR|MINOR]_VER numbers.
.SH RETURN VALUES
.sp
.LP
For
.BR usb_client_attach() :
.sp
.ne 2
.mk
.na
.B USB_SUCCESS
.ad
.RS 23n
.rt
Registration is successful.
.RE

.sp
.ne 2
.mk
.na
.B USB_INVALID_ARGS
.ad
.RS 23n
.rt
.I dip
is
.BR NULL .
.RE

.sp
.ne 2
.mk
.na
.B USB_INVALID_CONTEXT
.ad
.RS 23n
.rt
Called from interrupt context. Not called from an attach routine context.
.RE

.sp
.ne 2
.mk
.na
.B USB_INVALID_VERSION
.ad
.RS 23n
.rt
Version passed in version is invalid.
.RE

.sp
.ne 2
.mk
.na
.B USB_FAILURE
.ad
.RS 23n
.rt
Other internal error.
.RE

.sp
.LP
For
.BR usb_client_detach() :
.sp
.ne 2
.mk
.na
.B USB_INVALID_ARGS
.ad
.RS 23n
.rt
.I dip
is
.BR NULL .
.RE

.sp
.ne 2
.mk
.na
.B USB_INVALID_CONTEXT
.ad
.RS 23n
.rt
Not called from an attach routine context.
.RE

.SH CONTEXT
.sp
.LP
The
.B usb_client_attach()
function may only be called from
.BR attach (9E).
.sp
.LP
The
.B usb_client_detach()
function may be called only from
.BR attach (9E)
or
.BR detach (9E).
.SH EXAMPLES
.sp
.in +2
.nf
  if (usb_client_attach(dip, USBDRV_VERSION, 0) != USB_SUCCESS) {
            cmn_err (CE_WARN, "%s%d: Couldn't register USB device",
                ddi_driver_name(dip), ddi_get_instance(dip));

           return (USB_FAILURE);
   }

   if (usb_get_dev_data(dip, &dev_data, USB_PARSE_LVL_IF, 0) !=
       USB_SUCCESS) {
           cmn_err (CE_WARN, "%s%d: Couldn't get device descriptor data.",
               ddi_driver_name(dip), ddi_get_instance(dip));

           return (USB_FAILURE);
   }

.fi
.in -2

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
ArchitecturePCI-based systems
_
Interface stabilityCommitted
_
AvailabilitySUNWusb
.TE

.SH SEE ALSO
.sp
.LP
.BR attributes (5),
.BR attach (9E),
.BR detach (9E),
.BR usb_get_dev_data (9F)
