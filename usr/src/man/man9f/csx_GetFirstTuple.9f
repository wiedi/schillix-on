'\" te
.\" Copyright (c) 1996, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH csx_GetFirstTuple 9F "20 Dec 1996" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
csx_GetFirstTuple, csx_GetNextTuple \- return Card Information Structure
tuple
.SH SYNOPSIS
.LP
.nf
#include <sys/pccard.h>



\fBint32_t\fR \fBcsx_GetFirstTuple\fR(\fBclient_handle_t\fR \fIch\fR, \fBtuple_t *\fItu\fR);
.fi

.LP
.nf
\fBint32_t\fR \fBcsx_GetNextTuple\fR(\fBclient_handle_t\fR \fIch\fR, \fBtuple_t *\fItu\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris
.B DDI
Specific (Solaris
.B DDI)
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I ch
.ad
.RS 6n
.rt
Client handle returned from
.BR csx_RegisterClient (9F).
.RE

.sp
.ne 2
.mk
.na
.I tu
.ad
.RS 6n
.rt
Pointer to a
.B tuple_t
structure.
.RE

.SH DESCRIPTION
.sp
.LP
The functions
.B csx_GetFirstTuple()
and
.B csx_GetNextTuple()
return
the first and next tuple, respectively, of the specified type in the Card
Information Structure (CIS) for the specified socket.
.SH STRUCTURE MEMBERS
.sp
.LP
The structure members of
.B tuple_t
are:
.sp
.in +2
.nf
uint32_t    Socket;        /* socket number */
uint32_t    Attributes;    /* Attributes */
cisdata_t   DesiredTuple;  /* tuple to search for or flags */
cisdata_t   TupleCode;     /* tuple type code */
cisdata_t   TupleLink;     /* tuple data body size */
.fi
.in -2

.sp
.LP
The fields are defined as follows:
.sp
.ne 2
.mk
.na
.B Socket
.ad
.RS 23n
.rt
Not used in Solaris, but for portability with other Card Services
implementations, it should be set to the logical socket number.
.RE

.sp
.ne 2
.mk
.na
.B Attributes
.ad
.RS 23n
.rt
This field is bit-mapped. The following bits are defined:
.sp
.ne 2
.mk
.na
.B TUPLE_RETURN_LINK
.ad
.sp .6
.RS 4n
Return link tuples if set. The following are link tuples and will only be
returned by this function if the
.B TUPLE_RETURN_LINK
bit in the
.B Attributes
field is set:
.sp
.in +2
.nf
	CISTPL_NULL	CISTPL_LONGLINK_MFC
	CISTPL_LONGLINK_A	CISTPL_LINKTARGET
	CISTPL_LONGLINK_C	CISTPL_NO_LINK
	CISTPL_LONGLINK_CB	CISTPL_END
.fi
.in -2

.RE

.sp
.ne 2
.mk
.na
.B TUPLE_RETURN_IGNORED_TUPLES
.ad
.sp .6
.RS 4n
Return ignored tuples if set. Ignored tuples will be returned by this
function if the
.B TUPLE_RETURN_IGNORED_TUPLES
bit in the
.B Attributes
field is set, see \fBtuple\fR(9S) for more information. The
.B CIS
is parsed from the location setup by the previous
.B csx_GetFirstTuple()
or
.B csx_GetNextTuple()
request.
.RE

.RE

.sp
.ne 2
.mk
.na
.B DesiredTuple
.ad
.RS 23n
.rt
This field is the tuple value desired. If it is \fBRETURN_FIRST_TUPLE,\fR
the very first tuple of the
.B CIS
is returned (if it exists). If this
field is set to
.B RETURN_NEXT_TUPLE,
the very next tuple of the \fBCIS
\fRis returned (if it exists). If the \fBDesiredTuple\fR field is any other
value on entry, the
.B CIS
is searched in an attempt to locate a tuple
which matches.
.RE

.sp
.ne 2
.mk
.na
.B TupleCode,TupleLink
.ad
.RS 23n
.rt
These fields are the values returned from the tuple found. If there are no
tuples on the card,
.B CS_NO_MORE_ITEMS
is returned.
.RE

.sp
.LP
Since the
.BR csx_GetFirstTuple() ,
.BR csx_GetNextTuple() ,
and
.BR csx_GetTupleData (9F)
functions all share the same
.BR tuple_t
structure, some fields in the
.B tuple_t
structure are unused or reserved
when calling this function and these fields must not be initialized by the
client.
.SH RETURN VALUES
.sp
.ne 2
.mk
.na
.B CS_SUCCESS
.ad
.RS 27n
.rt
Successful operation.
.RE

.sp
.ne 2
.mk
.na
.B CS_BAD_HANDLE
.ad
.RS 27n
.rt
Client handle is invalid.
.RE

.sp
.ne 2
.mk
.na
.B CS_NO_CARD
.ad
.RS 27n
.rt
No
.B PC
Card in socket.
.RE

.sp
.ne 2
.mk
.na
.B CS_NO_CIS
.ad
.RS 27n
.rt
No Card Information Structure (CIS) on
.B PC
card.
.RE

.sp
.ne 2
.mk
.na
.B CS_NO_MORE_ITEMS
.ad
.RS 27n
.rt
Desired tuple not found.
.RE

.sp
.ne 2
.mk
.na
.B CS_UNSUPPORTED_FUNCTION
.ad
.RS 27n
.rt
No
.B PCMCIA
hardware installed.
.RE

.SH CONTEXT
.sp
.LP
These functions may be called from user or kernel context.
.SH SEE ALSO
.sp
.LP
.BR csx_GetTupleData (9F),
.BR csx_ParseTuple (9F),
.BR csx_RegisterClient (9F),
.BR csx_ValidateCIS (9F),
.BR tuple (9S)
.sp
.LP
\fIPC Card \fI95Standard,\fR PCMCIA/JEIDA
