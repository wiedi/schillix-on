'\" te
.\" Copyright (c) 2000, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH ddi_get_devstate 9F "13 August 1999" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
ddi_get_devstate \- Check device state
.SH SYNOPSIS
.LP
.nf
#include <sys/ddi.h>
#include <sys/sunddi.h>

\fBddi_devstate_t\fR \fBddi_get_devstate\fR(\fBdev_info_t *\fIdip\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris DDI specific (Solaris DDI)
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I dip
.ad
.RS 8n
.rt
Pointer to the device's
.B dev_info
structure
.RE

.SH DESCRIPTION
.sp
.LP
The
.B ddi_get_devstate()
function returns a value indicating the state
of the device specified by
.BR " dip" ,
as derived from the configuration
operations that have been performed on it (or on the bus on which it
resides) and any fault reports relating to it.
.SH RETURN VALUES
.sp
.ne 2
.mk
.na
.B DDI_DEVSTATE_OFFLINE
.ad
.RS 25n
.rt
The device is offline.  In this state, the device driver is not attached,
nor will it be attached automatically. The device cannot be used until it is
brought online.
.RE

.sp
.ne 2
.mk
.na
.B DDI_DEVSTATE_DOWN
.ad
.RS 25n
.rt
 The device is online but unusable due to a fault.
.RE

.sp
.ne 2
.mk
.na
.B DDI_DEVSTATE_QUIESCED
.ad
.RS 25n
.rt
 The bus on which the device resides has been quiesced. This is not a fault, but no operations on the device should be performed while the bus remains quiesced.
.RE

.sp
.ne 2
.mk
.na
.B DDI_DEVSTATE_DEGRADED
.ad
.RS 25n
.rt
 The device is online but only able to provide a partial or degraded service, due to a fault.
.RE

.sp
.ne 2
.mk
.na
.B DDI_DEVSTATE_UP
.ad
.RS 25n
.rt
 The device is online and fully operational.
.RE

.SH CONTEXT
.sp
.LP
The
.B ddi_get_devstate()
function may be called from user, kernel, or
interrupt context.
.SH NOTES
.sp
.LP
A device driver should call this function to check its own state at each
major entry point, and before committing resources to a requested operation.
If a driver discovers that its device is already down, it should perform
required cleanup actions and return as soon as possible.  If appropriate, it
should return an error to its caller, indicating that the device has failed
(for example, a driver's \fBread\fR(9E) routine would return
.BR EIO ).
.sp
.LP
Depending on the driver, some non-I/O operations (for example, calls to the
driver's \fBioctl\fR(9E) routine) may still succeed; only functions which
would require fully accessible and operational hardware will necessarily
fail. If the bus on which the device resides is quiesced, the driver may
return a value indicating the operation should be retried later (for
example,
.BR EAGAIN ).
Alternatively, for some classes of device, it may
be appropriate for the driver to enqueue the operation and service it once
the bus has been unquiesced.  Note that not all busses support the
quiesce/unquiesce operations, so this value may never be seen by some
drivers.
.SH SEE ALSO
.sp
.LP
.BR attach (9E),
.BR ioctl (9E),
.BR open (9E),
.BR read (9E),
.BR strategy (9E),
.BR write (9E),
.BR ddi_dev_report_fault (9F)
