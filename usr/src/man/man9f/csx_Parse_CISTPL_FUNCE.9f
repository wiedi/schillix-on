'\" te
.\" Copyright (c) 2002, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH csx_Parse_CISTPL_FUNCE 9F "20 Dec 1996" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
csx_Parse_CISTPL_FUNCE \- parse Function Extension tuple
.SH SYNOPSIS
.LP
.nf
#include <sys/pccard.h>



\fBint32_t\fR \fBcsx_Parse_CISTPL_FUNCE\fR(\fBclient_handle_t\fR \fIch\fR, \fBtuple_t *\fItu\fR,
     \fBcistpl_funce_t *\fIcf\fR,
     \fBuint32_t\fR \fIfid\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris
.B DDI
Specific (Solaris
.B DDI)
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I ch
.ad
.RS 7n
.rt
Client handle returned from
.BR csx_RegisterClient (9F).
.RE

.sp
.ne 2
.mk
.na
.I tu
.ad
.RS 7n
.rt
Pointer to a
.B tuple_t
structure (see
.BR tuple (9S))
returned by a
call to
.BR csx_GetFirstTuple "(9F) or"
.BR csx_GetNextTuple (9F).
.RE

.sp
.ne 2
.mk
.na
.I cf
.ad
.RS 7n
.rt
Pointer to a
.B cistpl_funce_t
structure which contains the parsed
.B CISTPL_FUNCE
tuple information upon return from this function.
.RE

.sp
.ne 2
.mk
.na
.I fid
.ad
.RS 7n
.rt
The function
.B ID
code to which this
.B CISTPL_FUNCE
tuple refers.
See
.BR csx_Parse_CISTPL_FUNCID (9F).
.RE

.SH DESCRIPTION
.sp
.LP
This function parses the Function Extension tuple,
.B CISTPL_FUNCE,
into
a form usable by
.B PC
Card drivers.
.sp
.LP
The
.B CISTPL_FUNCE
tuple is used to describe information about a
specific \fBPC\fRCard function. The information provided is determined by
the Function Identification tuple,
.B CISTPL_FUNCID,
that is being
extended. Each function has a defined set of extension tuples.
.SH STRUCTURE MEMBERS
.sp
.LP
The structure members of
.B cistpl_funce_t
are:
.sp
.in +2
.nf
uint32_t     function;           /* type of extended data */
uint32_t     subfunction;
union {
       struct serial {
              uint32_t  ua;      /* UART in use */
              uint32_t  uc;      /* UART capabilities */
       } serial;
       struct modem {
              uint32_t  fc;      /* supported flow control methods */
              uint32_t  cb;      /* size of DCE command buffer */
              uint32_t  eb;      /* size of DCE to DCE buffer */
              uint32_t  tb;      /* size of DTE to DCE buffer */
       } modem;
       struct data_modem {
              uint32_t  ud;      /* highest data rate */
              uint32_t  ms;      /* modulation standards */
              uint32_t  em;      /* err correct proto and
								 /* non-CCITT modulation */
              uint32_t  dc;      /* data compression protocols */
              uint32_t  cm;      /* command protocols */
              uint32_t  ex;      /* escape mechanisms */
              uint32_t  dy;      /* standardized data encryption */
              uint32_t  ef;      /* miscellaneous end user features */
              uint32_t  ncd;     /* number of country codes */
              uchar_t   cd[16];  /* CCITT country code */
       } data_modem;
       struct fax {
              uint32_t  uf;      /* highest data rate in DTE/UART */
              uint32_t  fm;      /* CCITT modulation standards */
              uint32_t  fy;      /* standardized data encryption */
              uint32_t  fs;      /* feature selection */
              uint32_t  ncf;     /* number of country codes */
              uchar_t  cf[16];   /* CCITT country codes */
       } fax;
       struct voice {
              uint32_t  uv;      /* highest data rate */
              uint32_t  nsr;
              uint32_t  sr[16];  /* voice sampling rates (*100) */
              uint32_t  nss;
              uint32_t  ss[16];  /* voice sample sizes (*10) */
              uint32_t  nsc;
              uint32_t  sc[16];  /* voice compression methods */
       } voice;
       struct lan {
              uint32_t  tech;    /* network technology */
              uint32_t  speed;   /* media bit or baud rate */
              uint32_t  media;   /* network media supported */
              uint32_t  con;     /* open/closed connector standard */
              uint32_t  id_sz;   /* length of lan station id */
              uchar_t  id[16];   /* station ID */
        } lan;
} data;
.fi
.in -2

.sp
.LP
The fields are defined as follows:
.sp
.ne 2
.mk
.na
.B function
.ad
.RS 15n
.rt
This field identifies the type of extended information provided about a
function by the
.B CISTPL_FUNCE
tuple. This field is defined as
follows:
.sp
.ne 2
.mk
.na
.B TPLFE_SUB_SERIAL
.ad
.RS 26n
.rt
Serial port interface
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_SUB_MODEM_COMMON
.ad
.RS 26n
.rt
Common modem interface
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_SUB_MODEM_DATA
.ad
.RS 26n
.rt
Data modem services
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_SUB_MODEM_FAX
.ad
.RS 26n
.rt
Fax modem services
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_SUB_VOICE
.ad
.RS 26n
.rt
Voice services
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_CAP_MODEM_DATA
.ad
.RS 26n
.rt
Capabilities of the data modem interface
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_CAP_MODEM_FAX
.ad
.RS 26n
.rt
Capabilities of the fax modem interface
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_CAP_MODEM_VOICE
.ad
.RS 26n
.rt
Capabilities of the voice modem interface
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_CAP_SERIAL_DATA
.ad
.RS 26n
.rt
Serial port interface for data modem services
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_CAP_SERIAL_FAX
.ad
.RS 26n
.rt
Serial port interface for fax modem services
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_CAP_SERIAL_VOICE
.ad
.RS 26n
.rt
Serial port interface for voice modem services
.RE

.RE

.sp
.ne 2
.mk
.na
.B subfunction
.ad
.RS 15n
.rt
This is for identifying a sub-category of services provided by a function
in the
.B CISTPL_FUNCE
tuple. The numeric value of the code is in the
range of
.B 1
to
.BR 15 .
.RE

.sp
.ne 2
.mk
.na
.B ua
.ad
.RS 15n
.rt
This is the serial port
.B UART
identification and is defined as
follows:
.sp
.ne 2
.mk
.na
.B TPLFE_UA_8250
.ad
.RS 18n
.rt
Intel 8250
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_UA_16450
.ad
.RS 18n
.rt
NS 16450
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_UA_16550
.ad
.RS 18n
.rt
NS 16550
.RE

.RE

.sp
.ne 2
.mk
.na
.B uc
.ad
.RS 15n
.rt
This identifies the serial port
.B UART
capabilities and is defined as
follows:
.sp
.ne 2
.mk
.na
.B TPLFE_UC_PARITY_SPACE
.ad
.RS 25n
.rt
Space parity supported
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_UC_PARITY_MARK
.ad
.RS 25n
.rt
Mark parity supported
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_UC_PARITY_ODD
.ad
.RS 25n
.rt
Odd parity supported
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_UC_PARITY_EVEN
.ad
.RS 25n
.rt
Even parity supported
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_UC_CS5
.ad
.RS 25n
.rt
5 bit characters supported
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_UC_CS6
.ad
.RS 25n
.rt
6 bit characters supported
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_UC_CS7
.ad
.RS 25n
.rt
7 bit characters supported
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_UC_CS8
.ad
.RS 25n
.rt
8 bit characters supported
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_UC_STOP_1
.ad
.RS 25n
.rt
1 stop bit supported
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_UC_STOP_15
.ad
.RS 25n
.rt
1.5 stop bits supported
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_UC_STOP_2
.ad
.RS 25n
.rt
2 stop bits supported
.RE

.RE

.sp
.ne 2
.mk
.na
.B fc
.ad
.RS 15n
.rt
This identifies the modem flow control methods and is defined as follows:
.sp
.ne 2
.mk
.na
.B TPLFE_FC_TX_XONOFF
.ad
.RS 22n
.rt
Transmit XON/XOFF
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_FC_RX_XONOFF
.ad
.RS 22n
.rt
Receiver XON/XOFF
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_FC_TX_HW
.ad
.RS 22n
.rt
Transmit hardware flow control (CTS)
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_FC_RX_HW
.ad
.RS 22n
.rt
Receiver hardware flow control (RTS)
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_FC_TRANS
.ad
.RS 22n
.rt
Transparent flow control
.RE

.sp
.ne 2
.mk
.na
.B ms
.ad
.RS 6n
.rt
This identifies the modem modulation standards and is defined as follows:
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_MS_BELL103
.ad
.RS 20n
.rt
300bps
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_MS_V21
.ad
.RS 20n
.rt
300bps (V.21)
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_MS_V23
.ad
.RS 20n
.rt
600/1200bps (V.23)
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_MS_V22AB
.ad
.RS 20n
.rt
1200bps (V.22A V.22B)
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_MS_BELL212
.ad
.RS 20n
.rt
2400bps (US Bell 212
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_MS_V22BIS
.ad
.RS 20n
.rt
2400bps (V.22bis)
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_MS_V26
.ad
.RS 20n
.rt
2400bps leased line (V.26)
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_MS_V26BIS
.ad
.RS 20n
.rt
2400bps (V.26bis)
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_MS_V27BIS
.ad
.RS 20n
.rt
4800/2400bps leased line (V.27bis)
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_MS_V29
.ad
.RS 20n
.rt
9600/7200/4800 leased line (V.29)
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_MS_V32
.ad
.RS 20n
.rt
Up to 9600bps (V.32)
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_MS_V32BIS
.ad
.RS 20n
.rt
Up to 14400bps (V.32bis)
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_MS_VFAST
.ad
.RS 20n
.rt
Up to 28800 V.FAST
.RE

.RE

.sp
.ne 2
.mk
.na
.B em
.ad
.RS 15n
.rt
This identifies modem error correction/detection protocols and is defined
as follows:
.sp
.ne 2
.mk
.na
.B TPLFE_EM_MNP
.ad
.RS 16n
.rt
MNP levels 2-4
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_EM_V42
.ad
.RS 16n
.rt
CCITT LAPM (V.42)
.RE

.RE

.sp
.ne 2
.mk
.na
.B dc
.ad
.RS 15n
.rt
This identifies modem data compression protocols and is defined as
follows:
.sp
.ne 2
.mk
.na
.B TPLFE_DC_V42BI
.ad
.RS 18n
.rt
CCITT compression V.42
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_DC_MNP5
.ad
.RS 18n
.rt
MNP compression (uses MNP 2, 3 or 4)
.RE

.RE

.sp
.ne 2
.mk
.na
.B cm
.ad
.RS 15n
.rt
This identifies modem command protocols and is defined as follows:
.sp
.ne 2
.mk
.na
.B TPLFE_CM_AT1
.ad
.RS 19n
.rt
ANSI/EIA/TIA 602 "Action" commands
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_CM_AT2
.ad
.RS 19n
.rt
ANSI/EIA/TIA 602 "ACE/DCE IF Params"
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_CM_AT3
.ad
.RS 19n
.rt
ANSI/EIA/TIA 602 "Ace Parameters"
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_CM_MNP_AT
.ad
.RS 19n
.rt
MNP specification AT commands
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_CM_V25BIS
.ad
.RS 19n
.rt
V.25bis calling commands
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_CM_V25A
.ad
.RS 19n
.rt
V.25bis test procedures
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_CM_DMCL
.ad
.RS 19n
.rt
DMCL command mode
.RE

.RE

.sp
.ne 2
.mk
.na
.B ex
.ad
.RS 15n
.rt
This identifies the modem escape mechanism and is defined as follows:
.sp
.ne 2
.mk
.na
.B TPLFE_EX_BREAK
.ad
.RS 18n
.rt
BREAK support standardized
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_EX_PLUS
.ad
.RS 18n
.rt
+++ returns to command mode
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_EX_UD
.ad
.RS 18n
.rt
User defined escape character
.RE

.RE

.sp
.ne 2
.mk
.na
.B dy
.ad
.RS 15n
.rt
This identifies modem standardized data encryption and is a reserved field
for future use and must be set to
.BR 0 .
.RE

.sp
.ne 2
.mk
.na
.B ef
.ad
.RS 15n
.rt
This identifies modem miscellaneous features and is defined as follows:
.sp
.ne 2
.mk
.na
.B TPLFE_EF_CALLERID
.ad
.RS 21n
.rt
Caller ID is supported
.RE

.RE

.sp
.ne 2
.mk
.na
.B fm
.ad
.RS 15n
.rt
This identifies fax modulation standards and is defined as follows:
.sp
.ne 2
.mk
.na
.B TPLFE_FM_V21C2
.ad
.RS 19n
.rt
300bps (V.21-C2)
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_FM_V27TER
.ad
.RS 19n
.rt
4800/2400bps (V.27ter)
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_FM_V29
.ad
.RS 19n
.rt
9600/7200/4800 leased line (V.29)
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_FM_V17
.ad
.RS 19n
.rt
14.4K/12K/9600/7200bps (V.17)
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_FM_V33
.ad
.RS 19n
.rt
4.4K/12K/9600/7200 leased line (V.33)
.RE

.RE

.sp
.ne 2
.mk
.na
.B fs
.ad
.RS 15n
.rt
This identifies the fax feature selection and is defined as follows:
.sp
.ne 2
.mk
.na
.B TPLFE_FS_T3
.ad
.RS 21n
.rt
Group 2 (T.3) service class
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_FS_T4
.ad
.RS 21n
.rt
Group 3 (T.4) service class
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_FS_T6
.ad
.RS 21n
.rt
Group 4 (T.6) service class
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_FS_ECM
.ad
.RS 21n
.rt
Error Correction Mode
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_FS_VOICEREQ
.ad
.RS 21n
.rt
Voice requests allowed
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_FS_POLLING
.ad
.RS 21n
.rt
Polling support
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_FS_FTP
.ad
.RS 21n
.rt
File transfer support
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_FS_PASSWORD
.ad
.RS 21n
.rt
Password support
.RE

.RE

.sp
.ne 2
.mk
.na
.B tech
.ad
.RS 15n
.rt
This identifies the
.B LAN
technology type and is defined as follows:
.sp
.ne 2
.mk
.na
.B TPLFE_LAN_TECH_ARCNET
.ad
.RS 28n
.rt
Arcnet
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_LAN_TECH_ETHERNET
.ad
.RS 28n
.rt
Ethernet
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_LAN_TECH_TOKENRING
.ad
.RS 28n
.rt
Token Ring
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_LAN_TECH_LOCALTALK
.ad
.RS 28n
.rt
Local Talk
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_LAN_TECH_FDDI
.ad
.RS 28n
.rt
FDDI/CDDI
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_LAN_TECH_ATM
.ad
.RS 28n
.rt
ATM
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_LAN_TECH_WIRELESS
.ad
.RS 28n
.rt
Wireless
.RE

.RE

.sp
.ne 2
.mk
.na
.B media
.ad
.RS 15n
.rt
This identifies the
.B LAN
media type and is defined as follows:
.sp
.ne 2
.mk
.na
.B TPLFE_LAN_MEDIA_INHERENT
.ad
.RS 30n
.rt
Generic interface
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_LAN_MEDIA_UTP
.ad
.RS 30n
.rt
Unshielded twisted pair
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_LAN_MEDIA_STP
.ad
.RS 30n
.rt
Shielded twisted pair
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_LAN_MEDIA_THIN_COAX
.ad
.RS 30n
.rt
Thin coax
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_LAN_MEDIA_THICK_COAX
.ad
.RS 30n
.rt
Thick coax
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_LAN_MEDIA_FIBER
.ad
.RS 30n
.rt
Fiber
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_LAN_MEDIA_SSR_902
.ad
.RS 30n
.rt
Spread spectrum radio 902-928 MHz
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_LAN_MEDIA_SSR_2_4
.ad
.RS 30n
.rt
Spread spectrum radio 2.4 GHz
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_LAN_MEDIA_SSR_5_4
.ad
.RS 30n
.rt
Spread spectrum radio 5.4 GHz
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_LAN_MEDIA_DIFFUSE_IR
.ad
.RS 30n
.rt
Diffuse infra red
.RE

.sp
.ne 2
.mk
.na
.B TPLFE_LAN_MEDIA_PTP_IR
.ad
.RS 30n
.rt
Point to point infra red
.RE

.RE

.SH RETURN VALUES
.sp
.ne 2
.mk
.na
.B CS_SUCCESS
.ad
.RS 27n
.rt
Successful operation.
.RE

.sp
.ne 2
.mk
.na
.B CS_BAD_HANDLE
.ad
.RS 27n
.rt
Client handle is invalid.
.RE

.sp
.ne 2
.mk
.na
.B CS_UNKNOWN_TUPLE
.ad
.RS 27n
.rt
Parser does not know how to parse tuple.
.RE

.sp
.ne 2
.mk
.na
.B CS_NO_CARD
.ad
.RS 27n
.rt
No
.B PC
Card in socket.
.RE

.sp
.ne 2
.mk
.na
.B CS_NO_CIS
.ad
.RS 27n
.rt
No Card Information Structure (CIS) on
.B PC
Card.
.RE

.sp
.ne 2
.mk
.na
.B CS_UNSUPPORTED_FUNCTION
.ad
.RS 27n
.rt
No
.B PCMCIA
hardware installed.
.RE

.SH CONTEXT
.sp
.LP
This function may be called from user or kernel context.
.SH SEE ALSO
.sp
.LP
.BR csx_GetFirstTuple (9F),
.BR csx_GetTupleData (9F),
.BR csx_Parse_CISTPL_FUNCID (9F),
.BR csx_RegisterClient (9F),
.BR csx_ValidateCIS (9F),
.BR tuple (9S)
.sp
.LP
.I PC Card 95 Standard, PCMCIA/JEIDA
