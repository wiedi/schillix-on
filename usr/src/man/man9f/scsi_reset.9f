'\" te
.\" Copyright (c) 2006, Sun Microsystems, Inc.,  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH scsi_reset 9F "16 Jan 2006" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
scsi_reset \- reset a SCSI bus or target
.SH SYNOPSIS
.LP
.nf
#include <sys/scsi/scsi.h>



\fBint\fR \fBscsi_reset\fR(\fBstruct scsi_address *\fIap\fR, \fBint\fR \fIlevel\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris DDI specific (Solaris DDI).
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I ap
.ad
.RS 9n
.rt
Pointer to the
.B scsi_address
structure.
.RE

.sp
.ne 2
.mk
.na
.I level
.ad
.RS 9n
.rt
The level of reset required.
.RE

.SH DESCRIPTION
.sp
.LP
The
.B scsi_reset()
function asks the host adapter driver to reset the
\fBSCSI\fR bus or a \fBSCSI\fR target as specified by
.IR level .
If
\fIlevel\fR equals
.BR RESET_ALL ,
the
.B SCSI
bus is reset. If it
equals
.BR RESET_TARGET ,
\fIap\fR is used to determine the target to be
reset. If it equals
.BR RESET_LUN ,
\fIap\fR is used to determine the
logical unit to be reset.
.sp
.LP
When given the
.B RESET_LUN
level,
.B scsi_reset()
can return failure
if the
.B "LOGICAL UNIT RESET"
message is not supported by the target
device, or if the underlying HBA driver does not implement the ability to
issue a
.B "LOGICAL UNIT RESET"
message.
.sp
.LP
Note that, at the point when
.B scsi_reset()
resets the logical unit
(case
.BR RESET_LUN ),
or the target (case
.BR RESET_TARGET ),
or the bus
(case
.BR RESET_ALL ),
there might be one or more command packets
outstanding. That is, packets have been passed to \fBscsi_transport()\fR,
and queued or possibly transported, but the commands have not been completed
and the target completion routine has not been called for those packets.
.sp
.LP
The successful call to
.B scsi_reset()
has the side effect that any such
commands currently outstanding are aborted, at which point the packets are
marked with
.B pkt_reason
set to
.BR CMD_RESET ,
and the appropriate bit
-- either
.B STAT_BUS_RESET
or
.B STAT_DEV_RESET
-- is set in
.BR pkt_statistics .
Once thus appropriately marked, the aborted command
packets are passed to the target driver command completion routine.
.sp
.LP
.RB "Also note that, at the moment that a thread executing" " scsi_reset()"
actually resets the target or the bus, it is possible that a second thread
may have already called
.BR scsi_transport() ,
but not yet queued or
transported its command. In this case the HBA will not yet have received the
second thread's packet and this packet will not be aborted.
.SH RETURN VALUES
.sp
.LP
The
.B scsi_reset()
function returns:
.sp
.ne 2
.mk
.na
.B 1
.ad
.RS 5n
.rt
Upon success.
.RE

.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 5n
.rt
Upon failure.
.RE

.SH CONTEXT
.sp
.LP
The
.B scsi_reset()
function can be called from user, interrupt, or
kernel context.
.SH SEE ALSO
.sp
.LP
.BR tran_reset (9E),
\fBtran_reset_notify\fR(9E), \fBscsi_abort\fR(9F)
.sp
.LP
.I Writing Device Drivers
