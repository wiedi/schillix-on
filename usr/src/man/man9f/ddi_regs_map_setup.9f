'\" te
.\" Copyright (c) 2004, Sun Microsystems, Inc.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH ddi_regs_map_setup 9F "18 Nov 2004" "SunOS 5.11" "Kernel Functions for Drivers"
.SH NAME
ddi_regs_map_setup \- set up a mapping for a register address space
.SH SYNOPSIS
.LP
.nf
#include <sys/ddi.h>
#include <sys/sunddi.h>



\fBint\fR \fBddi_regs_map_setup\fR(\fBdev_info_t\fR \fI*dip\fR, \fBuint_t\fR \fIrnumber\fR, \fBcaddr_t\fR \fI*addrp\fR,
     \fBoffset_t\fR \fIoffset\fR, \fBoffset_t\fR \fIlen\fR, \fBddi_device_acc_attr_t\fR \fI*accattrp\fR,
     \fBddi_acc_handle_t\fR \fI*handlep\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris
.B DDI
specific (Solaris
.BR DDI ).
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I dip
.ad
.RS 12n
.rt
Pointer to the device's
.B dev_info
structure.
.RE

.sp
.ne 2
.mk
.na
.I rnumber
.ad
.RS 12n
.rt
Index number to the register address space set.
.RE

.sp
.ne 2
.mk
.na
.I addrp
.ad
.RS 12n
.rt
A platform-dependent value that, when added to an offset that is less than
or equal to the
.I len
parameter (see below), is used for the
.B dev_addr
argument to the
.BR ddi_get ,
.BR ddi_mem_get ,
and
\fBddi_io_get\fR/\fBput\fR routines.
.RE

.sp
.ne 2
.mk
.na
.I offset
.ad
.RS 12n
.rt
Offset into the register address space.
.RE

.sp
.ne 2
.mk
.na
.I len
.ad
.RS 12n
.rt
Length to be mapped.
.RE

.sp
.ne 2
.mk
.na
.I accattrp
.ad
.RS 12n
.rt
Pointer to a device access attribute structure of this mapping (see
.BR ddi_device_acc_attr (9S)).
.RE

.sp
.ne 2
.mk
.na
.I handlep
.ad
.RS 12n
.rt
Pointer to a data access handle.
.RE

.SH DESCRIPTION
.sp
.LP
.B ddi_regs_map_setup()
maps in the register set given by
.IR rnumber .
The register number determines which register set is mapped if more than one
exists.
.sp
.LP
.I offset
specifies the starting location within the register space and
.I len
indicates the size of the area to be mapped. If
.I len
is
non-zero, it overrides the length given in the register set description. If
both
.I len
and
.I offset
are
.BR 0 ,
the entire space is mapped.
The base of the mapped register space is returned in
.IR addrp .
.sp
.LP
The device access attributes are specified in the location pointed by the
.I accattrp
argument (see  \fBddi_device_acc_attr\fR(9S) for details).
.sp
.LP
The data access handle is returned in
.IR handlep .
.I handlep
is
opaque; drivers should not attempt to interpret its value. The handle is
used by the system to encode information for subsequent data access function
calls to maintain a consistent view between the host and the device.
.SH RETURN VALUES
.sp
.LP
.B ddi_regs_map_setup()
returns:
.sp
.ne 2
.mk
.na
.B DDI_SUCCESS
.ad
.RS 25n
.rt
Successfully set up the mapping for data access.
.RE

.sp
.ne 2
.mk
.na
.B DDI_FAILURE
.ad
.RS 25n
.rt
Invalid register number
.IR rnumber ,
offset
.IR offset ,
or length
.IR len .
.RE

.sp
.ne 2
.mk
.na
.B DDI_ME_RNUMBER_RANGE
.ad
.RS 25n
.rt
Invalid register number
.I rnumber
or unable to find
.IR reg
property.
.RE

.sp
.ne 2
.mk
.na
.B DDI_REGS_ACC_CONFLICT
.ad
.RS 25n
.rt
Cannot enable the register mapping due to access conflicts with other
enabled mappings.
.RE

.sp
.LP
Note that the return value
.B DDI_ME_RNUMBER_RANGE
is not supported on
all platforms. Also, there is potential overlap between
.B DDI_ME_RNUMBER_RANGE
and
.BR DDI_FAILURE .
Drivers should check for
.B !=DDI_SUCCESS
rather than checking for a specific failure value.
.SH CONTEXT
.sp
.LP
.B ddi_regs_map_setup()
must be called from user or kernel context.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
ArchitecturePCI Local Bus, SBus, ISA
.TE

.SH SEE ALSO
.sp
.LP
.BR attributes (5),
.BR ddi_regs_map_free (9F),
.BR ddi_device_acc_attr (9S)
.sp
.LP
.I Writing Device Drivers
