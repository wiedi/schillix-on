'\" te
.\" Copyright (c) 2004-2006 Storage Networking Industry Association. All Rights Reserved.
.\" Portions Copyright (c) 2006, Sun Microsystems, Inc. All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH MP_GetAssociatedPluginOid 3MPAPI "15 Feb 2006" "SunOS 5.11" "Common Multipath Management Library Functions"
.SH NAME
MP_GetAssociatedPluginOid \- get the object ID for the plugin
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR\&.\|.\|. ] \fIfile\fR\&.\|.\|. \fB-lMPAPI\fR [ \fIlibrary\fR\&.\|.\|. ]
#include <mpapi.h>

\fBMP_STATUS\fR \fBMP_GetAssociatedPluginOid\fR(\fBMP_OID\fR \fIoid\fR,
     \fBMP_OID\fR  \fI*pPluginOID\fR);
.fi

.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I oid
.ad
.RS 14n
.rt
The object ID of an object that has been received from a previous API
call.
.RE

.sp
.ne 2
.mk
.na
.I pPluginOID
.ad
.RS 14n
.rt
A pointer to an object ID that has type
.B MP_OID
structure allocated by
the caller. With a successful return this will contain the object ID of the
plugin associated with the object specified by the
.IR oid .
.RE

.SH DESCRIPTION
.sp
.LP
The
.B MP_GetAssociatedPluginOid()
function gets the object ID for the
plugin associated with the specified object ID. The sequence number subfield
of the
.I oid
is not validate  since this API is implemented in the
common library.
.SH RETURN VALUES
.sp
.ne 2
.mk
.na
.B MP_STATUS_INVALID_OBJECT_TYPE
.ad
.sp .6
.RS 4n
The
.I oid
does not specify any valid object type. This is most likely
to happen if an uninitialized object ID is passed to the API.
.RE

.sp
.ne 2
.mk
.na
.B MP_STATUS_INVALID_PARAMETER
.ad
.sp .6
.RS 4n
The
.I pluginOid
is null or specifies a memory area to which data cannot
be written.
.RE

.sp
.ne 2
.mk
.na
.B MP_STATUS_OBJECT_NOT_FOUND
.ad
.sp .6
.RS 4n
The
.I oid
owner ID is invalid.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityT{
Standard: ANSI INCITS 412 Multipath Management API
T}
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR libMPAPI (3LIB),
.BR attributes (5)
.sp
.LP
.I Multipath Management API Version 1.0
