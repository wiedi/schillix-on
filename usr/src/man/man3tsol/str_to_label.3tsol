'\" te
.\" Copyright (c) 2009, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH str_to_label 3TSOL "15 Jun 2009" "SunOS 5.11" "Trusted Extensions Library Functions"
.SH NAME
str_to_label \- parse human readable strings to label
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [\fIflag\fR.\|.\|.] \fIfile\fR.\|.\|. \fB-ltsol\fR [\fIlibrary\fR.\|.\|.]
.fi

.LP
.nf
#include <tsol/label.h>

\fBint\fR \fBstr_to_label\fR(\fBconst char *\fIstring\fR, \fBm_label_t **\fIlabel\fR,
    \fBconst m_label_type_t\fR \fIlabel_type\fR, \fBuint_t\fR \fIflags\fR, \fBint *\fIerror\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B str_to_label()
function is a simple function to parse human
readable strings into labels of the requested type.
.sp
.LP
The
.I string
argument is the string to parse. If
.I string
is the
result of a
.B label_to_str()
conversion of type
.BR M_INTERNAL ,
.I flags
are ignored, and any previously parsed label is replaced.
.sp
.LP
If
.RI * label
is
.IR NULL ,
.B str_to_label()
allocates resources for
.I label
and initializes the label to the
.I label_type
that was
requested before parsing
.IR string .
.sp
.LP
If
.RI * label
is not
.IR NULL ,
the label is a pointer to a mandatory
label that is the result of a previously parsed label and
.IR label_type
is ignored. The type that is used for parsing is derived from
.I label
for any type-sensitive operations.
.sp
.LP
If
.IR flags " is"
.BR L_MODIFY_EXISTING ,
the parsed string can be used to
modify this label.
.sp
.LP
If
.IR flags " is"
.BR L_NO_CORRECTION ,
the previously parsed label is
replaced and the parsing algorithm does not attempt to infer missing
elements from string to compose a valid label.
.sp
.LP
If
.IR flags " is"
.BR L_DEFAULT ,
the previously parsed label is replaced
and the parsing algorithm makes a best effort to imply a valid label from
the elements of
.IR string .
.sp
.LP
If
.I flags
contains
.B L_CHECK_AR
logically OR-ed with another
value, the resulting label will be checked to ensure that it is within the
"Accreditation Range" of the DIA encodings schema. This flag is interpreted
only for
.B MAC_LABEL
label types.
.sp
.LP
The caller is responsible for freeing the allocated resources by calling
the
.B m_label_free()
function.
.I label_type
defines the type for a
newly allocated label. The label type can be:
.sp
.ne 2
.mk
.na
.B MAC_LABEL
.ad
.RS 14n
.rt
The string should be translated as a Mandatory Access Control (MAC)
label.
.RE

.sp
.ne 2
.mk
.na
.B USER_CLEAR
.ad
.RS 14n
.rt
The string should be translated as a label that represents the least upper
bound of the labels that the user is allowed to access.
.RE

.sp
.LP
If
.I error
is
.IR NULL ,
do not return additional error information
for
.BR EINVAL .
The calling process must have mandatory read access to
.I label
and human readable
.IR string .
Or the calling process must
have the
.B sys_trans_label
privilege.
.sp
.LP
The manifest constants
.B ADMIN_HIGH
and
.B ADMIN_LOW
are the human
readable strings that correspond to the Trusted Extensions policy
.B admin_high
and
.B admin_low
label values. See
.BR labels (5).
.SH RETURN VALUES
.sp
.LP
Upon successful completion, the
.B str_to_label()
function returns 0.
Otherwise,
.B -1
is returned,
.I errno
is set to indicate the error,
and
.I error
provides additional information for
.BR EINVAL .
Otherwise,
.I error
is a zero-based index to the string parse failure point.
.SH ERRORS
.sp
.LP
The
.B str_to_label()
function will fail if:
.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 11n
.rt
Invalid parameter.
.B M_BAD_STRING
indicates that
.I string
could not
be parsed.
.B M_BAD_LABEL
indicates that the label passed in was in
error.
.B M_OUTSIDE_AR
indicates that the resulting label is not within
the "Accreditation Range" specified in the DIA encodings schema.
.RE

.sp
.ne 2
.mk
.na
.B ENOTSUP
.ad
.RS 11n
.rt
The system does not support label translations.
.RE

.sp
.ne 2
.mk
.na
.B ENOMEM
.ad
.RS 11n
.rt
The physical limits of the system are exceeded by size bytes of memory
which cannot be allocated.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
_
StandardSee below.
.TE

.sp
.LP
Parsing types that are relative to Defense Intelligence Agency (DIA)
encodings schema are Standard. Standard is specified in
.BR label_encodings (4).
.SH SEE ALSO
.sp
.LP
.BR label_to_str (3TSOL),
.BR libtsol (3LIB),
.BR m_label (3TSOL),
.BR label_encodings (4),
.BR attributes (5),
.BR labels (5)
.sp
.LP
\fIValidating the Label Request Against the Printer\&'s Label Range\fR in
\fISolaris Trusted Extensions Developer\&'s Guide\fR
.SH WARNINGS
.sp
.LP
A number of the parsing rules rely on the DIA label encodings schema. The
rules might not be valid for other label schemata.
.SH NOTES
.sp
.LP
The functionality described on this manual page is available only if the
system is configured with Trusted Extensions.
