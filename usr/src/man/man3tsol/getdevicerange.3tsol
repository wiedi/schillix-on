'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH getdevicerange 3TSOL "20 Jul 2007" "SunOS 5.11" "Trusted Extensions Library Functions"
.SH NAME
getdevicerange \- get the label range of a device
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [\fIflag\fR.\|.\|.] \fIfile\fR.\|.\|. \fB-lbsm\fR \fB-ltsol\fR [\fIlibrary\fR.\|.\|.]
.fi

.LP
.nf
#include <tsol/label.h>

\fBblrange_t *\fBgetdevicerange\fR(\fBconst char *\fIdevice\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B getdevicerange()
function returns the label range of a
user-allocatable device.
.sp
.LP
If the label range is not specified for
.IR device ,
.B getdevicerange()
returns the default values of
.B ADMIN_LOW
for the
lower bound and
.B ADMIN_HIGH
for the upper bound of
.IR device .
.sp
.LP
From the command line,
.BR list_devices (1)
can be used to see the label
range of
.IR device .
.SH RETURN VALUES
.sp
.LP
The
.B getdevicerange()
function returns
.I NULL
on failure and sets
.IR errno .
On successful completion, it returns a pointer to a
.B blrange_t
structure which must be freed by the caller, as follows:
.sp
.in +2
.nf
blrange_t *range;
      .\|.\|.
      m_label_free(range->lower_bound);
      m_label_free(range->upper_bound);
      free(range);
.fi
.in -2
.sp

.SH ERRORS
.sp
.LP
The
.B getdevicerange()
function will fail if:
.sp
.ne 2
.mk
.na
.B EAGAIN
.ad
.RS 11n
.rt
There is not enough memory available to allocate the required bytes. The
application could try later.
.RE

.sp
.ne 2
.mk
.na
.B ENOMEM
.ad
.RS 11n
.rt
The physical limits of the system are exceeded by size bytes of memory
which cannot be allocated.
.RE

.sp
.ne 2
.mk
.na
.B ENOTSUP
.ad
.RS 11n
.rt
Invalid upper or lower bound for device.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.16i) |cw(3.34i)
lw(2.16i) |lw(3.34i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR list_devices (1),
.BR free (3C),
.BR libtsol (3LIB),
.BR m_label_free (3TSOL),
.BR attributes (5)
.sp
.LP
\fIValidating the Label Request Against the Printer\&'s Label Range\fR in
\fISolaris Trusted Extensions Developer\&'s Guide\fR
.SH NOTES
.sp
.LP
The functionality described on this manual page is available only if the
system is configured with Trusted Extensions.
