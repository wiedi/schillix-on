'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc. All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH getzonerootbyid 3TSOL "20 Jul 2007" "SunOS 5.11" "Trusted Extensions Library Functions"
.SH NAME
getzonerootbyid, getzonerootbylabel, getzonerootbyname \- map between zone
root pathnames and labels
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [\fIflags\fR.\|.\|.] \fIfile\fR.\|.\|. \fB-ltsol\fR [\fIlibrary\fR.\|.\|.]
.fi

.LP
.nf
#include <tsol/label.h>

\fBchar *\fBgetzonerootbyid\fR(\fBzoneid_t\fR \fIzoneid\fR);
.fi

.LP
.nf
\fBchar *\fBgetzonerootbylabel\fR(\fBconst m_label_t *\fIlabel\fR);
.fi

.LP
.nf
\fBchar *\fBgetzonerootbyname\fR(\fBconst char *\fIzonename\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B getzonerootbyid()
function returns the root pathname of
.IR zoneid .
.sp
.LP
The
.B getzonerootbylabel()
function returns the root pathname of the
zone whose label is
.IR label .
.sp
.LP
The
.B getzonerootbyname()
function returns the root pathname of
.IR zonename .
.sp
.LP
All of these functions require that the specified zone's state is at least
.BR ZONE_IS_READY .
The zone of the calling process must dominate the
specified zone's label, or the calling process must be in the global zone.
The returned pathname is relative to the root path of the caller's zone.
.SH RETURN VALUES
.sp
.LP
On successful completion, the
.BR getzonerootbyid() ,
.BR getzonerootbylabel() ,
and
.B getzonerootbyname()
functions return a
pointer to a pathname that is allocated within these functions. To free the
storage, use \fBfree\fR(3C). On failure, these functions return \fBNULL\fR
and set
.I errno
to indicate the error.
.SH ERRORS
.sp
.LP
These functions will fail if:
.sp
.ne 2
.mk
.na
.B EFAULT
.ad
.RS 10n
.rt
Invalid argument; pointer location is invalid.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
.I zoneid
invalid, or zone not found or not ready.
.RE

.sp
.ne 2
.mk
.na
.B ENOENT
.ad
.RS 10n
.rt
Zone does not exist.
.RE

.sp
.ne 2
.mk
.na
.B ENOMEM
.ad
.RS 10n
.rt
Unable to allocate pathname.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.16i) |cw(3.34i)
lw(2.16i) |lw(3.34i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR Intro (2),
.BR free (3C),
.BR getzonenamebyid (3C),
.BR libtsol (3LIB),
.BR attributes (5),
.BR labels (5)
.SH NOTES
.sp
.LP
The functionality described on this manual page is available only if the
system is configured with Trusted Extensions.
