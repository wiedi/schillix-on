'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH m_label 3TSOL "20 Jul 2007" "SunOS 5.11" "Trusted Extensions Library Functions"
.SH NAME
m_label, m_label_alloc, m_label_dup, m_label_free \- m_label functions
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [\fIflag\fR.\|.\|.] \fIfile\fR.\|.\|. \fB-ltsol\fR [\fIlibrary\fR.\|.\|.]
.fi

.LP
.nf
#include <tsol/label.h>

\fBm_label_t *\fBm_label_alloc\fR(\fBconst m_label_type_t\fR \fIlabel_type\fR);
.fi

.LP
.nf
\fBint\fR \fBm_label_dup\fR(\fBm_label_t **\fIdst\fR, \fBconst m_label_t *\fIsrc\fR);
.fi

.LP
.nf
\fBvoid\fR \fBm_label_free\fR(\fBm_label_t *\fIlabel\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B m_label_alloc()
function allocates resources for a new label. The
.I label_type
argument defines the type for a newly allocated label. The
label type can be:
.sp
.ne 2
.mk
.na
.B MAC_LABEL
.ad
.RS 14n
.rt
A Mandatory Access Control (MAC) label.
.RE

.sp
.ne 2
.mk
.na
.B USER_CLEAR
.ad
.RS 14n
.rt
A user clearance.
.RE

.sp
.LP
The
.B m_label_dup()
function allocates resources for a new
.IR dst
label. The function returns a pointer to the allocated label, which is an
exact copy of the
.I src
label. The caller is responsible for freeing the
allocated resources by calling
.BR m_label_free() .
.sp
.LP
The
.B m_label_free()
function frees resources that are associated with
the previously allocated label.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, the
.B m_label_alloc()
function returns a
.RB "pointer to the newly allocated label. Otherwise," " m_label_alloc()"
returns
.I NULL
and
.I errno
is set to indicate the error.
.sp
.LP
Upon successful completion, the
.B m_label_dup()
function returns 0.
Otherwise,
.B -1
is returned and
.I errno
is set to indicate the
error.
.SH ERRORS
.sp
.LP
The
.B m_label_alloc()
function will fail if:
.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
Invalid parameter.
.RE

.sp
.ne 2
.mk
.na
.B ENOMEM
.ad
.RS 10n
.rt
The physical limits of the system are exceeded by size bytes of memory
which cannot be allocated.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR label_to_str (3TSOL),
.BR libtsol (3LIB),
.BR str_to_label (3TSOL),
.BR label_encodings (4),
.BR attributes (5),
.BR labels (5)
.sp
.LP
\fIDetermining Whether the Printing Service Is Running in a Labeled
Environment\fR in \fISolaris Trusted Extensions Developer\&'s Guide\fR
.SH NOTES
.sp
.LP
The functionality described on this manual page is available only if the
system is configured with Trusted Extensions.
