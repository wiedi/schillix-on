'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc. All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH getpathbylabel 3TSOL "20 Jul 2007" "SunOS 5.11" "Trusted Extensions Library Functions"
.SH NAME
getpathbylabel \- return the zone pathname
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [\fIflags\fR.\|.\|.] \fIfile\fR.\|.\|. \fB-ltsol\fR [\fIlibrary\fR.\|.\|.]
.fi

.LP
.nf
#include <tsol/label.h>

\fBchar *\fBgetpathbylabel\fR(\fBconst char *\fIpath\fR, \fBchar *\fIresolved_path\fR,
     \fBsize_t\fR \fIbufsize\fR, \fBconst m_label_t *\fIsl\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B getpathbylabel()
function expands all symbolic links and resolves
references to '/./', '/../', extra '/' characters, and stores the zone
pathname in the buffer named by
.IR resolved_path .
The \fIbufsize\fR
argument specifies the size in bytes of this buffer. The resulting path will
have no symbolic links components, nor any '/./', '/.\|./'. This function
can only be called from the global zone.
.sp
.LP
The zone pathname is relative to the sensitivity label
.IR sl .
To specify
a sensitivity label for a zone name which does not exist, the process must
assert either the
.B PRIV_FILE_UPGRADE_SL
or
.BR PRIV_FILE_DOWNGRADE_SL
privilege depending on whether the specified sensitivity label dominates or
does not dominate the process sensitivity label.
.SH RETURN VALUES
.sp
.LP
The
.B getpathbylabel()
function returns a pointer to the
\fIresolved_path\fR on success. Otherwise it returns \fINULL\fR and sets
\fIerrno\fR to indicate the error.
.SH ERRORS
.sp
.LP
The
.B getpathbylabel()
function will fail if:
.sp
.ne 2
.mk
.na
.B EACCES
.ad
.RS 16n
.rt
Search permission is denied for a component of the path prefix of
.IR path .
.RE

.sp
.ne 2
.mk
.na
.B EFAULT
.ad
.RS 16n
.rt
\fIresolved_path\fR extends outside the process's allocated address space
or beyond \fIbufsize\fR bytes.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 16n
.rt
\fIpath\fR or \fIresolved_path\fR was
.IR NULL ,
current zone is not the
global zone, or
.I sl
is invalid.
.RE

.sp
.ne 2
.mk
.na
.B EIO
.ad
.RS 16n
.rt
An
.B I/O
error occurred while reading from or writing to the file
system.
.RE

.sp
.ne 2
.mk
.na
.B ELOOP
.ad
.RS 16n
.rt
Too many symbolic links were encountered in translating
.IR path .
.RE

.sp
.ne 2
.mk
.na
.B ENAMETOOLONG
.ad
.RS 16n
.rt
The length of the path argument exceeds
.IR PATH_MAX ,
or a pathname
component is longer than
.I NAME_MAX
(see \fBsysconf\fR(3C)) while
\fB_POSIX_NO_TRUNC\fR is in effect (see \fBpathconf\fR(2)).
.RE

.sp
.ne 2
.mk
.na
.B ENOENT
.ad
.RS 16n
.rt
The named file does not exist.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR readlink (2),
.BR getzonerootbyid (3TSOL),
.BR libtsol (3LIB),
.BR attributes (5),
.BR labels (5)
.SH WARNINGS
.sp
.LP
The
.B getpathbylabel()
function indirectly invokes the
.BR readlink (2)
system call, and hence inherits the possibility of hanging
due to inaccessible file system resources.
.SH NOTES
.sp
.LP
The functionality described on this manual page is available only if the
system is configured with Trusted Extensions.
