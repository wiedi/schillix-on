'\" te
.\" Copyright (c) 2006 Sun Microsystems Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH bltos 3TSOL "20 Jul 2007" "SunOS 5.11" "Trusted Extensions Library Functions"
.SH NAME
bltos, bsltos, bcleartos \- translate binary labels to character coded
labels
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [\fIflag\fR.\|.\|.] \fIfile\fR.\|.\|. \fB-ltsol\fR [\fIlibrary\fR.\|.\|.]
.fi

.LP
.nf
#include <tsol/label.h>

\fBint\fR \fBbsltos\fR(\fBconst m_label_t *\fIlabel\fR, char **\fIstring\fR,
     const int \fIstr_len\fR, const int \fIflags\fR);
.fi

.LP
.nf
\fBint\fR \fBbcleartos\fR(\fBconst m_label_t *\fIlabel\fR, char **\fIstring\fR,
     const int \fIstr_len\fR, const int \fIflags\fR);
.fi

.SH DESCRIPTION
.sp
.LP
These functions translate binary labels into strings controlled by the
value of the
.I flags
parameter.
.sp
.LP
The
.B bsltos()
function translates a binary sensitivity label into a
string. The applicable
.I flags
are
.B LONG_CLASSIFICATION
or
.BR SHORT_CLASSIFICATION ,
.B LONG_WORDS
or
.BR SHORT_WORDS ,
.B VIEW_EXTERNAL
or
.BR VIEW_INTERNAL ,
and
.BR NO_CLASSIFICATION .
A
.I flags
value
.B 0
is equivalent to (\fBSHORT_CLASSIFICATION\fR |
.BR LONG_WORDS ).
.sp
.LP
The
.B bcleartos()
function translates a binary clearance into a string.
The applicable
.I flags
are
.B LONG_CLASSIFICATION
or
.BR SHORT_CLASSIFICATION ,
.B LONG_WORDS
or
.BR SHORT_WORDS ,
.B VIEW_EXTERNAL
or
.BR VIEW_INTERNAL ,
and
.BR NO_CLASSIFICATION .
A
.I flags
value 0 is equivalent to (\fBSHORT_CLASSIFICATION\fR |
.BR LONG_WORDS ).
The translation of a clearance might not be the same as
the translation of a sensitivity label. These functions use different
.B label_encodings
file tables that might contain different words and
constraints.
.sp
.LP
The calling process must have
.B PRIV_SYS_TRANS_LABEL
in its set of
effective privileges to perform label translation on labels that dominate
the current process's sensitivity label.
.sp
.LP
The generic form of an output character-coded label is:
.sp
.in +2
.nf
CLASSIFICATION WORD1 WORD2 WORD3/WORD4 SUFFIX PREFIX WORD5/WORD6
.fi
.in -2
.sp

.sp
.LP
Capital letters are used to display all
.B CLASSIFICATION
names and
\fBWORD\fRs. The ` ' (space) character separates classifications and words
from other words in all character-coded labels except where multiple words
that require the same
.B PREFIX
or
.B SUFFIX
are present, in which
case the multiple words are separated from each other by the `\fB/\fR'
(slash) character.
.sp
.LP
The
.I string
argument can point to either a pointer to pre-allocated
memory, or the value
.BR "(char *)0" .
If
.I string
points to a pointer to
pre-allocated memory, then
.I str_len
indicates the size of that memory.
If \fIstring\fR points to the value \fB(char\ *)0\fR, memory is allocated
using
.B malloc()
to contain the translated character-coded labels. The
translated
.I label
is copied into allocated or pre-allocated memory.
.sp
.LP
The \fIflags\fR argument is \fB0\fR or the logical sum of the following:
.sp
.ne 2
.mk
.na
.B LONG_WORDS
.ad
.RS 24n
.rt
Translate using long names of words defined in
.IR label .
.RE

.sp
.ne 2
.mk
.na
.B SHORT_WORDS
.ad
.RS 24n
.rt
Translate using short names of words defined in
.IR label .
If no short
name is defined in the
.B label_encodings
file for a word, the long name
is used.
.RE

.sp
.ne 2
.mk
.na
.B LONG_CLASSIFICATION
.ad
.RS 24n
.rt
Translate using long name of classification defined in
.IR label .
.RE

.sp
.ne 2
.mk
.na
.B SHORT_CLASSIFICATION
.ad
.RS 24n
.rt
Translate using short name of classification defined in
.IR label .
.RE

.sp
.ne 2
.mk
.na
.B ACCESS_RELATED
.ad
.RS 24n
.rt
Translate only
.B access-related
entries defined in information label
.IR label .
.RE

.sp
.ne 2
.mk
.na
.B VIEW_EXTERNAL
.ad
.RS 24n
.rt
Translate
.B ADMIN_LOW
and
.B ADMIN_HIGH
labels to the lowest and
highest labels defined in the
.B label_encodings
file.
.RE

.sp
.ne 2
.mk
.na
.B VIEW_INTERNAL
.ad
.RS 24n
.rt
Translate
.B ADMIN_LOW
and
.B ADMIN_HIGH
labels to the \fBadmin
low\fR \fBname\fR and \fBadmin high\fR \fBname\fR strings specified in the
.B label_encodings
file. If no strings are specified, the strings
"\fBADMIN_LOW\fR" and "\fBADMIN_HIGH\fR" are used.
.RE

.sp
.ne 2
.mk
.na
.B NO_CLASSIFICATION
.ad
.RS 24n
.rt
Do not translate classification defined in
.IR label .
.RE

.SS "Process Attributes"
.sp
.LP
If the
.B VIEW_EXTERNAL
or
.B VIEW_INTERNAL
flags are not specified,
translation of
.B ADMIN_LOW
and
.B ADMIN_HIGH
labels is controlled by
the label view process attribute flags. If no label view process attribute
flags are defined, their translation is controlled by the label view
configured in the
.B label_encodings
file. A value of \fBExternal\fR
specifies that
.B ADMIN_LOW
and
.B ADMIN_HIGH
labels are mapped to the
lowest and highest labels defined in the
.B label_encodings
file. A value
of
.B Internal
specifies that the
.B ADMIN_LOW
and
.BR ADMIN_HIGH
labels are translated to the
.B "admin low"
and
.B "admin high"
name
strings specified in the
.B label_encodings
file. If no such names are
specified, the strings "\fBADMIN_LOW\fR" and "\fBADMIN_HIGH\fR" are used.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, the
.B bsltos()
and
.BR bcleartos()
functions return the length of the character-coded label, including the
.I NULL
terminator.
.sp
.LP
If the label is not of the valid defined required type, if the label is not
dominated by the process sensitivity label and the process does not have
.B PRIV_SYS_TRANS_LABEL
in its set of effective privileges, or if the
.B label_encodings
file is inaccessible, these functions return \(mi1.
.sp
.LP
If memory cannot be allocated for the return string or if the pre-allocated
return string memory is insufficient to hold the string, these functions
return 0. The value of the pre-allocated string is set to the \fINULL\fR
string (\fB*string[0]='\00';\fR).
.SH FILES
.sp
.ne 2
.mk
.na
.B /etc/security/tsol/label_encodings
.ad
.sp .6
.RS 4n
The label encodings file contains the classification names, words,
constraints, and values for the defined labels of this system.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityObsolete
_
MT-LevelMT-Safe with exceptions
.TE

.sp
.LP
The
.B bsltos()
and
.B bcleartos()
functions are Obsolete. Use the
.BR label_to_str (3TSOL)
function instead.
.SH SEE ALSO
.sp
.LP
.BR free (3C),
.BR label_to_str (3TSOL),
.BR libtsol (3LIB),
.BR malloc (3C),
.BR label_encodings (4),
.BR attributes (5)
.SH NOTES
.sp
.LP
The functionality described on this manual page is available only if the
system is configured with Trusted Extensions.
.sp
.LP
If memory is allocated by these functions, the caller must free the memory
with \fBfree\fR(3C) when the memory is no longer in use.
