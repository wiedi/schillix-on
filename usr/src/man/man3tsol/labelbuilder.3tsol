'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc. All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH labelbuilder 3TSOL "20 Jul 2007" "SunOS 5.11" "Trusted Extensions Library Functions"
.SH NAME
labelbuilder, tsol_lbuild_create, tsol_lbuild_get, tsol_lbuild_set,
tsol_lbuild_destroy \- create a Motif-based user interface for interactively
building a valid label or clearance
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [\fIflag\fR.\|.\|.] \fIfile\fR.\|.\|. \fB-ltsol\fR \fB-lDtTsol\fR [\fIlibrary\fR.\|.\|.]
.fi

.LP
.nf
#include <Dt/ModLabel.h>

\fBModLabelData *tsol_lbuild_create\fR(\fBWidget\fR \fIwidget\fR,
     void \fI(*event_handler)\fR() \fIok_callback\fR,
     \fBlbuild_attributes\fR \fIextended_operation\fR, .\|.\|., \fBNULL\fR);
.fi

.LP
.nf
\fBvoid *tsol_lbuild_get\fR(\fBModLabelData *\fIdata\fR,
     \fBlbuild_attributes\fR \fIextended_operation\fR);
.fi

.LP
.nf
\fBvoid tsol_lbuild_set\fR(\fBModLabelData *\fIdata\fR,
     \fBlbuild_attributes\fR \fIextended_operation\fR, .\|.\|., \fBNULL\fR);
.fi

.LP
.nf
\fBvoid tsol_lbuild_destroy\fR(\fBModLabelData *\fIdata\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The label builder user interface prompts the end user for information and
generates a valid sensitivity label or clearance from the user input based
on specifications in the
.BR label_encodings (4)
file on the system where
the application runs. The end user can build the label or clearance by
typing a text value or by interactively choosing options.
.sp
.LP
Application-specific functionality is implemented in the callback for the
.RB "OK pushbutton. This callback is passed to the" " tsol_lbuild_create()"
call where it is mapped to the OK pushbutton widget.
.sp
.LP
When choosing options, the label builder shows the user only those
classifications (and related compartments and markings) dominated by the
workspace sensitivity label unless the executable has the
.B PRIV_SYS_TRANS_LABEL
privilege in its effective set.
.sp
.LP
If the end user does not have the authorization to upgrade or downgrade
labels, or if the user-built label is out of the user's accreditation range,
the OK and Reset pushbuttons are grayed. There are no privileges to override
these restrictions.
.sp
.LP
.B tsol_lbuild_create()
creates the graphical user interface and returns
a pointer variable of type
.B ModLabeldata*
that contains information on
the user interface. This information is a combination of values passed in
the
.B tsol_lbuild_create()
input parameter list, default values for
information not provided, and information on the widgets used by the label
builder to create the user interface. All information except the widget
information should be accessed with the
.B tsol_lbuild_get()
and
.B tsol_lbuild_set()
routines.
.sp
.LP
The widget information is accessed directly by referencing the following
fields of the
.B ModLabelData
structure.
.sp
.ne 2
.mk
.na
.B lbuild_dialog
.ad
.RS 17n
.rt
The label builder dialog box.
.RE

.sp
.ne 2
.mk
.na
.B ok
.ad
.RS 17n
.rt
The OK pushbutton.
.RE

.sp
.ne 2
.mk
.na
.B cancel
.ad
.RS 17n
.rt
The Cancel pushbutton.
.RE

.sp
.ne 2
.mk
.na
.B reset
.ad
.RS 17n
.rt
The Reset pushbutton.
.RE

.sp
.ne 2
.mk
.na
.B help
.ad
.RS 17n
.rt
The Help pushbutton.
.RE

.sp
.LP
The
.B tsol_lbuild_create()
parameter list takes the following values:
.sp
.ne 2
.mk
.na
.B widget
.ad
.RS 15n
.rt
The widget from which the dialog box is created. Any Motif widget can be
passed.
.RE

.sp
.ne 2
.mk
.na
.B ok_callback
.ad
.RS 15n
.rt
A callback function that implements the behavior of the OK pushbutton on
the dialog box.
.RE

.sp
.ne 2
.mk
.na
\fB\&.\|.\|., NULL\fR
.ad
.RS 15n
.rt
A
.I NULL
terminated list of extended operations and value pairs that
define the characteristics and behavior of the label builder dialog box.
.RE

.sp
.LP
.B tsol_lbuild_destroy()
destroys the
.B ModLabelData
structure
returned by
.BR tsol_lbuild_create() .
.sp
.LP
.B tsol_lbuild_get()
and
.B tsol_lbuild_set()
access the information
stored in the
.B ModLabelData
structure returned by
.BR tsol_lbuild_create() .
.sp
.LP
The following extended operations can be passed to
.B tsol_lbuild_create()
to build the user interface, to
.B tsol_lbuild_get()
to retrieve information on the user interface, and
to
.B tsol_lbuild_set()
to change the user interface information. All
extended operations are valid for
.BR tsol_lbuild_get() ,
but the
.B *WORK*
operations are not valid for
.B tsol_lbuild_set()
or
.B tsol_lbuild_create()
because these values are set from input supplied
by the end user. These exceptions are noted in the descriptions.
.sp
.ne 2
.mk
.na
.B LBUILD_MODE
.ad
.RS 22n
.rt
Create a user interface to build a sensitivity label or a clearance. Value
is
.B LBUILD_MODE_SL
by default.
.sp
.ne 2
.mk
.na
.B LBUILD_MODE_SL
.ad
.RS 19n
.rt
Build a sensitivity label.
.RE

.sp
.ne 2
.mk
.na
.B LBUILD_MODE_CLR
.ad
.RS 19n
.rt
Build a clearance.
.RE

.RE

.sp
.ne 2
.mk
.na
.B LBUILD_VALUE_SL
.ad
.RS 22n
.rt
The starting sensitivity label. This value is
.B ADMIN_LOW
by default
and is used when the mode is
.BR LBUILD_MODE_SL .
.RE

.sp
.ne 2
.mk
.na
.B LBUILD_VALUE_CLR
.ad
.RS 22n
.rt
The starting clearance. This value is
.B ADMIN_LOW
by default and is
used when the mode is
.BR LBUILD_MODE_CLR .
.RE

.sp
.ne 2
.mk
.na
.B LBUILD_USERFIELD
.ad
.RS 22n
.rt
A character string prompt that displays at the top of the label builder
dialog box. Value is
.I NULL
by default.
.RE

.sp
.ne 2
.mk
.na
.B LBUILD_SHOW
.ad
.RS 22n
.rt
Show or hide the label builder dialog box. Value is
.B FALSE
by
default.
.sp
.ne 2
.mk
.na
.B TRUE
.ad
.RS 9n
.rt
Show the label builder dialog box.
.RE

.sp
.ne 2
.mk
.na
.B FALSE
.ad
.RS 9n
.rt
Hide the label builder dialog box.
.RE

.RE

.sp
.ne 2
.mk
.na
.B LBUILD_TITLE
.ad
.RS 22n
.rt
A character string title that appears at the top of the label builder
dialog box. Value is
.I NULL
by default.
.RE

.sp
.ne 2
.mk
.na
.B LBUILD_WORK_SL
.ad
.RS 22n
.rt
Not valid for
.B tsol_lbuild_set()
or
.BR tsol_lbuild_create() .
The
sensitivity label the end user is building. Value is updated to the end
user's input when the end user selects the Update pushbutton or
interactively chooses an option.
.RE

.sp
.ne 2
.mk
.na
.B LBUILD_WORK_CLR
.ad
.RS 22n
.rt
Not valid for
.B tsol_lbuild_set()
or
.BR tsol_lbuild_create() .
The
clearance the end user is building. Value is updated to the end user's input
when the end user selects the Update pushbutton or interactively chooses an
option.
.RE

.sp
.ne 2
.mk
.na
.B LBUILD_X
.ad
.RS 22n
.rt
The X position in pixels of the top-left corner of the label builder dialog
box in relation to the top-left corner of the screen. By default the label
builder dialog box is positioned in the middle of the screen.
.RE

.sp
.ne 2
.mk
.na
.B LBUILD_Y
.ad
.RS 22n
.rt
The Y position in pixels of the top-left corner of the label builder dialog
box in relation to the top-left corner of the screen. By default the label
builder dialog box is positioned in the middle of the screen.
.RE

.sp
.ne 2
.mk
.na
.B LBUILD_LOWER_BOUND
.ad
.RS 22n
.rt
The lowest classification (and related compartments and markings) available
to the user as radio buttons for interactively building a label or
clearance. This value is the user's minimum label.
.RE

.sp
.ne 2
.mk
.na
.B LBUILD_UPPER_BOUND
.ad
.RS 22n
.rt
The highest classification (and related compartments and markings)
available to the user as radio buttons for interactively building a label or
clearance. A supplied value should be within the user's accreditation range.
If no value is specified, the value is the user's workspace sensitivity
label, or if the executable has the
.B PRIV_SYS_TRANS_LABEL
privilege,
the value is the user's clearance.
.RE

.sp
.ne 2
.mk
.na
.B LBUILD_CHECK_AR
.ad
.RS 22n
.rt
Check that the user-built label entered in the Update With field is within
the user's accreditation range. A value of 1 means check, and a value of 0
means do not check. If checking is on and the label is out of range, an
error message is raised to the end user.
.RE

.sp
.ne 2
.mk
.na
.B LBUILD_VIEW
.ad
.RS 22n
.rt
Use the internal or external label representation. Value is
.B LBUILD_VIEW_EXTERNAL
by default.
.sp
.ne 2
.mk
.na
.B LBUILD_VIEW_INTERNAL
.ad
.sp .6
.RS 4n
Use the internal names for the highest and lowest labels in the system:
.B ADMIN_HIGH
and
.BR ADMIN_LOW .
.RE

.sp
.ne 2
.mk
.na
.B LBUILD_VIEW_EXTERNAL
.ad
.sp .6
.RS 4n
Promote an
.B ADMIN_LOW
label to the next highest label, and demote an
.B ADMIN_HIGH
label to the next lowest label.
.RE

.RE

.SH RETURN VALUES
.sp
.LP
The
.B tsol_lbuild_get()
function returns \fB\(mi1\fR if it is unable to
get the value.
.sp
.LP
The
.B tsol_lbuild_create()
function returns a variable of type
.B ModLabelData
that contains the information provided in the
.B tsol_lbuild_create()
input parameter list, default values for
information not provided, and information on the widgets used by the label
builder to create the user interface.
.SH EXAMPLES
.LP
.B Example 1
Create a Label Builder.
.sp
.in +2
.nf
(ModLabelData *)lbldata = tsol_lbuild_create(widget0, callback_function,
     LBUILD_MODE, LBUILD_MODE_SL,
     LBUILD_TITLE, "Setting Sensitivity Label",
     LBUILD_VIEW, LBUILD_VIEW_INTERNAL,
     LBUILD_X, 200,
     LBUILD_Y, 200,
     LBUILD_USERFIELD, "Pathname:",
     LBUILD_SHOW, FALSE,
  NULL);
.fi
.in -2
.sp

.LP
.B Example 2
Query the Mode and Display the Label Builder.
.sp
.LP
These examples call the
.B tsol_lbuild_get()
function to query the mode
being used, and call the
.B tsol_lbuild_set()
function so the label
builder dialog box displays.

.sp
.in +2
.nf
mode = (int)tsol_lbuild_get(lbldata, LBUILD_MODE );

tsol_lbuild_set(lbldata, LBUILD_SHOW, TRUE, NULL);
.fi
.in -2
.sp

.LP
.B Example 3
Destroy the ModLabelData Variable.
.sp
.LP
This example destroys the
.B ModLabelData
variable returned in the call
to
.BR tsol_lbuild_create() .

.sp
.in +2
.nf
tsol_lbuild_destroy(lbldata);
.fi
.in -2
.sp

.SH FILES
.sp
.ne 2
.mk
.na
.B /usr/dt/include/Dt/ModLabel.h
.ad
.sp .6
.RS 4n
Header file for label builder functions
.RE

.sp
.ne 2
.mk
.na
.B /etc/security/tsol/label_encodings
.ad
.sp .6
.RS 4n
The label encodings file contains the classification names, words,
constraints, and values for the defined labels of this system.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR libtsol (3LIB),
.BR label_encodings (4),
.BR attributes (5)
.sp
.LP
.I Label Builder APIs
in \fISolaris Trusted Extensions Developer\&'s
Guide\fR
.SH NOTES
.sp
.LP
The functionality described on this manual page is available only if the
system is configured with Trusted Extensions.
