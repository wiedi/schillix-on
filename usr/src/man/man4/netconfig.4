'\" te
.\" Copyright 1989 AT&T
.\" Copyright (C) 1999, Sun Microsystems, Inc. All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH netconfig 4 "18 Nov 2003" "SunOS 5.11" "File Formats"
.SH NAME
netconfig \- network configuration database
.SH SYNOPSIS
.LP
.nf
\fB/etc/netconfig\fR
.fi

.SH DESCRIPTION
.sp
.LP
The network configuration database,
.BR /etc/netconfig ,
is a system file
used to store information about networks that are connected to the system.
The
.B netconfig
database and the routines that access it (see
.BR getnetconfig (3NSL))
are part of the Network Selection component. The
Network Selection component also includes
.BR getnetpath "(3NSL) routines to"
provide application-specific network search paths. These routines access the
.B netconfig
database based on the environment variable
.BR NETPATH .
See
.BR environ (5).
.sp
.LP
.B netconfig
contains an entry for each network available on the system.
Entries are separated by newlines. Fields are separated by whitespace and
occur in the order in which they are described below. Whitespace can be
embedded as ``\fB\e\fIblank\fR'' or ``\fB\e\fItab\fR''. Backslashes
.RB "may be embedded as ``" \e\e \&''.
Lines in
.B /etc/netconfig
that
begin with a
.B #
(hash) in column 1 are treated as comments.
.sp
.LP
Each of the valid lines in the
.B netconfig
database correspond to an
available transport. Each entry is of the form:
.sp
.in +2
.nf
network ID  semantics  flag  protocol-family \e
 protocol-name  network-device  translation-libraries
.fi
.in -2

.sp
.ne 2
.mk
.na
.I network ID
.ad
.RS 25n
.rt
A string used to uniquely identify a network.
.I "network ID"
consists of
non-null characters, and has a length of at least 1. No maximum length is
specified. This namespace is locally significant and the local system
administrator is the naming authority. All
.IR "network ID" s
on a system
must be unique.
.RE

.sp
.ne 2
.mk
.na
.I semantics
.ad
.RS 25n
.rt
The
.I semantics
field is a string identifying the ``semantics'' of the
network, that is, the set of services it supports, by identifying the
service interface it provides. The
.I semantics
field is mandatory. The
following semantics are recognized.
.sp
.ne 2
.mk
.na
.B tpi_clts
.ad
.RS 16n
.rt
Transport Provider Interface, connectionless
.RE

.sp
.ne 2
.mk
.na
.B tpi_cots
.ad
.RS 16n
.rt
Transport Provider Interface, connection oriented
.RE

.sp
.ne 2
.mk
.na
.B tpi_cots_ord
.ad
.RS 16n
.rt
Transport Provider Interface, connection oriented, supports orderly
release.
.RE

.RE

.sp
.ne 2
.mk
.na
.I flag
.ad
.RS 25n
.rt
The
.I flag
field records certain two-valued (``true'' and ``false'')
attributes of networks.
.I flag
is a string composed of a combination of
characters, each of which indicates the value of the corresponding
attribute. If the character is present, the attribute is ``true.'' If the
character is absent, the attribute is ``false.''
.RB `` - ''
indicates that
none of the attributes are present. Only one character is currently
recognized:
.sp
.ne 2
.mk
.na
.B v
.ad
.RS 5n
.rt
Visible (``default'') network. Used when the environment variable
.B NETPATH
is unset.
.RE

.RE

.sp
.ne 2
.mk
.na
.I protocol family
.ad
.RS 25n
.rt
The
.IR "protocol family" " and "
.I protocol name
fields are provided for
protocol-specific applications. The
.I "protocol family"
field contains a
string that identifies a protocol family. The
.I "protocol family"
identifier follows the same rules as those for
.IR "network ID" "s; the string"
consists of non-null characters, it has a length of at least
.BR 1 ,
and
there is no maximum length specified. A ``\fB\(mi\fR\&'' in the \fIprotocol family\fR field indicates that no protocol family identifier applies (the
network is experimental). The following are examples:
.sp
.ne 2
.mk
.na
.B loopback
.ad
.RS 13n
.rt
Loopback (local to host).
.RE

.sp
.ne 2
.mk
.na
.B inet
.ad
.RS 13n
.rt
Internetwork: UDP, TCP, and the like.
.RE

.sp
.ne 2
.mk
.na
.B inet6
.ad
.RS 13n
.rt
Internetwork over IPv6: UDP, TCP, and the like.
.RE

.sp
.ne 2
.mk
.na
.B implink
.ad
.RS 13n
.rt
ARPANET imp addresses
.RE

.sp
.ne 2
.mk
.na
.B pup
.ad
.RS 13n
.rt
PUP protocols: for example, BSP
.RE

.sp
.ne 2
.mk
.na
.B chaos
.ad
.RS 13n
.rt
MIT CHAOS protocols
.RE

.sp
.ne 2
.mk
.na
.B ns
.ad
.RS 13n
.rt
XEROX NS protocols
.RE

.sp
.ne 2
.mk
.na
.B nbs
.ad
.RS 13n
.rt
NBS protocols
.RE

.sp
.ne 2
.mk
.na
.B ecma
.ad
.RS 13n
.rt
European Computer Manufacturers Association
.RE

.sp
.ne 2
.mk
.na
.B datakit
.ad
.RS 13n
.rt
DATAKIT protocols
.RE

.sp
.ne 2
.mk
.na
.B ccitt
.ad
.RS 13n
.rt
CCITT protocols, X.25, and the like.
.RE

.sp
.ne 2
.mk
.na
.B sna
.ad
.RS 13n
.rt
IBM SNA
.RE

.sp
.ne 2
.mk
.na
.B decnet
.ad
.RS 13n
.rt
DECNET
.RE

.sp
.ne 2
.mk
.na
.B dli
.ad
.RS 13n
.rt
Direct data link interface
.RE

.sp
.ne 2
.mk
.na
.B lat
.ad
.RS 13n
.rt
LAT
.RE

.sp
.ne 2
.mk
.na
.B hylink
.ad
.RS 13n
.rt
NSC Hyperchannel
.RE

.sp
.ne 2
.mk
.na
.B appletalk
.ad
.RS 13n
.rt
Apple Talk
.RE

.sp
.ne 2
.mk
.na
.B nit
.ad
.RS 13n
.rt
Network Interface Tap
.RE

.sp
.ne 2
.mk
.na
.B ieee802
.ad
.RS 13n
.rt
IEEE 802.2; also ISO 8802
.RE

.sp
.ne 2
.mk
.na
.B osi
.ad
.RS 13n
.rt
Umbrella for all families used by OSI (for example, protosw lookup)
.RE

.sp
.ne 2
.mk
.na
.B x25
.ad
.RS 13n
.rt
CCITT X.25 in particular
.RE

.sp
.ne 2
.mk
.na
.B osinet
.ad
.RS 13n
.rt
AFI = 47, IDI = 4
.RE

.sp
.ne 2
.mk
.na
.B gosip
.ad
.RS 13n
.rt
U.S. Government OSI
.RE

.RE

.sp
.ne 2
.mk
.na
.I protocol name
.ad
.RS 25n
.rt
The
.I "protocol name"
field contains a string that identifies a protocol.
The
.I "protocol name"
identifier follows the same rules as those for
\fInetwork ID\fRs; that is, the string consists of non-NULL characters, it
has a length of at least
.BR 1 ,
and there is no maximum length specified.
A ``\fB\(mi\fR\&'' indicates that none of the names listed apply. The
following protocol names are recognized.
.sp
.ne 2
.mk
.na
.B tcp
.ad
.RS 8n
.rt
Transmission Control Protocol
.RE

.sp
.ne 2
.mk
.na
.B udp
.ad
.RS 8n
.rt
User Datagram Protocol
.RE

.sp
.ne 2
.mk
.na
.B icmp
.ad
.RS 8n
.rt
Internet Control Message Protocol
.RE

.RE

.sp
.ne 2
.mk
.na
.I network device
.ad
.RS 25n
.rt
The
.I "network device"
is the full pathname of the device used to connect
.RB "to the transport provider. Typically, this device will be in the" " /dev"
directory. The
.I "network device"
must be specified.
.RE

.sp
.ne 2
.mk
.na
.I translation libraries
.ad
.RS 25n
.rt
The
.I "name-to-address translation libraries"
support a ``directory
service'' (a name-to-address mapping service) for the network. A
``\fB\(mi\fR\&'' in this field indicates the absence of any \fItranslation libraries\fR. This has a special meaning for networks of the protocol family
.B inet :
its name-to-address mapping is provided by the name service
switch based on the entries for
.B hosts
and
.B services
in
.BR nsswitch.conf (4).
For networks of other families, a ``\fB\(mi\fR\&''
indicates non-functional name-to-address mapping. Otherwise, this field
consists of a comma-separated list of pathnames to dynamically linked
libraries. The pathname of the library can be either absolute or relative.
See
.BR dlopen (3C).
.RE

.sp
.LP
Each field corresponds to an element in the
.B "struct netconfig"
structure.
.B "struct netconfig"
and the identifiers described on this
manual page are defined in
.RB < netconfig.h >.
This structure includes the
following members:
.sp
.ne 2
.mk
.na
.BI "char *" nc_netid
.ad
.RS 30n
.rt
Network ID, including
.B NULL
terminator.
.RE

.sp
.ne 2
.mk
.na
.B unsigned long
.I nc_semantics
.ad
.RS 30n
.rt
Semantics.
.RE

.sp
.ne 2
.mk
.na
.B unsigned long
.I nc_flag
.ad
.RS 30n
.rt
Flags.
.RE

.sp
.ne 2
.mk
.na
.BI "char *" nc_protofmly
.ad
.RS 30n
.rt
Protocol family.
.RE

.sp
.ne 2
.mk
.na
.BI "char *" nc_proto
.ad
.RS 30n
.rt
Protocol name.
.RE

.sp
.ne 2
.mk
.na
.BI "char *" nc_device
.ad
.RS 30n
.rt
Full pathname of the network device.
.RE

.sp
.ne 2
.mk
.na
.B unsigned long
.I nc_nlookups
.ad
.RS 30n
.rt
Number of directory lookup libraries.
.RE

.sp
.ne 2
.mk
.na
.BI "char **" nc_lookups
.ad
.RS 30n
.rt
Names of the name-to-address translation libraries.
.RE

.sp
.ne 2
.mk
.na
.B unsigned long
.I nc_unused[9]
.ad
.RS 30n
.rt
Reserved for future expansion.
.RE

.sp
.LP
The
.I nc_semantics
field takes the following values, corresponding to
the semantics identified above:
.br
.in +2
.B NC_TPI_CLTS
.in -2
.br
.in +2
.B NC_TPI_COTS
.in -2
.br
.in +2
.B NC_TPI_COTS_ORD
.in -2
.sp
.LP
The
.I nc_flag
field is a bitfield. The following bit, corresponding to
the attribute identified above, is currently recognized.
.B NC_NOFLAG
indicates the absence of any attributes.
.sp
.in +2
.nf
\fBNC_VISIBLE\fR
.fi
.in -2

.SH EXAMPLES
.LP
.B Example 1
A Sample
.B netconfig
File
.sp
.LP
Below is a sample
.B netconfig
file:

.sp
.in +2
.nf
#
#  The "Network Configuration" File.
#
# Each entry is of the form:
#
#   <networkid> <semantics> <flags> <protofamily> <protoname> <device>
#         <nametoaddrlibs>
#
# The "-" in <nametoaddrlibs> for inet family transports indicates
# redirection to the name service switch policies for "hosts" and
# "services". The "-" may be replaced by nametoaddr libraries that
# comply with the SVr4 specs, in which case the name service switch
# will not be used for netdir_getbyname, netdir_getbyaddr,
# gethostbyname, gethostbyaddr, getservbyname, and getservbyport.
# There are no nametoaddr_libs for the inet family in Solaris anymore.
#
udp6       tpi_clts      v   inet6   udp    /dev/udp6       -
tcp6       tpi_cots_ord  v   inet6   tcp    /dev/tcp6       -
udp        tpi_clts      v   inet    udp    /dev/udp        -
tcp        tpi_cots_ord  v   inet    tcp    /dev/tcp        -
rawip      tpi_raw       -   inet    -      /dev/rawip      -
ticlts     tpi_clts      v   loopback -      /dev/ticlts     straddr.so
ticotsord  tpi_cots_ord  v   loopback -      /dev/ticotsord  straddr.so
ticots     tpi_cots      v   loopback -      /dev/ticots     straddr.so
.fi
.in -2

.SH FILES
.sp
.ne 2
.mk
.na
.BR <netconfig.h >
.ad
.RS 17n
.rt

.RE

.SH SEE ALSO
.sp
.LP
.BR dlopen (3C),
.BR getnetconfig (3NSL),
.BR getnetpath (3NSL),
.BR nsswitch.conf (4)
.sp
.LP
.I System Administration Guide: IP Services
