'\" te
.\" Copyright (c) 2009, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH ike.config 4 "27 Apr 2009" "SunOS 5.11" "File Formats"
.SH NAME
ike.config \- configuration file for IKE policy
.SH SYNOPSIS
.LP
.nf
\fB/etc/inet/ike/config\fR
.fi

.SH DESCRIPTION
.sp
.LP
The
.B /etc/inet/ike/config
file contains rules for matching inbound IKE
requests. It also contains rules for preparing outbound \fBIKE\fR
requests.
.sp
.LP
You can test the syntactic correctness of an \fB/etc/inet/ike/config\fR
file by using the
.B -c
or
.B -f
options of
.BR in.iked (1M).
You
must use the
.B -c
option to test a
.B config
file. You might need to
use the \fB-f\fR option if it is not in \fB/etc/inet/ike/config\fR.
.SS "Lexical Components"
.sp
.LP
On any line, an unquoted
.B #
character introduces a comment. The
remainder of that line is ignored. Additionally, on any line, an unquoted
.B //
sequence introduces a comment. The remainder of that line is
ignored.
.sp
.LP
There are several types of lexical tokens in the
.B ike.config
file:
.sp
.ne 2
.mk
.na
.I num
.ad
.sp .6
.RS 4n
A decimal, hex, or octal number representation is as in 'C'.
.RE

.sp
.ne 2
.mk
.na
\fIIPaddr\fR/\fIprefix\fR/\fIrange\fR
.ad
.sp .6
.RS 4n
An IPv4 or IPv6 address with an optional /\fINNN\fR suffix, (where
.I NNN
is a
.IR num )
that indicates an address (\fBCIDR\fR) prefix (for
example,
.BR 10.1.2.0/24 ).
An optional /\fIADDR\fR suffix (where
.I ADDR
is a second IP address) indicates an address/mask pair (for
example,
.BR 10.1.2.0/255.255.255.0 ).
An optional -\fIADDR\fR suffix
(where
.I ADDR
is a second IPv4 address) indicates an inclusive range of
addresses (for example,
.BR 10.1.2.0-10.1.2.255 ).
The
.B /
or
.BR -
can be surrounded by an arbitrary amount of white space.
.RE

.sp
.ne 2
.mk
.na
.B XXX
|
.B YYY
|
.B ZZZ
.ad
.sp .6
.RS 4n
Either the words
.BR XX X,
.BR YYY ,
or
.BR ZZZ ,
for example, {yes,no}.

.RE

.sp
.ne 2
.mk
.na
.B p1-id-type
.ad
.sp .6
.RS 4n
An IKE phase 1 identity type. IKE phase 1 identity types include:
.br
.in +2
.B dn, DN
.in -2
.br
.in +2
.B dns, DNS
.in -2
.br
.in +2
.B fqdn, FQDN
.in -2
.br
.in +2
.B gn, GN
.in -2
.br
.in +2
.B ip, IP
.in -2
.br
.in +2
.B ipv4
.in -2
.br
.in +2
.B ipv4_prefix
.in -2
.br
.in +2
.B ipv4_range
.in -2
.br
.in +2
.B ipv6
.in -2
.br
.in +2
.B ipv6_prefix
.in -2
.br
.in +2
.B ipv6_range
.in -2
.br
.in +2
.B mbox, MBOX
.in -2
.br
.in +2
.B user_fqdn
.in -2
.RE

.sp
.ne 2
.mk
.na
\fB"\fIstring\fB"\fR
.ad
.sp .6
.RS 4n
A quoted string.
.sp
Examples include:\fB"Label foo"\fR, or \fB"C=US, OU=Sun Microsystems\e,
Inc., N=olemcd@eng.example.com"\fR
.sp
A backslash (\fB\e\fR) is an escape character. If the string needs an
actual backslash, two must be specified.
.RE

.sp
.ne 2
.mk
.na
.I cert-sel
.ad
.sp .6
.RS 4n
A certificate selector, a
.I string
which specifies the identities of
zero or more certificates. The specifiers can conform to
.B X.509
naming
conventions.
.sp
A
.I cert-sel
can also use various shortcuts to match either subject
alternative names, the filename or
.B slot
of a certificate in
.BR /etc/inet/ike/publickeys ,
or even the
.BR ISSUER .
For example:
.sp
.in +2
.nf
"SLOT=0"
"EMAIL=postmaster@domain.org"
"webmaster@domain.org" # Some just work w/o TYPE=
"IP=10.0.0.1"
"10.21.11.11"          # Some just work w/o TYPE=
"DNS=www.domain.org"
"mailhost.domain.org"  # Some just work w/o TYPE=
"ISSUER=C=US, O=Sun Microsystems\e, Inc., CN=Sun CA"
.fi
.in -2
.sp

Any
.I cert-sel
preceded by the character
.B !
indicates a negative
match, that is, not matching this specifier. These are the same kind of
strings used in
.BR ikecert (1M).
.RE

.sp
.ne 2
.mk
.na
.I ldap-list
.ad
.sp .6
.RS 4n
A quoted, comma-separated list of LDAP servers and ports.
.sp
For example, \fB"ldap1.example.com"\fR, \fB"ldap1.example.com:389"\fR,
\fB"ldap1.example.com:389,ldap2.example.com"\fR. 
.sp
The default port for LDAP is
.BR 389 .
.RE

.sp
.ne 2
.mk
.na
.I parameter-list
.ad
.sp .6
.RS 4n
A list of parameters.
.RE

.SS "File Body Entries"
.sp
.LP
There are four main types of entries:
.RS +4
.TP
.ie t \(bu
.el o
global parameters
.RE
.RS +4
.TP
.ie t \(bu
.el o
IKE phase 1 transform defaults
.RE
.RS +4
.TP
.ie t \(bu
.el o
IKE rule defaults
.RE
.RS +4
.TP
.ie t \(bu
.el o
IKE rules
.RE
.sp
.LP
The global parameter entries are as follows:
.sp
.ne 2
.mk
.na
.BI "cert_root " cert-sel
.ad
.sp .6
.RS 4n
The X.509 distinguished name of a certificate that is a trusted root CA
certificate.It must be encoded in a file in the
.B /etc/inet/ike/publickeys
directory. It must have a CRL in
\fB/etc/inet/ike/crl\fRs. Multiple \fBcert_root\fR parameters aggregate.
.RE

.sp
.ne 2
.mk
.na
.BI "cert_trust " cert-sel
.ad
.sp .6
.RS 4n
Specifies an X.509 distinguished name of a certificate that is self-signed,
or has otherwise been verified as trustworthy for signing IKE exchanges. It
must be encoded in a file in
.BR /etc/inet/ike/publickeys .
Multiple
.B cert_trust
parameters aggregate.
.RE

.sp
.ne 2
.mk
.na
.BI "expire_timer " integer
.ad
.sp .6
.RS 4n
The number of seconds to let a not-yet-complete IKE Phase I (Main Mode)
negotiation linger before deleting it. Default value: 300 seconds.
.RE

.sp
.ne 2
.mk
.na
.B ignore_crls
.ad
.sp .6
.RS 4n
If this keyword is present in the file,
.BR in.iked (1M)
ignores
Certificate Revocation Lists (\fBCRL\fRs) for root \fBCA\fRs (as given in
.BR cert_root )
.RE

.sp
.ne 2
.mk
.na
.BI "ldap_server " ldap-list
.ad
.sp .6
.RS 4n
A list of LDAP servers to query for certificates. The list can be
additive.
.RE

.sp
.ne 2
.mk
.na
.BI "pkcs11_path " string
.ad
.sp .6
.RS 4n
The string that follows is a name of a shared object (\fB\&.so\fR) that
implements the PKCS#11 standard. The name is passed directly into
.BR dlopen (3C)
for linking, with all of the semantics of that library
call. By default,
.BR in.iked (1M)
runs the same ISA as the running kernel,
so a library specified using
.B pkcs11_path
and an absolute pathname
.B must
match the same ISA as the kernel. One can use the start/exec SMF
property (see \fBsvccfg\fR(1M)) to change \fBin.iked\fR's ISA, but it is not
recommended.
.sp
If this setting is not present, the default value is set to
.BR libpkcs11.so .
Most cryptographic providers go through the default
library, and this parameter should only be used if a specialized provider of
IKE-useful cryptographic services cannot interface with the Solaris
Cryptographic Framework. See
.BR cryptoadm (1M).
.sp
This option is now deprecated, and may be removed in a future release.
.RE

.sp
.ne 2
.mk
.na
.BI "retry_limit " integer
.ad
.sp .6
.RS 4n
The number of retransmits before any IKE negotiation is aborted. Default
value: 5 times.
.RE

.sp
.ne 2
.mk
.na
\fBretry_timer_init \fIinteger\fR or \fIfloat\fR
.ad
.sp .6
.RS 4n
The initial interval (in seconds) between retransmits. This interval is
doubled until the
.B retry_timer_max
value (see below) is reached.
Default value: 0.5 seconds.
.RE

.sp
.ne 2
.mk
.na
\fBretry_timer_max \fIinteger\fR or \fIfloat\fR
.ad
.sp .6
.RS 4n
The maximum interval (in seconds) between retransmits. The doubling
retransmit interval stops growing at this limit. Default value: 30
seconds.
.LP
Note -
.sp
.RS 2
This value is never reached with the default configuration. The longest
interval is 8 (0.5 * 2 ^ (5 - 1)) seconds.
.RE
.RE

.sp
.ne 2
.mk
.na
.BI "proxy " string
.ad
.sp .6
.RS 4n
The string following this keyword must be a URL for an HTTP proxy, for
example,
.BR http://proxy:8080 .
.RE

.sp
.ne 2
.mk
.na
.BI "socks " string
.ad
.sp .6
.RS 4n
The string following this keyword must be a URL for a SOCKS proxy, for
example,
.BR socks://socks-proxy .
.RE

.sp
.ne 2
.mk
.na
.B use_http
.ad
.sp .6
.RS 4n
If this keyword is present in the file,
.BR in.iked (1M)
uses HTTP to
retrieve Certificate Revocation Lists (\fBCRL\fRs).
.RE

.sp
.LP
The following IKE phase 1 transform parameters can be prefigured using
file-level defaults. Values specified within any given transform override
these defaults.
.sp
.LP
The IKE phase 1 transform defaults are as follows:
.sp
.ne 2
.mk
.na
\fBp1_lifetime_secs \fInum\fR
.ad
.sp .6
.RS 4n
The proposed default lifetime, in seconds, of an IKE phase 1 security
association
.RB ( SA ).
.RE

.sp
.ne 2
.mk
.na
.BI "p1_nonce_len " num
.ad
.sp .6
.RS 4n
The length in bytes of the phase 1 (quick mode) nonce data. This cannot be
specified on a per-rule basis.
.RE

.sp
.LP
The following IKE rule parameters can be prefigured using file-level
defaults. Values specified within any given rule override these defaults,
unless a rule cannot.
.sp
.ne 2
.mk
.na
\fBp2_lifetime_secs \fInum\fR
.ad
.sp .6
.RS 4n
The proposed default lifetime, in seconds, of an IKE phase 2 security
association (SA). This value is optional. If omitted, a default value is
used.
.RE

.sp
.ne 2
.mk
.na
\fBp2_softlife_secs \fInum\fR
.ad
.sp .6
.RS 4n
The soft lifetime of a phase 2 SA, in seconds. If this value is specified,
the SA soft expires after the number of seconds specified by
.BR p2_softlife_secs .
This causes
.B in.iked
to renegotiate a new phase
2 SA before the original SA expires.
.sp
This value is optional, if omitted soft expiry occurs after 90% of the
lifetime specified by
.BR p2_lifetime_secs .
The value specified by
.B p2_softlife_secs
is ignored if
.B p2_lifetime_secs
is not
specified.
.sp
Setting \fBp2_softlife_secs\fR to the same value as \fBp2_lifetime_secs\fR
disables soft expires.
.RE

.sp
.ne 2
.mk
.na
.BI "p2_idletime_secs " num
.ad
.sp .6
.RS 4n
The idle lifetime of a phase 2 SA, in seconds. If the value is specified,
the value specifies the lifetime of the SA, if the security association is
not used before the SA is revalidated.
.RE

.sp
.ne 2
.mk
.na
\fBp2_lifetime_kb \fInum\fR
.ad
.sp .6
.RS 4n
The lifetime of an SA can optionally be specified in kilobytes. This
parameter specifies the default value. If lifetimes are specified in both
seconds and kilobytes, the SA expires when either the seconds or kilobyte
threshholds are passed.
.RE

.sp
.ne 2
.mk
.na
\fBp2_softlife_kb \fInum\fR
.ad
.sp .6
.RS 4n
This value is the number of kilobytes that can be protected by an SA before
a soft expire occurs (see
.BR p2_softlife_secs ,
above).
.sp
This value is optional. If omitted, soft expiry occurs after 90% of the
lifetime specified by
.BR p2_lifetime_kb .
The value specified by
.B p2_softlife_kb
is ignored if
.B p2_lifetime_kb
is not specified.
.RE

.sp
.ne 2
.mk
.na
.BI "p2_nonce_len " num
.ad
.sp .6
.RS 4n
The length in bytes of the phase 2 (quick mode) nonce data. This cannot be
specified on a per-rule basis.
.RE

.sp
.ne 2
.mk
.na
.BI "local_id_type " p1-id-type
.ad
.sp .6
.RS 4n
The local identity for IKE requires a type. This identity type is reflected
in the IKE exchange. The type can be one of the following:
.RS +4
.TP
.ie t \(bu
.el o
an IP address (for example,
.BR 10.1.1.2 )
.RE
.RS +4
.TP
.ie t \(bu
.el o
DNS name (for example,
.BR test.domain.com )
.RE
.RS +4
.TP
.ie t \(bu
.el o
MBOX RFC 822 name (for example,
.BR root@domain.com )
.RE
.RS +4
.TP
.ie t \(bu
.el o
DNX.509 distinguished name (for example, \fBC=US, O=Sun Microsystems\e,
Inc., CN=Sun Test cert\fR)
.RE
.RE

.sp
.ne 2
.mk
.na
.B p1_xform '{' parameter-list '}
.ad
.sp .6
.RS 4n
A phase 1 transform specifies a method for protecting an IKE phase 1
exchange. An initiator offers up lists of phase 1 transforms, and a receiver
is expected to only accept such an entry if it matches one in a phase 1
rule. There can be several of these, and they are additive. There must be
either at least one phase 1 transform in a rule or a global default phase 1
transform list. In a configuration file without a global default phase 1
transform list
.B and
a rule without a phase, transform list is an
invalid file. Unless specified as optional, elements in the parameter-list
must occur exactly once within a given transform's parameter-list:
.sp
.ne 2
.mk
.na
.BI "oakley_group " number
.ad
.sp .6
.RS 4n
The Oakley Diffie-Hellman group used for IKE SA key derivation. The group
numbers are defined in RFC 2409, Appendix A, and RFC 3526. Acceptable values
are currently:
.br
.in +2
1 (768-bit)
.in -2
.br
.in +2
2 (1024-bit)
.in -2
.br
.in +2
5 (1536-bit)
.in -2
.br
.in +2
14 (2048-bit)
.in -2
.br
.in +2
15 (3072-bit)
.in -2
.br
.in +2
16 (4096-bit)
.in -2
.RE

.sp
.ne 2
.mk
.na
\fBencr_alg {3des, 3des-cbc, blowfish, blowfish-cdc, des, des-cbc, aes,
aes-cbc}\fR
.ad
.sp .6
.RS 4n
An encryption algorithm, as in \fBipsecconf\fR(1M). However, of the ciphers
listed above, only
.B aes
and
.B aes-cbc
allow optional key-size
setting, using the "low value-to-high value" syntax. To specify a single AES
key size, the low value must equal the high value. If no range is specified,
all three AES key sizes are allowed.
.RE

.sp
.ne 2
.mk
.na
.B "auth_alg {md5, sha, sha1, sha256, sha384, sha512}
.ad
.sp .6
.RS 4n
An authentication algorithm.
.sp
Use
.BR ipsecalgs "(1M) with the"
.B -l
option to list the IPsec
protocols and algorithms currently defined on a system. The \fBcryptoadm
list\fR command diplays a list of installed providers and their mechanisms.
See
.BR cryptoadm (1M).
.RE

.sp
.ne 2
.mk
.na
.B auth_method {preshared, rsa_sig, rsa_encrypt, dss_sig}
.ad
.sp .6
.RS 4n
The authentication method used for IKE phase 1.
.RE

.sp
.ne 2
.mk
.na
\fBp1_lifetime_secs \fInum\fR
.ad
.sp .6
.RS 4n
Optional. The lifetime for a phase 1 SA.
.RE

.RE

.sp
.ne 2
.mk
.na
\fBp2_lifetime_secs \fInum\fR
.ad
.sp .6
.RS 4n
If configuring the kernel defaults is not sufficient for different tasks,
.RB "this parameter can be used on a per-rule basis to set the IPsec" " SA"
lifetimes in seconds.
.RE

.sp
.ne 2
.mk
.na
\fBp2_pfs \fInum\fR
.ad
.sp .6
.RS 4n
Use perfect forward secrecy for phase 2 (quick mode). If selected, the
oakley group specified is used for phase 2 PFS. Acceptable values are:
.br
.in +2
0 (do not use Perfect Forward Secrecy for IPsec SAs)
.in -2
.br
.in +2
1 (768-bit)
.in -2
.br
.in +2
2 (1024-bit)
.in -2
.br
.in +2
5 (1536-bit)
.in -2
.br
.in +2
14 (2048-bit)
.in -2
.br
.in +2
15 (3072-bit)
.in -2
.br
.in +2
16 (4096-bit)
.in -2
.RE

.sp
.LP
An IKE rule starts with a right-curly-brace
.RB ( { ),
ends with a
left-curly-brace
.RB ( } ),
and has the following parameters in between:
.sp
.ne 2
.mk
.na
.BI "label " string
.ad
.sp .6
.RS 4n
Required parameter. The administrative interface to
.B in.iked
looks up
phase 1 policy rules with the label as the search string. The administrative
interface also converts the label into an index, suitable for an extended
ACQUIRE message from PF_KEY - effectively tying IPsec policy to IKE policy
in the case of a node initiating traffic. Only one
.B label
parameter is
allowed per rule.
.RE

.sp
.ne 2
.mk
.na
\fBlocal_addr <\fIIPaddr\fR/\fIprefix\fR/\fIrange\fR>\fR
.ad
.sp .6
.RS 4n
Required parameter. The local address, address prefix, or address range for
this phase 1 rule. Multiple
.B local_addr
parameters accumulate within a
given rule.
.RE

.sp
.ne 2
.mk
.na
\fBremote_addr <\fIIPaddr\fR/\fIprefix\fR/\fIrang\fRe>\fR
.ad
.sp .6
.RS 4n
Required parameter. The remote address, address prefix, or address range
for this phase 1 rule. Multiple
.B remote_addr
parameters accumulate
within a given rule.
.RE

.sp
.ne 2
.mk
.na
.BI "local_id_type " p1-id-type
.ad
.sp .6
.RS 4n
Which phase 1 identity type I uses. This is needed because a single
certificate can contain multiple values for use in IKE phase 1. Within a
given rule, all phase 1 transforms must either use preshared or
non-preshared authentication (they cannot be mixed). For rules with
preshared authentication, the
.B local_id_type
parameter is optional, and
defaults to
.BR IP .
For rules which use non-preshared authentication, the
\&'local_id_type' parameter is required. Multiple 'local_id_type' parameters
within a rule are not allowed.
.RE

.sp
.ne 2
.mk
.na
.BI "local_id " cert-sel
.ad
.sp .6
.RS 4n
Disallowed for preshared authentication method; required parameter for
non-preshared authentication method. The local identity string or
certificate selector. Only one local identity per rule is used, the first
one stated.
.RE

.sp
.ne 2
.mk
.na
.BI "remote_id " cert-sel
.ad
.sp .6
.RS 4n
Disallowed for preshared authentication method; required parameter for
non-preshared authentication method. Selector for which remote phase 1
identities are allowed by this rule. Multiple
.B remote_id
parameters
accumulate within a given rule. If a single empty string (\fB""\fR) is
given, then this accepts any remote
.B ID
for phase 1. It is recommended
that certificate trust chains or address enforcement be configured strictly
to prevent a breakdown in security if this value for
.B remote_id
is
used.
.RE

.sp
.ne 2
.mk
.na
\fBp2_lifetime_secs \fInum\fR
.ad
.sp .6
.RS 4n
If configuring the kernel defaults is not sufficient for different tasks,
.RB "this parameter can be used on a per-rule basis to set the IPsec" " SA"
lifetimes in seconds.
.RE

.sp
.ne 2
.mk
.na
\fBp2_pfs \fInum\fR
.ad
.sp .6
.RS 4n
Use perfect forward secrecy for phase 2 (quick mode). If selected, the
oakley group specified is used for phase 2 PFS. Acceptable values are:
.br
.in +2
0 (do not use Perfect Forward Secrecy for IPsec SAs)
.in -2
.br
.in +2
1 (768-bit)
.in -2
.br
.in +2
2 (1024-bit)
.in -2
.br
.in +2
5 (1536-bit)
.in -2
.br
.in +2
14 (2048-bit)
.in -2
.br
.in +2
15 (3072-bit)
.in -2
.br
.in +2
16 (4096-bit)
.in -2
.RE

.sp
.ne 2
.mk
.na
\fBp1_xform \fB{\fR \fIparameter-list\fR \fB}\fR
.ad
.sp .6
.RS 4n
A phase 1 transform specifies a method for protecting an IKE phase 1
exchange. An initiator offers up lists of phase 1 transforms, and a receiver
is expected to only accept such an entry if it matches one in a phase 1
rule. There can be several of these, and they are additive. There must be
either at least one phase 1 transform in a rule or a global default phase 1
transform list. A
.B ike.config
file without a global default phase
1transform list
.B and
a rule without a phase 1 transform list is an
invalid file. Elements within the parameter-list; unless specified as
optional, must occur exactly once within a given transform's parameter-list:

.sp
.ne 2
.mk
.na
.BI "oakley_group " number
.ad
.sp .6
.RS 4n
The Oakley Diffie-Hellman group used for
.B "IKE SA"
key derivation.
Acceptable values are currently:
.br
.in +2
1 (768-bit)
.in -2
.br
.in +2
2 (1024-bit)
.in -2
.br
.in +2
5 (1536-bit)
.in -2
.br
.in +2
14 (2048-bit)
.in -2
.br
.in +2
15 (3072-bit)
.in -2
.br
.in +2
16 (4096-bit)
.in -2
.RE

.sp
.ne 2
.mk
.na
\fBencr_alg {3des, 3des-cbc, blowfish, blowfish-cdc, des, des-cbc, aes,
aes-cbc}\fR
.ad
.sp .6
.RS 4n
An encryption algorithm, as in \fBipsecconf\fR(1M). However, of the ciphers
listed above, only
.B aes
and
.B aes-cbc
allow optional key-size
setting, using the "low value-to-high value" syntax. To specify a single AES
key size, the low value must equal the high value. If no range is specified,
all three AES key sizes are allowed.
.RE

.sp
.ne 2
.mk
.na
.B auth_alg {md5, sha, sha1}
.ad
.sp .6
.RS 4n
An authentication algorithm, as specified in
.BR ipseckey (1M).
.RE

.sp
.ne 2
.mk
.na
.B auth_method {preshared, rsa_sig, rsa_encrypt, dss_sig}
.ad
.sp .6
.RS 4n
The authentication method used for IKE phase 1.
.RE

.sp
.ne 2
.mk
.na
\fBp1_lifetime_secs \fInum\fR
.ad
.sp .6
.RS 4n
Optional. The lifetime for a phase 1 SA.
.RE

.RE

.SH EXAMPLES
.LP
.B Example 1
A Sample
.B ike.config
File
.sp
.LP
The following is an example of an
.B ike.config
file:

.sp
.in +2
.nf

### BEGINNING OF FILE

### First some global parameters...

### certificate parameters...

# Root certificates. I SHOULD use a full Distinguished Name.
# I must have this certificate in my local filesystem, see ikecert(1m).
cert_root    "C=US, O=Sun Microsystems\e, Inc., CN=Sun CA"

# Explicitly trusted certs that need no signatures, or perhaps
# self-signed ones. Like root certificates, use full DNs for them
# for now.
cert_trust    "EMAIL=root@domain.org"

# Where do I send LDAP requests?
ldap_server        "ldap1.domain.org,ldap2.domain.org:389"

## phase 1 transform defaults...

p1_lifetime_secs 14400
p1_nonce_len 20

## Parameters that might also show up in rules.

p1_xform { auth_method preshared oakley_group 5 auth_alg sha
          encr_alg 3des }
p2_pfs 2



### Now some rules...

{
   label "simple inheritor"
   local_id_type ip
   local_addr 10.1.1.1
   remote_addr 10.1.1.2
}
{
   label "simple inheritor IPv6"
   local_id_type ipv6
   local_addr fe80::a00:20ff:fe7d:6
   remote_addr fe80::a00:20ff:fefb:3780
}

{
   # an index-only rule.  If I'm a receiver, and all I
   # have are index-only rules, what do I do about inbound IKE requests?
   # Answer:  Take them all!

   label "default rule"
   # Use whatever "host" (e.g. IP address) identity is appropriate
   local_id_type ipv4

   local_addr 0.0.0.0/0
   remote_addr 0.0.0.0/0

   p2_pfs 5

   # Now I'm going to have the p1_xforms
   p1_xform
   {auth_method preshared  oakley_group 5  auth_alg md5  encr_alg \e
    blowfish }   p1_xform
   {auth_method preshared  oakley_group 5  auth_alg md5  encr_alg 3des }

   # After said list, another keyword (or a '}') stops xform
   # parsing.
}

{
   # Let's try something a little more conventional.

   label "host to .80 subnet"
   local_id_type ip
   local_id "10.1.86.51"

   remote_id ""    # Take any, use remote_addr for access control.

   local_addr 10.1.86.51
   remote_addr 10.1.80.0/24

   p1_xform
   { auth_method rsa_sig  oakley_group 5  auth_alg md5  encr_alg 3des }
   p1_xform
   { auth_method rsa_sig  oakley_group 5  auth_alg md5  encr_alg \e
     blowfish }
   p1_xform
   { auth_method rsa_sig  oakley_group 5  auth_alg sha1  encr_alg 3des }
   p1_xform
   { auth_method rsa_sig  oakley_group 5  auth_alg sha1  encr_alg \e
     blowfish }
}

{
   # Let's try something a little more conventional, but with ipv6.

    label "host to fe80::/10 subnet"
    local_id_type ip
    local_id "fe80::a00:20ff:fe7d:6"

    remote_id ""    # Take any, use remote_addr for access control.

    local_addr fe80::a00:20ff:fe7d:6
    remote_addr fe80::/10

    p1_xform
    { auth_method rsa_sig  oakley_group 5  auth_alg md5  encr_alg 3des }
    p1_xform
    { auth_method rsa_sig  oakley_group 5  auth_alg md5  encr_alg \e
      blowfish }
    p1_xform
    { auth_method rsa_sig  oakley_group 5  auth_alg sha1  encr_alg \e
      3des }
    p1_xform
    { auth_method rsa_sig  oakley_group 5  auth_alg sha1  encr_alg \e
      blowfish }
}

{
    # How 'bout something with a different cert type and name?

    label "punchin-point"
    local_id_type mbox
    local_id "ipsec-wizard@domain.org"

    remote_id "10.5.5.128"

    local_addr 0.0.0.0/0
    remote_addr 10.5.5.128

    p1_xform
    { auth_method rsa_sig oakley_group 5 auth_alg md5 encr_alg \e
      blowfish }
}

{
   label "receiver side"

   remote_id "ipsec-wizard@domain.org"

   local_id_type ip
   local_id "10.5.5.128"

   local_addr 10.5.5.128
   remote_addr 0.0.0.0/0

   p1_xform
   { auth_method rsa_sig oakley_group 5 auth_alg md5 encr_alg blowfish }
   # NOTE:  Specifying preshared null-and-voids the remote_id/local_id
   #        fields.
   p1_xform
   { auth_method preshared oakley_group 5 auth_alg md5 encr_alg \e
     blowfish}

}
.fi
.in -2

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcsr
_
Interface StabilityCommitted
.TE

.SH SEE ALSO
.sp
.LP
.BR cryptoadm (1M),
.BR ikeadm (1M),
.BR in.iked (1M),
.BR ikecert (1M),
.BR ipseckey (1M),
.BR ipsecalgs (1M),
.BR ipsecconf (1M),
.BR svccfg (1M),
.BR dlopen (3C),
.BR attributes (5),
.BR random (7D)
.sp
.LP
Harkins, Dan and Carrel, Dave.
.IR "RFC 2409, Internet Key Exchange (IKE)" .
Cisco Systems, November 1998.
.sp
.LP
Maughan, Douglas et. al. \fIRFC 2408, Internet Security Association and Key
Management Protocol (ISAKMP)\fR. National Security Agency, Ft. Meade, MD.
November 1998.
.sp
.LP
Piper, Derrell. \fIRFC 2407, The Internet IP Security Domain of
Interpretation for ISAKMP\fR. Network Alchemy. Santa Cruz, California.
November 1998.
.sp
.LP
Kivinen, T. \fIRFC 3526, More Modular Exponential (MODP) Diffie-Hellman
Groups for Internet Key Exchange (IKE)\fR. The Internet Society, Network
Working Group. May 2003.
