'\" te
.\" Copyright (c) 2003, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright 1989 AT&T
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH ypfiles 4 "24 Nov 2003" "SunOS 5.11" "File Formats"
.SH NAME
ypfiles \- Network Information Service Version 2, formerly knows as YP
.SH DESCRIPTION
.sp
.LP
The NIS network information service uses a distributed, replicated database
of
.B dbm
files , in ASCII form, that are contained in the \fB/var/yp\fR
directory hierarchy on each NIS server.
.sp
.LP
A
.B dbm
database served by the NIS server is called a NIS
.IR map .
A
NIS
.I domain
is a subdirectory of
.B /var/yp
that contains a set of
NIS maps on each NIS server.
.sp
.LP
Standard nicknames are defined in the file
.BR /var/yp/nicknames .
These
names can be used in place of the full map name in the
.B ypmatch
and
\fBypcat\fR commands. Use the command \fBypwhich -x\fR to display the
current set of nicknames. Use the command
.B "ypwhich -m"
to display
all the available maps. Each line of the nickname file contains two fields
separated by white space. The first field is the nickname, and the second
field is the name of the map that it expands to. The nickname cannot contain
a ".".
.SS "NIS to LDAP (N2L)"
.sp
.LP
If the
.B /var/yp/NISLDAPmapping
configuration file is present, the NIS
server operates in NIS to LDAP (N2L) mode. In this mode, NIS maps are stored
in a new set of DBM files, prepended by the
.B LDAP_
prefix, at
\fB/var/yp/\fIdomainename\fR. These files are used as a cache backed by
information from an LDAP server. Additional DBM files are created in the
same directory to hold the cache's TTL values.
.sp
.LP
N2L mode enables NIS clients to be supported in an LDAP environment.
.sp
.LP
In N2L mode, the old style DBM files, NIS source files, and the
.BR ypmake (1M)
utility have to role. They are retained to enable easy
conversion back to the traditional mode, if required.
.SS "Converting from N2L to Traditional NIS"
.sp
.LP
When NIS is operating in N2L mode, it uses a new set of NIS maps with an
\fBLDAP_\fR prefix, based on the contents of the LDAP DIT. The NIS source
files are unused and become out of date. If you wish to convert back to the
traditional NIS mode, the N2L configuration file should be deleted. The
system will then return to using the standard map files. Optionally, the N2L
mode map files,
.B /var/yp/*/LDAP_*
can also be deleted.
.sp
.LP
If you want to run the system in traditional mode with information based on
the DIT, then the NIS source files must be regenerated based on the N2L
maps. To regenerate the NIS source files based on the N2L maps, run
.BR ypmap2src (1M).
.SS "NIS+"
.sp
.LP
NIS+ also provides a NIS service when it runs in YP-compatibility mode. See
.BR NIS+ (1)
and
.BR rpc.nisd "(1M). NIS+, in any mode, cannot be run on"
the same system as
.BR ypserv ,
whether
.B ypserv
is in traditional or
N2L mode.
.SH FILES
.sp
.ne 2
.mk
.na
.B /var/yp
.ad
.sp .6
.RS 4n
Directory containing NIS configuration files.
.RE

.sp
.ne 2
.mk
.na
.B /var/yp/binding
.ad
.sp .6
.RS 4n
Stores the information required to bind the NIS client to the NIS server.
.RE

.sp
.ne 2
.mk
.na
\fB/var/yp/binding/\fIypdomain\fR/ypservers\fR
.ad
.sp .6
.RS 4n
Contains the servers to which the NIS client is allowed to bind.
.RE

.sp
.ne 2
.mk
.na
\fB/var/yp/Makefile\fR
.ad
.sp .6
.RS 4n
Builds the NIS
.B ndbm
databases.
.RE

.sp
.ne 2
.mk
.na
.B /var/yp/nicknames
.ad
.sp .6
.RS 4n
Nicknames file.
.RE

.sp
.ne 2
.mk
.na
.B /var/yp/securenets
.ad
.sp .6
.RS 4n
Defines the hosts and networks that are granted access to information in
the served domain. This file is read at startup time by
.B ypserv
and
.BR ypxfrd .
.RE

.sp
.ne 2
.mk
.na
\fB/var/yp/\fIypdomain\fR
.ad
.sp .6
.RS 4n
Directory containing
.B ndbm
databases.
.RE

.sp
.ne 2
.mk
.na
.B /var/yp/NISLDAPmapping
.ad
.sp .6
.RS 4n
NIS to LDAP configuration file
.RE

.sp
.ne 2
.mk
.na
.B /var/yp/*/LDAP_*
.ad
.sp .6
.RS 4n
NIS to LDAP mode map files
.RE

.SH SEE ALSO
.sp
.LP
.BR ldap (1),
.BR NIS+ (1),
.BR makedbm (1M),
.BR nisaddent (1M),
.BR nissetup (1M),
.BR rpc.nisd (1M),
.BR ypbind (1M),
.BR ypinit (1M),
.BR ypmake (1M),
.BR ypmap2src (1M),
.BR ypserv (1M),
.BR ypxfrd (1M),
.BR ndbm (3C),
.BR ypclnt (3NSL)
.SH NOTES
.sp
.LP
The NIS+ server, \fBrpc.nisd,\fR when run in "YP-compatibility mode", can
support NIS clients only for the standard NIS maps listed below, provided
that it has been set up to serve the corresponding NIS+ tables using
.BR nissetup (1M)
and
.BR nisaddent "(1M). The NIS+ server should serve the"
directory with the same name (case sensitive) as the domainname of the NIS
client. NIS+ servers use secure RPC to verify client credentials but the NIS
clients do not authenticate their requests using secure RPC. Therefore, NIS
clients can look up the information stored by the NIS+ server only if the
information has "read" access for an unauthenticated client, that is, one
with
.B nobody
NIS+ credentials.
.sp
.ne 2
.mk
.na
.B NIS maps
.ad
.RS 26n
.rt
 \fBNIS+ tables\fR
.RE

.sp
.ne 2
.mk
.na
.B passwd.byname
.ad
.RS 26n
.rt
.B passwd.org_dir
.RE

.sp
.ne 2
.mk
.na
.B passwd.byuid
.ad
.RS 26n
.rt
.B passwd.org_dir
.RE

.sp
.ne 2
.mk
.na
.B group.byname
.ad
.RS 26n
.rt
.B group.org_dir
.RE

.sp
.ne 2
.mk
.na
.B group.bygid
.ad
.RS 26n
.rt
.B group.org_dir
.RE

.sp
.ne 2
.mk
.na
.B publickey.byname
.ad
.RS 26n
.rt
.B cred.org_dir
.RE

.sp
.ne 2
.mk
.na
.B hosts.byaddr
.ad
.RS 26n
.rt
.B hosts.org_dir
.RE

.sp
.ne 2
.mk
.na
.B hosts.byname
.ad
.RS 26n
.rt
.B hosts.org_dir
.RE

.sp
.ne 2
.mk
.na
.B mail.byaddr
.ad
.RS 26n
.rt
.B mail_aliases.org_dir
.RE

.sp
.ne 2
.mk
.na
.B mail.aliases
.ad
.RS 26n
.rt
.B mail_aliases.org_dir
.RE

.sp
.ne 2
.mk
.na
.B services.byname
.ad
.RS 26n
.rt
.B services.org_dir
.RE

.sp
.ne 2
.mk
.na
.B services.byservicename
.ad
.RS 26n
.rt
.B services.org_dir
.RE

.sp
.ne 2
.mk
.na
.B rpc.bynumber
.ad
.RS 26n
.rt
.B rpc.org_dir
.RE

.sp
.ne 2
.mk
.na
.B rpc.byname
.ad
.RS 26n
.rt
.B rpc.org_dir
.RE

.sp
.ne 2
.mk
.na
.B protocols.bynumber
.ad
.RS 26n
.rt
.B protocols.org_dir
.RE

.sp
.ne 2
.mk
.na
.B protocols.byname
.ad
.RS 26n
.rt
.B protocols.org_dir
.RE

.sp
.ne 2
.mk
.na
.B networks.byaddr
.ad
.RS 26n
.rt
.B networks.org_dir
.RE

.sp
.ne 2
.mk
.na
.B networks.byname
.ad
.RS 26n
.rt
.B networks.org_dir
.RE

.sp
.ne 2
.mk
.na
.B netmasks.byaddr
.ad
.RS 26n
.rt
.B netmasks.org_dir
.RE

.sp
.ne 2
.mk
.na
.B ethers.byname
.ad
.RS 26n
.rt
.B ethers.org_dir
.RE

.sp
.ne 2
.mk
.na
.B ethers.byaddr
.ad
.RS 26n
.rt
.B ethers.byname
.RE

.sp
.ne 2
.mk
.na
.B bootparams
.ad
.RS 26n
.rt
.B bootparams
.RE

.sp
.ne 2
.mk
.na
.B auto.master
.ad
.RS 26n
.rt
.B auto_master.org_dir
.RE

.sp
.ne 2
.mk
.na
.B auto.home
.ad
.RS 26n
.rt
.B auto_home.org_dir
.RE

.sp
.ne 2
.mk
.na
.B auto.direct
.ad
.RS 26n
.rt
.B auto_direct.org_dir
.RE

.sp
.ne 2
.mk
.na
.B auto.src
.ad
.RS 26n
.rt
.B auto_src.org_dir
.RE

