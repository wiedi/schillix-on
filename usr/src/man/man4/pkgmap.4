'\" te
.\" Copyright 1989 AT&T
.\" Copyright (c) 2004, Sun Microsystems, Inc. All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH pkgmap 4 "12 Jul 2006" "SunOS 5.11" "File Formats"
.SH NAME
pkgmap \- package contents description file
.SH DESCRIPTION
.sp
.LP
.B pkgmap
is an
.B ASCII
file that provides a complete listing of the
package contents. It is automatically generated by
.BR pkgmk (1)
using the
information in the
.BR prototype (4)
file.
.sp
.LP
Each entry in
.B pkgmap
describes a single ``deliverable object file.''
A deliverable object file includes shell scripts, executable objects, data
files, directories, and so forth. The entry consists of several fields of
information, each field separated by a space. The fields are described below
and must appear in the order shown.
.sp
.ne 2
.mk
.na
.I part
.ad
.RS 12n
.rt
An optional field designating the part number in which the object resides.
A part is a collection of files and is the atomic unit by which a package is
processed. A developer can choose the criteria for grouping files into a
part (for example, based on class). If no value is defined in this field,
part 1 is assumed.
.RE

.sp
.ne 2
.mk
.na
.I ftype
.ad
.RS 12n
.rt
A one-character field that indicates the file type. Valid values are listed
below. File types are divided between those that are not to be modified and
those that are modifiable.
.sp
Files of the following types must never be modified:
.sp
.ne 2
.mk
.na
.B b
.ad
.RS 5n
.rt
block special device
.RE

.sp
.ne 2
.mk
.na
.B c
.ad
.RS 5n
.rt
character special device
.RE

.sp
.ne 2
.mk
.na
.B d
.ad
.RS 5n
.rt
directory
.RE

.sp
.ne 2
.mk
.na
.B f
.ad
.RS 5n
.rt
a standard executable file, data file, or other type of file, the contents
of which must never be modified.
.RE

.sp
.ne 2
.mk
.na
.B i
.ad
.RS 5n
.rt
information file (such as a file containing a copyright, list of
dependencies, or package information) or installation script (such as
checkinstall, class action [\fBi.\fR], pre/post install/remove), the
contents of which must never be modified.
.RE

.sp
.ne 2
.mk
.na
.B l
.ad
.RS 5n
.rt
linked file
.RE

.sp
.ne 2
.mk
.na
.B p
.ad
.RS 5n
.rt
named pipe
.RE

.sp
.ne 2
.mk
.na
.B s
.ad
.RS 5n
.rt
symbolic link
.RE

.sp
.ne 2
.mk
.na
.B x
.ad
.RS 5n
.rt
an exclusive directory accessible only by this package
.RE

Files of the following types can be modified:
.sp
.ne 2
.mk
.na
.B e
.ad
.RS 5n
.rt
An editable file, intended to be edited (selectively modified) after
installation. An editable file is expected to change on installation or
removal, can be shared by several packages, and must be installed by a class
action script. Examples are a configuration file or a list of users.
.RE

.sp
.ne 2
.mk
.na
.B v
.ad
.RS 5n
.rt
A volatile file, intended to be overwritten or appended to after
installation. A volatile file is not expected to change on installation or
removal, is not preserved between installations, and can be installed by a
class action script. Examples are a log file or a lock file.
.RE

Following package installation, the contents of files of all types except
.B e
and
.B v
must not change. Any file that is subject to change
should be marked as
.B e
or
.BR v .
.RE

.sp
.ne 2
.mk
.na
.I class
.ad
.RS 12n
.rt
The installation class to which the file belongs. This name must contain
only alphanumeric characters and be no longer than 12 characters. It is not
specified if the \fIftype\fR is \fBi\fR (information file).
.RE

.sp
.ne 2
.mk
.na
.I pathname
.ad
.RS 12n
.rt
\fIpathname\fR may contain variables of the form \fB$\fIvariable\fR that
support install-time configuration of the file.
.I variable
may be
embedded in the pathname structure. (See
.BR prototype (4)
for definitions
of variable specifications.)
.sp
Do not use the following reserved words in
.IR pathname ,
since they are
applied by \fBpkgadd\fR(1M) using a different mechanism:
.sp
.in +2
.nf
PKG_INSTALL_ROOT
BASEDIR
CLIENT_BASEDIR
.fi
.in -2
.sp

.RE

.sp
.ne 2
.mk
.na
.I major
.ad
.RS 12n
.rt
The major device number. The field is only specified for block or character
special devices.
.RE

.sp
.ne 2
.mk
.na
.I minor
.ad
.RS 12n
.rt
The minor device number. The field is only specified for block or character
special devices.
.RE

.sp
.ne 2
.mk
.na
.I mode
.ad
.RS 12n
.rt
The octal mode of the file (for example, 0664). A question mark (\fB?\fR)
indicates that the mode will be left unchanged, implying that the file
already exists on the target machine. This field is not used for linked
files, packaging information files, or non-installable files.
.sp
The mode can contain a variable specification. (See
.BR prototype (4)
for
definitions of variable specifications.)
.RE

.sp
.ne 2
.mk
.na
.I owner
.ad
.RS 12n
.rt
The owner of the file (for example,
.B bin
or
.BR root ).
The field is
limited to 14 characters in length. A question mark (\fB?\fR) indicates that
the owner will be left unchanged or changed to the owner stored in the
package database, which could be different from what is on the file system.
When the question mark is used, it implies that the file is already on the
file system. This field is not used for linked files or non-installable
files. It is used optionally with a package information file. If used, it
indicates with what owner an installation script will be executed.
.sp
The owner can contain a variable specification. (See
.BR prototype (4)
for
definitions of variable specifications.)
.RE

.sp
.ne 2
.mk
.na
.I group
.ad
.RS 12n
.rt
The group to which the file belongs (for example,
.B bin
or
.BR sys ).
The field is limited to 14 characters in length. A question mark (\fB?\fR)
indicates that the group will be left unchanged or changed to the owner
stored in the package database, which could be different from what is on the
file system. When the question mark is used, it implies that the file is
already on the file system. This field is not used for linked files or
non-installable files. It is used optionally with a package information
file. If used, it indicates with what group an installation script will be
executed.
.sp
The group can contain a variable specification. (See
.BR prototype (4)
for
definitions of variable specifications.)
.RE

.sp
.ne 2
.mk
.na
.I size
.ad
.RS 12n
.rt
The actual size of the file in bytes. This field is not specified for named
pipes, special devices, directories or linked files.
.RE

.sp
.ne 2
.mk
.na
.I cksum
.ad
.RS 12n
.rt
The checksum of the file contents. This field is not specified for named
pipes, special devices, directories, or linked files.
.RE

.sp
.ne 2
.mk
.na
.I modtime
.ad
.RS 12n
.rt
The time of last modification, as reported by the
.BR stat (2)
function
call. This field is not specified for named pipes, special devices,
directories, or linked files.
.RE

.sp
.LP
Each
.B pkgmap
file must have one line that provides information about
the number of parts, maximum size of parts that make up the package, and,
optionally, the size of the package after compression (where size is given
in 512-byte blocks). This line is in the following format:
.sp
.LP
.B :
.I number_of_parts maximum_part_size
.I compressed_pkg_size
.sp
.LP
Lines that begin with ``\fB#\fR'' are comment lines and are ignored.
.sp
.LP
When files are saved during installation before they are overwritten, they
are normally just copied to a temporary pathname. However, for files whose
mode includes execute permission (but which are not editable), the existing
version is linked to a temporary pathname and the original file is removed.
This allows processes which are executing during installation to be
overwritten.
.SH EXAMPLES
.LP
.B Example 1
A Sample
.B pkgmap
File
.sp
.in +2
.nf
\fB: 2 500
1 i pkginfo 237 1179 541296672
1 b class1 /dev/diskette 17 134 0644 root other
1 c class1 /dev/rdiskette 17 134 0644 root other
1 d none bin 0755 root bin
1 f none bin/INSTALL 0755 root bin 11103 17954 541295535
1 f none bin/REMOVE 0755 root bin 3214 50237 541295541
1 l none bin/UNINSTALL=bin/REMOVE
1 f none bin/cmda 0755 root bin 3580 60325 541295567
1 f none bin/cmdb 0755 root bin 49107 51255 541438368
1 f class1 bin/cmdc 0755 root bin 45599 26048 541295599
1 f class1 bin/cmdd 0755 root bin 4648 8473 541461238
1 f none bin/cmde 0755 root bin 40501 1264 541295622
1 f class2 bin/cmdf 0755 root bin 2345 35889 541295574
1 f none bin/cmdg 0755 root bin 41185 47653 541461242
2 d class2 data 0755 root bin
2 p class1 data/apipe 0755 root other
2 d none log 0755 root bin
2 v none log/logfile 0755 root bin 41815 47563 541461333
2 d none save 0755 root bin
2 d none spool 0755 root bin
2 d none tmp 0755 root bin\fR
.fi
.in -2
.sp

.SH SEE ALSO
.sp
.LP
.BR pkgmk (1),
.BR pkgadd (1M),
.BR stat (2),
.BR pkginfo (4),
.BR prototype (4)
.sp
.LP
\fIApplication Packaging Developer\&'s Guide\fR
.SH NOTES
.sp
.LP
The
.B pkgmap
file may contain only one entry per unique pathname.
