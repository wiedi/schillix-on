'\" te
.\" Copyright (c) 2008, Sun Microsystems, Inc. All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mmsclient_script 4 "10 Jul 2008" "SunOS 5.11" "File Formats"
.SH NAME
mmsclient_script \- script file for mmsclient program
.SH SYNOPSIS
.LP
.nf
\fBmmsclient_script\fR
.fi

.SH DESCRIPTION
.sp
.LP
This man page describes the syntax of the script file that is driven by the
.BR mmsclient (1M)
utility. This file contains a list of Media Management
Protocol (MMP) commands that are used to communicate with a Media Management
server.
.sp
.LP
The MMP and the commands in the script file are based, in part,  on IEEE
1244, the Media Management System (MMS) standards.
.sp
.LP
In the script file, each MMP command must start with one of the following
symbols as the first character:
.sp
.ne 2
.mk
.na
.B #
Comment character\fR
.ad
.sp .6
.RS 4n
Indicates the following characters document the file or command. Any
character following the
.B #
character on the same line is ignored.
.RE

.sp
.ne 2
.mk
.na
.B @
Async command\fR
.ad
.sp .6
.RS 4n
Indicates that the command on the next line is sent in async mode. Any
character following the
.B @
character on the same line is ignored. The
MMP command to be performed must start on the next line. Commands that are
not preceded with the
.B @
character are sent in sync mode, that is, the
.B mmsclient
command waits for a response before continuing to the next
MMP command in the file.
.RE

.sp
.ne 2
.mk
.na
.B $
Sync point\fR
.ad
.sp .6
.RS 4n
Forces the
.B mmsclient
command to wait for a response to a  previous
async command. For example, if the script contained an async  command such
as:
.sp
.in +2
.nf
@task["Get volume Names"]
.fi
.in -2
.sp

\&.\|.\|.a subsequent command:
.sp
.in +2
.nf
$Get volume Names
.fi
.in -2
.sp

\&.\|.\|.stops the script until the volume names are retrieved.
.RE

.sp
.ne 2
.mk
.na
.B >
Interactive MMP prompt\fR
.ad
.sp .6
.RS 4n
Displays a prompt on the display device and pauses the script. To respond
to the prompt, type the requested information, ending with the semicolon
(\fB;\fR) character. The \fBmmsclient\fR utility then sends the information
to the MMS server. To skip the MMP prompt, type the
.B q
character.
.RE

.sp
.ne 2
.mk
.na
.B %
Pause the script\fR
.ad
.sp .6
.RS 4n
The script stops until you press the Enter key.
.RE

.sp
.ne 2
.mk
.na
.B !
Execute a command\fR
.ad
.sp .6
.RS 4n
The
.B mmsclient
utility issues a call to
.BR system "(3C) to invoke a"
command. Whatever command follows
.B !
is run in the shell in which
.B mmsclient
is run. For example:
.sp
.in +2
.nf
! date
.fi
.in -2
.sp

See the shell commands in the example script below.
.RE

.SH EXAMPLES
.LP
.B Example 1
Example Script
.sp
.LP
The following script,
.BR demo_example ,
demonstrates the special
characters and some MMP commands. It is executed with default values when
the command:

.sp
.in +2
.nf
# \fBmmsclient -f demo _example\fR
.fi
.in -2
.sp

.sp
.LP
\&.\|.\|.is run.

.sp
.in +2
.nf
#mmsclient example script

#Send show commands in sync mode
show task["sync show command 1"]
report[DM] reportmode[namevalue]
number[1..2];

show task["sync show command 2"]
report[LM LIBRARY] reportmode[namevalue]
number[1..2];

#Pause the script and wait for someone to
#press Enter to continue
%

#send show commands in async mode
@
show task["async show command 1"]
report[DRIVE] reportmode[namevalue]
number[1..2];

@
show task["async show command 2"]
report[CARTRIDGE VOLUME] reportmode[namevalue]
number[1..2];

#set a sync point for the second async command,
#to stop the script until the response is complete
$async show command 2

#set a sync point for an unsent command and set
#a sync pont for a command  that has already received a response.
#mmsclient does not stop for either one

$sync show command 1


#Start interactive MMP prompt.
#To continue, enter an MMP command or 'q'
>
#Register for a some events
notify task["notify test3"]
receive[tag["client connected"]
object[CONNECTION] action["add"]
match[streq(CONNECTION."Language" "MMP")]]
receive[tag["client disconnected"]
object[CONNECTION] action["delete"]
match[streq(CONNECTION."Language" "MMP")]]
receive[tag["DM connected"]
object[CONNECTION] action["add"]
match[streq(CONNECTION."Language" "DMP")]]
receive[tag["DM disconnected"]
object[CONNECTION] action["delete"]
match[streq(CONNECTION."Language" "DMP")]]
receive[tag["LM connected"]
object[CONNECTION] action["add"]
match[streq(CONNECTION."Language" "LMP")]]
receive[tag["LM disconnected"]
object[CONNECTION] action["delete"]
match[streq(CONNECTION."Language" "LMP")]]
;

#Pause the script
#Connect another mmsclient to see some events
#Press Enter key to continue
%

notify task["delete all CONNECTION events"]
cancel[object[CONNECTION]];

#Pause the script and wait.
#Connect another mmsclient to verify the events are cancelled.
#Press Enter key to continue
%

#Execute some simple shell commands
!echo Hello World
!uname -a
!hostname

#Pause the script and wait.
#Press Enter key to continue
%

#Send last command in async mode.
#mmsclient does not exit until it receives the responses
#for all pending commmands.
@
show task["async show command 3"]
report[APPLICATION] reportmode[namevalue];
@
show task["async show command 4"]
report[AI] reportmode[namevalue];
.fi
.in -2
.sp

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWmmsu
_
Interface StabilityVolatile
.TE

.SH SEE ALSO
.sp
.LP
.BR mmsadm (1M),
.BR mmsclient (1M),
.BR mmsexplorer (1M),
.BR mmsinit (1M),
.BR system (3C),
.BR attributes (5)
.sp
.LP
IEEE 1244,
.IR "IEEE Storage Systems Standards" ,
a set of MMS standards
