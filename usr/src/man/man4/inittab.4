'\" te
.\" Copyright (c) 2001 Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" Copyright 1989 AT&T
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH inittab 4 "9 Dec 2004" "SunOS 5.11" "File Formats"
.SH NAME
inittab \- script for init
.SH DESCRIPTION
.sp
.LP
The
.B /etc/inittab
file controls process dispatching by
.BR init .
The
processes most typically dispatched by
.B init
are daemons.
.sp
.LP
It is no longer necessary to edit the
.B /etc/inittab
file directly.
Administrators should use the Solaris Service Management Facility (SMF) to
define services instead. Refer to
.BR smf (5)
and the \fISystem
Administration Guide: Basic Administration\fR for more information on SMF.
.sp
.LP
To modify parameters passed to \fBttymon\fR(1M), use \fBsvccfg\fR(1M) to
modify the SMF repository. See \fBttymon\fR(1M) for details on the available
SMF properties.
.sp
.LP
The
.B inittab
file is composed of entries that are position dependent
and have the following format:
.sp
.LP
\fIid\fB:\fIrstate\fB:\fIaction\fB:\fIprocess\fR
.sp
.LP
Each entry is delimited by a newline; however, a backslash (\e) preceding a
newline indicates a continuation of the entry. Up to 512 characters for each
entry are permitted. Comments may be inserted in the
.I process
field
using the convention for comments described in
.BR sh (1).
There are no
limits (other than maximum entry size) imposed on the number of entries in
the
.B inittab
file. The entry fields are:
.sp
.ne 2
.mk
.na
.I id
.ad
.RS 11n
.rt
One to four characters used to uniquely identify an entry. Do not use the
characters "r" or "t" as the first or only character in this field. These
characters are reserved for the use of
.BR rlogin (1)
and
.BR telnet (1).
.RE

.sp
.ne 2
.mk
.na
.I rstate
.ad
.RS 11n
.rt
Define the run level in which this entry is to be processed. Run-levels
effectively correspond to a configuration of processes in the system. That
is, each process spawned by
.B init
is assigned a run level(s) in which it
is allowed to exist. The run levels are represented by a number ranging from
.B 0
through
.BR 6 .
For example, if the system is in run level
.BR 1 ,
only those entries having a
.B 1
in the
.I rstate
field are
processed.
.sp
When
.B init
is requested to change run levels, all processes that do not
have an entry in the
.I rstate
field for the target run level are sent the
warning signal
.B SIGTERM
and allowed a 5-second grace period before being
forcibly terminated by the kill signal
.BR SIGKILL .
The
.I rstate
field
can define multiple run levels for a process by selecting more than one run
level in any combination from
.B 0
through
.BR 6 .
If no run level is
specified, then the process is assumed to be valid at all run levels \fB0\fR
through
.BR 6 .
.sp
There are three other values,
.BR a ,
.B b
and
.BR c ,
which can appear
in the
.I rstate
field, even though they are not true run levels. Entries
which have these characters in the
.I rstate
field are processed only when
an
.B init
or
.B telinit
process requests them to be run (regardless of
the current run level of the system). See \fBinit\fR(1M). These differ from
run levels in that
.B init
can never enter run level
.BR a ,
.B b
or
.BR c .
Also, a request for the execution of any of these processes does not
change the current run level. Furthermore, a process started by an
.BR a ,
.B b
or
.B c
command is not killed when
.B init
changes levels. They
are killed only if their line in
.B inittab
is marked
.B off
in the
.I action
field, their line is deleted entirely from
.BR inittab ,
or
.B init
goes into single-user state.
.RE

.sp
.ne 2
.mk
.na
.I action
.ad
.RS 11n
.rt
Key words in this field tell
.B init
how to treat the process specified
in the
.I process
field. The actions recognized by
.B init
are as
follows:
.sp
.ne 2
.mk
.na
.B respawn
.ad
.RS 13n
.rt
If the process does not exist, then start the process; do not wait for its
termination (continue scanning the
.B inittab
file), and when the process
dies, restart the process. If the process currently exists, do nothing and
continue scanning the
.B inittab
file.
.RE

.sp
.ne 2
.mk
.na
.B wait
.ad
.RS 13n
.rt
When
.B init
enters the run level that matches the entry's
.IR rstate ,
start the process and wait for its termination. All subsequent reads of the
.B inittab
file while
.B init
is in the same run level cause
.BR init
to ignore this entry.
.RE

.sp
.ne 2
.mk
.na
.B once
.ad
.RS 13n
.rt
When
.B init
enters a run level that matches the entry's
.IR rstate ,
start the process, do not wait for its termination. When it dies, do not
restart the process. If
.B init
enters a new run level and the process is
still running from a previous run level change, the program is not
restarted.
.RE

.sp
.ne 2
.mk
.na
.B boot
.ad
.RS 13n
.rt
The entry is to be processed only at \fBinit\fR's boot-time read of the
.B inittab
file.
.B init
is to start the process and not wait for its
termination; when it dies, it does not restart the process. In order for this
instruction to be meaningful, the
.I rstate
should be the default or it
must match \fBinit\fR's run level at boot time. This action is useful for an
initialization function following a hardware reboot of the system.
.RE

.sp
.ne 2
.mk
.na
.B bootwait
.ad
.RS 13n
.rt
The entry is to be processed the first time
.B init
goes from single-user
to multi-user state after the system is booted.
.B init
starts the
process, waits for its termination and, when it dies, does not restart the
process.
.RE

.sp
.ne 2
.mk
.na
.B powerfail
.ad
.RS 13n
.rt
Execute the process associated with this entry only when
.B init
receives
a power fail signal,
.B SIGPWR
(see
.BR signal (3C)).
.RE

.sp
.ne 2
.mk
.na
.B powerwait
.ad
.RS 13n
.rt
Execute the process associated with this entry only when
.B init
receives
a power fail signal,
.BR SIGPWR ,
and wait until it terminates before
continuing any processing of
.BR inittab .
.RE

.sp
.ne 2
.mk
.na
.B off
.ad
.RS 13n
.rt
If the process associated with this entry is currently running, send the
warning signal
.B SIGTERM
and wait 5 seconds before forcibly terminating
the process with the kill signal
.BR SIGKILL .
If the process is
nonexistent, ignore the entry.
.RE

.sp
.ne 2
.mk
.na
.B ondemand
.ad
.RS 13n
.rt
This instruction is really a synonym for the
.B respawn
action. It is
functionally identical to
.B respawn
but is given a different keyword in
order to divorce its association with run levels. This instruction is used
only with the
.BR a ,
.B b
or
.B c
values described in the
.I rstate
field.
.RE

.sp
.ne 2
.mk
.na
.B sysinit
.ad
.RS 13n
.rt
Entries of this type are executed before
.B init
tries to access the
console (that is, before the
.B "Console Login:"
prompt). It is expected
that this entry will be used only to initialize devices that
.B init
might
.RB "try to ask the run level question. These entries are executed and" " init"
waits for their completion before continuing.
.RE

.RE

.sp
.ne 2
.mk
.na
.I process
.ad
.RS 11n
.rt
Specify a command to be executed. The entire
.B process
field is prefixed
with
.B exec
and passed to a forked
.B sh
as \fBsh \(mic 'exec\fR
\fBcommand\fR'. For this reason, any legal \fBsh\fR syntax can appear in the
.I process
field.
.RE

.SH SEE ALSO
.sp
.LP
.BR sh (1),
.BR who (1),
.BR init (1M),
.BR svcadm (1M),
.BR svc.startd (1M),
.BR ttymon (1M),
.BR exec (2),
.BR open (2),
.BR signal (3C),
.BR smf (5)
.sp
.LP
.I System Administration Guide: Basic Administration
.SH NOTES
.sp
.LP
With the introduction of the service management facility, the
system-provided
.B /etc/inittab
file is greatly reduced from previous
releases.
.sp
.LP
The
.B initdefault
entry is not recognized in Solaris 10. See
.BR smf (5)
for information on
.B SMF
milestones, and
.BR svcadm (1M),
which describes the "\fBsvcadm milestone\fR \fB-d\fR" command; this
provides similar functionality to modifying the
.B initdefault
entry in
previous versions of the Solaris OS.
