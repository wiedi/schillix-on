'\" te
.\" Copyright (c) 2005, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH tran_reset 9E "17 Aug 2005" "SunOS 5.11" "Driver Entry Points"
.SH NAME
tran_reset \- reset a SCSI bus or target
.SH SYNOPSIS
.LP
.nf
#include <sys/scsi/scsi.h>



\fB int prefix\fBtran_reset\fR(\fBstruct scsi_address *\fIap\fR, \fBint\fR \fIlevel\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris architecture specific (Solaris DDI).
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I ap
.ad
.RS 10n
.rt
Pointer to the
.BR scsi_address "(9S) structure."
.RE

.sp
.ne 2
.mk
.na
.I level
.ad
.RS 10n
.rt
The level of reset required.
.RE

.SH DESCRIPTION
.sp
.LP
The
.B tran_reset()
vector in the
.BR scsi_hba_tran "(9S) structure must"
be initialized during the
.B HBA
driver's
.BR attach (9E)
to point to an
\fBHBA\fR entry point to be called when a target driver calls
.BR scsi_reset (9F).
.sp
.LP
\fBtran_reset()\fR must reset either the \fBSCSI\fR bus, a \fBSCSI\fR
target device, or a
.B SCSI
logical unit as specified by
.IR level .
.sp
.LP
\fIlevel\fR must be one of the following:
.sp
.ne 2
.mk
.na
.B RESET_ALL
.ad
.RS 17n
.rt
Reset the
.B SCSI
bus.
.RE

.sp
.ne 2
.mk
.na
.B RESET_TARGET
.ad
.RS 17n
.rt
Reset the target specified by
.IR ap .
.RE

.sp
.ne 2
.mk
.na
.B RESET_LUN
.ad
.RS 17n
.rt
Reset the logical unit specified by
.IR ap .
.RE

.sp
.LP
\fBtran_reset\fR should set the \fBpkt_reason\fR field of all outstanding
packets in the transport layer associated with each target or logical unit
that was successfully reset to
.B CMD_RESET
and the
.BR pkt_statistics
field must be \fBOR\fR'ed with either \fBSTAT_BUS_RESET\fR (if the SCSI bus
was reset) or
.B STAT_DEV_RESET
(if the target or logical unit was
reset). 
.sp
.LP
The
.B HBA
driver should use a
.B SCSI
Bus Device Reset Message to
reset a target device. The HBA driver should use a  SCSI Logical Unit Reset
Message to reset a logical unit.
.sp
.LP
Packets that are in the transport layer but not yet active on the bus
should be returned with
.B pkt_reason
set to
.B CMD_RESET
and
\fBpkt_statistics OR\fR'ed with \fBSTAT_ABORTED\fR.
.sp
.LP
Support for
.B RESET_LUN
is optional but strongly encouraged for new and
updated HBA drivers. If an HBA driver provides
.B RESET_LUN
support, it
must also create the
.B lun-reset
capability with a value of zero for
each target device instance represented by a valid
.IR ap .
The HBA is also
required to provide the means to return the current value of the
\fBlun-reset\fR capability in its \fBtran_getcap\fR(9E) routine, as well as
the means to change the value of the
.B lun_reset
capability in its
.BR tran_getcap (9E)
routine.
.SH RETURN VALUES
.sp
.LP
\fBtran_reset()\fR should return:
.sp
.ne 2
.mk
.na
.B 1
.ad
.RS 6n
.rt
on success.
.RE

.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 6n
.rt
on failure.
.RE

.SH CONTEXT
.sp
.LP
The
.B tran_reset()
function can be called from user or interrupt
context. This requirement comes from \fBscsi_reset()\fR.
.SH SEE ALSO
.sp
.LP
.BR attach (9E),
\fBddi_dma_buf_setup\fR(9F), \fBscsi_hba_attach\fR(9F),
.BR scsi_reset (9F),
.BR scsi_address (9S),
.BR scsi_hba_tran (9S)
.sp
.LP
.I Writing Device Drivers
.SH NOTES
.sp
.LP
If
.B pkt_reason
already indicates that an earlier error had occurred
for a particular
.IR pkt ,
\fBtran_reset()\fR should not overwrite
\fBpkt_reason\fR with \fBCMD_RESET\fR.
