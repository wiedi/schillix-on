'\" te
.\" Copyright 1989 AT&T
.\" Copyright (c) 1997, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH read 9E "19 Nov 1997" "SunOS 5.11" "Driver Entry Points"
.SH NAME
read \- read data from a device
.SH SYNOPSIS
.LP
.nf
#include <sys/types.h>
#include <sys/errno.h>
#include <sys/open.h>
#include <sys/uio.h>
#include <sys/cred.h>
#include <sys/ddi.h>
#include <sys/sunddi.h>



\fBint prefix\fBread\fR(\fBdev_t\fR \fIdev\fR, \fBstruct uio *\fIuio_p\fR, \fBcred_t *\fIcred_p\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Architecture independent level 1 (DDI/DKI). This entry point is
.IR optional .
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I dev
.ad
.RS 11n
.rt
Device number.
.RE

.sp
.ne 2
.mk
.na
.I uio_p
.ad
.RS 11n
.rt
Pointer to the
.BR uio "(9S) structure that describes where the data is to"
be stored in user space.
.RE

.sp
.ne 2
.mk
.na
.I cred_p
.ad
.RS 11n
.rt
Pointer to the  user credential structure for the
.B I/O
transaction.
.RE

.SH DESCRIPTION
.sp
.LP
The driver
.B read()
routine is called indirectly through
.BR cb_ops (9S)
by the
.BR read (2)
.RB "system call. The " " read()"
routine should check the validity of the minor number component of
.IR dev
and the user credential structure pointed to by
.I cred_p
(if
pertinent). The
.B read()
routine should supervise the data transfer
into the user space described by the
.BR uio "(9S) structure."
.SH RETURN VALUES
.sp
.LP
The
.B read()
routine should return
.B 0
for success, or the
appropriate error number.
.SH EXAMPLES
.LP
.B Example 1 read()
routine using
.BR physio()
.sp
.LP
The following is an example of a
.B read()
routine using
.BR physio (9F)
to perform reads from a non-seekable device:

.sp
.in +2
.nf
      static int
      xxread(dev_t dev, struct uio *uiop, cred_t *credp)
      {
               int                 rval;
               offset_t            off;
               int                 instance;
               xx_t                xx;

               instance = getminor(dev);
               xx = ddi_get_soft_state(xxstate, instance);
               if (xx == NULL)
                         return (ENXIO);
               off = uiop->uio_loffset;
               rval = physio(xxstrategy, NULL, dev, B_READ,
                         xxmin, uiop);
               uiop->uio_loffset = off;
               return (rval);
      }							
.fi
.in -2

.SH SEE ALSO
.sp
.LP
.BR read (2),
.BR write (9E),
.BR physio (9F),
.BR cb_ops (9S),
.BR uio (9S)
.sp
.LP
.I Writing Device Drivers
