'\" te
.\" Copyright (c) 2009, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH tran_setup_pkt 9E "29 Jan 2009" "SunOS 5.11" "Driver Entry Points"
.SH NAME
tran_setup_pkt, tran_teardown_pkt, tran_pkt_constructor,
tran_pkt_destructor \- SCSI HBA packet allocation and deallocation
.SH SYNOPSIS
.LP
.nf
#include <sys/scsi/scsi.h>

\fBstruct scsi_pkt *\fBprefix_tran_setup_pkt\fR(\fBstruct scsi_pkt *\fIpkt\fR,
     \fBint (*\fIcallback\fR) (\fIcaddr_t\fR), \fBcaddr_t\fR \fIarg\fR);
.fi

.LP
.nf
\fBvoid\fR \fBprefix_tran_teardown_pkt\fR(\fBstruct scsi_pkt *\fIpkt\fR);
.fi

.LP
.nf
\fBint\fR \fBprefix_tran_pkt_constructor\fR(\fBstruct scsi_pkt *\fIpkt\fR,
     \fBscsi_hba_tran_t *\fItranp\fR, \fBint\fR \fIkmflags\fR);
.fi

.LP
.nf
\fBvoid\fR \fBprefix_tran_pkt_destructor\fR(\fBstruct scsi_pkt *\fIpkt\fR,
     \fBstruct scsi_hba_tran_t *\fItranp\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris architecture specific (Solaris DDI).
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I pkt
.ad
.RS 12n
.rt
Pointer to the
.BR scsi_pkt "(9S) structure."
.RE

.sp
.ne 2
.mk
.na
\fIflags\fR
.ad
.RS 12n
.rt
Flags for associating DMA resources with the packet.
.RE

.sp
.ne 2
.mk
.na
.I callback
.ad
.RS 12n
.rt
Pointer to either
.B NULL_FUNC
or
.BR SLEEP_FUNC .
.RE

.sp
.ne 2
.mk
.na
.I arg
.ad
.RS 12n
.rt
Always
.IR NULL .
.RE

.sp
.ne 2
.mk
.na
\fIkmflags\fR
.ad
.RS 12n
.rt
Either
.B KM_SLEEP
or
.BR KM_NOSLEEP .
.RE

.SH DESCRIPTION
.sp
.LP
The
.B tran_setup_pkt()
and
.B tran_destroy_pkt()
vectors in the
.BR scsi_hba_tran (9S)
structure are alternatives to the
\fBtran_init_pkt()\fR and \fBtran_destroy_pkt()\fR entry points. They are
initialized during the
.B HBA
driver's
.BR attach (9E)
and they are used
when a target driver calls
.BR scsi_init_pkt "(9F) and"
.BR scsi_destroy_pkt (9F).
.SS "tran_setup_pkt(\|)"
.sp
.LP
The
.B tran_setup_pkt()
vector is the entry point into the
.BR HBA
which is used to initialize
.B HBA
specific information in a
\fBscsi_pkt\fR structure on behalf of a SCSI target driver. All fields
documented in
.BR scsi_pkt "(9S) are initialized."
.sp
.LP
If the
.B HBA
driver chose not to preallocate memory for
.BR pkt_cdbp
and/or
.BR pkt_scbp ,
it must allocate the requested memory at this time
and point
.B pkt_cdbp
and
.B pkt_scbp
to the allocated memory.
.sp
.LP
An
.B HBA
driver which provides a
.B tran_setup_pkt
entry point
inspects the
.B pkt_numcookies
and
.B pkt_cookies
fields at
\fBtran_start\fR time to set up the transfer. If \fBpkt_numcookies\fR is
zero, there are no
.B DMA
resources associated with this packet. If
\fBpkt_numcookies\fR is not zero, it indicates the number of \fBDMA\fR
cookies that
.B pkt_cookies
points to.
.sp
.LP
The
.B pkt_tgtlen
field contains the length of the packet private area
pointed to by
.BR pkt_private ,
allocated on behalf of the SCSI target
driver.
.sp
.LP
The
.B pkt_scblen
field contains the length of the SCSI status
completion block pointed to by
.BR pkt_scbp .
If the status length is
greater than or equal to sizeof (\fBstruct scsi_arq_status\fR) and the
\fBauto_rqsensecapability\fR has been set, automatic request sense
(\fBARS\fR) is enabled for this packet. If the status
\fBlengthislessthansizeof\fR
.RB ( "struct scsi_arq_status" ),
automatic
request sense should be disabled for this pkt if the
.B HBA
driver is
capable of disabling
.B ARQ
on a per-packet basis.
.sp
.LP
The
.B pkt_cdblen
field contains the length of the SCSI command
descriptor block.
.sp
.LP
The
.I callback
argument indicates what the allocator routines should do
when resources are not available:
.sp
.ne 2
.mk
.na
.B NULL_FUNC
.ad
.RS 14n
.rt
Do not wait for resources. Return a
.I NULL
pointer.
.RE

.sp
.ne 2
.mk
.na
.B SLEEP_FUNC
.ad
.RS 14n
.rt
Wait indefinitely for resources.
.RE

.SS "tran_teardown_pkt(\|)"
.sp
.LP
The
.B tran_teardown_pkt()
is the entry point into the
.B HBA
that
must free all of the resources that were allocated to the
.BR scsi_pkt (9S)
structure during
.BR tran_setup_pkt() .
.SS "tran_pkt_constructor(\|) tran_pkt_destructor(\|)"
.sp
.LP
When using
.B tran_pkt_setup()
and
.BR tran_pkt_teardown() ,
\fBtran_pkt_constructor()\fR and \fBtran_pkt_destructor()\fR are additional
optional entry points that perform the actions of a constructor and
destructor. The constructor is called after the following fields in the
\fBscsi_pkt\fR structure have been initialized:
.RS +4
.TP
.ie t \(bu
.el o
.B pkt_address
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B pkt_ha_private
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B pkt_cdbp
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B pkt_private
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B pkt_scbp
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B pkt_cdblen
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B pkt_tgtlen
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B pkt_scblen
.RE
.sp
.LP
Allocating and freeing a
.B DMA
handle are examples of something that
could be done in the constructor and destructor. See
.BR kmem_cache_create (9F)
for additional restrictions on what actions can
be performed in a constructor and destructor.
.sp
.LP
HBA drivers that implement
.B tran_setup_pkt()
must signal
.BR scsi_pkt (9S)
completion by calling
.BR scsi_hba_pkt_comp "(9F). Direct"
use of the
.B scsi_pkt
\fIpkt_comp\fR field is not permitted and results
in undefined behavior.
.SH RETURN VALUES
.sp
.LP
\fBtran_setup_pkt()\fR must return zero on success, and \fB-1\fR on
failure.
.SH SEE ALSO
.sp
.LP
.BR attach (9E),
.BR tran_sync_pkt (9E),
.BR bioerror (9F),
.BR ddi_dma_buf_bind_handle (9F),
.BR kmem_cache_create (9F),
.BR scsi_alloc_consistent_buf (9F),
.BR scsi_destroy_pkt (9F),
.BR scsi_hba_attach (9F),
.BR scsi_hba_pkt_alloc (9F),
.BR scsi_hba_pkt_comp (9F),
.BR scsi_hba_pkt_free (9F),
.BR scsi_init_pkt (9F),
.BR buf (9S),
.BR scsi_address (9S),
.BR scsi_hba_tran (9S),
.BR scsi_pkt (9S)
.sp
.LP
.I Writing Device Drivers
