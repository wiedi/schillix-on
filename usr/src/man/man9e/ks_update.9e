'\" te
.\" Copyright (c) 1994, Sun Microsystems, Inc., All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH ks_update 9E "27 May 1994" "SunOS 5.11" "Driver Entry Points"
.SH NAME
ks_update \- dynamically update kstats
.SH SYNOPSIS
.LP
.nf
#include <sys/types.h>
#include <sys/kstat.h>
#include <sys/ddi.h>
#include <sys/sunddi.h>



\fBint prefix\fB_ks_update\fR(\fBkstat_t *\fIksp\fR, \fBint\fR \fIrw\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris DDI specific (Solaris DDI)
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I ksp
.ad
.RS 8n
.rt
Pointer to a
.BR kstat "(9S) structure."
.RE

.sp
.ne 2
.mk
.na
.I rw
.ad
.RS 8n
.rt
Read/Write flag. Possible values are
.sp
.ne 2
.mk
.na
.B KSTAT_READ
.ad
.RS 16n
.rt
Update
.B kstat
structure statistics from the driver.
.RE

.sp
.ne 2
.mk
.na
.B KSTAT_WRITE
.ad
.RS 16n
.rt
Update driver statistics from the kstat structure.
.RE

.RE

.SH DESCRIPTION
.sp
.LP
The kstat mechanism allows for an optional
.B ks_update()
function to
update kstat data.  This is useful for drivers where the underlying device
keeps cheap hardware statistics, but extraction is expensive.  Instead of
constantly keeping the kstat data section up to date, the driver can supply
a
.B ks_update()
function which updates the kstat's data section on
demand. To take advantage of this feature, set the
.B ks_update
field
before calling
.BR kstat_install (9F).
.sp
.LP
The
.B ks_update()
function must have the following structure:
.sp
.in +2
.nf
static int
xx_kstat_update(kstat_t *ksp, int rw)
{
	if (rw == KSTAT_WRITE) {
		/* update the native stats from ksp->ks_data */
		/* return EACCES if you don't support this */
	} else {
		/* update ksp->ks_data from the native stats */
	}
	return (0);
}
.fi
.in -2

.sp
.LP
In general, the
.B ks_update()
routine may need to refer to
provider-private data; for example, it may need a pointer to the provider's
raw statistics.  The
.B ks_private
field is available for this purpose.
Its use is entirely at the provider's discretion.
.sp
.LP
No
.B kstat
locking should be done inside the
.B ks_update()
routine.
The caller will already be holding the
.B "kstat's  ks_lock"
(to
ensure consistent data) and will prevent the
.B kstat
from being
removed.
.SH RETURN VALUES
.sp
.LP
.B ks_update()
should return
.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 11n
.rt
For success.
.RE

.sp
.ne 2
.mk
.na
.B EACCES
.ad
.RS 11n
.rt
If
.B KSTAT_WRITE
is not allowed.
.RE

.sp
.ne 2
.mk
.na
.B EIO
.ad
.RS 11n
.rt
For any other error.
.RE

.SH SEE ALSO
.sp
.LP
.BR kstat_create (9F),
.BR kstat_install (9F),
.BR kstat (9S)
.sp
.LP
.I Writing Device Drivers
