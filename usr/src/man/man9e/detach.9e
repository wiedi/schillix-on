'\" te
.\" Copyright (c) 2003, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH detach 9E "7 Dec 2003" "SunOS 5.11" "Driver Entry Points"
.SH NAME
detach \- detach or suspend a device
.SH SYNOPSIS
.LP
.nf
#include <sys/ddi.h>
#include <sys/sunddi.h>



\fBint prefix\fR \fBdetach\fR(\fBdev_info_t\fR \fIdip\fR, \fBddi_detach_cmd_t\fR \fIcmd\fR);
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris DDI specific (Solaris DDI)
.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I dip
.ad
.RS 7n
.rt
A pointer to the device's
.B dev_info
structure.
.RE

.sp
.ne 2
.mk
.na
.I cmd
.ad
.RS 7n
.rt
Type of detach; the driver should return
.B DDI_FAILURE
if any value
other than
.B DDI_DETACH
or
.B DDI_SUSPEND
is passed to it.
.RE

.SH DESCRIPTION
.sp
.LP
The
.B detach()
function complements the
.BR attach "(9E) routine."
.SS "DDI_DETACH"
.sp
.LP
If
.I cmd
is set to
.BR DDI_DETACH ,
.B detach()
is used to remove
the state associated with a given instance of a device node prior to the
removal of that instance from the system.
.sp
.LP
The
.B detach()
function will be called once for each instance of the
device for which there has been a successful
.BR attach() ,
once there are
no longer any opens on the device. An attached instance of a driver can be
successfully detached only once. The
.B detach()
function should clean up
any per instance data initialized in
.BR attach "(9E) and call"
.BR kmem_free (9F)
to free any heap allocations. For information on how to
unregister interrupt handlers, see
.BR ddi_add_intr (9F).
This should also
include putting the underlying device into a quiescent state so that it will
not generate interrupts.
.sp
.LP
Drivers that set up
.BR timeout "(9F) routines should ensure that they are"
cancelled before returning
.B DDI_SUCCESS
from
.BR detach() .
.sp
.LP
If
.B detach()
determines a particular instance of the device cannot be
removed when requested because of some exceptional condition, \fBdetach()\fR
must return
.BR DDI_FAILURE ,
which prevents the particular device instance
from being detached. This also prevents the driver from being unloaded. A
driver instance failing the detach must ensure that no per instance data or
state is modified or freed that would compromise the system or subsequent
driver operation.
.sp
.LP
The system guarantees that the function will only be called for a
particular
.B dev_info
node after (and not concurrently with) a
successful \fBattach\fR(9E) of that device. The system also guarantees that
.B detach()
will only be called when there are no outstanding
.BR open (9E)
calls on the device.
.SS "DDI_SUSPEND"
.sp
.LP
The
.B DDI_SUSPEND
.I cmd
is issued when the entire system is being
suspended and power removed from it or when the system must be made
quiescent. It will be issued only to devices which have a
.B reg
property
or which export a
.B pm-hardware-state
property with the value
needs-suspend-resume.
.sp
.LP
If
.I cmd
is set to
.BR DDI_SUSPEND ,
.B detach()
is used to suspend
all activity of a device before power is (possibly) removed from the device.
The steps associated with suspension must include putting the underlying
device into a quiescent state so that it will not generate interrupts or
modify or access memory. Once quiescence has been obtained, \fBdetach()\fR
can be called with outstanding
.BR open "(9E) requests. It must save the"
hardware state of the device to memory and block incoming or existing
requests until
.B attach()
is called with
.BR DDI_RESUME .
.sp
.LP
If the device is used to store file systems, then after \fBDDI_SUSPEND\fR
is issued, the device should still honor
.BR dump (9E)
requests as this
entry point may be used by suspend-resume operation (see
.BR cpr (7))
to
save state file. It must do this, however, without disturbing the saved
hardware state of the device.
.sp
.LP
If the device driver uses automatic device Power Management interfaces
(driver exports \fBpm-components\fR(9P) property), it might need to call
.BR pm_raise_power (9F)
if the current power level is lower than required
to complete the
.BR dump "(9E) request."
.sp
.LP
Before returning successfully from a call to
.B detach()
with a command
of
.BR DDI_SUSPEND ,
the driver must cancel any outstanding timeouts and
make any driver threads quiescent.
.sp
.LP
If
.B DDI_FAILURE
is returned for the
.B DDI_SUSPEND
.IR cmd ,
either the operation to suspend the system or to make it quiescent will be
aborted.
.SH RETURN VALUES
.sp
.ne 2
.mk
.na
.B DDI_SUCCESS
.ad
.RS 15n
.rt
For
.BR DDI_DETACH ,
the state associated with the given device was
successfully removed. For
.BR DDI_SUSPEND ,
the driver was successfully
suspended.
.RE

.sp
.ne 2
.mk
.na
.B DDI_FAILURE
.ad
.RS 15n
.rt
The operation failed or the request was not understood. The associated
state is unchanged.
.RE

.SH CONTEXT
.sp
.LP
This function is called from user context only.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
.TE

.SH SEE ALSO
.sp
.LP
.BR cpr (7),
.BR pm (7D),
.BR pm (9P),
.BR pm-components (9P),
.BR attach (9E),
.BR dump (9E),
.BR open (9E),
.BR power (9E),
.BR ddi_add_intr (9F),
.BR ddi_dev_is_needed (9F),
.BR ddi_map_regs (9F),
.BR kmem_free (9F),
.BR pm_raise_power (9F),
.BR timeout (9F)
.sp
.LP
.I Writing Device Drivers
