'\" te
.\" Copyright (C) 2003, Sun Microsystems, Inc. All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH plot 4B "18 Feb 2003" "SunOS 5.11" "SunOS/BSD Compatibility Package File Formats"
.SH NAME
plot \- graphics interface
.SH DESCRIPTION
.sp
.LP
Files of this format  are interpreted for various devices by commands
described in \fBplot\fR(1B). A graphics file is a stream of plotting
instructions. Each instruction consists of an \fBASCII\fR letter usually
followed by bytes of binary information. The instructions are executed in
order. A point is designated by four bytes representing the \fIx\fR and
\fIy\fR values; each value is a signed integer. The last designated point in
an \fBl\fR, \fBm\fR, \fBn\fR, or \fBp\fR instruction becomes the ``current
point'' for the next instruction.
.sp
.ne 2
.mk
.na
\fBm\fR \fR
.ad
.RS 6n
.rt
Move: the next four bytes give a new current point.
.RE

.sp
.ne 2
.mk
.na
\fBn\fR \fR
.ad
.RS 6n
.rt
Cont: draw a line from the current point to the point given by the next
four bytes. See \fBplot\fR(1B).
.RE

.sp
.ne 2
.mk
.na
\fBp\fR \fR
.ad
.RS 6n
.rt
Point: plot the point given by the next four bytes.
.RE

.sp
.ne 2
.mk
.na
\fBl\fR \fR
.ad
.RS 6n
.rt
Line: draw a line from the point given by the next four bytes to the point
given by the following four bytes.
.RE

.sp
.ne 2
.mk
.na
\fBt\fR \fR
.ad
.RS 6n
.rt
Label: place the following \fBASCII\fR string so that its first character
falls on the current point. The string is terminated by a \fBNEWLINE.\fR
.RE

.sp
.ne 2
.mk
.na
\fBa\fR \fR
.ad
.RS 6n
.rt
Arc: the first four bytes give the center, the next four give the starting
point, and the last four give the end point of a circular arc. The least
significant coordinate of the end point is used only to determine the
quadrant. The arc is drawn counter-clockwise.
.RE

.sp
.ne 2
.mk
.na
\fBc\fR \fR
.ad
.RS 6n
.rt
Circle: the first four bytes give the center of the circle, the next two
the radius.
.RE

.sp
.ne 2
.mk
.na
\fBe\fR \fR
.ad
.RS 6n
.rt
Erase: start another frame of output.
.RE

.sp
.ne 2
.mk
.na
\fBf\fR \fR
.ad
.RS 6n
.rt
Linemod: take the following string, up to a \fBNEWLINE,\fR as the style for
drawing further lines. The styles are ``dotted,'' ``solid,'' ``longdashed,''
``shortdashed,'' and ``dotdashed.'' Effective only in \fBplot\fR \fB4014\fR
and \fBplot ver\fR.
.RE

.sp
.ne 2
.mk
.na
\fBs\fR \fR
.ad
.RS 6n
.rt
Space: the next four bytes give the lower left corner of the plotting area;
the following four give the upper right corner. The plot will be magnified
or reduced to fit the device as closely as possible.
.sp
Space settings that exactly fill the plotting area with unity scaling
appear below for devices supported by the filters of \fBplot\fR(1B). The
upper limit is just outside the plotting area.
.RE

.sp
.LP
In every case the plotting area is taken to be square; points outside may
be displayable on devices whose face is not square.
.sp
.ne 2
.mk
.na
\fB4014\fR \fR
.ad
.RS 14n
.rt
\fBspace(0,\fR \fB0,\fR \fB3120,\fR \fB3120);\fR
.RE

.sp
.ne 2
.mk
.na
\fBver\fR \fR
.ad
.RS 14n
.rt
\fBspace(0,\fR \fB0,\fR \fB2048,\fR \fB2048);\fR
.RE

.sp
.ne 2
.mk
.na
\fB300\fR,\fB 300s\fR \fR
.ad
.RS 14n
.rt
\fBspace(0,\fR \fB0,\fR \fB4096,\fR \fB4096);\fR
.RE

.sp
.ne 2
.mk
.na
\fB450\fR \fR
.ad
.RS 14n
.rt
\fBspace(0,\fR \fB0,\fR \fB4096,\fR \fB4096);\fR
.RE

.SH SEE ALSO
.sp
.LP
\fBgraph\fR(1), \fBplot\fR(1B)
