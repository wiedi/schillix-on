'\" te
.\" Copyright (c) 2007 by Sun Microsystems, Inc.  All rights reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH uscsi 7I "29 May 2007" "SunOS 5.11" "Ioctl Requests"
.SH NAME
uscsi \- user SCSI command interface
.SH SYNOPSIS
.LP
.nf
#include <sys/scsi/impl/uscsi.h>

\fBioctl\fR(\fBint\fR \fIfildes\fR, \fBint\fR \fIrequest\fR, \fBstruct uscsi_cmd *\fIcmd\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B uscsi
command is very powerful and somewhat dangerous; therefore
it has some permission restrictions. See
.B WARNINGS
for more details.
.sp
.LP
Drivers supporting this
.BR ioctl (2)
provide a general interface allowing
user-level applications to cause individual
.B SCSI
commands to be
directed to a particular
.B SCSI
or
.B ATAPI
device under control of
that driver. The
.B uscsi
command is supported by the
.B sd
driver for
\fBSCSI\fR disks and \fBATAPI\fR CD-ROM drives, and by the \fBst\fR driver
for
.B SCSI
tape drives.
.B uscsi
may also be supported by other
device drivers; see the specific device driver manual page for complete
information.
.sp
.LP
Applications must not assume that all Solaris disk device drivers support
the
.B uscsi
ioctl command. The
.B SCSI
command may include a data
transfer to or from that device, if appropriate for that command. Upon
completion of the command, the user application can determine how many bytes
were transferred and the status returned by the device. Also, optionally, if
the command returns a Check Condition status, the driver will automatically
issue a Request Sense command and return the sense data along with the
original status. See the
.B USCSI_RQENABLE
flag below for this Request
Sense processing. The
.B uscsi_cmd
structure is defined in
\fB<sys/scsi/impl/uscsi.h>\fR and includes the following members:
.sp
.in +2
.nf
int uscsi_flags;               /* read, write, etc. see below */
short uscsi_status;           /* resulting status */
short uscsi_timeout;          /* Command Timeout */
caddr_t uscsi_cdb             /* CDB to send to target */
caddr_t uscsi_bufaddr;        /* i/o source/destination */
size_t uscsi_buflen;          /* size of i/o to take place*/
size_t uscsi_resid;           /* resid from i/o operation */
uchar_t uscsi_cdblen;         /* # of valid CDB bytes */
uchar_t uscsi_rqlen;          /* size of uscsi_rqbuf */
uchar_t uscsi_rqstatus;       /* status of request sense cmd */
uchar_t uscsi_rqresid;        /* resid of request sense cmd */
caddr_t uscsi_rqbuf;          /* request sense buffer */
void *uscsi_reserved_5;       /* Reserved for future use */
.fi
.in -2

.sp
.LP
The fields of the
.B uscsi_cmd
structure have the following meanings:
.sp
.ne 2
.mk
.na
\fBuscsi_flags\fR
.ad
.RS 20n
.rt
The
.B I/O
direction and other details of how to carry out the
\fBSCSI\fR command. Possible values are described below.
.RE

.sp
.ne 2
.mk
.na
.B uscsi_status
.ad
.RS 20n
.rt
The
.B SCSI
status byte returned by the device is returned in this
field.
.RE

.sp
.ne 2
.mk
.na
.B uscsi_timeout
.ad
.RS 20n
.rt
Time in seconds to allow for completion of the command.
.RE

.sp
.ne 2
.mk
.na
.B uscsi_cdb
.ad
.RS 20n
.rt
A pointer to the
.B SCSI
CDB (command descriptor block) to be
transferred to the device in command phase.
.RE

.sp
.ne 2
.mk
.na
\fBuscsi_bufaddr\fR
.ad
.RS 20n
.rt
The user buffer containing the data to be read from or written to the
device.
.RE

.sp
.ne 2
.mk
.na
\fBuscsi_buflen\fR
.ad
.RS 20n
.rt
The length of \fBuscsi_bufaddr\fR.
.RE

.sp
.ne 2
.mk
.na
.B uscsi_resid
.ad
.RS 20n
.rt
If a data transfer terminates without transferring the entire requested
amount, the remainder, or residue, is returned in this field.
.RE

.sp
.ne 2
.mk
.na
.B uscsi_cdblen
.ad
.RS 20n
.rt
The length of the
.B SCSI
CDB to be transferred to the device in command
phase.
.RE

.sp
.ne 2
.mk
.na
.B uscsi_rqlen
.ad
.RS 20n
.rt
The length of
.BR uscsi_rqbuf ,
the application's Request Sense buffer.
.RE

.sp
.ne 2
.mk
.na
.B uscsi_rqstatus
.ad
.RS 20n
.rt
The
.B SCSI
status byte returned for the Request Sense command executed
automatically by the driver in response to a Check Condition status
return.
.RE

.sp
.ne 2
.mk
.na
.B uscsi_rqresid
.ad
.RS 20n
.rt
The residue, or untransferred data length, of the Request Sense data
transfer (the number of bytes, less than or equal to \fBuscsi_rqlen\fR,
which were not filled with sense data).
.RE

.sp
.ne 2
.mk
.na
\fBuscsi_rqbuf\fR
.ad
.RS 20n
.rt
Points to a buffer in application address space to which the results of an
automatic Request Sense command are written.
.RE

.sp
.ne 2
.mk
.na
.B uscsi_reserved_5
.ad
.RS 20n
.rt
Reserved for future use.
.RE

.sp
.LP
The \fBuscsi_flags\fR field defines the following:
.sp
.in +2
.nf
USCSI_WRITE                   /* send data to device */
USCSI_SILENT                  /* no error messages */
USCSI_DIAGNOSE                /* fail if any error occurs */
USCSI_ISOLATE                 /* isolate from normal commands */
USCSI_READ                    /* get data from device */
USCSI_ASYNC                   /* set bus to asynchronous mode */
USCSI_SYNC                    /* return bus to sync mode if possible */
USCSI_RESET                   /* reset target */
USCSI_RESET_TARGET            /* reset target */
USCSI_RESET_LUN               /* reset logical unit */
USCSI_RESET_ALL               /* reset all targets */
USCSI_RQENABLE                /* enable request sense extensions */
USCSI_RENEGOT                 /* renegotiate wide/sync on next I/O */
.fi
.in -2

.sp
.LP
The \fBuscsi_flags\fR bits have the following interpretation:
.sp
.ne 2
.mk
.na
.B USCSI_WRITE
.ad
.RS 22n
.rt
Data will be written from the initiator to the target.
.RE

.sp
.ne 2
.mk
.na
.B USCSI_SILENT
.ad
.RS 22n
.rt
The driver should not print any console error messages or warnings
regarding failures associated with this
.B SCSI
command.
.RE

.sp
.ne 2
.mk
.na
.B USCSI_DIAGNOSE
.ad
.RS 22n
.rt
The driver should not attempt any retries or other recovery mechanisms if
this
.B SCSI
command terminates abnormally in any way.
.RE

.sp
.ne 2
.mk
.na
.B USCSI_ISOLATE
.ad
.RS 22n
.rt
This
.B SCSI
command should not be executed with other commands.
.RE

.sp
.ne 2
.mk
.na
.B USCSI_READ
.ad
.RS 22n
.rt
Data will be read from the target to the initiator.
.RE

.sp
.ne 2
.mk
.na
.B USCSI_ASYNC
.ad
.RS 22n
.rt
Set the
.B SCSI
bus to asynchronous mode before running this command.
.RE

.sp
.ne 2
.mk
.na
.B USCSI_SYNC
.ad
.RS 22n
.rt
Set the
.B SCSI
bus to synchronous mode before running this command.
.RE

.sp
.ne 2
.mk
.na
.B USCSI_RESET
.ad
.RS 22n
.rt
Send a
.B SCSI
bus device reset message to this target.
.RE

.sp
.ne 2
.mk
.na
.B USCSI_RESET_TARGET
.ad
.RS 22n
.rt
Same as USCSI_RESET. Use this flag to request TARGET RESET. (USCSI_RESET is
maintained only for compatibility with old applications).
.RE

.sp
.ne 2
.mk
.na
.B USCSI_RESET_LUN
.ad
.RS 22n
.rt
Send a
.B SCSI
logical unit reset message to this target.
.RE

.sp
.ne 2
.mk
.na
.B USCSI_RESET_ALL
.ad
.RS 22n
.rt
USCSI_RESET_ALL, USCSI_RESET/USCSI_RESET_TARGET and USCSI_RESET_LUN are
mutually exclusive options and issuing them in any simultaneous combination
will result in implementation-dependent behavior
.sp
When a USCSI reset request is combined with other
.B SCSI
commands, the
following semantics take effect:
.sp
If the USCSI RESET flag is specified, the other fields (other than
uscsi_flags) in the uscsi_cmd are ignored. The uscsi_cdblen
.B must
be
set to zero.
.RE

.sp
.ne 2
.mk
.na
.B USCSI_RQENABLE
.ad
.RS 22n
.rt
Enable Request Sense extensions. If the user application is prepared to
receive sense data, this bit must be set, the fields \fBuscsi_rqbuf\fR and
\fBuscsi_rqbuflen\fR must be non-zero, and the \fBuscsi_rqbuf\fR must point
to memory writable by the application.
.RE

.sp
.ne 2
.mk
.na
.B USCSI_RENEGOT
.ad
.RS 22n
.rt
Tells USCSI to renegotiate wide mode and synchronous transfer speed before
the transmitted SCSI command is executed. This flag in effects tells the
target driver to pass the
.B FLAG_RENEGOTIATE_WIDE_SYNC
flag in the SCSI
packet before passing the command to an adapter driver for transport.
.sp
See the \fBscsi_pkt\fR(9S) flag \fBFLAG_RENEGOTIATE_WIDE_SYNC\fR for more
information.
.RE

.SH IOCTLS
.sp
.LP
The
.B ioctl
supported by drivers providing the
.B uscsi
interface
is:
.sp
.ne 2
.mk
.na
.B USCSICMD
.ad
.RS 12n
.rt
The argument is a pointer to a
.B uscsi_cmd
.RB "structure. The" " SCSI"
.RB "device addressed by that driver is selected, and given the" " SCSI"
command addressed by
.BR uscsi_cdb .
If this command requires a data phase,
the \fBuscsi_buflen\fR and \fBuscsi_bufaddr\fR fields must be set
appropriately; if data phase occurs, the
.B uscsi_resid
is returned as
the number of bytes not transferred. The status of the command, as returned
by the device, is returned in the
.B uscsi_status
field. If the command
terminates with Check Condition status, and Request Sense is enabled, the
sense data itself is returned in
.BR uscsi_rqbuf .
The
.BR uscsi_rqresid
provides the residue of the Request Sense data transfer.
.RE

.SH ERRORS
.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
A parameter has an incorrect, or unsupported, value.
.RE

.sp
.ne 2
.mk
.na
.B EIO
.ad
.RS 10n
.rt
An error occurred during the execution of the command.
.RE

.sp
.ne 2
.mk
.na
.B EPERM
.ad
.RS 10n
.rt
A process without root credentials tried to execute the
.BR USCSICMD
ioctl.
.RE

.sp
.ne 2
.mk
.na
.B EFAULT
.ad
.RS 10n
.rt
The
.B uscsi_cmd
itself, the
.BR uscsi_cdb ,
the
.BR uscsi_buf ,
or
the \fBuscsi_rqbuf\fR point to an invalid address.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWhea
_
Interface Stability Committed
.TE

.SH SEE ALSO
.sp
.LP
.BR ioctl (2),
.BR attributes (5),
.BR sd (7D),
.BR st (7D)
.sp
.LP
\fIANSI Small Computer System Interface-2 (SCSI-2)\fR
.SH WARNINGS
.sp
.LP
The
.B uscsi
command is very powerful, but somewhat dangerous, and so
its use is restricted to processes running as root, regardless of the file
permissions on the device node. The device driver code expects to own the
device state, and
.B uscsi
commands can change the state of the device
and confuse the device driver. It is best to use
.B uscsi
commands only
with no side effects, and avoid commands such as Mode Select, as they may
cause damage to data stored on the drive or system panics. Also, as the
commands are not checked in any way by the device driver, any block may be
overwritten, and the block numbers are absolute block numbers on the drive
regardless of which slice number is used to send the command.
.sp
.LP
The
.B uscsi
interface is not recommended for very large data transfers
(typically more than 16MB). If the requested transfer size exceeds the
maximum transfer size of the DMA engine, it will not be broken up into
multiple transfers and DMA errors may result.
.sp
.LP
The
.B USCSICMD
ioctl associates a
.B "struct uscsi_cmd"
with a device
by using an open file descriptor to the device. Other APIs might provide the
same
.B "struct uscsi_cmd"
programming interface, but perform device
association in some other manner.
