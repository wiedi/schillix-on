'\" te
.\" Copyright (c) 2003, Sun Microsystems, Inc.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH fbio 7I "12 May 2003" "SunOS 5.11" "Ioctl Requests"
.SH NAME
fbio \- frame buffer control operations
.SH DESCRIPTION
.sp
.LP
The frame buffers provided with this release support the same general
interface that is defined by \fB<sys/fbio.h>\fR\&. Each responds to an
.BR "FBIOGTYPE ioctl" (2)
request which returns information in a
.B fbtype
structure.
.sp
.LP
Each device has an
.B FBTYPE
which is used by higher-level software to
determine how to perform graphics functions. Each device is used by opening
it, doing an
.B "FBIOGTYPE ioctl()"
to see which frame buffer type is
present, and thereby selecting the appropriate device-management routines.
.sp
.LP
.B FBIOGINFO
returns information specific to the GS accelerator.
.sp
.LP
.B FBIOSVIDEO
and
.B FBIOGVIDEO
are general-purpose
.B ioctl()
requests for controlling possible video features of frame buffers. These
.B ioctl()
requests either set or return the value of a flags integer. At
this point, only the
.B FBVIDEO_ON
option is available, controlled by
.BR FBIOSVIDEO .
.B FBIOGVIDEO
returns the current video state.
.sp
.LP
The
.B FBIOSATTR
and
.B "FBIOGATTR ioctl()"
requests allow access
to special features of newer frame buffers. They use the
.B fbsattr
and
.B fbgattr
structures.
.sp
.LP
Some color frame buffers support the
.B FBIOPUTCMAP
and
.B FBIOGETCMAP ioctl()
requests, which provide access to the
colormap. They use the
.B fbcmap
structure.
.sp
.LP
Also, some framebuffers with multiple colormaps will either encode the
colormap identifier in the high-order bits of the "index" field in the
fbcmap structure, or use the
.B FBIOPUTCMAPI
and
.BR FBIOGETCMAPI
.B ioctl()
requests.
.sp
.LP
.B FBIOVERTICAL
is used to wait for the start of the next vertical
retrace period.
.sp
.LP
.B FBIOVRTOFFSET
Returns the offset to a read-only \fIvertical retrace
page\fR for those framebuffers that support it.  This vertical retrace page
may be mapped into user space with
.BR mmap (2).
The first word of the
vertical retrace page (type unsigned int) is a counter that is incremented
every time there is a vertical retrace.  The user process can use this
counter in a variety of ways.
.sp
.LP
.B FBIOMONINFO
returns a mon_info structure which contains information
about the monitor attached to the framebuffer, if available.
.sp
.LP
.BR FBIOSCURSOR ,
.BR FBIOGCURSOR ,
.B FBIOSCURPOS
and
.B FBIOGCURPOS
are used to control the hardware cursor for those
framebuffers that have this feature.
.B FBIOGCURMAX
returns the maximum
sized cursor supported by the framebuffer.  Attempts to create a cursor
larger than this will fail.
.sp
.LP
Finally
.B FBIOSDEVINFO
and
.B FBIOGDEVINFO
are used to transfer
variable-length, device-specific information into and out of framebuffers.
.SH SEE ALSO
.sp
.LP
.BR ioctl (2),
.BR mmap (2),
.BR cgsix (7D)
.SH BUGS
.sp
.LP
The
.B FBIOSATTR
and
.B "FBIOGATTR ioctl()"
requests are only
supported by frame buffers which emulate older frame buffer types. If a
frame buffer emulates another frame buffer,
.B FBIOGTYPE
returns the
emulated type. To get the real type, use
.BR FBIOGATTR .
.sp
.LP
The
.B FBIOGCURPOS
ioctl was incorrectly defined in previous operating
systems, and older code running in binary compatibility mode may get
incorrect results.
