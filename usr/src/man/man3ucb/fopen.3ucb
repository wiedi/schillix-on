'\" te
.\" Copyright (c) 2007 Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH fopen 3UCB "30 Oct 2007" "SunOS 5.11" "SunOS/BSD Compatibility Library Functions"
.SH NAME
fopen, freopen \- open a stream
.SH SYNOPSIS
.LP
.nf
\fB/usr/ucb/cc\fR [ \fIflag\fR .\|.\|. ] \fIfile\fR .\|.\|.
#include <stdio.h>

\fBFILE *\fBfopen\fR(\fIfile\fR, \fImode\fR)
\fBconst char *\fIfile\fR, \fB*\fImode\fR;
.fi

.LP
.nf
\fBFILE *\fBfreopen\fR(\fIfile\fR, \fImode\fR, \fIiop\fR)
\fBconst char *\fIfile\fR, \fB*\fImode\fR;
\fBregister FILE *\fIiop\fR;
.fi

.SH DESCRIPTION
.sp
.LP
The \fBfopen()\fR function opens the file specified by \fIfile\fR and
associates a stream with it. If the open succeeds,
.B fopen()
returns a
pointer to be used to identify the stream in subsequent operations. The
.I file
argument points to a character string that contains the name of
the file to be opened. The
.I mode
argument is a character string having
one of the following values:
.sp
.ne 2
.mk
.na
.B r
.ad
.RS 6n
.rt
open for reading
.RE

.sp
.ne 2
.mk
.na
.B w
.ad
.RS 6n
.rt
truncate or create for writing
.RE

.sp
.ne 2
.mk
.na
.B a
.ad
.RS 6n
.rt
append: open for writing at end of file, or create for writing
.RE

.sp
.ne 2
.mk
.na
.B r+
.ad
.RS 6n
.rt
open for update (reading and writing)
.RE

.sp
.ne 2
.mk
.na
.B w+
.ad
.RS 6n
.rt
truncate or create for update
.RE

.sp
.ne 2
.mk
.na
.B a+
.ad
.RS 6n
.rt
append; open or create for update at \fBEOF\fR
.RE

.sp
.LP
The \fBfreopen()\fR function opens the file specified by \fIfile\fR and
associates the stream pointed to by
.I iop
.RI "with it. The" " mode"
argument is used just as in
.BR fopen() .
The original stream is closed,
regardless of whether the open ultimately succeeds. If the open succeeds,
.B freopen()
returns the original value of
.IR iop .
.sp
.LP
The
.B freopen()
function is typically used to attach the pre-opened
streams associated with\fBstdin\fR,
.BR stdout ,
and
.B stderr
to other
files.
.sp
.LP
When a file is opened for update, both input and output can be performed on
the resulting stream. Output cannot be directly followed by input without an
intervening
.BR fseek "(3C) or"
.BR rewind (3C).
Input cannot be directly
followed by output without an intervening \fBfseek\fR(3C) or
.BR rewind (3C).
An input operation that encounters  \fBEOF will fail.\fR
.SH RETURN VALUES
.sp
.LP
The \fBfopen()\fR and \fBfreopen()\fR functions return a
.I NULL
pointer
on failure.
.SH USAGE
.sp
.LP
The \fBfopen()\fR and \fBfreopen()\fR functions have transitional
interfaces for 64-bit file offsets.  See
.BR lf64 (5).
.SH SEE ALSO
.sp
.LP
.BR open (2),
.BR fclose (3C),
.BR fopen (3C),
.BR freopen (3C),
.BR fseek (3C),
.BR malloc (3C),
.BR rewind (3C),
.BR lf64 (5)
.SH NOTES
.sp
.LP
Use of these functions should be restricted to applications written on BSD
platforms. Use of these functions with any of the system libraries or in
multithreaded applications is unsupported.
.sp
.LP
To support the same number of open files as the system,
.B fopen()
must
allocate additional memory for data structures using \fBmalloc\fR(3C) after
64 files have been opened. This confuses some programs that use their own
memory allocators.
.sp
.LP
The \fBfopen()\fR and  \fBfreopen()\fR functions differ from the standard
I/O functions \fBfopen\fR(3C) and \fBfreopen\fR(3C). The standard I/O
functions distinguish binary from text files with an additional use of
\&'\fBb\fR' as part of the
.IR mode ,
enabling portability of
.BR fopen (3C)
and \fBfreopen\fR(3C) beyond SunOS  4.\fIx\fR systems.
