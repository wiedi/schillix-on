'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH scandir 3UCB "30 Oct 2007" "SunOS 5.11" "SunOS/BSD Compatibility Library Functions"
.SH NAME
scandir, alphasort \- scan a directory
.SH SYNOPSIS
.LP
.nf
\fB/usr/ucb/cc\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|.
#include <sys/types.h>
#include <sys/dir.h>

\fBint\fR \fBscandir\fR(\fIdirname\fR, \fInamelist\fR, \fIselect\fR, \fIdcomp\fR)
\fBchar *\fIdirname\fR;
\fBstruct direct *\fR(*\fInamelist\fR[]);
\fBint\fR (\fB*\fIselect\fR(), (\fB*\fIdcomp\fR)();
.fi

.LP
.nf
\fBint\fR \fBalphasort\fR(\fId1\fR, \fId2\fR)
\fBstruct direct **\fId1\fR, \fB**\fId2\fR;
.fi

.SH DESCRIPTION
.sp
.LP
The
.B scandir()
function reads the directory
.I dirname
and builds
an array of pointers to directory entries using
.BR malloc "(3C). The second"
parameter is a pointer to an array of structure pointers. The third
parameter is a pointer to a routine which is called with a pointer to a
directory entry and should return a non zero value if the directory entry
should be included in the array. If this pointer is
.IR NULL ,
then all the
directory entries will be included. The last argument is a pointer to a
routine which is passed to
.BR qsort "(3C), which sorts the completed array."
If this pointer is
.IR NULL ,
the array is not sorted.
.sp
.LP
The
.B alphasort()
function sorts the array alphabetically.
.SH RETURN VALUES
.sp
.LP
The
.B scandir()
function returns the number of entries in the array and
a pointer to the array through the parameter
.IR namelist .
The
.B scandir()
function returns \fB\(mi1\fR if the directory cannot be
opened for reading or if
.BR malloc "(3C) cannot allocate enough memory to"
hold all the data structures.
.sp
.LP
The
.B alphasort()
function returns an integer greater than, equal to,
or less than 0 if the directory entry name pointed to by
.I d1
is greater
than, equal to, or less than the directory entry name pointed to by
.IR d2 .
.SH USAGE
.sp
.LP
The
.B scandir()
and
.B alphasort()
functions have transitional
interfaces for 64-bit file offsets. See
.BR lf64 (5).
.SH SEE ALSO
.sp
.LP
.BR getdents (2),
.BR malloc (3C),
.BR qsort (3C),
.BR readdir (3UCB),
.BR readdir (3C),
.BR lf64 (5)
.SH NOTES
.sp
.LP
Use of these functions should be restricted to applications written on
.B BSD
platforms.  Use of these functions with any of the system
libraries or in multithreaded applications is unsupported.
