'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mctl 3UCB "30 Oct 2007" "SunOS 5.11" "SunOS/BSD Compatibility Library Functions"
.SH NAME
mctl \- memory management control
.SH SYNOPSIS
.LP
.nf
\fB/usr/ucb/cc\fR [ \fIflag\fR .\|.\|. ] \fIfile\fR .\|.\|.
#include <sys/types.h>
#include <sys/mman.h>

\fBint\fR \fBmctl\fR(\fIaddr\fR, \fIlen\fR, \fIfunction\fR, \fIarg\fR)
\fBcaddr_t\fR \fIaddr\fR;
\fBsize_t\fR \fIlen\fR;
\fBint\fR \fIfunction\fR;
\fBint\fR \fIarg\fR;
.fi

.SH DESCRIPTION
.sp
.LP
.B mctl()
applies a variety of control functions over pages identified
by the mappings established for the address range [\fIaddr, addr + len\fR).
The function to be performed is identified by the argument
.IR function .
Valid functions are defined in
.B <mman.h>
as follows:
.sp
.ne 2
.mk
.na
.B MC_LOCK
.ad
.RS 15n
.rt
Lock the pages in the range in memory.  This function is used to support
.BR mlock() .
See
.BR mlock (3C)
for semantics and usage.
.I arg
is
ignored.
.RE

.sp
.ne 2
.mk
.na
.B MC_LOCKAS
.ad
.RS 15n
.rt
Lock the pages in the address space in memory.  This function is used to
support
.BR mlockall() .
See
.BR mlockall (3C)
for semantics and usage.
.I addr
and
.I len
are ignored.
.I arg
is an integer built from the
flags:
.sp
.ne 2
.mk
.na
.B MCL_CURRENT
.ad
.RS 15n
.rt
Lock current mappings
.RE

.sp
.ne 2
.mk
.na
.B MCL_FUTURE
.ad
.RS 15n
.rt
Lock future mappings
.RE

.RE

.sp
.ne 2
.mk
.na
.B MC_SYNC
.ad
.RS 15n
.rt
Synchronize the pages in the range with their backing storage. Optionally
invalidate cache copies. This function is used to support
.BR msync() .
See
.BR msync (3C)
for semantics and usage.
.I arg
is used to represent the
.I flags
argument to
.BR msync() .
It is constructed from an OR of the
following values:
.sp
.ne 2
.mk
.na
.B MS_SYNC
.ad
.RS 17n
.rt
Synchronized write
.RE

.sp
.ne 2
.mk
.na
.B MS_ASYNC
.ad
.RS 17n
.rt
Return immediately
.RE

.sp
.ne 2
.mk
.na
.B MS_INVALIDATE
.ad
.RS 17n
.rt
Invalidate mappings
.RE

.B MS_ASYNC
returns after all
.B I/O
operations are scheduled.
.B MS_SYNC
does not return until all
.B I/O
operations are complete.
Specify exactly one of
.B MS_ASYNC
or
.BR MS_SYNC .
.B MS_INVALIDATE
invalidates all cached copies of data from memory, requiring them to be
re-obtained from the object's permanent storage location upon the next
reference.
.RE

.sp
.ne 2
.mk
.na
.B MC_UNLOCK
.ad
.RS 15n
.rt
Unlock the pages in the range. This function is used to support
.BR munlock() .
.I arg
is ignored.
.RE

.sp
.ne 2
.mk
.na
.B MC_UNLOCKAS
.ad
.RS 15n
.rt
Remove address space memory lock, and locks on all current mappings. This
function is used to support
.BR munlockall() .
.I addr
and
.IR len
must have the value 0.
.I arg
is ignored.
.RE

.SH RETURN VALUES
.sp
.LP
.B mctl()
returns
.B 0
on success, \fB\(mi1\fR on failure.
.SH ERRORS
.sp
.LP
.B mctl()
fails if:
.sp
.ne 2
.mk
.na
.B EAGAIN
.ad
.RS 10n
.rt
Some or all of the memory identified by the operation could not be locked
due to insufficient system resources.
.RE

.sp
.ne 2
.mk
.na
.B EBUSY
.ad
.RS 10n
.rt
.B MS_INVALIDATE
was specified and one or more of the pages is locked in
memory.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
.I addr
is not a multiple of the page size as returned by
.BR getpagesize() .
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
.I addr
and/or
.I len
do not have the value 0 when
.B MC_LOCKAS
or
.B MC_UNLOCKAS
are specified.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
.I arg
is not valid for the function specified.
.RE

.sp
.ne 2
.mk
.na
.B EIO
.ad
.RS 10n
.rt
An I/O error occurred while reading from or writing to the file system.
.RE

.sp
.ne 2
.mk
.na
.B ENOMEM
.ad
.RS 10n
.rt
Addresses in the range
.RI [ "addr, addr + len" )
are invalid for the address
space of a process, or specify one or more pages which are not mapped.
.RE

.sp
.ne 2
.mk
.na
.B EPERM
.ad
.RS 10n
.rt
The process's effective user
.B ID
is not superuser and one of
.BR "MC_LOCK MC_LOCKAS" ,
.BR MC_UNLOCK ,
or
.B MC_UNLOCKAS
was
specified.
.RE

.SH SEE ALSO
.sp
.LP
.BR mmap (2),
.BR memcntl (2),
.BR getpagesize (3C),
.BR mlock (3C),
.BR mlockall (3C),
.BR msync (3C)
.SH NOTES
.sp
.LP
Use of these interfaces should be restricted to only applications written
on BSD platforms.  Use of these interfaces with any of the system libraries
or in multi-thread applications is unsupported.
