'\" te
.\" Copyright (c) 2008, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH dlpi_recv 3DLPI "22 Aug 2007" "SunOS 5.11" "Data Link Provider Interface Library Functions"
.SH NAME
dlpi_recv \- receive a data message using DLPI
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR .\|.\|. ] \fIfile\fR .\|.\|. \fB-ldlpi\fR [ \fIlibrary\fR .\|.\|. ]
#include <libdlpi.h>

\fBint\fR \fBdlpi_recv\fR(\fBdlpi_handle_t\fR \fIdh\fR, \fBvoid *\fIsaddrp\fR,
     \fBsize_t *\fR \fIsaddrlenp\fR, \fBvoid *\fImsgbuf\fR, \fBsize_t *\fImsglenp\fR,
     \fBint\fR \fImsec\fR, \fBdlpi_recvinfo_t *\fIrecvp\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B dlpi_recv()
function attempts to receive data messages over the
.B DLPI
link instance associated with the
.B DLPI
handle
.IR dh .
If
.I dh
is not in the
.B "DL_IDLE DLPI"
state, the attempt fails. The
caller must ensure that
.I msgbuf
is at least
.I msglenp
bytes in size.
Upon success, \fImsgbuf\fR contains the data message received, \fImsglenp\fR
contains the number of bytes placed in
.IR msgbuf .
.sp
.LP
The caller must ensure that
.I saddrp
is at least
.BR DLPI_PHYSADDR_MAX
bytes in size and
.I saddrlenp
must contain the length of
.IR saddrp .
Upon success,
.I saddrp
contains the address of the source sending the data
message and
.I saddrlenp
contains the source address length. If the caller
is not interested in the source address, both
.I saddrp
and
.IR saddrlenp
can be left as
.IR NULL .
If the source address is not available,
.I saddrp
is not filled in and
.I saddrlenp
is set to zero.
.sp
.LP
The
.I dlpi_recvinfo_t
is a structure defined in
.B <libdlpi.h>
as
follows:
.sp
.in +2
.nf
typedef struct {
        uchar_t         dri_destaddr[DLPI_PHYSADDR_MAX];
        uchar_t         dri_destaddrlen;
        dlpi_addrtype_t dri_destaddrtype;
        size_t          dri_totmsglen;
} dlpi_recvinfo_t;
.fi
.in -2

.sp
.LP
Upon success, if
.I recvp
is not set to
.IR NULL ,
.I dri_destaddr
contains the destination address,
.I dri_destaddrlen
contains the
destination address length, and
.I dri_totmsglen
contains the total length
of the message received. If the destination address is unicast,
.I dri_destaddrtype
is set to
.BR DLPI_ADDRTYPE_UNICAST .
Otherwise, it is
set to
.BR DLPI_ADDRTYPE_GROUP .
.sp
.LP
The values of
.I msglenp
and
.I dri_totmsglen
might vary when a message
larger than the size of
.I msgbuf
is received. In that case, the caller can
use
.I dri_totmsglen
to determine the original total length of the
message.
.sp
.LP
If the handle is in raw mode, as described in
.BR dlpi_open (3DLPI),
.I msgbuf
starts with the link-layer header. See
.BR dlpi (7P).
The values
of
.IR saddrp ,
.IR saddrlenp ,
and all the members of \fIdlpi_recvinfo_t\fR
except
.I dri_totmsglen
are invalid because the address information is
already included in the link-layer header returned by
.IR msgbuf .
.sp
.LP
If no message is received within
.I msec
.RB milliseconds, " dlpi_recv()"
returns
.BR DLPI_ETIMEDOUT .
If
.I msec
is
.BR 0 ,
.B dlpi_recv()
does
not block. If
.I msec
is
.BR -1 ,
.B dlpi_recv()
does block until a
data message is received.
.SH RETURN VALUES
.sp
.LP
Upon success,
.B DLPI_SUCCESS
is returned. If
.B DL_SYSERR
is returned,
.B errno
contains the specific UNIX system error value. Otherwise, a
.B DLPI
error value defined in
.B <sys/dlpi.h>
or an error value listed
in the following section is returned.
.SH ERRORS
.sp
.ne 2
.mk
.na
.B DLPI_EBADMSG
.ad
.RS 20n
.rt
Bad DLPI message
.RE

.sp
.ne 2
.mk
.na
.B DLPI_EINHANDLE
.ad
.RS 20n
.rt
Invalid
.B DLPI
handle
.RE

.sp
.ne 2
.mk
.na
.B DLPI_EINVAL
.ad
.RS 20n
.rt
Invalid argument
.RE

.sp
.ne 2
.mk
.na
.B DLPI_ETIMEDOUT
.ad
.RS 20n
.rt
.B DLPI
operation timed out
.RE

.sp
.ne 2
.mk
.na
.B DLPI_EUNAVAILSAP
.ad
.RS 20n
.rt
Unavailable
.BR "DLPI SAP"
.RE

.sp
.ne 2
.mk
.na
.B DLPI_FAILURE
.ad
.RS 20n
.rt
.B DLPI
operation failed
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for description of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR dlpi_bind (3DLPI),
.BR dlpi_open (3DLPI),
.BR libdlpi (3LIB),
.BR attributes (5),
.BR dlpi (7P)
