'\" te
.\" Copyright (c) 2008, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH dlpi_open 3DLPI "17 Nov 2008" "SunOS 5.11" "Data Link Provider Interface Library Functions"
.SH NAME
dlpi_open \- open DLPI link
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR .\|.\|. ] \fIfile\fR .\|.\|. \fB-ldlpi\fR [ \fIlibrary\fR .\|.\|. ]
#include <libdlpi.h>

\fBint\fR \fBdlpi_open\fR(\fBconst char *\fIlinkname\fR, \fBdlpi_handle_t *\fIdhp\fR,
     \fBuint_t\fR \fIflags\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B dlpi_open()
function creates an open instance of the
.BR DLPI
Version 2 link named by
.I linkname
and associates it with a
dynamically-allocated
.BR dlpi_handle_t ,
which is returned to the caller in
\fIdhp\fR upon success. The \fBDLPI\fR handle is left in the \fBDL_UNBOUND\fR
\fBDLPI\fR state after a successful open of the \fBDLPI\fR link. The DLPI
handles can only be used by one thread at a time, but multiple handles can be
used by multiple threads. This function can open both
.B DL_STYLE1
and
\fBDL_STYLE2 DLPI\fR links.
.sp
.LP
By default (if
.B DLPI_DEVIPNET
is not set in
.IR flags ),
the
\fBdlpi_open()\fR function scans the \fB/dev/net\fR and \fB/dev\fR directories
for DLPI links, in order. Within each scanned directory, \fBdlpi_open()\fR
first looks for a matching
.B DL_STYLE1
link, then for a matching
\fBDL_STYLE2\fR link. If \fIprovider\fR is considered the \fIlinkname\fR with
its trailing digits removed, a matching
.B DL_STYLE1
link has a filename of
.IR linkname ,
and a matching
.B DL_STYLE2
link has a filename of
.IR provider .
If a
.B DL_STYLE2
.RB "link is opened," " dlpi_open()"
automatically performs the necessary
.B DLPI
operations to place the
\fBDLPI\fR link instance and the associated \fBDLPI\fR handle in the
\fBDL_UNBOUND\fR state. See \fBdlpi\fR(7P) for the definition of
.IR linkname .
.sp
.LP
If
.B DLPI_DEVIPNET
is set in
.IR flags ,
\fBdlpi_open()\fR opens the
file
.I linkname
in
.B /dev/ipnet
as a
.B DL_STYLE1
DLPI device and
does not look in any other directories.
.sp
.LP
The value of \fIflags\fR is constructed by a bitwise-inclusive-OR of the
flags listed below, defined in \fB<libdlpi.h>\fR.
.sp
.ne 2
.mk
.na
.B DLPI_DEVIPNET
.ad
.RS 18n
.rt
Specify that the named DLPI device is an IP observability device (see
.BR ipnet (7D)),
and
.B dl_open()
will open the device from the
\fB/dev/ipnet/\fR directory.
.RE

.sp
.ne 2
.mk
.na
.B DLPI_IPNETINFO
.ad
.RS 18n
.rt
This flag is applicable only when opening IP Observability devices (with
\fBDLPI_DEVIPNET\fR or by opening the \fB/dev/lo0\fR device). This flag causes
the
.B ipnet
driver to prepend an
.B ipnet
header to each received IP
packet. See \fBipnet\fR(7D) for the contents of this header.
.RE

.sp
.ne 2
.mk
.na
.B DLPI_NATIVE
.ad
.RS 18n
.rt
Enable
.B DLPI
native mode (see
.B DLIOCNATIVE
in
.BR dlpi "(7P)) on a"
\fBDLPI\fR link instance. Native mode persists until the \fBDLPI\fR handle is
closed by
.BR dlpi_close (3DLPI).
.RE

.sp
.ne 2
.mk
.na
.B DLPI_PASSIVE
.ad
.RS 18n
.rt
Enable
.B DLPI
passive mode (see
.B DL_PASSIVE_REQ
in
.BR dlpi (7P))
on a
.B DLPI
.RB "link instance. Passive mode persists until the" " DLPI"
handle is closed by
.BR dlpi_close (3DLPI).
.RE

.sp
.ne 2
.mk
.na
.B DLPI_RAW
.ad
.RS 18n
.rt
Enable
.B DLPI
raw mode (see
.B DLIOCRAW
in
.BR dlpi "(7P)) on a"
\fBDLPI\fR link instance. Raw mode persists until the \fBDLPI\fR handle is
closed by
.BR dlpi_close (3DLPI).
.RE

.sp
.LP
Each
.B DLPI
handle has an associated timeout value that is used as a
timeout interval for certain
.B libdlpi
operations. The default timeout
value ensures that
.B DLPI_ETIMEDOUT
is returned from a
.BR libdlpi
operation only in the event that the
.B DLPI
link becomes unresponsive. The
timeout value can be changed with
.BR dlpi_set_timeout "(3DLPI), although this"
should seldom be necessary.
.SH RETURN VALUES
.sp
.LP
Upon success,
.B DLPI_SUCCESS
is returned. If
.B DL_SYSERR
is returned,
\fBerrno\fR contains the specific UNIX system error value. Otherwise, a
\fBDLPI\fR error value defined in \fB<sys/dlpi.h>\fR or listed in the
following section is returned.
.SH ERRORS
.sp
.LP
The
.B dlpi_open()
function will fail if:
.sp
.ne 2
.mk
.na
.B DLPI_EBADLINK
.ad
.RS 25n
.rt
Bad
.B DLPI
link
.RE

.sp
.ne 2
.mk
.na
.B DLPI_EIPNETINFONOTSUP
.ad
.RS 25n
.rt
The
.B DLPI_IPNETINFO
flag was set but the device opened does not support
the
.B DLIOCIPNETINFO
ioctl.
.RE

.sp
.ne 2
.mk
.na
.B DLPI_ELINKNAMEINVAL
.ad
.RS 25n
.rt
Invalid
.B DLPI
.I linkname
.RE

.sp
.ne 2
.mk
.na
.B DLPI_ENOLINK
.ad
.RS 25n
.rt
\fBDLPI\fR link does not exist
.RE

.sp
.ne 2
.mk
.na
.B DLPI_ERAWNOTSUP
.ad
.RS 25n
.rt
DLPI raw mode not supported
.RE

.sp
.ne 2
.mk
.na
.B DLPI_ETIMEDOUT
.ad
.RS 25n
.rt
\fBDLPI\fR operation timed out
.RE

.sp
.ne 2
.mk
.na
.B DLPI_FAILURE
.ad
.RS 25n
.rt
DLPI operation failed
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for description of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR dlpi_close (3DLPI),
.BR dlpi_set_timeout (3DLPI),
.BR libdlpi (3LIB),
.BR attributes (5),
.BR dlpi (7P),
.BR ipnet (7D)
