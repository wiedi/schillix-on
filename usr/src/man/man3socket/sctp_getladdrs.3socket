'\" te
.\" Copyright (c) 2008, Sun Microsystems, Inc. All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH sctp_getladdrs 3SOCKET "23 Jan 2008" "SunOS 5.11" "Sockets Library Functions"
.SH NAME
sctp_getladdrs, sctp_freeladdrs \- returns all locally bound addresses on
an SCTP socket
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lsocket\fR \fB -lnsl \fR \fB -lsctp \fR [ \fIlibrary\fR.\|.\|. ]
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/sctp.h>

\fBint\fR \fBsctp_getladdrs\fR(\fBint\fR \fIsock\fR, \fBsctp_assoc_t\fR \fIid\fR, \fBvoid **\fIaddrs\fR);
.fi

.LP
.nf
\fBvoid\fR \fBsctp_freeladdrs\fR(\fBvoid *\fIaddrs\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B sctp_getladdrs()
function queries addresses to which an SCTP
socket is bound. The \fBsctp_freeladdrs()\fR function releases resources
that are allocated to hold the addresses.
.sp
.LP
The
.B sctp_getladdrs()
function returns all the locally bound addresses
on the SCTP socket
.IR sock .
On completion
.I addrs
points to a
dynamically allocated array of
.B sockaddr_in
structures for an Internet
Protocol (IPv4) socket or an array of
.B sockaddr_in6
structures for an
Internet Protocol Version 6 (IPv6) socket. The
.I addrs
parameter must
not be
.IR NULL .
For an IPv4 SCTP socket, the addresses returned in the
\fBsockaddr_in\fR structures are IPv4 addresses. For an IPv6 SCTP socket,
the addresses in the
.B sockaddr_in6
structures can be IPv6 addresses or
IPv4-mapped IPv6 addresses.
.sp
.LP
If
.I sock
is a one-to-many style SCTP socket,
.I id
specifies the
association of interest. A value of
.B 0
to
.I id
returns
locally-bound addresses regardless of a particular association. If
\fIsock\fR is a one-to-one style SCTP socket, \fIid\fR is ignored.
.sp
.LP
The \fBsctp_freeladdrs()\fR function frees the resources allocated by
.BR sctp_getladdrs() .
The
.I addrs
parameter is the array of addresses
allocated by
.BR sctp_getladdrs() .
.SH RETURN VALUES
.sp
.LP
Upon successful completion, the
.B sctp_getladdrs()
function returns the
number of addresses in the
.I addrs
array. Otherwise, the function
returns
.B -1
and sets
.B errno
to indicate the error.
.SH ERRORS
.sp
.LP
The
.B sctp_getladdrs()
call fails under the following conditions.
.sp
.ne 2
.mk
.na
.B EBADF
.ad
.RS 12n
.rt
The
.I sock
argument is an invalid file descriptor.
.RE

.sp
.ne 2
.mk
.na
.B ENOTSOCK
.ad
.RS 12n
.rt
The
.I sock
argument is not a socket.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 12n
.rt
The
.I addrs
argument is
.IR NULL .
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 12n
.rt
The
.I id
argument is an invalid socket.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR bind (3SOCKET),
.BR in.h (3HEAD),
.BR libsctp (3LIB),
.BR sctp_freepaddrs (3SOCKET),
.BR sctp_getpaddrs (3SOCKET),
.BR socket (3SOCKET),
.BR attributes (5),
.BR inet (7P),
.BR inet6 (7P),
.BR ip (7P),
.BR ip6 (7P),
.BR sctp (7P)
