'\" te
.\" Copyright 1989 AT&T
.\" Copyright (C) 2002, Sun Microsystems, Inc. All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH accept 3SOCKET "24 Jan 2002" "SunOS 5.11" "Sockets Library Functions"
.SH NAME
accept \- accept a connection on a socket
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR .\|.\|. ] \fIfile\fR .\|.\|. \fB-lsocket\fR \fB -lnsl \fR [ \fIlibrary\fR .\|.\|. ]
#include <sys/types.h>
#include <sys/socket.h>

\fBint\fR \fBaccept\fR(\fBint\fR \fIs\fR, \fBstruct sockaddr *\fIaddr\fR, \fBsocklen_t *\fIaddrlen\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The argument
.I s
is a socket that has been created with
.BR socket (3SOCKET)
and bound to an address with
.BR bind "(3SOCKET), and"
that is listening for connections after a call to
.BR listen "(3SOCKET). The"
.B accept()
function extracts the first connection on the queue of
pending connections, creates a new socket with the properties of
.IR s ,
and allocates a new file descriptor,
.IR ns ,
for the socket. If no pending
connections are present on the queue and the socket is not marked as
non-blocking,
.B accept()
blocks the caller until a connection is
present. If the socket is marked as non-blocking and no pending connections
are present on the queue,
.B accept()
returns an error as described
below. The
.B accept()
function uses the
.BR netconfig (4)
file to
determine the
.B STREAMS
device file name associated with
.IR s .
This
is the device on which the connect indication will be accepted. The accepted
socket,
.IR ns ,
is used to read and write data to and from the socket that
connected to
.IR ns .
It is not used to accept more connections. The
original socket
.RI ( s )
remains open for accepting further connections.
.sp
.LP
The argument
.I addr
is a result parameter that is filled in with the
address of the connecting entity as it is known to the communications layer.
The exact format of the
.I addr
parameter is determined by the domain in
which the communication occurs.
.sp
.LP
The argument
.I addrlen
is a value-result parameter. Initially, it
contains the amount of space pointed to by
.IR addr ;
on return it contains
the length in bytes of the address returned.
.sp
.LP
The
.B accept()
function is used with connection-based socket types,
currently with
.BR SOCK_STREAM .
.sp
.LP
It is possible to
.BR select "(3C) or"
.BR poll (2)
a socket for the
purpose of an
.B accept()
by selecting or polling it for a read. However,
this will only indicate when a connect indication is pending; it is still
necessary to call
.BR accept() .
.SH RETURN VALUES
.sp
.LP
The
.B accept()
function returns \fB\(mi1\fR on error. If it succeeds,
it returns a non-negative integer that is a descriptor for the accepted
socket.
.SH ERRORS
.sp
.LP
.B accept()
will fail if:
.sp
.ne 2
.mk
.na
.B EBADF
.ad
.RS 16n
.rt
The descriptor is invalid.
.RE

.sp
.ne 2
.mk
.na
.B ECONNABORTED
.ad
.RS 16n
.rt
The remote side aborted the connection before the
.B accept()
operation
completed.
.RE

.sp
.ne 2
.mk
.na
.B EFAULT
.ad
.RS 16n
.rt
The
.I addr
parameter or the
.I addrlen
parameter is invalid.
.RE

.sp
.ne 2
.mk
.na
.B EINTR
.ad
.RS 16n
.rt
The
.B accept()
attempt was interrupted by the delivery of a signal.
.RE

.sp
.ne 2
.mk
.na
.B EMFILE
.ad
.RS 16n
.rt
The per-process descriptor table is full.
.RE

.sp
.ne 2
.mk
.na
.B ENODEV
.ad
.RS 16n
.rt
The protocol family and type corresponding to
.I s
could not be found
in the
.B netconfig
file.
.RE

.sp
.ne 2
.mk
.na
.B ENOMEM
.ad
.RS 16n
.rt
There was insufficient user memory available to complete the operation.
.RE

.sp
.ne 2
.mk
.na
.B ENOSR
.ad
.RS 16n
.rt
There were insufficient
.B STREAMS
resources available to complete the
operation.
.RE

.sp
.ne 2
.mk
.na
.B ENOTSOCK
.ad
.RS 16n
.rt
The descriptor does not reference a socket.
.RE

.sp
.ne 2
.mk
.na
.B EOPNOTSUPP
.ad
.RS 16n
.rt
The referenced socket is not of type
.BR SOCK_STREAM .
.RE

.sp
.ne 2
.mk
.na
.B EPROTO
.ad
.RS 16n
.rt
A protocol error has occurred; for example, the
.B STREAMS
protocol
stack has not been initialized or the connection has already been
released.
.RE

.sp
.ne 2
.mk
.na
.B EWOULDBLOCK
.ad
.RS 16n
.rt
The socket is marked as non-blocking and no connections are present to be
accepted.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR poll (2),
.BR bind (3SOCKET),
.BR connect (3SOCKET),
.BR listen (3SOCKET),
.BR select (3C),
.BR socket.h (3HEAD),
.BR socket (3SOCKET),
.BR netconfig (4),
.BR attributes (5)
