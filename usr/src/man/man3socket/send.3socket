'\" te
.\" Copyright (C) 2009, Sun Microsystems, Inc. All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" Copyright 1989 AT&T
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH send 3SOCKET "31 Aug 2009" "SunOS 5.11" "Sockets Library Functions"
.SH NAME
send, sendto, sendmsg \- send a message from a socket
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lsocket\fR \fB -lnsl \fR [ \fIlibrary\fR.\|.\|. ]
#include <sys/types.h>
#include <sys/socket.h>

\fBssize_t\fR \fBsend\fR(\fBint\fR \fIs\fR, \fBconst void *\fImsg\fR, \fBsize_t\fR \fIlen\fR, \fBint\fR \fIflags\fR);
.fi

.LP
.nf
\fBssize_t\fR \fBsendto\fR(\fBint\fR \fIs\fR, \fBconst void *\fImsg\fR, \fBsize_t\fR \fIlen\fR, \fBint\fR \fIflags\fR,
     \fBconst struct sockaddr *\fIto\fR, \fBint\fR  \fItolen\fR);
.fi

.LP
.nf
\fBssize_t\fR \fBsendmsg\fR(\fBint\fR \fIs\fR, \fBconst struct msghdr *\fImsg\fR, \fBint\fR \fIflags\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.BR send() ,
.BR sendto() ,
and
.B sendmsg()
functions are used to
transmit a message to another transport end-point. The
.B send()
function
can be used only when the socket is in a connected state. See
.BR connect (3SOCKET).
The
.B sendto()
and
.B sendmsg()
functions can
be used at any time. The
.I s
socket is created with
.BR socket (3SOCKET).
.sp
.LP
The address of the target is supplied by
.I to
with a
.IR tolen
parameter used to specify the size. The length of the message is supplied by
the
.I len
parameter. For socket types such as
.B SOCK_DGRAM
and
.B SOCK_RAW
that require atomic messages, the error
.B EMSGSIZE
is
returned and the message is not transmitted when it is too long to pass
atomically through the underlying protocol. The same restrictions do not
apply to
.B SOCK_STREAM
sockets.
.sp
.LP
A return value \fB\(mi1\fR indicates locally detected errors. It does not
imply a delivery failure.
.sp
.LP
If the socket does not have enough buffer space available to hold a
message, the
.B send()
function blocks the message, unless the socket has
been placed in non-blocking I/O mode (see
.BR fcntl (2)).
The
.BR select (3C)
or
.BR poll (2)
call can be used to determine when it is
possible to send more data.
.sp
.LP
The
.I flags
parameter is formed from the bitwise OR of zero or more of
the following:
.sp
.ne 2
.mk
.na
.B MSG_OOB
.ad
.RS 17n
.rt
Send
.B out-of-band
data on sockets that support this notion. The
underlying protocol must also support
.B out-of-band
data. Only
.B SOCK_STREAM
sockets created in the
.B AF_INET
or the
.BR AF_INET6
address family support out-of-band data.
.RE

.sp
.ne 2
.mk
.na
.B MSG_DONTROUTE
.ad
.RS 17n
.rt
The
.B SO_DONTROUTE
option is turned on for the duration of the
operation. It is used only by diagnostic or routing programs.
.RE

.sp
.LP
See \fBrecv\fR(3SOCKET) for a description of the
.B msghdr
structure.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, these functions return the number of bytes
sent. Otherwise, they return
.B -1
and set
.B errno
to indicate the
error.
.SH ERRORS
.sp
.LP
The
.BR send() ,
.BR sendto() ,
and
.B sendmsg()
functions return
errors under the following conditions:
.sp
.ne 2
.mk
.na
.B EBADF
.ad
.RS 16n
.rt
.I s
is not a valid file descriptor.
.RE

.sp
.ne 2
.mk
.na
.B EINTR
.ad
.RS 16n
.rt
The operation was interrupted by delivery of a signal before any data could
be buffered to be sent.
.RE

.sp
.ne 2
.mk
.na
.B EMSGSIZE
.ad
.RS 16n
.rt
The message is too large to be sent all at once (as the socket requires),
or the
.I msg_iovlen
member of the
.B msghdr
structure pointed to by
message is less than or equal to 0 or is greater than {\fBIOV_MAX\fR}.
.RE

.sp
.ne 2
.mk
.na
.B ENOMEM
.ad
.RS 16n
.rt
Insufficient memory is available to complete the operation.
.RE

.sp
.ne 2
.mk
.na
.B ENOSR
.ad
.RS 16n
.rt
Insufficient STREAMS resources are available for the operation to
complete.
.RE

.sp
.ne 2
.mk
.na
.B ENOTSOCK
.ad
.RS 16n
.rt
.I s
is not a socket.
.RE

.sp
.ne 2
.mk
.na
.B EWOULDBLOCK
.ad
.RS 16n
.rt
The socket is marked non-blocking and the requested operation would block.
.B EWOULDBLOCK
is also returned when sufficient memory is not immediately
available to allocate a suitable buffer. In such a case, the operation can
be retried later.
.RE

.sp
.ne 2
.mk
.na
.B ECONNREFUSED
.ad
.RS 16n
.rt
The requested connection was refused by the peer. For conected IPv4 and
IPv6 datagram sockets, this indicates that the system received an \fBICMP
Destination Port Unreachable\fR message from the peer in response to some
prior transmission.
.RE

.sp
.LP
The
.B send()
and
.B sendto()
functions return errors under the
following conditions:
.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The
.I len
argument overflows a
.BR ssize_t .
.sp
Inconsistent port attributes for system call.
.RE

.sp
.LP
The
.B sendto()
function returns errors under the following
conditions:
.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The value specified for the
.I tolen
parameter is not the size of a
valid address for the specified address family.
.RE

.sp
.ne 2
.mk
.na
.B EISCON
.ad
.RS 10n
.rt
A destination address was specified and the socket is already connected.
.RE

.sp
.LP
The
.B sendmsg()
function returns errors under the following
conditions:
.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The
.B msg_iovlen
member of the
.B msghdr
structure pointed to by
.I msg
is less than or equal to
.BR 0 ,
or the sum of the
.IR iov_len
values in the
.B msg_iov
array overflows a
.BR ssize_t .
.sp
One of the
.I iov_len
values in the
.B msg_iov
array member of the
.B msghdr
structure pointed to by
.I msg
is negative, or the sum of
the
.I iov_len
values in the
.B msg_iov
array overflows a
.BR ssize_t .
.sp
.B msg_iov
contents are inconsistent with port attributes.
.RE

.sp
.LP
The
.B send()
function returns errors under the following conditions:
.sp
.ne 2
.mk
.na
.B EPIPE
.ad
.RS 9n
.rt
The socket is shut down for writing, or the socket is connection-mode and
is no longer connected. In the latter case, if the socket is of type
.BR SOCK_STREAM ,
the
.B SIGPIPE
signal is generated to the calling
thread.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR fcntl (2),
.BR poll (2),
.BR write (2),
.BR connect (3SOCKET),
.BR getsockopt (3SOCKET),
.BR recv (3SOCKET),
.BR select (3C),
.BR socket (3SOCKET),
.BR socket.h (3HEAD),
.BR attributes (5)
