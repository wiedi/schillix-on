'\" te
.\" Copyright (C) 2009, Sun Microsystems, Inc. All Rights Reserved
.\" Copyright 1989 AT&T
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH bind 3SOCKET "11 May 2009" "SunOS 5.11" "Sockets Library Functions"
.SH NAME
bind \- bind a name to a socket
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR .\|.\|. ] \fIfile\fR .\|.\|. \fB-lsocket\fR \fB -lnsl \fR [ \fIlibrary\fR .\|.\|. ]
#include <sys/types.h>
#include <sys/socket.h>



\fBint\fR \fBbind\fR(\fBint\fR \fIs\fR, \fBconst struct sockaddr *\fIname\fR, \fBint\fR \fInamelen\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B bind()
function assigns a name to an unnamed socket. When a
socket is created with
.BR socket "(3SOCKET), it exists in a name space"
(address family) but has no name assigned. The
.B bind()
function
requests that the name pointed to by
.I name
be assigned to the socket.
.SH RETURN VALUES
.sp
.LP
Upon successful completion
.B 0
is returned. Otherwise,
.B \(mi1
is
returned and
.B errno
is set to indicate the error.
.SH ERRORS
.sp
.LP
The
.B bind()
function will fail if:
.sp
.ne 2
.mk
.na
.B EACCES
.ad
.RS 17n
.rt
The requested address is protected, and
.B {PRIV_NET_PRIVADDR}
is not
asserted in the effective set of the current process.
.RE

.sp
.ne 2
.mk
.na
.B EADDRINUSE
.ad
.RS 17n
.rt
The specified address is already in use.
.RE

.sp
.ne 2
.mk
.na
.B EADDRNOTAVAIL
.ad
.RS 17n
.rt
The specified address is not available on the local machine.
.RE

.sp
.ne 2
.mk
.na
.B EBADF
.ad
.RS 17n
.rt
\fIs\fR is not a valid descriptor.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 17n
.rt
\fInamelen\fR is not the size of a valid address for the specified address
family.
.sp
The socket is already bound to an address.
.sp
Socket options are inconsistent with port attributes.
.RE

.sp
.ne 2
.mk
.na
.B ENOSR
.ad
.RS 17n
.rt
There were insufficient
.B STREAMS
resources for the operation to
complete.
.RE

.sp
.ne 2
.mk
.na
.B ENOTSOCK
.ad
.RS 17n
.rt
\fIs\fR is a descriptor for a file, not a socket.
.RE

.sp
.LP
The following errors are specific to binding names in the UNIX domain:
.sp
.ne 2
.mk
.na
.B EACCES
.ad
.RS 11n
.rt
Search permission is denied for a component of the path prefix of the
pathname in
.IR name .
.RE

.sp
.ne 2
.mk
.na
.B EIO
.ad
.RS 11n
.rt
An I/O error occurred while making the directory entry or allocating the
inode.
.RE

.sp
.ne 2
.mk
.na
.B EISDIR
.ad
.RS 11n
.rt
A null pathname was specified.
.RE

.sp
.ne 2
.mk
.na
.B ELOOP
.ad
.RS 11n
.rt
Too many symbolic links were encountered in translating the pathname in
.IR name .
.RE

.sp
.ne 2
.mk
.na
.B ENOENT
.ad
.RS 11n
.rt
A component of the path prefix of the pathname in
.I name
does not
exist.
.RE

.sp
.ne 2
.mk
.na
.B ENOTDIR
.ad
.RS 11n
.rt
A component of the path prefix of the pathname in
.I name
is not a
directory.
.RE

.sp
.ne 2
.mk
.na
.B EROFS
.ad
.RS 11n
.rt
The inode would reside on a read-only file system.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR unlink (2),
.BR socket (3SOCKET),
.BR attributes (5),
.BR privileges (5),
.BR socket.h (3HEAD)
.SH NOTES
.sp
.LP
Binding a name in the UNIX domain creates a socket in the file system that
must be deleted by the caller when it is no longer needed by using
.BR unlink (2).
.sp
.LP
The rules used in name binding vary between communication domains.
