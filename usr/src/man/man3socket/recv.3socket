'\" te
.\" Copyright 1989 AT&T
.\" Copyright (C) 2006, Sun Microsystems, Inc. All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH recv 3SOCKET "20 Aug 2007" "SunOS 5.11" "Sockets Library Functions"
.SH NAME
recv, recvfrom, recvmsg \- receive a message from a socket
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lsocket\fR \fB -lnsl \fR [ \fIlibrary\fR.\|.\|. ]
#include <sys/types.h>
#include <sys/socket.h>
#include <sys/uio.h>

\fBssize_t\fR \fBrecv\fR(\fBint\fR \fIs\fR, \fBvoid *\fIbuf\fR, \fBsize_t\fR \fIlen\fR, \fBint\fR \fIflags\fR);
.fi

.LP
.nf
\fBssize_t\fR \fBrecvfrom\fR(\fBint\fR \fIs\fR, \fBvoid *\fIbuf\fR, \fBsize_t\fR \fIlen\fR, \fBint\fR \fIflags\fR,
     \fBstruct sockaddr *\fIfrom\fR, \fBsocklen_t *\fIfromlen\fR);
.fi

.LP
.nf
\fBssize_t\fR \fBrecvmsg\fR(\fBint\fR \fIs\fR, \fBstruct msghdr *\fImsg\fR, \fBint\fR \fIflags\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.BR recv() ,
\fBrecvfrom()\fR, and \fBrecvmsg()\fR functions are used to
receive messages from another socket. The
.I s
socket is created with
.BR socket (3SOCKET).
.sp
.LP
If \fIfrom\fR is a non-\fBNULL\fR pointer, the source address of the message is
filled in. The value-result parameter \fIfromlen\fR is initialized to the size
of the buffer associated with \fIfrom\fR and modified on return to indicate the
actual size of the address stored in the buffer. The length of the message is
returned. If a message is too long to fit in the supplied buffer, excess bytes
may be discarded depending on the type of socket from which the message is
received. See \fBsocket\fR(3SOCKET).
.sp
.LP
If no messages are available at the socket, the receive call waits for a
message to arrive. If the socket is non-blocking,
.B -1
is returned with the
external variable
.B errno
set to
.BR EWOULDBLOCK .
See \fBfcntl\fR(2).
.sp
.LP
For processes on the same host,
.B recvmsg()
can be used to receive a file
descriptor from another process, but it cannot receive ancillary data. See
.BR libxnet (3LIB).
.sp
.LP
If a zero-length buffer is specified for a message, an EOF condition results
that is indistinguishable from the successful transfer of a file descriptor. For
that reason, one or more bytes of data should be provided when \fBrecvmsg()\fR
passes a file descriptor.
.sp
.LP
The
.BR select "(3C) call can be used to determine when more data arrives."
.sp
.LP
The \fIflags\fR parameter is formed by an \fBOR\fR operation on one or more of
the following:
.sp
.ne 2
.mk
.na
.B MSG_OOB
.ad
.RS 16n
.rt
Read any \fBout-of-band\fR data present on the socket rather than the regular
\fBin-band\fR data.
.RE

.sp
.ne 2
.mk
.na
.B MSG_PEEK
.ad
.RS 16n
.rt
Peek at the data present on the socket. The data is returned, but not consumed
to allow a subsequent receive operation to see the same data.
.RE

.sp
.ne 2
.mk
.na
.B MSG_WAITALL
.ad
.RS 16n
.rt
Messages are blocked until the full amount of data requested is returned. The
\fBrecv()\fR function can return a smaller amount of data if a signal is caught,
the connection is terminated,
.B MSG_PEEK
is specified, or if an error is
pending for the socket.
.RE

.sp
.ne 2
.mk
.na
.B MSG_DONTWAIT
.ad
.RS 16n
.rt
Pending messages received on the connection are returned. If data is
unavailable, the function does not block. This behavior is the equivalent to
specifying
.B O_NONBLOCK
on the file descriptor of a socket, except that
write requests are unaffected.
.RE

.sp
.LP
The
.B recvmsg()
function call uses a
.B msghdr
structure defined in
<\fBsys/socket.h\fR> to minimize the number of directly supplied parameters.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, these functions return the number of bytes
received. Otherwise, they return
.B -1
and set
.B errno
to indicate the
error.
.SH ERRORS
.sp
.LP
The
.BR recv() ,
\fBrecvfrom()\fR, and \fBrecvmsg()\fR functions return errors
under the following conditions:
.sp
.ne 2
.mk
.na
.B EBADF
.ad
.RS 16n
.rt
The
.I s
file descriptor is invalid.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 16n
.rt
The
.B MSG_OOB
flag is set and no out-of-band data is available.
.RE

.sp
.ne 2
.mk
.na
.B EINTR
.ad
.RS 16n
.rt
The operation is interrupted by the delivery of a signal before any data is
available to be received.
.RE

.sp
.ne 2
.mk
.na
.B EIO
.ad
.RS 16n
.rt
An I/O error occurs while reading from or writing to the file system.
.RE

.sp
.ne 2
.mk
.na
.B ENOMEM
.ad
.RS 16n
.rt
Insufficient user memory is available to complete operation.
.RE

.sp
.ne 2
.mk
.na
.B ENOSR
.ad
.RS 16n
.rt
Insufficient
.B STREAMS
resources are available for the operation to
complete.
.RE

.sp
.ne 2
.mk
.na
.B ENOTSOCK
.ad
.RS 16n
.rt
\fIs\fR is not a socket.
.RE

.sp
.ne 2
.mk
.na
.B ESTALE
.ad
.RS 16n
.rt
A stale NFS file handle exists.
.RE

.sp
.ne 2
.mk
.na
.B EWOULDBLOCK
.ad
.RS 16n
.rt
The socket is marked non-blocking and the requested operation would block.
.RE

.sp
.ne 2
.mk
.na
.B ECONNREFUSED
.ad
.RS 16n
.rt
The requested connection was refused by the peer. For connected IPv4 and IPv6
datagram sockets, this indicates that the system received an \fBICMP Destination
Port Unreachable\fR message from the peer.
.RE

.sp
.LP
The
.B recv()
and \fBrecvfrom()\fR functions fail under the following
conditions:
.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The
.I len
argument overflows a
.BR ssize_t .
.RE

.sp
.LP
The
.B recvmsg()
function returns errors under the following conditions:
.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The
.B msg_iovlen
member of the
.B msghdr
structure pointed to by
\fImsg\fR is less than or equal to
.BR 0 ,
or greater than
.BR [IOV_MAX} .
See
.BR Intro (2)
for a definition of \fB[IOV_MAX}\fR.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
One of the
.I iov_len
values in the
.B msg_iov
array member of the
\fBmsghdr\fR structure pointed to by \fImsg\fR is negative, or the sum of the
\fIiov_len\fR values in the \fBmsg_iov\fR array overflows a \fBssize_t\fR.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
\fBfcntl\fR(2), \fBioctl\fR(2),
.BR read (2),
.BR connect (3SOCKET),
.BR getsockopt (3SOCKET),
.BR libxnet (3LIB),
.BR select (3C),
.BR send (3SOCKET),
.BR socket (3SOCKET),
.BR socket.h (3HEAD),
.BR attributes (5)
