'\" te
.\" This manual page is derived from the DAT/uDAPL 1.2 specification.
.\" Portions Copyright (c) 2007, Sun Microsystems, Inc. All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH dat_srq_query 3DAT "16 Jul 2004" "SunOS 5.11" "Direct Access Transport Library Functions"
.SH NAME
dat_srq_query \- provide parameters of the shared receive queue
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR\&.\|.\|. ] \fIfile\fR\&.\|.\|. \fB-ldat\fR [ \fIlibrary\fR\&.\|.\|. ]
#include <\fBdat/udat.h\fR>

DAT_RETURN
    dat_srq_query (
    IN      DAT_SRQ_HANDLE      srq_handle,
    IN      DAT_SRQ_PARAM_MASK  srq_param_mask,
    OUT     DAT_SRQ_PARAM       *srq_param
    )
.fi

.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I srq_handle
.ad
.RS 18n
.rt
A handle for an instance of the SRQ.
.RE

.sp
.ne 2
.mk
.na
.I srq_param_mask
.ad
.RS 18n
.rt
The mask for SRQ parameters.
.RE

.sp
.ne 2
.mk
.na
.I srq_param
.ad
.RS 18n
.rt
A pointer to a Consumer-allocated structure that the Provider fills with
SRQ parameters.
.RE

.SH DESCRIPTION
.sp
.LP
The
.B dat_srq_query()
function provides to the Consumer SRQ parameters.
The Consumer passes a pointer to the Consumer-allocated structures for SRQ
parameters that the Provider fills.
.sp
.LP
The
.I srq_param_mask
argument allows Consumers to specify which
parameters to query. The Provider returns values for the requested
\fIsrq_param_mask\fR parameters. The Provider can return values for any
other parameters.
.sp
.LP
.RB "In addition to the elements in SRQ attribute," " dat_srq_query()"
provides additional information in the
.B srq_param
structure if Consumer
requests it with
.I srq_param_mask
settings. The two that are related to
entry counts on SRQ are the number of Receive buffers
(\fIavailable_dto_count\fR) available for EPs to dequeue and the number of
occupied SRQ entries (\fIoutstanding_dto_count\fR) not available for new
Recv buffer postings.
.SH RETURN VALUES
.sp
.ne 2
.mk
.na
.B DAT_SUCCESS
.ad
.RS 25n
.rt
The operation was successful.
.RE

.sp
.ne 2
.mk
.na
.B DAT_INVALID_PARAMETER
.ad
.RS 25n
.rt
The
.I srq_param_mask
argument is invalid.
.RE

.sp
.ne 2
.mk
.na
.B DAT_INVALID_HANDLE
.ad
.RS 25n
.rt
The
.I srq_handle
argument is an invalid DAT handle.
.RE

.SH USAGE
.sp
.LP
The Provider might not be able to provide the number of outstanding Recv of
SRQ or available Recvs of SRQ. The Provider attribute indicates if the
Provider does not support the query for one or these values. Even when the
Provider supports the query for one or both of these values, it might not be
able to provide this value at this moment. In either case, the return value
for the attribute that cannot be provided will be
.BR DAT_VALUE_UNKNOWN .
.sp
.LP
Example: Consumer created SRQ with 10 entries and associated 1 EP with it.
3 Recv buffers have been posted to it. The query will report:
.sp
.in +2
.nf
max_recv_dtos=10,
available_dto_count=3,
outstanding_dto_count=3.
.fi
.in -2
.sp

.sp
.LP
After a Send message arrival the query will report:
.sp
.in +2
.nf
max_recv_dtos=10,
available_dto_count=2,
outstanding_dto_count=3.
.fi
.in -2
.sp

.sp
.LP
After Consumer dequeues Recv completion the query will report:
.sp
.in +2
.nf
max_recv_dtos=10,
available_dto_count=2,
outstanding_dto_count=2.
.fi
.in -2
.sp

.sp
.LP
In general, each EP associated with SRQ can have multiple buffers in
progress of receiving messages as well completed Recv on EVDs. The watermark
setting helps to control how many Recv buffers posted to SRQ an Endpoint can
own.
.sp
.LP
If the Provider cannot support the query for the number of outstanding Recv
of SRQ or available Recvs of SRQ, the value return for that attribute should
be
.BR DAT_VALUE_UNKNOWN .
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard: uDAPL, 1.2
_
MT-LevelUnsafe
.TE

.SH SEE ALSO
.sp
.LP
.BR dat_srq_create (3DAT),
.BR dat_srq_free (3DAT),
.BR dat_srq_post_recv (3DAT),
.BR dat_srq_resize (3DAT),
.BR dat_srq_set_lw (3DAT),
.BR libdat (3LIB),
.BR attributes (5)
