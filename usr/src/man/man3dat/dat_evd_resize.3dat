'\" te
.\" This manual page is derived from the DAT/uDAPL 1.2 specification.
.\" Portions Copyright (c) 2007, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH dat_evd_resize 3DAT "16 Jul 2004" "SunOS 5.11" "Direct Access Transport Library Functions"
.SH NAME
dat_evd_resize \- modify the size of the event queue of Event Dispatcher
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR\&.\|.\|. ] \fIfile\fR\&.\|.\|. \fB-ldat\fR [ \fIlibrary\fR\&.\|.\|. ]
#include <\fBdat/udat.h\fR>

DAT_RETURN
    dat_evd_resize(
    IN    DAT_EVD_HANDLE    \fIevd_handle\fR,
    IN    DAT_COUNT         \fIevd_min_qlen\fR
    )
.fi

.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I evd_handle
.ad
.RS 16n
.rt
Handle for an instance of Event Dispatcher.
.RE

.sp
.ne 2
.mk
.na
.I evd_min_qlen
.ad
.RS 16n
.rt
New number of events the Event Dispatcher event queue must hold.
.RE

.SH DESCRIPTION
.sp
.LP
The
.B dat_evd_resize()
function modifies the size of the event queue of
Event Dispatcher.
.sp
.LP
Resizing of Event Dispatcher event queue should not cause any incoming or
current events on the event queue to be lost. If the number of entries on
the event queue is larger then the requested evd_min_qlen\fR, the
operation can return
.B DAT_INVALID_STATE
and not change an instance of
Event Dispatcher
.SH RETURN VALUES
.sp
.ne 2
.mk
.na
.B DAT_SUCCESS
.ad
.RS 30n
.rt
The operation was successful.
.RE

.sp
.ne 2
.mk
.na
.B DAT_INVALID_HANDLE
.ad
.RS 30n
.rt
The
.I evd_handle
parameter is invalid.
.RE

.sp
.ne 2
.mk
.na
.B DAT_INVALID_PARAMETER
.ad
.RS 30n
.rt
The
.I evd_min_qlen
parameter is invalid
.RE

.sp
.ne 2
.mk
.na
.B DAT_INSUFFICIENT_RESOURCES
.ad
.RS 30n
.rt
The operation failed due to resource limitations
.RE

.sp
.ne 2
.mk
.na
.B DAT_INVALID_STATE
.ad
.RS 30n
.rt
Invalid parameter. The number of entries on the event queue of the Event
Dispatcher exceeds the requested event queue length.
.RE

.SH USAGE
.sp
.LP
This operation is useful when the potential number of events that could be
placed on the event queue changes dynamically.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard: uDAPL, 1.1, 1.2
_
MT-LevelUnsafe
.TE

.SH SEE ALSO
.sp
.LP
.BR libdat (3LIB),
.BR attributes (5)
