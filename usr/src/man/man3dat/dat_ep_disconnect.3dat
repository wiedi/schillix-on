'\" te
.\" This manual page is derived from the DAT/uDAPL 1.2 specification.
.\" Portions Copyright (c) 2007, Sun Microsystems, Inc. All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH dat_ep_disconnect 3DAT "16 Jul 2004" "SunOS 5.11" "Direct Access Transport Library Functions"
.SH NAME
dat_ep_disconnect \- terminate a connection or a connection establishment
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR\&.\|.\|. ] \fIfile\fR\&.\|.\|. \fB-ldat\fR [ \fIlibrary\fR\&.\|.\|. ]
#include <\fBdat/udat.h\fR>

DAT_RETURN
    dat_ep_disconnect (
    IN    DAT_EP_HANDLE      ep_handle,
    IN    DAT_CLOSE_FLAGS    disconnect_flags
    )
.fi

.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I ep_handle
.ad
.RS 20n
.rt
Handle for an instance of Endpoint.
.RE

.sp
.ne 2
.mk
.na
.I disconnect_flags
.ad
.RS 20n
.rt
Flags for disconnect. Flag values are as follows:
.sp
.ne 2
.mk
.na
.B DAT_CLOSE_ABRUPT_FLAG
.ad
.RS 27n
.rt
Abrupt close. This is the default value.
.RE

.sp
.ne 2
.mk
.na
.B DAT_CLOSE_GRACEFUL_FLAG
.ad
.RS 27n
.rt
Graceful close.
.RE

.RE

.SH DESCRIPTION
.sp
.LP
The
.B dat_ep_disconnect()
function requests a termination of a
connection or connection establishment. This operation is used by the
active/client or a passive/server side Consumer of the connection model.
.sp
.LP
The
.I disconnect_flags
parameter allows Consumers to specify whether
they want graceful or abrupt disconnect. Upon disconnect, all outstanding
and in-progress DTOs and RMR Binds must be completed.
.sp
.LP
For abrupt disconnect, all outstanding DTOs and RMR Binds are completed
unsuccessfully, and in-progress DTOs and RMR Binds can be completed
successfully or unsuccessfully. If an in-progress DTO is completed
unsuccessfully, all follow on in-progress DTOs in the same direction also
must be completed unsuccessfully. This order is presented to the Consumer
through a DTO completion Event Stream of the
.I recv_evd_handle
and and
.I request_evd_handle
of the Endpoint.
.sp
.LP
For graceful disconnect, all outstanding and in-progress request DTOs and
RMR Binds must try to be completed successfully first, before disconnect
proceeds. During that time, the local Endpoint is in a
.B DAT_EP_DISCONNECT_PENDING
state.
.sp
.LP
The Consumer can call abrupt
.B dat_ep_disconnect()
when the local
Endpoint is in the
.B DAT_EP_DISCONNECT_PENDING
state. This causes the
Endpoint to transition into
.B DAT_EP_STATE_DISCONNECTED
without waiting
for outstanding and in-progress request DTOs and RMR Binds to successfully
complete. The graceful
.B dat_ep_disconnect()
call when the local
Endpoint is in the
.B DAT_EP_DISCONNECT_PENDING
state has no effect.
.sp
.LP
If the Endpoint is not in
.BR DAT_EP_STATE_CONNECTED ,
the semantic of the
operation is the same for graceful or abrupt
.I disconnect_flags
value.
.sp
.LP
No new Send, RDMA Read, and RDMA Write DTOs, or RMR Binds can be posted to
the Endpoint when the local Endpoint is in the
.B DAT_EP_DISCONNECT_PENDING
state.
.sp
.LP
The successful completion of the disconnect is reported to the Consumer
through a
.B DAT_CONNECTION_EVENT_DISCONNECTED
event on
.I connect_evd_handle
of the Endpoint. The Endpoint is automatically
transitioned into a
.B DAT_EP_STATE_DISCONNECTED
state upon successful
asynchronous completion. If the same EVD is used for
.I connect_evd_handle
and any
.I recv_evd_handle
and
request_evd_handle, all successful Completion events of in-progress DTOs
precede the Disconnect Completion event.
.sp
.LP
Disconnecting an unconnected Disconnected Endpoint is no-op. Disconnecting
an Endpoint in
.BR DAT_EP_STATE_UNCONNECTED ,
.BR DAT_EP_STATE_RESERVED ,
.BR DAT_EP_STATE_PASSIVE_CONNECTION_PENDING ,
and
.B DAT_EP_STATE_TENTATIVE_CONNECTION_PENDING
is disallowed.
.sp
.LP
Both abrupt and graceful disconnect of the Endpoint during connection
establishment,
.B DAT_EP_STATE_ACTIVE_CONNECTION_PENDING
and
\fBDAT_EP_STATE_COMPLETION_PENDING\fR, "aborts" the connection establishment
and transitions the local Endpoint into
.BR DAT_EP_STATE_DISCONNECTED .
That causes preposted Recv DTOs to be flushed to
.IR recv_evd_handle .
.SH RETURN VALUES
.sp
.ne 2
.mk
.na
.B DAT_SUCCESS
.ad
.RS 30n
.rt
The operation was successful.
.RE

.sp
.ne 2
.mk
.na
.B DAT_INVALID_HANDLE
.ad
.RS 30n
.rt
The
.I ep_handle
parameter is invalid.
.RE

.sp
.ne 2
.mk
.na
.B DAT_INSUFFICIENT_RESOURCES
.ad
.RS 30n
.rt
The operation failed due to resource limitations.
.RE

.sp
.ne 2
.mk
.na
.B DAT_INVALID_PARAMETER
.ad
.RS 30n
.rt
The
.I disconnect_flags
parameter is invalid.
.RE

.sp
.ne 2
.mk
.na
.B DAT_INVALID_STATE
.ad
.RS 30n
.rt
A parameter is in an invalid state. Endpoint is not in the valid state for
disconnect.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard: uDAPL, 1.1, 1.2
_
MT-Level Unsafe
.TE

.SH SEE ALSO
.sp
.LP
.BR libdat (3LIB),
.BR attributes (5)
