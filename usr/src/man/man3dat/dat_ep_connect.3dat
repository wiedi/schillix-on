'\" te
.\" This manual page is derived from the DAT/uDAPL 1.2 specification.
.\" Portions Copyright (c) 2007, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH dat_ep_connect 3DAT "16 Jul 2004" "SunOS 5.11" "Direct Access Transport Library Functions"
.SH NAME
dat_ep_connect \- establish a connection between the local Endpoint and a
remote Endpoint
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR\&.\|.\|. ] \fIfile\fR\&.\|.\|. \fB-ldat\fR [ \fIlibrary\fR\&.\|.\|. ]
#include <\fBdat/udat.h\fR>

DAT_RETURN
    dat_ep_connect (
    IN    DAT_EP_HANDLE         ep_handle,
    IN    DAT_IA_ADDRESS_PTR    remote_ia_address,
    IN    DAT_CONN_QUAL         remote_conn_qual,
    IN    DAT_TIMEOUT           timeout,
    IN    DAT_COUNT             private_data_size,
    IN const  DAT_PVOID         private_data,
    IN    DAT_QOS               qos,
    IN    DAT_CONNECT_FLAGS     connect_flags
    )
.fi

.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I ep_handle
.ad
.RS 21n
.rt
Handle for an instance of an Endpoint.
.RE

.sp
.ne 2
.mk
.na
.I remote_ia_address
.ad
.RS 21n
.rt
The Address of the remote IA to which an Endpoint is requesting a
connection.
.RE

.sp
.ne 2
.mk
.na
.I remote_conn_qual
.ad
.RS 21n
.rt
Connection Qualifier of the remote IA from which an Endpoint requests a
connection.
.RE

.sp
.ne 2
.mk
.na
.I timeout
.ad
.RS 21n
.rt
Duration of time, in microseconds, that a Consumer waits for Connection
establishment. The value of
.B DAT_TIMEOUT_INFINITE
represents no
timeout, indefinite wait. Values must be positive.
.RE

.sp
.ne 2
.mk
.na
.I private_data_size
.ad
.RS 21n
.rt
Size of the
.IR private_data .
Must be nonnegative.
.RE

.sp
.ne 2
.mk
.na
.I private_data
.ad
.RS 21n
.rt
Pointer to the private data that should be provided to the remote Consumer
as part of the Connection Request. If
.I private_data_size
is zero, then
.I private_data
can be
.IR NULL .
.RE

.sp
.ne 2
.mk
.na
.I qos
.ad
.RS 21n
.rt
Requested quality of service of the connection.
.RE

.sp
.ne 2
.mk
.na
.I connect_flags
.ad
.RS 21n
.rt
Flags for the requested connection. If the least significant bit of
.B DAT_MULTIPATH_FLAG
is 0, the Consumer does not request multipathing.
If the least significant bit of
.B DAT__MULTIPATH_FLAG
is 1, the Consumer
requests multipathing. The default value is
.BR DAT_CONNECT_DEFAULT_FLAG ,
which is 0.
.RE

.SH DESCRIPTION
.sp
.LP
The
.B dat_ep_connect()
function requests that a connection be
established between the local Endpoint and a remote Endpoint. This operation
is used by the active/client side Consumer of the Connection establishment
model. The remote Endpoint is identified by Remote IA and Remote Connection
Qualifier.
.sp
.LP
As part of the successful completion of this operation, the local Endpoint
is bound to a Port Qualifier of the local IA. The Port Qualifier is passed
to the remote side of the requested connection and is available to the
remote Consumer in the Connection Request of the
.BR DAT_CONNECTION_REQUEST_EVENT .
.sp
.LP
The Consumer-provided
.I private_data
is passed to the remote side and
is provided to the remote Consumer in the Connection Request. Consumers can
encapsulate any local Endpoint attributes that remote Consumers need to know
as part of an upper-level protocol. Providers can also provide a Provider on
the remote side any local Endpoint attributes and Transport-specific
information needed for Connection establishment by the Transport.
.sp
.LP
Upon successful completion of this operation, the local Endpoint is
transferred into
.BR DAT_EP_STATE_ACTIVE_CONNECTION_PENDING .
.sp
.LP
Consumers can request a specific value of
.IR qos .
The Provider specifies
which quality of service it supports in documentation and in the Provider
attributes. If the local Provider or Transport does not support the
requested
.IR qos ,
the operation fails and
.BR DAT_MODEL_NOT_SUPPORTED
is returned synchronously. If the remote Provider does not support the
requested
.IR qos ,
the local Endpoint is automatically transitioned into
the
.B DAT_EP_STATE_DISCONNECTED
state, the connection is not
established, and the event returned on the
.I connect_evd_handle
is
.BR DAT_CONNECTION_EVENT_NON_PEER_REJECTED .
The same
.B DAT_CONNECTION_EVENT_NON_PEER_REJECTED
event is returned if the
connection cannot be established for all reasons of not establishing the
connection, except timeout, remote host not reachable, and remote peer
reject. For example, remote Consumer is not listening on the requested
Connection Qualifier, Backlog of the requested Service Point is full, and
Transport errors. In this case, the local Endpoint is automatically
transitioned into
.B DAT_EP_STATE_DISCONNECTED
state.
.sp
.LP
The acceptance of the requested connection by the remote Consumer is
reported to the local Consumer through a
.B DAT_CONNECTION_EVENT_ESTABLISHED
event on the
.IR connect_evd_handle
of the local Endpoint and the local Endpoint is automatically transitioned
into a
.B DAT_EP_STATE_CONNECTED
state.
.sp
.LP
The rejection of the connection by the remote Consumer is reported to the
local Consumer through a
.B DAT_CONNECTION_EVENT_PEER_REJECTED
event on
the
.I connect_evd_handle
of the local Endpoint and the local Endpoint is
automatically transitioned into a
.B DAT_EP_STATE_DISCONNECTED
state.
.sp
.LP
When the Provider cannot reach the remote host or the remote host does not
respond within the Consumer requested Timeout, a
.B DAT_CONNECTION_EVENT_UNREACHABLE
event is generated on the
.I connect_evd_handle
of the Endpoint. The Endpoint transitions into a
.B DAT_EP_STATE_DISCONNECTED
state.
.sp
.LP
If the Provider can locally determine that the
.I remote_ia_address
is
invalid, or that the remote_ia_address cannot be converted to a
Transport-specific address, the operation can fail synchronously with a
.B DAT_INVALID_ADDRESS
return.
.sp
.LP
The local Endpoint is automatically transitioned into a
.B DAT_EP_STATE_CONNECTED
state when a Connection Request accepted by the
remote Consumer and the Provider completes the Transport-specific Connection
establishment. The local Consumer is notified of the established connection
through a
.B DAT_CONNECTION_EVENT_ESTABLISHED
event on the
.I connect_evd_handle
of the local Endpoint.
.sp
.LP
When the
.I timeout
expired prior to completion of the Connection
establishment, the local Endpoint is automatically transitioned into a
.B DAT_EP_STATE_DISCONNECTED
state and the local Consumer through a
.B DAT_CONNECTION_EVENT_TIMED_OUT
event on the
.IR connect_evd_handle
of the local Endpoint.
.SH RETURN VALUES
.sp
.ne 2
.mk
.na
.B DAT_SUCCESS
.ad
.RS 30n
.rt
The operation was successful.
.RE

.sp
.ne 2
.mk
.na
.B DAT_INSUFFICIENT_RESOURCES
.ad
.RS 30n
.rt
The operation failed due to resource limitations.
.RE

.sp
.ne 2
.mk
.na
.B DAT_INVALID_PARAMETER
.ad
.RS 30n
.rt
Invalid parameter.
.RE

.sp
.ne 2
.mk
.na
.B DAT_INVALID_ADDRESS
.ad
.RS 30n
.rt
Invalid address.
.RE

.sp
.ne 2
.mk
.na
.B DAT_INVALID_HANDLE
.ad
.RS 30n
.rt
Invalid DAT handle; Invalid Endpoint handle.
.RE

.sp
.ne 2
.mk
.na
.B DAT_INVALID_STATE
.ad
.RS 30n
.rt
Parameter in an invalid state. Endpoint was not in
.B DAT_EP_STATE_UNCONNECTED
state.
.RE

.sp
.ne 2
.mk
.na
.B DAT_MODEL_NOT_SUPPORTED
.ad
.RS 30n
.rt
The requested Model was not supported by the Provider. For example, the
requested qos was not supported by the local Provider.
.RE

.SH USAGE
.sp
.LP
It is up to the Consumer to negotiate outstanding RDMA Read incoming and
outgoing with a remote peer. The outstanding RDMA Read outgoing attribute
should be smaller than the remote Endpoint outstanding RDMA Read incoming
attribute. If this is not the case, Connection establishment might fail.
.sp
.LP
DAT API does not define a protocol on how remote peers exchange Endpoint
attributes. The exchange of outstanding RDMA Read incoming and outgoing
attributes of EPs is left to the Consumer ULP. The Consumer can use Private
Data for it.
.sp
.LP
If the Consumer does not care about posting RDMA Read operations or remote
RDMA Read operations on the connection, it can set the two outstanding RDMA
Read attribute values to 0.
.sp
.LP
If the Consumer does not set the two outstanding RDMA Read attributes of
the Endpoint, the Provider is free to pick up any value for default. The
Provider is allowed to change these default values during connection
setup.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard: uDAPL, 1.1, 1.2
_
MT-LevelUnsafe
.TE

.SH SEE ALSO
.sp
.LP
.BR libdat (3LIB),
.BR attributes (5)
