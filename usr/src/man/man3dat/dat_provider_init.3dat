'\" te
.\" This manual page is derived from the DAT/uDAPL 1.2 specification.
.\" Portions Copyright (c) 2007, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH dat_provider_init 3DAT "16 Jul 2004" "SunOS 5.11" "Direct Access Transport Library Functions"
.SH NAME
dat_provider_init \- locate the Provider in the Static Registry
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR\&.\|.\|. ] \fIfile\fR\&.\|.\|. \fB-ldat\fR [ \fIlibrary\fR\&.\|.\|. ]
#include <\fBdat/udat.h\fR>

void
    dat_provider_init (
    IN    const DAT_PROVIDER_INFO    *provider_info,
    IN    const char *               instance_data
    )
.fi

.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I provider_info
.ad
.RS 17n
.rt
The information that was provided by the Consumer to locate the Provider in
the Static Registry.
.RE

.sp
.ne 2
.mk
.na
.I instance_data
.ad
.RS 17n
.rt
The instance data string obtained from the entry found in the Static
Registry for the Provider.
.RE

.SH DESCRIPTION
.sp
.LP
A constructor the Registry calls on a Provider before the first call to
.BR dat_ia_open (3DAT)
for a given IA name when the Provider is
auto-loaded. An application that explicitly loads a Provider on its own can
choose to use
.B dat_provider_init()
just as the Registry would have done
for an auto-loaded Provider.
.sp
.LP
The Provider's implementation of this method must call
.BR dat_registry_add_provider (3DAT),
using the IA name in the
.B provider_info.ia_name
field, to register itself with the Dynamic
Registry. The implementation must not register other IA names at this time.
Otherwise, the Provider is free to perform any initialization it finds
useful within this method.
.sp
.LP
This method is called before the first call to
.B dat_ia_open()
for a
given IA name after one of the following has occurred:
.RS +4
.TP
.ie t \(bu
.el o
The Provider library was loaded into memory.
.RE
.RS +4
.TP
.ie t \(bu
.el o
The Registry called
.BR dat_provider_fini (3DAT)
for that IA name.
.RE
.RS +4
.TP
.ie t \(bu
.el o
The Provider called
.BR dat_registry_remove_provider (3DAT)
for that IA
name (but it is still the Provider indicated in the Static Registry).
.RE
.sp
.LP
If this method fails, it should ensure that it does not leave its entry in
the Dynamic Registry.
.SH RETURN VALUES
.sp
.LP
No values are returned.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard: uDAPL, 1.1, 1.2
_
MT-Level
.TE

.SH SEE ALSO
.sp
.LP
.BR dat_ia_open (3DAT),
.BR dat_provider_fini (3DAT),
.BR dat_registry_add_provider (3DAT),
.BR dat_registry_remove_provider (3DAT),
.BR libdat (3LIB),
.BR attributes (5)
