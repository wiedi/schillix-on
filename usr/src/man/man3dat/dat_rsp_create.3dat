'\" te
.\" This manual page is derived from the DAT/uDAPL 1.2 specification.
.\" Portions Copyright (c) 2007, Sun Microsystems, Inc. All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH dat_rsp_create 3DAT "16 Jul 2004" "SunOS 5.11" "Direct Access Transport Library Functions"
.SH NAME
dat_rsp_create \- create a Reserved Service Point
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR\&.\|.\|. ] \fIfile\fR\&.\|.\|. \fB-ldat\fR [ \fIlibrary\fR\&.\|.\|. ]
#include <\fBdat/udat.h\fR>

DAT_RETURN
    dat_rsp_create (
    IN    DAT_IA_HANDLE    ia_handle,
    IN    DAT_CONN_QUAL    conn_qual,
    IN    DAT_EP_HANDLE    ep_handle,
    IN    DAT_EVD_HANDLE   evd_handle,
    OUT   DAT_RSP_HANDLE   *rsp_handle
    )
.fi

.SH PARAMETERS
.sp
.ne 2
.mk
.na
.I ia_handle
.ad
.RS 14n
.rt
Handle for an instance of DAT IA.
.RE

.sp
.ne 2
.mk
.na
.I conn_qual
.ad
.RS 14n
.rt
Connection Qualifier of the IA the Reserved Service Point listens to.
.RE

.sp
.ne 2
.mk
.na
.I ep_handle
.ad
.RS 14n
.rt
Handle for the Endpoint associated with the Reserved Service Point that is
the only Endpoint that can accept a Connection Request on this Service
Point. The value
.B DAT_HANDLE_NULL
requests the Provider to associate a
Provider-created Endpoint with this Service Point.
.RE

.sp
.ne 2
.mk
.na
.I evd_handle
.ad
.RS 14n
.rt
The Event Dispatcher to which an event of Connection Request arrival is
generated.
.RE

.sp
.ne 2
.mk
.na
.I rsp_handle
.ad
.RS 14n
.rt
Handle to an opaque Reserved Service Point.
.RE

.SH DESCRIPTION
.sp
.LP
The
.B dat_rsp_create()
function creates a Reserved Service Point with
the specified Endpoint that generates, at most, one Connection Request that
is delivered to the specified Event Dispatcher in a Notification event.
.SH RETURN VALUES
.sp
.ne 2
.mk
.na
.B DAT_SUCCESS
.ad
.RS 30n
.rt
The operation was successful.
.RE

.sp
.ne 2
.mk
.na
.B DAT_INSUFFICIENT_RESOURCES
.ad
.RS 30n
.rt
The operation failed due to resource limitations.
.RE

.sp
.ne 2
.mk
.na
.B DAT_INVALID_HANDLE
.ad
.RS 30n
.rt
The
.IR ia_handle ,
.IR evd_handle ,
or
.I ep_handle
parameter is
invalid.
.RE

.sp
.ne 2
.mk
.na
.B DAT_INVALID_PARAMETER
.ad
.RS 30n
.rt
The
.I conn_qual
parameter is invalid.
.RE

.sp
.ne 2
.mk
.na
.B DAT_INVALID_STATE
.ad
.RS 30n
.rt
Parameter in an invalid state. For example, an Endpoint was not in the Idle
state.
.RE

.sp
.ne 2
.mk
.na
.B DAT_CONN_QUAL_IN_USE
.ad
.RS 30n
.rt
Specified Connection Qualifier is in use.
.RE

.SH USAGE
.sp
.LP
The usage of a Reserve Service Point is as follows:
.RS +4
.TP
.ie t \(bu
.el o
The DAT Consumer creates a Local Endpoint and configures it
appropriately.
.RE
.RS +4
.TP
.ie t \(bu
.el o
The DAT Consumer creates a Reserved Service Point specifying the Local
Endpoint.
.RE
.RS +4
.TP
.ie t \(bu
.el o
The Reserved Service Point performs the following:
.RS +4
.TP
.ie t \(bu
.el o
Collects native transport information reflecting a received Connection
Request.
.RE
.RS +4
.TP
.ie t \(bu
.el o
Creates a Pending Connection Request.
.RE
.RS +4
.TP
.ie t \(bu
.el o
Creates a Connection Request Notice (event) that includes the Pending
Connection Request (which includes, among others, Reserved Service Point
Connection Qualifier, its Local Endpoint, and information about remote
Endpoint).
.RE
.RS +4
.TP
.ie t \(bu
.el o
Delivers the Connection Request Notice to the Consumer-specified target
(CNO)
.IR evd_handle .
The Local Endpoint is transitioned from Reserved to
Passive Connection Pending state.
.RE
.RE
.RS +4
.TP
.ie t \(bu
.el o
Upon receiving a connection request, or at some time subsequent to that,
the DAT Consumer must either
.B accept()
or
.B reject()
the Pending
Connection Request.
.RE
.RS +4
.TP
.ie t \(bu
.el o
If accepted, the original Local Endpoint is now in a
.B Connected
state
and fully usable for this connection, pending only native transport mandated
RTU messages. This includes binding it to the IA port if that was not done
previously. The Consumer is notified that the Endpoint is in a
\fBConnected\fR state by a Connection Established Event on the Endpoint
.IR connect_evd_handle .
.RE
.RS +4
.TP
.ie t \(bu
.el o
If rejected, the Local Endpoint point transitions into \fBUnconnected\fR
state. The DAT Consumer can elect to destroy it or reuse it for other
purposes.
.RE
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard: uDAPL, 1.1, 1.2
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR libdat (3LIB),
.BR attributes (5)
