'\" te
.\" Copyright (c) 1996, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" Copyright 1989 AT&T
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH p2open 3GEN "29 Dec 1996" "SunOS 5.11" "String Pattern-Matching Library Functions"
.SH NAME
p2open, p2close \- open, close pipes to and from a command
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR .\|.\|. ] \fIfile\fR .\|.\|. \fB-lgen\fR [ \fIlibrary\fR .\|.\|. ]
#include <libgen.h>

\fBint\fR \fBp2open\fR(\fBconst char *\fIcmd\fR, \fBFILE *\fIfp\fR[2]);
.fi

.LP
.nf
\fBint\fR \fBp2close\fR(\fBFILE *\fIfp\fR[2]);
.fi

.SH DESCRIPTION
.sp
.LP
The
.BR p2open() gfunction
forks and execs a shell running the command
line pointed to by
.IR cmd .
On return, \fBfp[0]\fR points to a \fBFILE\fR
pointer to write the command's standard input and
.B fp[1]
points to a
.B FILE
pointer to read from the command's  standard output.  In this way
the program has control over the input and output of the command.
.sp
.LP
The function returns
.B 0
if successful; otherwise, it returns
.BR \(mi1 \&.
.sp
.LP
The
.B p2close()
function is used to close the file pointers that
.B p2open()
opened.  It waits for the process to terminate and returns
the process status. It returns
.B 0
if successful; otherwise, it returns
.BR \(mi1 \&.
.SH RETURN VALUES
.sp
.LP
A common problem is having too few file descriptors. The
.B p2close()
function returns \fB\(mi1\fR if the two file pointers are not from the same
.BR p2open() .
.SH EXAMPLES
.LP
.B Example 1
Example of file descriptors.
.sp
.in +2
.nf
#include <stdio.h>
#include <libgen.h>

main(argc,argv)
int argc;
char **argv;
{
	FILE *fp[2];
	pid_t pid;
	char buf[16];

        pid=p2open("/usr/bin/cat", fp);
        if ( pid == \(mi1 ) {
		fprintf(stderr, "p2open failed\en");
		exit(1);
	}
	write(fileno(fp[0]),"This is a test\en", 16);
	if(read(fileno(fp[1]), buf, 16) <=0)
		fprintf(stderr, "p2open failed\en");
	else
		write(1, buf, 16);
	(void)p2close(fp);
}
.fi
.in -2

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelUnsafe
.TE

.SH SEE ALSO
.sp
.LP
.BR fclose (3C),
.BR popen (3C),
.BR setbuf (3C),
.BR attributes (5)
.SH NOTES
.sp
.LP
Buffered writes on
.B fp[0]
can make it appear that the command is not
listening. Judiciously placed
.B fflush()
calls or unbuffering
.B fp[0]
can be a big help; see
.BR fclose (3C).
.sp
.LP
Many commands use buffered output when connected to a pipe. That, too, can
make it appear as if things are not working.
.sp
.LP
Usage is not the same as for
.BR popen() ,
although it is closely
related.
