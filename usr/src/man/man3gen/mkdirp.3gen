'\" te
.\" Copyright 1989 AT&T. Copyright (c) 2003, Sun Microsystems, Inc.  All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mkdirp 3GEN "14 Oct 2003" "SunOS 5.11" "String Pattern-Matching Library Functions"
.SH NAME
mkdirp, rmdirp \- create or remove directories in a path
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR .\|.\|. ] \fIfile\fR .\|.\|. \fB-lgen\fR [ \fIlibrary\fR .\|.\|. ]
#include <libgen.h>

\fBint\fR \fBmkdirp\fR(\fBconst char *\fIpath\fR, \fBmode_t\fR \fImode\fR);
.fi

.LP
.nf
\fBint\fR \fBrmdirp\fR(\fBchar *\fIdir\fR, \fBchar *\fIdir1\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B mkdirp()
function creates all the missing directories in
.I path
with
.IR mode .
See
.BR chmod (2)
for the values of
.IR mode .
.sp
.LP
The
.B rmdirp()
function removes directories in path
.IR dir .
This
removal begins at the end of the path and moves backward toward the root as
far as possible. If an error occurs, the remaining path is stored in
.IR dir1 .
.SH RETURN VALUES
.sp
.LP
If
.I path
already exists or if a needed directory cannot be created,
.B mkdirp()
returns \fB\(mi1\fR and sets \fBerrno\fR to one of the error
values listed for
.BR mkdir (2).
It returns zero if all the directories are
created.
.sp
.LP
The
.B rmdirp()
function returns
.B 0
if it is able to remove every
directory in the path. It returns \fB\(mi2\fR if a ``\fB\&.\fR'' or
``\fB\&..\fR'' is in the path and \fB\(mi3\fR if an attempt is made to
remove the current directory. Otherwise it returns \fB\(mi1\fR\&.
.SH EXAMPLES
.LP
.B Example 1
Example of creating scratch directories.
.sp
.LP
The following example creates scratch directories.

.sp
.in +2
.nf
/* create scratch directories */
if(mkdirp("/tmp/sub1/sub2/sub3", 0755) == \(mi1) {
	fprintf(stderr, "cannot create directory");
	exit(1);
}
chdir("/tmp/sub1/sub2/sub3");
\&.
\&.
\&.
/* cleanup */
chdir("/tmp");
rmdirp("sub1/sub2/sub3");
.fi
.in -2

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR chmod (2),
.BR mkdir (2),
.BR rmdir (2),
.BR malloc (3C),
.BR attributes (5)
.SH NOTES
.sp
.LP
The
.B mkdirp()
function uses
.BR malloc "(3C) to allocate temporary"
space for the string.
