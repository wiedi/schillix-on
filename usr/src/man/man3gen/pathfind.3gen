'\" te
.\" Copyright 1989 AT&T Copyright (c) 1999, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH pathfind 3GEN "10 Mar 1999" "SunOS 5.11" "String Pattern-Matching Library Functions"
.SH NAME
pathfind \- search for named file in named directories
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR .\|.\|. ] \fIfile\fR .\|.\|. \fB-lgen\fR [ \fIlibrary\fR .\|.\|. ]
#include <libgen.h>

\fBchar *\fBpathfind\fR(\fBconst char *\fIpath\fR, \fBconst char *\fIname\fR, \fBconst char *\fImode\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The \fBpathfind()\fR function searches the directories named in \fIpath\fR
for the file
.IR name .
The directories named in
.I path
are separated
by colons (:). The
.I mode
argument is a string of option letters chosen
from the set \fB[rwxfbcdpugks]:\fR
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
LetterMeaning
_
\fBr\fRreadable
_
\fBw\fRwritable
_
\fBx\fRexecutable
_
\fBf\fRnormal file
_
\fBb\fRblock special
_
\fBc\fRcharacter special
_
\fBd\fRdirectory
_
\fBp\fRFIFO (pipe)
_
\fBu\fRset user ID bit
_
\fBg\fRset group ID bit
_
\fBk\fRsticky bit
_
\fBs\fRsize non-zero
.TE

.sp
.LP
Options read, write, and execute are checked relative to the real (not the
effective) user
.B ID
and group
.B ID
of the current process.
.sp
.LP
If
.I name
begins with a slash, it is treated as an absolute path name,
and
.I path
is ignored.
.sp
.LP
An empty
.I path
member is treated as the current directory. A slash
(\fB/\fR) character is not prepended at the occurrence of the first match;
rather, the unadorned
.I name
is returned.
.SH EXAMPLES
.LP
\fBExample 1\fR Example of finding the \fBls\fR command using the PATH
environment variable.
.sp
.LP
To find the
.B ls
command using the
.B PATH
environment variable:

.sp
.LP
pathfind (getenv ("PATH"), "ls", "rx")

.SH RETURN VALUES
.sp
.LP
The \fBpathfind()\fR function returns a
.B "(char *)"
value containing
static, thread-specific data that will be overwritten upon the next call
from the same thread.
.sp
.LP
If the file
.I name
with all characteristics specified by
.I mode
is
found in any of the directories specified by
.IR path ,
then
\fBpathfind()\fR returns a pointer to a string containing the member of
.IR path ,
followed by a slash character
.RB ( / ),
followed by
.IR name .
.sp
.LP
If no match is found,
.B pathname()
returns a null pointer, \fB((char *)
0)\fR.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR sh (1),
.BR test (1),
.BR access (2),
.BR mknod (2),
.BR stat (2),
.BR getenv (3C),
.BR attributes (5)
.SH NOTES
.sp
.LP
The string pointed to by the returned pointer is stored in an area that is
reused on subsequent calls to
.BR pathfind() .
The string should not be
deallocated by the caller.
.sp
.LP
When compiling multithreaded applications, the
.B _REENTRANT
flag must
be defined on the compile line.  This flag should only be used in
multithreadedapplications.
