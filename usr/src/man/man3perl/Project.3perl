'\" te
.\" Copyright (c) 2002, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH Project 3PERL "1 Dec 2002" "SunOS 5.11" "Perl Library Functions"
.SH NAME
Project \- Perl interface to Projects
.SH SYNOPSIS
.LP
.nf
use Sun::Solaris::Project qw(:ALL);
my $projid = getprojid();
.fi

.SH DESCRIPTION
.sp
.LP
This module provides wrappers for the Project-related system calls and the
.BR libproject (3LIB)
library. Also provided are constants from the various
Project-related headers.
.SS "Constants"
.sp
.LP
.BR MAXPROJID ,
.BR PROJNAME_MAX ,
.BR PROJF_PATH ,
.BR PROJECT_BUFSZ ,
.BR SETPROJ_ERR_TASK ,
and
.BR SETPROJ_ERR_POOL .
.SS "Functions"
.sp
.ne 2
.mk
.na
.B getprojid()
.ad
.sp .6
.RS 4n
This function returns the numeric project ID of the calling process or
.B undef
if the underlying
.BR getprojid (2)
system call is
unsuccessful.
.RE

.sp
.ne 2
.mk
.na
.B setproject($project, $user, $flags)
.ad
.sp .6
.RS 4n
If
.B $user
is a member of the project specified by
.BR $project ,
.B setproject()
creates a new task and associates the appropriate resource
controls with the process, task, and project. This function returns 0 on
success. If the underlying task creation fails,
.B SETPROJ_ERR_TASK
is
returned. If pool assignment fails,
.B SETPROJ_ERR_POOL
is returned. If
any resource attribute assignments fail, an integer value corresponding to
the offset of the failed attribute assignment in the project database is
returned. See
.BR setproject (3PROJECT).
.RE

.sp
.ne 2
.mk
.na
.B activeprojects()
.ad
.sp .6
.RS 4n
This function returns a list of the currently active projects on the system.
Each value in the list is the numeric ID of a currently active project.
.RE

.sp
.ne 2
.mk
.na
.B getprojent()
.ad
.sp .6
.RS 4n
This function returns the next entry from the project database. When called
in a scalar context,
.B getprojent()
returns only the name of the project.
When called in a list context,
.B getprojent()
returns a 6-element list
consisting of:
.sp
.in +2
.nf
($name, $projid, $comment, \e@users, \e@groups, $attr)
.fi
.in -2

\e@users and \e@groups are returned as arrays containing the appropriate
user or project lists. On end-of-file
.B undef
is returned.
.RE

.sp
.ne 2
.mk
.na
.B setprojent()
.ad
.sp .6
.RS 4n
This function rewinds the project database to the beginning of the file.
.RE

.sp
.ne 2
.mk
.na
.B endprojent()
.ad
.sp .6
.RS 4n
This function closes the project database.
.RE

.sp
.ne 2
.mk
.na
.B getprojbyname($name)
.ad
.sp .6
.RS 4n
This function searches the project database for an entry with the specified
nam. It returns a 6-element list as returned by
.B getprojent()
if the
entry is found and
.B undef
if it cannot be found.
.RE

.sp
.ne 2
.mk
.na
.B getprojbyid($id)
.ad
.sp .6
.RS 4n
This function searches the project database for an entry with the specified
ID. It returns a 6-element list as returned by
.B getprojent()
if the
entry is found or
.B undef
if it cannot be found.
.RE

.sp
.ne 2
.mk
.na
.B getdefaultproj($user)
.ad
.sp .6
.RS 4n
This function returns the default project entry for the specified user in
the same format as
.BR getprojent() .
It returns
.B undef
if the user
cannot be found. See \fBgetdefaultproj\fR(3PROJECT) for information about the
lookup process.
.RE

.sp
.ne 2
.mk
.na
.B fgetprojent($filehandle)
.ad
.sp .6
.RS 4n
This function returns the next project entry from
.BR $filehandle ,
a Perl
file handle that must refer to a previously opened file in
.BR project (4)
format. Return values are the same as for
.BR getprojent() .
.RE

.sp
.ne 2
.mk
.na
.B inproj($user, $project)
.ad
.sp .6
.RS 4n
This function checks whether the specified user is able to use the project.
This function returns true if the user can use the project and false
otherwise. See
.BR inproj (3PROJECT).
.RE

.sp
.ne 2
.mk
.na
.B getprojidbyname($project)
.ad
.sp .6
.RS 4n
This function searches the project database for the specified project. It
returns the project ID if the project is found and
.B undef
if it is not
found.
.RE

.SS "Class methods"
.sp
.LP
None.
.SS "Object methods"
.sp
.LP
None.
.SS "Exports"
.sp
.LP
By default nothing is exported from this module. The following tags can be
used to selectively import constants and functions defined in this module:
.sp
.ne 2
.mk
.na
.B :SYSCALLS
.ad
.RS 14n
.rt
.B getprojid()
.RE

.sp
.ne 2
.mk
.na
.B :LIBCALLS
.ad
.RS 14n
.rt
.BR setproject() ,
.BR activeprojects() ,
.BR getprojent() ,
.BR setprojent() ,
.BR endprojent() ,
.BR getprojbyname() ,
.BR getprojbyid() ,
.BR getdefaultproj() ,
.BR fgetprojent() ,
.BR inproj() ,
and
.BR getprojidbyname()
.RE

.sp
.ne 2
.mk
.na
.B :CONSTANTS
.ad
.RS 14n
.rt
.BR MAXPROJID ,
.BR PROJNAME_MAX ,
.BR PROJF_PATH ,
.BR PROJECT_BUFSZ ,
.BR SETPROJ_ERR_TASK ,
and
.BR SETPROJ_ERR_POOL
.RE

.sp
.ne 2
.mk
.na
.B :ALL
.ad
.RS 14n
.rt
:SYSCALLS\fR,
.BR :LIBCALLS ,
and
.BR :CONSTANTS
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWpl5u
_
Interface StabilityEvolving
.TE

.SH SEE ALSO
.sp
.LP
.BR getprojid (2),
.BR getdefaultproj (3PROJECT),
.BR inproj (3PROJECT),
.BR libproject (3LIB),
.BR setproject (3PROJECT),
.BR project (4),
.BR attributes (5)
