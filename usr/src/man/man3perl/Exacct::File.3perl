'\" te
.\" Copyright (c) 2002, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH Exacct::File 3PERL "1 Dec 2002" "SunOS 5.11" "Perl Library Functions"
.SH NAME
Exacct::File \- exacct file manipulation
.SH SYNOPSIS
.LP
.nf
use Sun::Solaris::Exacct::File qw(:ALL);
my $ea_file = Sun::Solaris::Exacct::File->new($myfile, &O_RDONLY);
my $ea_obj = $ea_file->get();
.fi

.SH DESCRIPTION
.sp
.LP
This module provides access to the
.BR libexacct (3LIB)
functions that
manipulate accounting files. The interface is object-oriented and allows the
creation and reading of
.B libexacct
files. The C library calls wrapped
by this module are
.BR ea_open (3EXACCT),
.BR ea_close (3EXACCT),
.BR ea_next_object (3EXACCT),
.BR ea_previous_object (3EXACCT),
.BR ea_write_object (3EXACCT),
.BR ea_get_object (3EXACCT),
.BR ea_get_creator (3EXACCT),
and
.BR ea_get_hostname (3EXACCT).
The file
read and write methods all operate on
.BR Sun::Solaris::Exacct::Object
objects and perform all the necessary memory management, packing, unpacking,
and structure conversions that are required.
.SS "Constants"
.sp
.LP
.BR EO_HEAD ,
.BR EO_TAIL ,
.BR EO_NO_VALID_HDR ,
.BR EO_POSN_MSK ,
and
.BR EO_VALIDATE_MSK .
Other constants needed by the
.B new()
method
below are in the standard Perl Fcntl module.
.SS "Functions"
.sp
.LP
None.
.SS "Class methods"
.sp
.ne 2
.mk
.na
.B new($name, $oflags, creator => $creator,
.ad
.sp .6
.RS 4n
This method opens a
.B libexacct
file as specified by the mandatory
parameters
.B $name
and
.BR $oflags ,
and returns a
.B Sun::Solaris::Exacct::File
object, or
.B undef
if an error occurs.
The parameters
.BR $creator ,
.BR $aflags ,
and
.B $mode
are optional
and are passed as (\fBname\fR =>
.BR value )
pairs. The only valid values
for
.B $oflags
are the combinations of
.BR O_RDONLY ,
.BR O_WRONLY ,
.BR O_RDWR ,
and
.B O_CREAT
described below.
.sp
The
.B $creator
parameter is a string describing the creator of the
file. If it is required (for instance, when writing to a file) but absent,
it is set to the string representation of the caller's UID. The
.B $aflags
parameter describes the required positioning in the file for
.B O_RDONLY
access: either
.B EO_HEAD
or
.B EO_TAIL
are allowed.
If absent,
.B EO_HEAD
is assumed.  The
.B $mode
parameter is the file
creation mode and is ignored unless
.B O_CREAT
is specified in
.BR $oflags .
If
.B $mode
is unspecified, the file creation mode is set
to 0666 (octal). If an error occurs, it can be retrieved with the
.B Sun::Solaris::Exacct::ea_error()
function. See
.BR Exacct (3PERL).
.sp

.sp
.TS
tab();
cw(1.83i) cw(1.83i) cw(1.83i)
lw(1.83i) lw(1.83i) lw(1.83i)
.
\fB$oflags\fR\fB$aflags\fRAction
\fBO_RDONLY\fRAbsent or \fBEO_HEAD\fRT{
Open for reading at the start of the file.
T}
\fBO_RDONLY\fR\fBEO_TAIL\fROpen for reading at the end of the file.
\fBO_WRONLY\fRIgnoredT{
File must exist, open for writing at the end of the file.
T}
\fBO_WRONLY\fR | \fBO_CREAT\fRIgnoredT{
Create file if it does not exist, otherwise truncate and open for writing.
T}
\fBO_RDWR\fRIgnoredT{
File must exist, open for reading/writing, positioned at the end of the file.
T}
\fBO_RDWR\fR | \fBO_CREAT\fRIgnoredT{
Create file if it does not exist, otherwise truncate and open for reading/writing.
T}
.TE

.RE

.SS "Object methods"
.sp
.LP
There is no explicit
.B close()
method for a
.BR Sun::Solaris::Exacct::File .
The file is closed when the file handle
object is undefined or reassigned.
.sp
.ne 2
.mk
.na
.B creator()
.ad
.sp .6
.RS 4n
This method returns a string containing the creator of the file or
.B undef
if the file does not contain the information.
.RE

.sp
.ne 2
.mk
.na
.B hostname()
.ad
.sp .6
.RS 4n
This method returns a string containing the hostname on which the file was
created, or
.B undef
if the file does not contain the information.
.RE

.sp
.ne 2
.mk
.na
.B next()
.ad
.sp .6
.RS 4n
This method reads the header information of the next record in the file. In
a scalar context the value of the type field is returned as a dual-typed
scalar that will be one of
.BR EO_ITEM ,
.BR EO_GROUP ,
or
.BR EO_NONE .
In a list context it returns a two-element list containing the values of the
type and catalog fields. The type element is a dual-typed scalar. The
catalog element is blessed into the
.BR Sun::Solaris::Exacct::Catalog
.RB "class. If an error occurs, " undef " or (" undef ,
.BR undef )
is
returned depending upon context. The status can be accessed with the
.B Sun::Solaris::Exacct::ea_error()
function.See
.BR Exacct (3PERL).
.RE

.sp
.ne 2
.mk
.na
.B previous()
.ad
.sp .6
.RS 4n
This method reads the header information of the previous record in the
file. In a scalar context it returns the type field. In a list context it
returns the two-element list containing the values of the type and catalog
fields, in the same manner as the
.B next()
method. Error are also
returned in the same manner as the
.B next()
method.
.RE

.sp
.ne 2
.mk
.na
.B get()
.ad
.sp .6
.RS 4n
This method reads in the
.B libexacct
record at the current position in
the file and returns a
.B Sun::Solaris::Exacct::Object
containing the
unpacked data from the file.  This object can then be further manipulated
using its methods.  In case of error undef is returned and the error status
is made available with the
.B Sun::Solaris::Exacct::ea_error()
function.
After this operation, the position in the file is set to the start of the
next record in the file.
.RE

.sp
.ne 2
.mk
.na
.B write(@ea_obj)
.ad
.sp .6
.RS 4n
This method converts the passed list of Sun::Solaris::Exacct::Objects into
.B libexacct
file format and appends them to the
.B libexacct
file,
which must be open for writing. This method returns true if successful and
false otherwise.  On failure the error can be examined with the
.B Sun::Solaris::Exacct::ea_error()
function.
.RE

.SS "Exports"
.sp
.LP
By default nothing is exported from this module. The following tags can be
used to selectively import constants defined in this module:
.sp
.ne 2
.mk
.na
.B :CONSTANTS
.ad
.sp .6
.RS 4n
.BR EO_HEAD ,
.BR EO_TAIL ,
.BR EO_NO_VALID_HDR ,
.BR EO_POSN_MSK ,
and
.B EO_VALIDATE_MSK
.RE

.sp
.ne 2
.mk
.na
.B :ALL
.ad
.sp .6
.RS 4n
.BR :CONSTANTS ,
Fcntl(\fB:DEFAULT\fR).
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWpl5u
_
Interface StabilityEvolving
.TE

.SH SEE ALSO
.sp
.LP
.BR ea_close (3EXACCT),
.BR ea_get_creator (3EXACCT),
.BR ea_get_hostname (3EXACCT),
.BR ea_get_object (3EXACCT),
.BR ea_next_object (3EXACCT),
.BR ea_open (3EXACCT),
.BR ea_previous_object (3EXACCT),
.BR ea_write_object (3EXACCT),
.BR Exacct (3PERL),
.BR Exacct::Catalog (3PERL),
.BR Exacct::Object (3PERL),
.BR Exacct::Object::Group (3PERL),
.BR Exacct::Object::Item (3PERL),
.BR libexacct (3LIB),
.BR attributes (5)
