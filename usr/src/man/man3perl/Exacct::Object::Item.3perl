'\" te
.\" Copyright (c) 2002, Sun Microsystems, Inc. All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH Exacct::Object::Item 3PERL "1 Dec 2002" "SunOS 5.11" "Perl Library Functions"
.SH NAME
Exacct::Object::Item \- exacct item manipulation
.SH SYNOPSIS
.LP
.nf
use Sun::Solaris::Exacct::Object;
my $ea_item = Sun::Solaris::Exacct::Object::Item->new(
    &EXT_UINT64 | &EXC_DEFAULT | &EXD_PROC_PID, $$);
.fi

.SH DESCRIPTION
.sp
.LP
This module is used for manipulating
.BR libexacct "(3LIB) data Items. A"
.B libexacct
Item is represented as an opaque reference blessed into the
.B Sun::Solaris::Exacct::Object::Item
class, which is a subclass of the
.B Sun::Solaris::Exacct::Object
class. The underlying
.B libexacct
data types are mapped onto Perl types as follows:
.sp

.sp
.TS
tab();
cw(2.75i) cw(2.75i)
lw(2.75i) lw(2.75i)
.
libexacct typePerl internal type
\fBEXT_UINT8\fRIV (integer)
\fBEXT_UINT16\fRIV (integer)
\fBEXT_UINT32\fRIV (integer)
\fBEXT_UINT64\fRIV (integer)
\fBEXT_DOUBLE\fRNV (double)
\fBEXT_STRING\fRPV (string)
\fBEXT_RAW\fRPV (string)
\fBEXT_EXACCT_OBJECT\fR\fBSun::Solaris::Exacct::Object subclass\fR
.TE

.SS "Constants"
.sp
.LP
None.
.SS "Functions"
.sp
.LP
None.
.SS "Class methods"
.sp
.LP
Class methods include those inherited from the
.B Sun::Solaris::Exacct::Object
base class, plus the following:
.sp
.ne 2
.mk
.na
.B new($catalog, $value)
.ad
.RS 25n
.rt
This method creates and returns a new
.BR Sun::Solaris::Exacct::Object::Item .
The catalog tag can be either an
integer or a
.BR Sun::Solaris::Exacct::Catalog .
This catalog tag controls
the conversion of the Perl value to the corresponding Perl exacct data type
as described in the table above. If the catalog tag has a type field of
.BR EXT_EXACCT_OBJECT ,
the value must be a reference to either an Item or
a Group object and the passed object is recursively copied and stored inside
the new Item. Because the returned Item is constant, it is impossible, for
example, to create an Item representing CPU seconds and subsequently modify
its value or change its catalog value. This behavior is intended to prevent
mismatches between the catalog tag and the data value.
.RE

.SS "Object methods"
.sp
.LP
Object methods are those inherited from the
.BR Sun::Solaris::Exacct::Object .
.SS "Exports"
.sp
.LP
None.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWpl5u
_
Interface StabilityEvolving
.TE

.SH SEE ALSO
.sp
.LP
.BR Exacct (3PERL),
.BR Exacct::Catalog (3PERL),
.BR Exacct::File (3PERL),
.BR Exacct::Object (3PERL),
.BR Exacct::Object::Group (3PERL),
.BR libexacct (3LIB),
.BR attributes (5)
