'\" te
.\" Copyright (c) 2003, Sun Microsystems, Inc.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH cpc_version 3CPC "28 Mar 2005" "SunOS 5.11" "CPU Performance Counters Library Functions"
.SH NAME
cpc_version \- coordinate CPC library and application versions
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \(milcpc [ \fIlibrary\fR.\|.\|. ]
#include <libcpc.h>

\fBuint_t\fR \fBcpc_version\fR(\fBuint_t\fR \fIversion\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B cpc_version()
function takes an interface version as an argument
and returns an interface version as a result.  Usually, the argument will be
the value of
.B CPC_VER_CURRENT
bound to the application when it was
compiled.
.SH RETURN VALUES
.sp
.LP
If the version requested is still supported by the implementation,
.B cpc_version()
returns the requested version number and the application
can use the facilities of the library on that platform.  If the implementation
.RB "cannot support the version needed by the application," " cpc_version()"
returns
.BR CPC_VER_NONE ,
indicating that the application will at least need
to be recompiled to operate correctly on the new platform, and may require
further changes.
.sp
.LP
If
.I version
is
.BR CPC_VER_NONE ,
.B cpc_version()
returns the most
current version of the library.
.SH EXAMPLES
.LP
.B Example 1
Protect an application from using an incompatible library.
.sp
.LP
The following lines of code protect an application from using an incompatible
library:

.sp
.in +2
.nf
if (cpc_version(CPC_VER_CURRENT) == CPC_VER_NONE) {
        /* version mismatch - library cannot translate */
        exit(1);
}
.fi
.in -2

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityEvolving
_
MT-LevelUnsafe
.TE

.SH SEE ALSO
.sp
.LP
.BR cpc (3CPC),
.BR cpc_open (3CPC),
.BR libcpc (3LIB),
.BR attributes (5)
.SH NOTES
.sp
.LP
The
.B cpc_version()
function exists for binary compatibility only. Source
containing this function will not compile. This function is obsolete and might
be removed in a future release. Applications should use
.BR cpc_open (3CPC)
instead.
.sp
.LP
The version number is used only to express incompatible semantic changes in
the performance counter interfaces on the given platform within a single
instruction set architecture, for example, when a new set of performance
counter registers are added to  an existing processor family that cannot be
specified in the existing
.B cpc_event_t
data structure.
