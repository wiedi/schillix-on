'\" te
.\" Copyright (c) 2004, Sun Microsystems, Inc.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH cpc_seterrfn 3CPC "28 Mar 2005" "SunOS 5.11" "CPU Performance Counters Library Functions"
.SH NAME
cpc_seterrfn \- control libcpc error reporting
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \(milcpc [ \fIlibrary\fR.\|.\|. ]
#include <libcpc.h>

\fBtypedef void (\fBcpc_errfn_t\fR)(\fBconst char *\fIfn\fR, \fBconst char *\fIfmt\fR, \fBva_list\fR \fIap\fR);
.fi

.LP
.nf
\fBvoid\fR \fBcpc_seterrfn\fR(\fBcpc_errfn_t *\fIerrfn\fR);
.fi

.SH DESCRIPTION
.sp
.LP
For the convenience of programmers instrumenting their code, several
.BR libcpc (3LIB)
functions automatically emit to
.B stderr
error messages
that attempt to provide a more detailed explanation of their error return
values. While this can be useful for simple programs, some applications may
wish to report their errors differently\(emfor example, to a window or to a log
file.
.sp
.LP
The
.B cpc_seterrfn()
function allows the caller to provide an alternate
function for reporting errors; the type signature is shown above.  The
.I fn
argument is passed the library function name that detected the error, the
format string
.I fmt
and argument pointer
.I ap
can be passed directly to
.BR vsnprintf (3C)
or similar
.BR varargs -based
routine for formatting.
.sp
.LP
The default printing routine can be restored by calling the routine with an
.I errfn
argument of
.IR NULL .
.SH EXAMPLES
.LP
.B Example 1
Debugging example.
.sp
.LP
This example produces error messages only when debugging the program
containing it, or when the
.B cpc_strtoevent()
function is reporting an
error when parsing an event specification

.sp
.in +2
.nf
\fBint debugging;
void
myapp_errfn(const char *fn, const char *fmt, va_list ap)
{
        if (strcmp(fn, "strtoevent") != 0 && !debugging)
            return;
        (void) fprintf(stderr, "myapp: cpc_%s(): ", fn);
        (void) vfprintf(stderr, fmt, ap);
}\fR
.fi
.in -2

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelUnsafe
_
Interface StabilityObsolete
.TE

.SH SEE ALSO
.sp
.LP
.BR cpc (3CPC),
.BR cpc_seterrhndlr (3CPC),
.BR libcpc (3LIB),
.BR vsnprintf (3C),
.BR attributes (5)
.SH NOTES
.sp
.LP
The
.B cpc_seterrfn()
function exists for binary compatibility only. Source
containing this function will not compile. This function is obsolete and might
be removed in a future release. Applications should use
.BR cpc_seterrhndlr (3CPC)
instead.
