'\" te
.\" Copyright (c) 2006, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" Copyright 1989 AT&T
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH shmget 2 "14 Aug 2006" "SunOS 5.11" "System Calls"
.SH NAME
shmget \- get shared memory segment identifier
.SH SYNOPSIS
.LP
.nf
#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/shm.h>

\fBint\fR \fBshmget\fR(\fBkey_t\fR \fIkey\fR, \fBsize_t\fR \fIsize\fR, \fBint\fR \fIshmflg\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B shmget()
function returns the shared memory identifier associated
with
.IR key .
.sp
.LP
A shared memory identifier and associated data structure and shared memory
segment of at least
.I size
bytes (see
.BR Intro (2))
are created for
.I key
if one of the following are true:
.RS +4
.TP
.ie t \(bu
.el o
The
.I key
argument is equal to
.BR IPC_PRIVATE .
.RE
.RS +4
.TP
.ie t \(bu
.el o
The
.I key
argument does not already have a shared memory identifier
associated with it, and (\fIshmflg\fB&IPC_CREAT\fR) is true.
.RE
.sp
.LP
Upon creation, the data structure associated with the new shared memory
identifier is initialized as follows:
.RS +4
.TP
.ie t \(bu
.el o
The values of
.BR shm_perm.cuid ,
.BR shm_perm.uid ,
.BR shm_perm.cgid ,
and
.B shm_perm.gid
are set equal to the effective user
.B ID
and
effective group ID, respectively, of the calling process.
.RE
.RS +4
.TP
.ie t \(bu
.el o
The access permission bits of
.B shm_perm.mode
are set equal to the
access permission bits of
.IR shmflg .
.B shm_segsz
is set equal to the
value of
.IR size .
.RE
.RS +4
.TP
.ie t \(bu
.el o
The values of
.BR shm_lpid ,
.BR "shm_nattch shm_atime" ,
and
.B shm_dtime
are set equal to 0.
.RE
.RS +4
.TP
.ie t \(bu
.el o
The
.B shm_ctime
is set equal to the current time.
.RE
.sp
.LP
Shared memory segments must be explicitly removed after the last reference
to them has been removed.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, a non-negative integer representing a shared
memory identifier is returned. Otherwise, \fB\(mi1\fR is returned and
.B errno
is set to indicate the error.
.SH ERRORS
.sp
.LP
The
.B shmget()
function will fail if:
.sp
.ne 2
.mk
.na
.B EACCES
.ad
.RS 10n
.rt
A shared memory identifier exists for
.I key
but operation permission
(see
.BR Intro (2))
as specified by the low-order 9 bits of
.I shmflg
would not be granted.
.RE

.sp
.ne 2
.mk
.na
.B EEXIST
.ad
.RS 10n
.rt
A shared memory identifier exists for
.I key
but both
(\fIshmflg\fB&IPC_CREAT\fR) and (\fIshmflg\fB&IPC_EXCL\fR) are true.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The
.I size
argument is less than the system-imposed minimum or greater
than the system-imposed maximum. See NOTES.
.sp
A shared memory identifier exists for
.I key
but the size of the segment
associated with it is less than
.I size
and
.I size
is not equal to
0.
.RE

.sp
.ne 2
.mk
.na
.B ENOENT
.ad
.RS 10n
.rt
A shared memory identifier does not exist for
.I key
and
(\fIshmflg\fB&IPC_CREAT\fR) is false.
.RE

.sp
.ne 2
.mk
.na
.B ENOMEM
.ad
.RS 10n
.rt
A shared memory identifier and associated shared memory segment are to be
created but the amount of available memory is not sufficient to fill the
request.
.RE

.sp
.ne 2
.mk
.na
.B ENOSPC
.ad
.RS 10n
.rt
A shared memory identifier is to be created but the system-imposed limit on
the maximum number of allowed shared memory identifiers system-wide would be
exceeded. See NOTES.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard
.TE

.SH SEE ALSO
.sp
.LP
.BR rctladm (1M),
.BR Intro (2),
.BR setrctl (2),
.BR shmctl (2),
.BR shmop (2),
.BR ftok (3C),
.BR getpagesize (3C),
.BR attributes (5),
.BR standards (5)
.SH NOTES
.sp
.LP
The
.B project.max-shm-memory
resource control restricts the total
amount of shared memory a project can allocate. The
.B zone.max-shm-memory
resource control restricts the total amount of
shared memory that can be allocated by a zone. The system-imposed maximum on
the size of a shared memory segment is therefore a  function of the sizes of
any other shared memory segments the calling project might have allocated
that are still in use, as well as any other shared memory segments allocated
and still in use by processes in the zone.  For accounting purposes, segment
sizes are rounded up to the nearest multiple of the system page size. See
.BR getpagesize (3C).
.sp
.LP
The system-imposed limit on the number of shared memory identifiers is
.RB "maintained on a per-project basis using the" " project.max-shm-ids"
resource control. The
.B zone.max-shm-ids
resource control restricts the
total number of shared memory identifiers that can be allocated by a zone.
.sp
.LP
See
.BR rctladm "(1M) and"
.BR setrctl (2)
for information about using
resource controls.
