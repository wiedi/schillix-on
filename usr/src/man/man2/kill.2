'\" te
.\" Copyright 1989 AT&T.  Copyright (c) 2004, Sun Microsystems, Inc.  All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH kill 2 "22 Mar 2004" "SunOS 5.11" "System Calls"
.SH NAME
kill \- send a signal to a process or a group of processes
.SH SYNOPSIS
.LP
.nf
#include <sys/types.h>
#include <signal.h>

\fBint\fR \fBkill\fR(\fBpid_t\fR \fIpid\fR, \fBint\fR \fIsig\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B kill()
function sends a signal to a process or a group of
processes. The process or group of processes to which the signal is to be
sent is specified by
.IR pid .
The signal that is to be sent is specified
by
.I sig
and is either one from the list given in
.B signal
(see
.BR signal.h (3HEAD)),
or 0. If
.I sig
is 0 (the null signal), error
checking is performed but no signal is actually sent. This can be used to
check the validity of
.IR pid .
.sp
.LP
The real or effective user ID of the sending process must match the real or
saved (from one of functions in the
.BR exec (2)
family) user ID of the
receiving process, unless the privilege {\fBPRIV_PROC_OWNER\fR} is asserted
in the effective set of the sending process (see
.BR Intro (2)),
or
\fIsig\fR is \fBSIGCONT\fR and the sending process has the same session
\fBID\fR as the receiving process. A process needs the basic privilege
{\fBPRIV_PROC_SESSION\fR} to send signals to a process with a different
session ID. See
.BR privileges (5).
.sp
.LP
If
.I pid
is greater than 0,
.I sig
will be sent to the process whose
process ID is equal to
.IR pid .
.sp
.LP
If
.I pid
is negative but not
.BR (pid_t)\(mi1 ,
.I sig
will be sent
to all processes whose process group ID is equal to the absolute value of
\fIpid\fR and for which the process has permission to send a signal.
.sp
.LP
If
.I pid
is 0,
.I sig
will be sent to all processes excluding
special processes (see
.BR Intro (2))
whose process group ID is equal to
the process group ID of the sender.
.sp
.LP
If
.I pid
is \fB(pid_t)\(mi1\fR and the {\fBPRIV_PROC_OWNER\fR}
privilege is not asserted in the effective set of the sending process,
\fIsig\fR will be sent to all processes excluding special processes whose
real user ID is equal to the effective user
.B ID
of the sender.
.sp
.LP
If
.I pid
is \fB(pid_t)\(mi1\fR and the {\fBPRIV_PROC_OWNER\fR}
privilege is asserted in the effective set of the sending process, \fIsig\fR
will be sent to all processes excluding special processes.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, 0 is returned. Otherwise, \(mi1 is returned, no
signal is sent, and
.B errno
is set to indicate the error.
.SH ERRORS
.sp
.LP
The
.B kill()
function will fail if:
.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The
.I sig
argument is not a valid signal number.
.RE

.sp
.ne 2
.mk
.na
.B EPERM
.ad
.RS 10n
.rt
The
.I sig
argument is
.B SIGKILL
and the
.I pid
argument is
\fB(pid_t)-1\fR (that is, the calling process does not have permission to
send the signal to any of the processes specified by
.IR pid ).
.sp
The effective user of the calling process does not match the real or saved
user and the calling process does not have the {\fBPRIV_PROC_OWNER\fR}
privilege asserted in the effective set, and the calling process either is
not sending
.B SIGCONT
to a process that shares the same session
.BR ID
or does not have the {\fBPRIV_PROC_SESSION\fR} privilege asserted and is
trying to send a signal to a process with a different session ID.
.RE

.sp
.ne 2
.mk
.na
.B ESRCH
.ad
.RS 10n
.rt
No process or process group can be found corresponding to that specified by
.IR pid .
.RE

.SH USAGE
.sp
.LP
The
.BR sigsend (2)
function provides a more versatile way to send signals
to processes.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard
_
MT-LevelAsync-Signal-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR kill (1),
.BR Intro (2),
.BR exec (2),
.BR getpid (2),
.BR getsid (2),
.BR setpgrp (2),
.BR sigaction (2),
.BR sigsend (2),
.BR signal (3C),
.BR signal.h (3HEAD),
.BR attributes (5),
.BR privileges (5),
.BR standards (5)
