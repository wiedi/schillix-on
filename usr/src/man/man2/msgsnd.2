'\" te
.\" Copyright (c) 2003, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" Portions Copyright (c) 1992, X/Open Company Limited.  All Rights Reserved.
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH msgsnd 2 "11 Feb 2003" "SunOS 5.11" "System Calls"
.SH NAME
msgsnd \- message send operation
.SH SYNOPSIS
.LP
.nf
#include <sys/msg.h>

\fBint\fR \fBmsgsnd\fR(\fBint\fR \fImsqid\fR, \fBconst void *\fImsgp\fR, \fBsize_t\fR \fImsgsz\fR, \fBint\fR \fImsgflg\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B msgsnd()
function is used to send a message to the queue
associated with the message queue identifier specified by
.IR msqid .
.sp
.LP
The
.I msgp
argument points to a user-defined buffer that must contain
first a field of type
.B "long int"
that will specify the type of the
message, and then a data portion that will hold the data bytes of the
message. The structure below is an example of what this user-defined buffer
might look like:
.sp
.in +2
.nf
struct  mymsg {
        long  mtype;     /* message type */
        char  mtext[1];  /* message text */
}
.fi
.in -2

.sp
.LP
The
.B mtype
member is a non-zero positive type
.B "long int"
that can
be used by the receiving process for message selection.
.sp
.LP
The
.B mtext
member is any text of length
.I msgsz
bytes. The
.I msgsz
argument can range from 0 to a system-imposed maximum.
.sp
.LP
The
.I msgflg
argument specifies the action to be taken if one or more
of the following are true:
.RS +4
.TP
.ie t \(bu
.el o
The number of bytes already on the queue is equal to
.BR msg_qbytes .
See
.BR Intro (2).
.RE
.RS +4
.TP
.ie t \(bu
.el o
The total number of messages on the queue would exceed the maximum allowed
by the system. See NOTES.
.RE
.sp
.LP
These actions are as follows:
.RS +4
.TP
.ie t \(bu
.el o
If
.RI ( msgflg\fB&IPC_NOWAIT )
is non-zero, the message will not be
sent and the calling process will return immediately.
.RE
.RS +4
.TP
.ie t \(bu
.el o
If
.RI ( msgflg\fB&IPC_NOWAIT )
is 0, the calling process will suspend
execution until one of the following occurs:
.RS +4
.TP
.ie t \(bu
.el o
The condition responsible for the suspension no longer exists, in which
case the message is sent.
.RE
.RS +4
.TP
.ie t \(bu
.el o
The message queue identifier
.I msqid
is removed from the system (see
.BR msgctl (2));
when this occurs,
.B errno
is set equal to
.BR EIDRM
and
.B \(mi1
is returned.
.RE
.RS +4
.TP
.ie t \(bu
.el o
The calling process receives a signal that is to be caught; in this case
the message is not sent and the calling process resumes execution in the
manner prescribed in
.BR sigaction (2).
.RE
.RE
.sp
.LP
Upon successful completion, the following actions are taken with respect to
the data structure associated with
.I msqid
(see
.BR Intro (2)):
.RS +4
.TP
.ie t \(bu
.el o
.B msg_qnum
is incremented by 1.
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B msg_lspid
is set equal to the process
.B ID
of the calling
process.
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B msg_stime
is set equal to the current time.
.RE
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B 0
is returned. Otherwise,
.B \(mi1
is
returned, no message is sent, and
.B errno
is set to indicate the
error.
.SH ERRORS
.sp
.LP
The
.B msgsnd()
function will fail if:
.sp
.ne 2
.mk
.na
.B EACCES
.ad
.RS 10n
.rt
Operation permission is denied to the calling process. See
.BR Intro (2).
.RE

.sp
.ne 2
.mk
.na
.B EAGAIN
.ad
.RS 10n
.rt
The message cannot be sent for one of the reasons cited above and
(\fImsgflg\fB&IPC_NOWAIT\fR) is non-zero.
.RE

.sp
.ne 2
.mk
.na
.B EIDRM
.ad
.RS 10n
.rt
The message queue identifier
.I msgid
is removed from the system.
.RE

.sp
.ne 2
.mk
.na
.B EINTR
.ad
.RS 10n
.rt
The
.B msgsnd()
function was interrupted by a signal.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The value of
.I msqid
is not a valid message queue identifier, or the
value of
.B mtype
is less than 1.
.sp
The value of
.I msgsz
is less than 0 or greater than the system-imposed
limit.
.RE

.sp
.LP
The
.B msgsnd()
function may fail if:
.sp
.ne 2
.mk
.na
.B  EFAULT
.ad
.RS 11n
.rt
The
.I msgp
argument points to an illegal address.
.RE

.SH USAGE
.sp
.LP
The value passed as the
.I msgp
argument should be converted to type
.BR "void *" .
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard
.TE

.SH SEE ALSO
.sp
.LP
.BR rctladm (1M),
.BR Intro (2),
.BR msgctl (2),
.BR msgget (2),
.BR msgrcv (2),
.BR setrctl (2),
.BR sigaction (2),
.BR attributes (5),
.BR standards (5)
.SH NOTES
.sp
.LP
The maximum number of messages allowed on a message queue is the minimum
enforced value of the
.B process.max-msg-messages
resource control of the
creating process at the time
.BR msgget (2)
was used to allocate the
queue.
.sp
.LP
 See
.BR rctladm "(1M) and"
.BR setrctl (2)
for information about using resource controls.
