'\" te
.\" Copyright 1989 AT&T.
.\" Copyright (c) 2006, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH semop 2 "12 May 2006" "SunOS 5.11" "System Calls"
.SH NAME
semop, semtimedop \- semaphore operations
.SH SYNOPSIS
.LP
.nf
#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/sem.h>

\fBint\fR \fBsemop\fR(\fBint\fR \fIsemid\fR, \fBstruct sembuf *\fIsops\fR, \fBsize_t\fR \fInsops\fR);
.fi

.LP
.nf
\fBint\fR \fBsemtimedop\fR(\fBint\fR \fIsemid\fR, \fBstruct sembuf *\fIsops\fR, \fBsize_t\fR \fInsops\fR,
     \fBconst struct timespec *\fItimeout\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B semop()
function is used to perform atomically an array of
semaphore operations on the set of semaphores associated with the semaphore
identifier specified by
.IR semid .
The
.I sops
argument is a pointer to
the array of semaphore-operation structures. The
.I nsops
argument is the
number of such structures in the array.
.sp
.LP
Each
.B sembuf
structure contains the following members:
.sp
.in +2
.nf
short	sem_num;	  /* semaphore number */
short	sem_op;	  /* semaphore operation */
short	sem_flg;	  /* operation flags */
.fi
.in -2

.sp
.LP
Each semaphore operation specified by
.B sem_op
is performed on the
corresponding semaphore specified by
.I semid
and
.BR sem_num .
The
permission required for a semaphore operation is given as
.RI { token },
where
.I token
is the type of permission needed.  The types of permission
are interpreted as follows:
.sp
.in +2
.nf
00400    READ by user
00200    ALTER by user
00040    READ by group
00020    ALTER by group
00004    READ by others
00002    ALTER by others
.fi
.in -2

.sp
.LP
See the
.B "Semaphore Operation Permissions"
section of
.BR Intro (2)
for
more information.
.sp
.LP
A process maintains a value,
.BR semadj ,
for each semaphore it modifies.
This value contains the cumulative effect of operations the process has
performed on an individual semaphore with the
.B SEM_UNDO
flag set (so
that they can be undone if the process terminates unexpectedly).  The value
of
.B semadj
can affect the behavior of calls to
.BR semop() ,
.BR semtimedop() ,
.BR exit() ,
and
.B _exit()
(the latter two
functions documented on
.BR exit (2)),
but is otherwise unobservable. See
below for details.
.sp
.LP
The
.B sem_op
member specifies one of three semaphore operations:
.RS +4
.TP
1.
The
.B sem_op
member is a negative integer; {ALTER}
.RS +4
.TP
.ie t \(bu
.el o
If
.B semval
(see
.BR Intro (2))
is greater than or equal to the
absolute value of
.BR sem_op ,
the absolute value of
.B sem_op
is
subtracted from
.BR semval .
Also, if (\fIsem_flg\fB&SEM_UNDO\fR) is
true, the absolute value of
.B sem_op
is added to the calling process's
.B semadj
value (see
.BR exit (2))
for the specified semaphore.
.RE
.RS +4
.TP
.ie t \(bu
.el o
If
.B semval
is less than the absolute value of
.B sem_op
and
(\fIsem_flg\fB&IPC_NOWAIT\fR) is true,
.B semop()
returns
immediately.
.RE
.RS +4
.TP
.ie t \(bu
.el o
If
.B semval
is less than the absolute value of
.B sem_op
and
(\fIsem_flg\fB&IPC_NOWAIT\fR) is false,
.B semop()
increments the
.B semncnt
associated with the specified semaphore and suspends execution
of the calling thread until one of the following conditions occur:
.RS +4
.TP
.ie t \(bu
.el o
The value of
.B semval
becomes greater than or equal to the absolute
value of
.BR sem_op .
When this occurs, the value of
.B semncnt
associated with the specified semaphore is decremented, the absolute value
of
.B sem_op
is subtracted from
.B semval
and, if
(\fIsem_flg\fB&SEM_UNDO\fR) is true, the absolute value of \fBsem_op\fR
is added to the calling process's
.B semadj
value for the specified
semaphore.
.RE
.RS +4
.TP
.ie t \(bu
.el o
The
.I semid
for which the calling thread is awaiting action is removed
from the system (see
.BR semctl (2)).
When this occurs,
.B errno
is set
to
.B EIDRM
and \fB\(mi1\fR is returned.
.RE
.RS +4
.TP
.ie t \(bu
.el o
The calling thread receives a signal that is to be caught. When this
occurs, the value of
.B semncnt
associated with the specified semaphore
is decremented, and the calling thread resumes execution in the manner
prescribed in
.BR sigaction (2).
.RE
.RE
.RE
.RS +4
.TP
2.
The
.B sem_op
member is a positive integer; {ALTER}
.sp
The value of
.B sem_op
is added to
.B semval
and, if
(\fIsem_flg\fB&SEM_UNDO\fR) is true, the value of
.B sem_op
is
subtracted from the calling process's
.B semadj
value for the specified
semaphore.
.RE
.RS +4
.TP
3.
The
.B sem_op
member is 0; {READ}
.RS +4
.TP
.ie t \(bu
.el o
If
.B semval
is 0,
.B semop()
returns immediately.
.RE
.RS +4
.TP
.ie t \(bu
.el o
If
.B semval
is not equal to 0 and (\fIsem_flg\fB&IPC_NOWAIT\fR) is
true,
.B semop()
returns immediately.
.RE
.RS +4
.TP
.ie t \(bu
.el o
If
.B semval
is not equal to 0 and (\fIsem_flg\fB&IPC_NOWAIT\fR) is
false,
.B semop()
increments the
.B semzcnt
associated with the
specified semaphore and suspends execution of the calling thread until one
of the following occurs:
.RS +4
.TP
.ie t \(bu
.el o
The value of
.B semval
becomes 0, at which time the value of
.B semzcnt
associated with the specified semaphore is set to 0 and all
processes waiting on
.B semval
to become 0 are awakened.
.RE
.RS +4
.TP
.ie t \(bu
.el o
The
.I semid
for which the calling thread is awaiting action is removed
from the system. When this occurs,
.B errno
is set to
.B EIDRM
and
\fB\(mi1\fR is returned.
.RE
.RS +4
.TP
.ie t \(bu
.el o
The calling thread receives a signal that is to be caught. When this
occurs, the value of
.B semzcnt
associated with the specified semaphore
is decremented, and the calling thread resumes execution in the manner
prescribed in
.BR sigaction (2).
.RE
.RE
.RE
.sp
.LP
Upon successful completion, the value of
.B sempid
for each semaphore
specified in the array pointed to by
.I sops
is set to the process
.B ID
of the calling process.
.sp
.LP
The
.B semtimedop()
function behaves as
.B semop()
except when it
must suspend execution of the calling process to complete its operation.  If
.B semtimedop()
must suspend the calling process after the time interval
specified in
.I timeout
expires, or if the timeout expires while the
process is suspended,
.B semtimedop()
returns with an error. If the
.B timespec
structure pointed to by
.I timeout
is zero-valued and
.B semtimedop()
needs to suspend the calling process to complete the
requested operation(s), it returns immediately with an error. If
.I timeout
is the
.I NULL
pointer, the behavior of
.B semtimedop()
is identical to that of
.BR semop() .
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B 0
is returned. Otherwise,
.B \(mi1
is
returned and
.B errno
is set to indicate the error.
.SH ERRORS
.sp
.LP
The
.B semop()
and
.B semtimedop()
functions will fail if:
.sp
.ne 2
.mk
.na
.B E2BIG
.ad
.RS 10n
.rt
The
.I nsops
argument is greater than the system-imposed maximum. See
NOTES.
.RE

.sp
.ne 2
.mk
.na
.B EACCES
.ad
.RS 10n
.rt
Operation permission is denied to the calling process (see
.BR Intro (2)).
.RE

.sp
.ne 2
.mk
.na
.B EAGAIN
.ad
.RS 10n
.rt
The operation would result in suspension of the calling process but
(\fIsem_flg\fB&IPC_NOWAIT\fR) is true.
.RE

.sp
.ne 2
.mk
.na
.B EFAULT
.ad
.RS 10n
.rt
The
.I sops
argument points to an illegal address.
.RE

.sp
.ne 2
.mk
.na
.B EFBIG
.ad
.RS 10n
.rt
The value of
.B sem_num
is less than 0 or greater than or equal to the
number of semaphores in the set associated with
.IR semid .
.RE

.sp
.ne 2
.mk
.na
.B EIDRM
.ad
.RS 10n
.rt
A
.I semid
was removed from the system.
.RE

.sp
.ne 2
.mk
.na
.B EINTR
.ad
.RS 10n
.rt
A signal was received.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The
.I semid
argument is not a valid semaphore identifier, or the number
of individual semaphores for which the calling process requests a
.B SEM_UNDO
operation would exceed the system-imposed limit. Solaris does
not impose a limit on the number of individual semaphores for which the
calling process requests a
.B SEM_UNDO
operation.
.RE

.sp
.ne 2
.mk
.na
.B ENOSPC
.ad
.RS 10n
.rt
The limit on the number of individual processes requesting a
.BR SEM_UNDO
operation would be exceeded. Solaris does not impose a limit on the number
of individual processes requesting an
.B SEM_UNDO
operation.
.RE

.sp
.ne 2
.mk
.na
.B ERANGE
.ad
.RS 10n
.rt
An operation would cause a
.B semval
or a
.B semadj
value to overflow
the system-imposed limit.
.RE

.sp
.LP
The
.B semtimedop()
function will fail if:
.sp
.ne 2
.mk
.na
.B EAGAIN
.ad
.RS 10n
.rt
The timeout expired before the requested operation could be completed.
.RE

.sp
.LP
The
.B semtimedop()
function will fail if one of the following is
detected:
.sp
.ne 2
.mk
.na
.B EFAULT
.ad
.RS 10n
.rt
The
.I timeout
argument points to an illegal address.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The
.I timeout
argument specified a
.B tv_sec
or
.B tv_nsec
value
less than 0, or a
.B tv_nsec
value greater than or equal to 1000
million.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface Stability\fBsemop()\fR is Standard.
.TE

.SH SEE ALSO
.sp
.LP
.BR ipcs (1),
.BR rctladm (1M),
.BR Intro (2),
.BR exec (2),
.BR exit (2),
.BR fork (2),
.BR semctl (2),
.BR semget (2),
.BR setrctl (2),
.BR sigaction (2),
.BR attributes (5),
.BR standards (5)
.SH NOTES
.sp
.LP
The system-imposed maximum on
.I nsops
for a semaphore identifier is the
minimum enforced value of the
.B process.max-sem-ops
resource control of
the creating process at the time
.BR semget (2)
was used to allocate the
identifier.
.sp
.LP
See
.BR rctladm "(1M) and"
.BR setrctl (2)
for information about using
resource controls.
