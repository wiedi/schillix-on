'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" Copyright 1989 AT&T
.\" Portions Copyright (c) 2001, the Institute of Electrical and Electronics Engineers, Inc. and The Open Group. All Rights Reserved.
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mkdir 2 "18 May 2007" "SunOS 5.11" "System Calls"
.SH NAME
mkdir \- make a directory
.SH SYNOPSIS
.LP
.nf
#include <sys/types.h>
#include <sys/stat.h>

\fBint\fR \fBmkdir\fR(\fBconst char *\fIpath\fR, \fBmode_t\fR \fImode\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B mkdir()
function creates a  new directory named by the path name
pointed to by
.IR path .
The mode of the new directory is  initialized from
.I mode
(see
.BR chmod (2)
for values of mode). The protection part of
the
.I mode
argument is modified by the process's file creation mask (see
.BR umask (2)).
.sp
.LP
The directory's owner
.B ID
is set to  the process's effective user ID.
The directory's group
.B ID
is set to the  process's effective group ID,
or if the
.B S_ISGID
bit is set in the parent directory, then the group
.B ID
of the directory is inherited from the parent.  The
.B S_ISGID
bit of the new directory is  inherited from the parent directory.
.sp
.LP
If
.I path
names a symbolic link,
.B mkdir()
fails and sets errno to
.BR EEXIST .
.sp
.LP
The newly created directory is empty with the exception of entries for
itself (\fB\&.\fR) and its parent directory (\fB\&..\fR).
.sp
.LP
Upon successful completion,
.B mkdir()
marks for update the
.BR st_atime ,
.B st_ctime
and
.B st_mtime
fields of the directory.
Also, the
.B st_ctime
and
.B st_mtime
fields of the directory that
contains the new entry are marked for update.
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B 0
is returned. Otherwise,
.B \(mi1
is
returned, no directory is created, and
.B errno
is set to indicate the
error.
.SH ERRORS
.sp
.LP
The
.B mkdir()
function will fail if:
.sp
.ne 2
.mk
.na
.B EACCES
.ad
.RS 16n
.rt
Either a component of the path prefix denies search permission or write
permission is denied on the parent directory of the directory to be
created.
.RE

.sp
.ne 2
.mk
.na
.B EDQUOT
.ad
.RS 16n
.rt
The directory where the new file entry is being placed cannot be extended
because the user's quota of disk blocks on that file system has been
exhausted; the new directory cannot be created because the user's quota of
disk blocks on that file system has been exhausted; or the user's quota of
inodes on the file system where the file is being created has been
exhausted.
.RE

.sp
.ne 2
.mk
.na
.B EEXIST
.ad
.RS 16n
.rt
The named file already exists.
.RE

.sp
.ne 2
.mk
.na
.B EFAULT
.ad
.RS 16n
.rt
The
.I path
argument points to an illegal address.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 16n
.rt
An attempt was made to create an extended attribute that is a directory.
.RE

.sp
.ne 2
.mk
.na
.B EIO
.ad
.RS 16n
.rt
An I/O error has occurred while accessing the file system.
.RE

.sp
.ne 2
.mk
.na
.B EILSEQ
.ad
.RS 16n
.rt
The path argument includes non-UTF8 characters and the file system accepts
only file names where all characters are part of the UTF-8 character
codeset.
.RE

.sp
.ne 2
.mk
.na
.B ELOOP
.ad
.RS 16n
.rt
Too many symbolic links were encountered in translating
.IR path ,
or a
loop exists in symbolic links encountered during resolution of
.IR path
.RE

.sp
.ne 2
.mk
.na
.B EMLINK
.ad
.RS 16n
.rt
The maximum number of links to the parent directory would be exceeded.
.RE

.sp
.ne 2
.mk
.na
.B ENAMETOOLONG
.ad
.RS 16n
.rt
The length of the
.I path
argument exceeds
.BR PATH_MAX ,
or the length
of a
.I path
component exceeds
.B NAME_MAX
while
.BR _POSIX_NO_TRUNC
is in effect.
.RE

.sp
.ne 2
.mk
.na
.B ENOENT
.ad
.RS 16n
.rt
A component of the path prefix does not exist or is a null pathname.
.RE

.sp
.ne 2
.mk
.na
.B ENOLINK
.ad
.RS 16n
.rt
The
.I path
argument points to a remote machine and the link to that
machine is no longer active.
.RE

.sp
.ne 2
.mk
.na
.B ENOSPC
.ad
.RS 16n
.rt
No free space is available on the device containing the directory.
.RE

.sp
.ne 2
.mk
.na
.B ENOTDIR
.ad
.RS 16n
.rt
A component of the path prefix is not a directory.
.RE

.sp
.ne 2
.mk
.na
.B EROFS
.ad
.RS 16n
.rt
The path prefix resides on a read-only file system.
.RE

.sp
.LP
The
.B mkdir()
function may fail if:
.sp
.ne 2
.mk
.na
.B ENAMETOOLONG
.ad
.RS 16n
.rt
As a result of encountering a symbolic link in resolution of the
.IR path
argument, the length of the substituted pathname string exceeded
.RB { PATH_MAX }.
.RE

.SH EXAMPLES
.LP
.B Example 1
Create a directory.
.sp
.LP
The following example demonstrates how to create a directory named
.BR /home/cnd/mod1 ,
with read, write, and search permissions for owner and
group, and with read and search permissions for others.

.sp
.in +2
.nf
#include <sys/types.h>
#include <sys/stat.h>
int status;
\&...
status = mkdir("/home/cnd/mod1",
     S_IRWXU | S_IRWXG | S_IROTH | S_IXOTH);
.fi
.in -2

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard
_
MT-LevelAsync-Signal-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR chmod (2),
.BR mknod (2),
.BR umask (2),
.BR mkdirp (3GEN),
.BR stat.h (3HEAD),
.BR attributes (5),
.BR standards (5)
