'\" te
.\" Copyright (c) 1997, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH resolvepath 2 "12 May 1997" "SunOS 5.11" "System Calls"
.SH NAME
resolvepath \- resolve all symbolic links of a path name
.SH SYNOPSIS
.LP
.nf
#include <unistd.h>

\fBint\fR \fBresolvepath\fR(\fBconst char *\fIpath\fR, \fBchar *\fIbuf\fR, \fBsize_t\fR \fIbufsiz\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B resolvepath()
function fully resolves all symbolic links in the
path name
.I path
into a resulting path name free of symbolic links and
places the resulting path name in the buffer
.I buf
which has size
.IR bufsiz .
The resulting path name names the same file or directory as
the original path name. All
.RB `` \&. ''
components are eliminated and
every non-leading
.RB `` \&.. ''
component is eliminated together with its
preceding directory component. If leading
.RB `` \&.. ''
components reach to
the root directory, they are replaced by
.RB `` / ''.
If the number of bytes
in the resulting path name is less than
.IR bufsiz ,
the contents of the
remainder of
.I buf
are unspecified.
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B resolvepath()
returns the count of bytes
placed in the buffer. Otherwise, it returns
.BR \(mi1 ,
leaves the buffer
unchanged, and sets
.B errno
to indicate the error.
.SH ERRORS
.sp
.LP
The
.B resolvepath()
function will fail if:
.sp
.ne 2
.mk
.na
.B EACCES
.ad
.RS 16n
.rt
Search permission is denied for a component of the path prefix of
.I path
or for a path prefix component resulting from the resolution of a
symbolic link.
.RE

.sp
.ne 2
.mk
.na
.B EFAULT
.ad
.RS 16n
.rt
The
.I path
or
.I buf
argument points to an illegal address.
.RE

.sp
.ne 2
.mk
.na
.B EIO
.ad
.RS 16n
.rt
An I/O error occurred while reading from the file system.
.RE

.sp
.ne 2
.mk
.na
.B ENOENT
.ad
.RS 16n
.rt
The
.I path
argument is an empty string or a component of
.I path
or
a path name component produced by resolving a symbolic link does not name an
existing file.
.RE

.sp
.ne 2
.mk
.na
.B ELOOP
.ad
.RS 16n
.rt
Too many symbolic links were encountered in resolving
.IR path .
.RE

.sp
.ne 2
.mk
.na
.B ENAMETOOLONG
.ad
.RS 16n
.rt
The length of
.I path
exceeds
.IR PATH_MAX ,
or a path name component
is longer than
.IR NAME_MAX .
Path name resolution of a symbolic link
produced an intermediate result whose length exceeds
.I PATH_MAX
or a
component whose length exceeds
.IR NAME_MAX .
.RE

.sp
.ne 2
.mk
.na
.B ENOTDIR
.ad
.RS 16n
.rt
A component of the path prefix of
.I path
or of a path prefix component
resulting from the resolution of a symbolic link is not a directory.
.RE

.SH USAGE
.sp
.LP
No more than
.I PATH_MAX
bytes will be placed in the buffer.
Applications should not assume that the returned contents of the buffer are
null-terminated.
.SH SEE ALSO
.sp
.LP
.BR readlink (2),
.BR realpath (3C)
