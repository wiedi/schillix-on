'\" te
.\" Copyright 1989 AT&T  @(#)msgrcv.2 1.33 98/05/12
.\" Copyright (c) 1999, Sun Microsystems, Inc.  All Rights Reserved
.\" Portions Copyright (c) 1992, X/Open Company Limited  All Rights Reserved
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH msgrcv 2 "19 May 1999" "SunOS 5.11" "System Calls"
.SH NAME
msgrcv \- message receive operation
.SH SYNOPSIS
.LP
.nf
#include <sys/msg.h>

\fBssize_t\fR \fBmsgrcv\fR(\fBint\fR \fImsqid\fR, \fBvoid *\fImsgp\fR, \fBsize_t\fR \fImsgsz\fR,
     \fBlong int\fR \fImsgtyp\fR, \fBint\fR \fImsgflg\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B msgrcv()
function reads a message from the queue associated with
the message queue identifier specified by
.I msqid
and places it in the
user-defined buffer pointed to by
.IR msgp .
.sp
.LP
The
.I msgp
argument points to a user-defined buffer that must contain
first a field of type
.B "long int"
that will specify the type of the
message, and then a data portion that will hold the data bytes of the
message. The structure below is an example of what this user-defined buffer
might look like:
.sp
.in +2
.nf
struct mymsg {
        long int    mtype;     /* message type */
        char        mtext[1];  /* message text */
}
.fi
.in -2

.sp
.LP
The
.B mtype
member is the received message's type as specified by the
sending process.
.sp
.LP
The
.B mtext
member is the text of the message.
.sp
.LP
The
.I msgsz
argument specifies the size in bytes of
.BR mtext .
The
received message is truncated to
.I msgsz
bytes if it is larger than
\fImsgsz\fR and (\fImsgflg\fB&MSG_NOERROR\fR) is non-zero. The truncated
part of the message is lost and no indication of the truncation is given to
the calling process.
.sp
.LP
The
.I msgtyp
argument specifies the type of message requested as
follows:
.RS +4
.TP
.ie t \(bu
.el o
If
.I msgtyp
is 0, the first message on the queue is received.
.RE
.RS +4
.TP
.ie t \(bu
.el o
If
.I msgtyp
is greater than 0, the first message of type \fImsgtyp\fR
is received.
.RE
.RS +4
.TP
.ie t \(bu
.el o
If
.I msgtyp
is less than 0, the first message of the lowest type that
is less than or equal to the absolute value of
.I msgtyp
is received.
.RE
.sp
.LP
The \fImsgflg\fR argument specifies which of the following actions is to be
taken if a message of the desired type is not on the queue:
.RS +4
.TP
.ie t \(bu
.el o
If (\fImsgflg\fB&IPC_NOWAIT\fR) is non-zero, the calling process will
return immediately with a return value of \(mi1 and
.B errno
set to
.BR ENOMSG .
.RE
.RS +4
.TP
.ie t \(bu
.el o
If (\fImsgflg\fB&IPC_NOWAIT\fR) is 0, the calling process will suspend
execution until one of the following occurs:
.RS +4
.TP
.ie t \(bu
.el o
A message of the desired type is placed on the queue.
.RE
.RS +4
.TP
.ie t \(bu
.el o
The message queue identifier
.I msqid
is removed from the system (see
.BR msgctl (2));
when this occurs,
.B errno
is set equal to
.BR EIDRM
and \fB\(mi1\fR is returned.
.RE
.RS +4
.TP
.ie t \(bu
.el o
The calling process receives a signal that is to be caught; in this case a
message is not received and the calling process resumes execution in the
manner prescribed in
.BR sigaction (2).
.RE
.RE
.sp
.LP
Upon successful completion, the following actions are taken with respect to
the data structure associated with
.I msqid
(see
.BR Intro (2)):
.RS +4
.TP
.ie t \(bu
.el o
\fBmsg_qnum\fR is decremented by 1.
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fBmsg_lrpid\fR is set equal to the process \fBID\fR of the calling
process.
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fBmsg_rtime\fR is set equal to the current time.
.RE
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B msgrcv()
returns a value equal to the
number of bytes actually placed into the buffer
.IR mtext .
Otherwise,
\fB\(mi1\fR is returned, no message is received, and \fBerrno\fR is set to
indicate the error.
.SH ERRORS
.sp
.LP
The
.B msgrcv()
function will fail if:
.sp
.ne 2
.mk
.na
.B E2BIG
.ad
.RS 10n
.rt
The value of
.B mtext
is greater than
.I msgsz
and
(\fImsgflg\fB&MSG_NOERROR\fR) is 0.
.RE

.sp
.ne 2
.mk
.na
.B EACCES
.ad
.RS 10n
.rt
Operation permission is denied to the calling process.  See
.BR Intro (2).
.RE

.sp
.ne 2
.mk
.na
.B EIDRM
.ad
.RS 10n
.rt
The message queue identifier
.I msqid
is removed from the system.
.RE

.sp
.ne 2
.mk
.na
.B EINTR
.ad
.RS 10n
.rt
The
.B msgrcv()
function was interrupted by a signal.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The
.I msqid
argument is not a valid message queue identifier.
.RE

.sp
.ne 2
.mk
.na
.B ENOMSG
.ad
.RS 10n
.rt
The queue does not contain a message of the desired type and
(\fImsgflg\fB&IPC_NOWAIT\fR) is non-zero.
.RE

.sp
.LP
The
.B msgrcv()
function may fail if:
.sp
.ne 2
.mk
.na
\fB \fBEFAULT\fR
.ad
.RS 11n
.rt
The
.I msgp
argument points to an illegal address.
.RE

.SH USAGE
.sp
.LP
The value passed as the
.I msgp
argument should be converted to type
.BR "void *" .
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard
.TE

.SH SEE ALSO
.sp
.LP
.BR Intro (2),
.BR msgctl (2),
.BR msgget (2),
.BR msgsnd (2),
.BR sigaction (2),
.BR attributes (5),
.BR standards (5)
