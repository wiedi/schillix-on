'\" te
.\" Copyright (c) 2004, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH setreuid 2 "22 Mar 2004" "SunOS 5.11" "System Calls"
.SH NAME
setreuid \- set real and effective user IDs
.SH SYNOPSIS
.LP
.nf
#include <unistd.h>

\fBint\fR \fBsetreuid\fR(\fBuid_t\fR \fIruid\fR, \fBuid_t\fR \fIeuid\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B setreuid()
function is used to set the real and effective user
IDs of the calling process. If
.I ruid
is \(mi1, the real user ID is not
changed; if
.I euid
is \(mi1, the effective user ID is not changed. The
real and effective user IDs may be set to different values in the same
call.
.sp
.LP
If the
.RB { PRIV_PROC_SETID }
privilege is asserted in the effective set
of the calling process, the real user ID and the effective user
.B ID
can
be set to any legal value.
.sp
.LP
If the
.RB { PRIV_PROC_SETID }
privilege is not asserted in the effective
set of the calling process, either the real user ID can be set to the
effective user ID, or the effective user ID can either be set to the saved
set-user ID from
.B execve()
.RB (see exec (2))
or the real user ID.
.sp
.LP
In either case, if the real user ID is being changed (that is, if
.I ruid
is not
.BR \(mi1 ),
or the effective user ID is being changed
to a value not equal to the real user ID, the saved set-user ID is set equal
to the new effective user ID.
.sp
.LP
All privileges are required to change to uid 0.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, 0 is returned. Otherwise, \(mi1 is returned,
.B errno
is set to indicate the error, and neither of the user IDs will
be changed.
.SH ERRORS
.sp
.LP
The
.B setreuid()
function will fail if:
.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The value of
.I ruid
or
.I euid
is less than
.B 0
or greater than
.B UID_MAX
(defined in
.RB < limits.h >).
.RE

.sp
.ne 2
.mk
.na
.B EPERM
.ad
.RS 10n
.rt
The {PRIV_PROC_SETID} privilege is not asserted in the effective set of the
calling processes and a change was specified other than changing the real
user
.B ID
to the effective user
.BR ID ,
or changing the effective user
.B ID
to the real user
.B ID
or the saved set-user
.BR ID .
See
.BR privileges (5)
for additional restrictions which apply when changing to
UID 0.
.RE

.SH USAGE
.sp
.LP
If a set-user-\fBID\fR process sets its effective user
.B ID
to its real
user
.BR ID ,
it can still set its effective user
.B ID
back to the
saved set-user
.BR ID .
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard
.TE

.SH SEE ALSO
.sp
.LP
.BR exec (2),
.BR getuid (2),
.BR setregid (2),
.BR setuid (2),
.BR attributes (5),
.BR privileges (5),
.BR standards (5)
