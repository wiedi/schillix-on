'\" te
.\" Copyright (c) 2009, Sun Microsystems, Inc.  All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH pset_bind 2 "13 Mar 2009" "SunOS 5.11" "System Calls"
.SH NAME
pset_bind \- bind LWPs to a set of processors
.SH SYNOPSIS
.LP
.nf
#include <sys/pset.h>

\fBint\fR \fBpset_bind\fR(\fBpsetid_t\fR \fIpset\fR, \fBidtype_t\fR \fIidtype\fR, \fBid_t\fR \fIid\fR, \fBpsetid_t *\fIopset\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B pset_bind()
function binds the
.B LWP
or set of
.BR LWPs
specified by
.I idtype
and
.I id
to the processor set specified by
.IR pset .
If
.I opset
is not
.IR NULL ,
\fBpset_bind()\fR sets the
\fBpsetid_t\fR variable pointed to by \fIopset\fR to the previous processor
set binding of one of the specified
.BR LWP ,
or to
.B PS_NONE
if the
selected
.B LWP
was not bound.
.sp
.LP
If
.I idtype
is
.BR P_PID ,
the binding affects all \fBLWP\fRs of the
process with process
.B ID
(PID) \fIid\fR.
.sp
.LP
If
.I idtype
is
.BR P_LWPID ,
the binding affects the
.B LWP
of the
current process with
.B "LWP ID"
.IR id .
.sp
.LP
If
.I idtype
is
.BR P_TASKID ,
the binding affects all LWPs of all
processes with task ID
.IR id .
.sp
.LP
If
.I idtype
is
.BR P_PROJID ,
the binding affects all LWPs of all
processes with project ID
.IR id .
.sp
.LP
If
.I idtype
is
.BR P_ZONEID ,
the binding affects all LWPs of all
processes with zone ID
.IR id .
.sp
.LP
If
.I idtype
is
.BR P_CTID ,
the binding affects all LWPs of all
processes with process contract ID
.IR id .
.sp
.LP
If
.I id
is
.BR P_MYID ,
the specified LWP, process, task, process,
zone, or process contract is the current one.
.sp
.LP
If
.I pset
is
.BR PS_NONE ,
the processor set bindings of the specified
LWPs are cleared.
.sp
.LP
If
.I pset
is
.BR PS_QUERY ,
the processor set bindings are not
changed.
.sp
.LP
If
.I pset
is
.BR PS_MYID ,
the specified LWPs are bound to the same
processor set as the caller. If the caller is not bound to a processor set,
the processor set bindings are cleared.
.sp
.LP
The {\fBPRIV_SYS_RES_CONFIG\fR} privilege must be asserted in the effective
set of the calling process or
.I pset
must be
.BR PS_QUERY .
.sp
.LP
LWPs that have been bound to a processor with
.BR processor_bind (2)
may
also be bound to a processor set if the processor is part of the processor
set. If this occurs, the binding to the processor remains in effect. If the
processor binding is later removed, the processor set binding becomes
effective.
.sp
.LP
Processor set bindings are inherited across
.BR fork (2)
and
.BR exec (2).
.SH RETURN VALUES
.sp
.LP
Upon successful completion, 0 is returned. Otherwise, \(mi1 is returned and
\fBerrno\fR is set to indicate the error.
.SH ERRORS
.sp
.LP
The
.B pset_bind()
function will fail if:
.sp
.ne 2
.mk
.na
.B EBUSY
.ad
.RS 11n
.rt
One of the \fBLWP\fRs is bound to a processor, and the specified processor
set does not include that processor.
.RE

.sp
.ne 2
.mk
.na
.B EFAULT
.ad
.RS 11n
.rt
The location pointed to by
.I opset
was not
.I NULL
and not writable
by the user.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 11n
.rt
An invalid processor set
.B ID
was specified;  or
.I idtype
was not
.BR P_PID ,
.BR P_LWPID ,
.BR P_PROJID ,
.BR P_TASKID ,
.BR P_ZONEID ,
or
.BR P_CTID .
.RE

.sp
.ne 2
.mk
.na
.B ENOTSUP
.ad
.RS 11n
.rt
The pools facility is active.  See
.BR pooladm (1M)
and
.BR pool_set_status (3POOL)
for information about enabling and disabling
the pools facility. Processes can be bound to pools using the
.BR poolbind (1M)
utility or the \fBpool_set_binding\fR(3POOL) function.
.sp
Binding a system process to a processor set is not supported.
.RE

.sp
.ne 2
.mk
.na
.B EPERM
.ad
.RS 11n
.rt
The {\fBPRIV_PROC_OWNER\fR} is not asserted in the effecive set of the
calling process and either the real or effective user ID of the calling
process does not match the real or effective user
.B ID
of one of the
LWPs being bound, or the processor set from which one or more of the LWPs
are being unbound has the
.B PSET_NOESCAPE
attribute set and
{\fBPRIV_SYS_RES_CONFIG\fR) is not asserted in the effective set of the
calling process. See
.BR pset_setattr (2)
for more information about
processor set attributes.
.RE

.sp
.ne 2
.mk
.na
.B ESRCH
.ad
.RS 11n
.rt
No processes, \fBLWP\fRs, or tasks were found to match the criteria
specified by
.I idtype
and
.IR id .
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelAsync-Signal-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR pbind (1M),
.BR pooladm (1M),
.BR poolbind (1M),
.BR psrset (1M),
.BR exec (2),
\fBfork\fR(2),
.BR processor_bind (2),
.BR pset_create (2),
\fBpset_info\fR(2),
.BR pset_setattr (2),
.BR pool_set_binding (3POOL),
.BR pool_set_status (3POOL),
.BR pset_getloadavg (3C),
.BR process (4),
.BR project (4),
.BR attributes (5),
.BR privileges (5)
