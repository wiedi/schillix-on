'\" te
.\" Copyright 1989 AT&T.
.\" Copyright (c) 2003, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" Portions Copyright (c) 1992, X/Open Company Limited  All Rights Reserved
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH ulimit 2 "1 Feb 2003" "SunOS 5.11" "System Calls"
.SH NAME
ulimit \- get and set process limits
.SH SYNOPSIS
.LP
.nf
#include <ulimit.h>

\fBlong\fR \fBulimit\fR(\fBint\fR \fIcmd\fR, \fB/*\fR \fInewlimit\fR */.\|.\|.);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B ulimit()
function provides for control over process limits. It is
effective in limiting the growth of regular files. Pipes are limited to
.B PIPE_MAX
bytes.
.sp
.LP
The
.I cmd
values, defined in
.RB < ulimit.h >,
include:
.sp
.ne 2
.mk
.na
.B UL_GETFSIZE
.ad
.RS 15n
.rt
Return the soft file size limit of the process. The limit is in units of
512-byte blocks and is inherited by child processes. Files of any size can
be read. The return value is the integer part of the soft file size limit
divided by 512.  If the result cannot be represented as a
.BR "long int" ,
the result is unspecified.
.RE

.sp
.ne 2
.mk
.na
.B UL_SETFSIZE
.ad
.RS 15n
.rt
Set the hard and soft file size limits for output operations of the process
to the value of the second argument, taken as a
.BR "long int" .
Any process
may decrease its own hard limit, but only a process with appropriate
privileges may increase the limit. The new file size limit is returned. The
hard and soft file size limits are set to the specified value multiplied by
512. If the result would overflow an
.BR rlimit_t ,
the actual value set is
unspecified.
.RE

.sp
.ne 2
.mk
.na
.B UL_GMEMLIM
.ad
.RS 15n
.rt
Get the maximum possible break value (see
.BR brk (2)).
.RE

.sp
.ne 2
.mk
.na
.B UL_GDESLIM
.ad
.RS 15n
.rt
Get the current value of the maximum number of open files per process
configured in the system.
.RE

.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B ulimit()
returns the value of the
requested limit.  Otherwise, \fB\(mi1\fR is returned, the limit is not
changed, and
.B errno
is set to indicate the error.
.SH ERRORS
.sp
.LP
The
.B ulimit()
function will fail if:
.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The
.I cmd
argument is not valid.
.RE

.sp
.ne 2
.mk
.na
.B EPERM
.ad
.RS 10n
.rt
A process that has not asserted
.RB { PRIV_SYS_RESOURCE }
in its effective
set is trying to increase its file size limit.
.RE

.SH USAGE
.sp
.LP
Since all return values are permissible in a successful situation, an
application wishing to check for error situations should set
.B errno
to
0, then call
.BR ulimit() ,
and if it returns \fB\(mi1\fR, check if
.B errno
is non-zero.
.sp
.LP
The
.B getrlimit()
and
.B setrlimit()
functions provide a more
general interface for controlling process limits, and are preferred over
.BR ulimit() .
See
.BR getrlimit (2).
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard
.TE

.SH SEE ALSO
.sp
.LP
.BR brk (2),
.BR getrlimit (2),
.BR write (2),
.BR attributes (5),
.BR privileges (5),
.BR standards (5)
