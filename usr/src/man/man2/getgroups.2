'\" te
.\" Copyright (c) 2006, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" Copyright 1989 AT&T
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH getgroups 2 "8 Sep 2006" "SunOS 5.11" "System Calls"
.SH NAME
getgroups, setgroups \- get or set supplementary group access list IDs
.SH SYNOPSIS
.LP
.nf
#include <unistd.h>

\fBint\fR \fBgetgroups\fR(\fBint\fR \fIgidsetsize\fR, \fBgid_t *\fIgrouplist\fR);
.fi

.LP
.nf
\fBint\fR \fBsetgroups\fR(\fBint\fR \fIngroups\fR, \fBconst gid_t *\fIgrouplist\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B getgroups()
function gets the current supplemental group access
list of the calling process and stores the result in the array of group IDs
specified by
.IR grouplist .
This array has
.I gidsetsize
entries and
must be large enough to contain the entire list. This list cannot be larger
than
.BR NGROUPS_UMAX .
If
.I gidsetsize
.RB "equals 0," " getgroups()"
will return the number of groups to which the calling process belongs
without modifying the array pointed to by
.IR grouplist .
.sp
.LP
The
.B setgroups()
function sets the supplementary group access list of
the calling process from the array of group IDs specified by
.IR grouplist .
The number of entries is specified by
.I ngroups
and can
not be greater than
.BR NGROUPS_MAX .
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B getgroups()
returns the number of
supplementary group IDs set for the calling process and
.BR setgroups()
returns
.BR 0 .
Otherwise,
.B \(mi1
is returned and
.B errno
is set
to indicate the error.
.SH ERRORS
.sp
.LP
The
.B getgroups()
and
.B setgroups()
functions will fail if:
.sp
.ne 2
.mk
.na
.B EFAULT
.ad
.RS 10n
.rt
A referenced part of the array pointed to by
.I grouplist
is an illegal
address.
.RE

.sp
.LP
The
.B getgroups()
function will fail if:
.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The value of
.I gidsetsize
is non-zero and less than the number of
supplementary group IDs set for the calling process.
.RE

.sp
.LP
The
.B setgroups()
function will fail if:
.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The value of
.I ngroups
is greater than
.RB { NGROUPS_MAX }.
.RE

.sp
.ne 2
.mk
.na
.B EPERM
.ad
.RS 10n
.rt
The
.RB { PRIV_PROC_SETID }
privilege is not asserted in the effective set
of the calling process.
.RE

.SH USAGE
.sp
.LP
Use of the
.B setgroups()
function requires the
.RB { PRIV_PROC_SETID }
privilege.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface Stability\fBgetgroups()\fR is Standard.
_
MT-LevelAsync-Signal-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR groups (1),
.BR chown (2),
.BR getuid (2),
.BR setuid (2),
.BR getgrnam (3C),
.BR initgroups (3C),
.BR attributes (5),
.BR privileges (5),
.BR standards (5)
