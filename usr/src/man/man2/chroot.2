'\" te
.\" Copyright 1989 AT&T.  Copyright (c) 2003, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH chroot 2 "20 Jan 2003" "SunOS 5.11" "System Calls"
.SH NAME
chroot, fchroot \- change root directory
.SH SYNOPSIS
.LP
.nf
#include <unistd.h>

\fBint\fR \fBchroot\fR(\fBconst char *\fIpath\fR);
.fi

.LP
.nf
\fBint\fR \fBfchroot\fR(\fBint\fR \fIfildes\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B chroot()
and
.B fchroot()
functions cause a directory to
become the root directory, the starting point for path searches for path
names beginning with
.B /
(slash). The user's working directory is
unaffected by the
.B chroot()
and
.B fchroot()
functions.
.sp
.LP
The
.I path
argument points to a path name naming a directory. The
.I fildes
argument to
.B fchroot()
is the open file descriptor of the
directory which is to become the root.
.sp
.LP
The privilege {\fBPRIV_PROC_CHROOT\fR} must be asserted in the effective
set of the process to change the root directory. While it is always possible
to change to the system root using the
.B fchroot()
function, it is not
guaranteed to succeed in any other case, even if
.I fildes
is valid in
all respects.
.sp
.LP
The ".\|." entry in the root directory is interpreted to mean the root
directory itself. Therefore, ".\|." cannot be used to access files outside
the subtree rooted at the root directory. Instead,
.B fchroot()
can be
used to reset the root to a directory that was opened before the root
directory was changed.
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B 0
is returned. Otherwise,
.B \(mi1
is
returned, the root directory remains unchanged, and
.B errno
is set to
indicate the error.
.SH ERRORS
.sp
.LP
The
.B chroot()
function will fail if:
.sp
.ne 2
.mk
.na
.B EACCES
.ad
.RS 16n
.rt
Search permission is denied for a component of the path prefix of
.IR dirname ,
or search permission is denied for the directory referred to
by
.IR dirname .
.RE

.sp
.ne 2
.mk
.na
.B EBADF
.ad
.RS 16n
.rt
The descriptor is not valid.
.RE

.sp
.ne 2
.mk
.na
.B EFAULT
.ad
.RS 16n
.rt
The
.I path
argument points to an illegal address.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 16n
.rt
The
.B fchroot()
function attempted to change to a directory the is not
the system root and external circumstances do not allow this.
.RE

.sp
.ne 2
.mk
.na
.B EINTR
.ad
.RS 16n
.rt
A signal was caught during the execution of the
.B chroot()
function.
.RE

.sp
.ne 2
.mk
.na
.B EIO
.ad
.RS 16n
.rt
An I/O error occurred while reading from or writing to the file system.
.RE

.sp
.ne 2
.mk
.na
.B ELOOP
.ad
.RS 16n
.rt
Too many symbolic links were encountered in translating
.IR path .
.RE

.sp
.ne 2
.mk
.na
.B ENAMETOOLONG
.ad
.RS 16n
.rt
The length of the
.I path
argument exceeds
.BR PATH_MAX ,
or the length
of a
.I path
component exceeds
.B NAME_MAX
while
.B _POSIX_NO_TRUNC
is in effect.
.RE

.sp
.ne 2
.mk
.na
.B ENOENT
.ad
.RS 16n
.rt
The named directory does not exist or is a null pathname.
.RE

.sp
.ne 2
.mk
.na
.B ENOLINK
.ad
.RS 16n
.rt
The
.I path
argument points to a remote machine and the link to that
machine is no longer active.
.RE

.sp
.ne 2
.mk
.na
.B ENOTDIR
.ad
.RS 16n
.rt
Any component of the path name is not a directory.
.RE

.sp
.ne 2
.mk
.na
.B EPERM
.ad
.RS 16n
.rt
The {\fBPRIV_PROC_CHROOT\fR} privilege is not asserted in the effective set
of the calling process.
.RE

.SH SEE ALSO
.sp
.LP
.BR chroot (1M),
.BR chdir (2),
.BR privileges (5)
.SH WARNINGS
.sp
.LP
The only use of
.B fchroot()
that is appropriate is to change back to
the system root.
