'\" te
.\" Copyright (c) 2006, Sun Microsystems Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH getlabel 2 "20 Jul 2007" "SunOS 5.11" "System Calls"
.SH NAME
getlabel, fgetlabel \- get file sensitivity label
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [\fIflags\fR.\|.\|.] \fIfile\fR.\|.\|. \fB-ltsol\fR [\fIlibrary\fR.\|.\|.]
.fi

.LP
.nf
#include <tsol/label.h>

\fBint\fR \fBgetlabel\fR(\fBconst char *\fIpath\fR, \fBm_label_t *\fIlabel_p\fR);
.fi

.LP
.nf
\fBint\fR \fBfgetlabel\fR(\fBint\fR \fIfd\fR, \fBm_label_t *\fIlabel_p\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B getlabel()
function obtains the sensitivity label of the file
that is named by
.IR path .
Discretionary read, write or execute permission
to the final component of
.I path
is not required, but all directories in
the path prefix of
.I path
must be searchable.
.sp
.LP
The
.B fgetlabel()
function obtains the label of an open file that is
referred to by the argument descriptor, such as would be obtained by an
.BR open (2)
call.
.sp
.LP
The
.I label_p
argument is a pointer to an opaque label structure. The
caller must allocate space for
.I label_p
by using
.BR m_label_alloc (3TSOL).
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B getlabel()
and
.B fgetlabel()
return
0. Otherwise they return \(mi1 and set
.B errno
to indicate the error.
.SH ERRORS
.sp
.LP
The
.B getlabel()
function will fail if:
.sp
.ne 2
.mk
.na
.B EACCES
.ad
.RS 16n
.rt
Search permission is denied for a component of the path prefix of
.IR path .
To override this restriction, the calling process can assert the
.B PRIV_FILE_DAC_SEARCH
privilege.
.RE

.sp
.ne 2
.mk
.na
.B EFAULT
.ad
.RS 16n
.rt
.I label_p
or
.I path
points to an invalid address.
.RE

.sp
.ne 2
.mk
.na
.B EIO
.ad
.RS 16n
.rt
An
.B I/O
error occurred while reading from or writing to the file
system.
.RE

.sp
.ne 2
.mk
.na
.B ELOOP
.ad
.RS 16n
.rt
Too many symbolic links were encountered in translating
.IR path .
.RE

.sp
.ne 2
.mk
.na
.B ENAMETOOLONG
.ad
.RS 16n
.rt
The length of the path argument exceeds
.IR PATH_MAX ,
or a pathname
component is longer than
.I NAME_MAX
while
.I _POSIX_NO_TRUNC
is in
effect (see
.BR pathconf (2)).
.RE

.sp
.ne 2
.mk
.na
.B ENOENT
.ad
.RS 16n
.rt
The file referred to by
.I path
does not exist.
.RE

.sp
.ne 2
.mk
.na
.B ENOTDIR
.ad
.RS 16n
.rt
A component of the path prefix of
.I path
is not a directory.
.RE

.sp
.LP
The
.B fgetlabel()
function will fail if:
.sp
.ne 2
.mk
.na
.B EBADF
.ad
.RS 10n
.rt
The
.I fd
argument is not a valid open file descriptor.
.RE

.sp
.ne 2
.mk
.na
.B EFAULT
.ad
.RS 10n
.rt
The
.I label_p
argument points to an invalid address.
.RE

.sp
.ne 2
.mk
.na
.B EIO
.ad
.RS 10n
.rt
An
.B I/O
error occurred while reading from or writing to the file
system.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcslr
_
Interface StabilityCommitted
.TE

.SH SEE ALSO
.sp
.LP
.BR open (2),
.BR pathconf (2),
.BR m_label_alloc (3TSOL),
.BR attributes (5),
.BR labels (5)
.sp
.LP
.I Obtaining a File Label
in \fISolaris Trusted Extensions Developer\&'s
Guide\fR
.SH NOTES
.sp
.LP
The functionality described on this manual page is available only if the
system is configured with Trusted Extensions.
