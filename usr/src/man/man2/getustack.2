'\" te
.\" Copyright (c) 2004, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH getustack 2 "2 Nov 2004" "SunOS 5.11" "System Calls"
.SH NAME
getustack, setustack \- retrieve or change the address of per-LWP stack
boundary information
.SH SYNOPSIS
.LP
.nf
#include <ucontext.h>

\fBint\fR \fBgetustack\fR(\fBstack_t **\fIspp\fR);
.fi

.LP
.nf
\fBint\fR \fBsetustack\fR(\fBstack_t *\fIsp\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B getustack()
function retrieves the address of per-LWP stack
boundary information.  The address is stored at the location pointed to by
.IR spp .
If this address has not been defined using a previous call to
.BR setustack() ,
.I NULL
is stored at the location pointed to by
.IR spp .
.sp
.LP
The
.B setustack()
function changes the address of the current thread's
stack boundary information to the value of
.IR sp .
.SH RETURN VALUES
.sp
.LP
Upon successful completion, these functions return 0. Otherwise, \(mi1 is
returned and
.B errno
is set to indicate the error.
.SH ERRORS
.sp
.LP
These functions will fail if:
.sp
.ne 2
.mk
.na
.B EFAULT
.ad
.RS 10n
.rt
The
.I spp
or
.I sp
argument does not refer to a valid address.
.RE

.SH USAGE
.sp
.LP
Only implementors of custom threading libraries should use these functions
to get and set the address of the stack bound to an internal per-thread data
structure. Other users should use
.BR stack_getbounds (3C)
and
.BR stack_setbounds (3C).
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(5.5i) |cw(0i)
lw(5.5i) |lw(0i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityEvolving
_
MT-LevelAsync-Signal-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR _stack_grow (3C),
.BR stack_getbounds (3C),
.BR stack_inbounds (3C),
.BR stack_setbounds (3C),
.BR stack_violation (3C),
.BR attributes (5)
