'\" te
.\" Copyright 1989 AT&T  Copyright (c) 2002, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH sigsuspend 2 "24 Jun 2001" "SunOS 5.11" "System Calls"
.SH NAME
sigsuspend \- install a signal mask and suspend caller until signal
.SH SYNOPSIS
.LP
.nf
#include <signal.h>

\fBint\fR \fBsigsuspend\fR(\fBconst sigset_t *\fIset\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B sigsuspend()
function replaces the caller's signal mask with the
set of signals pointed to by the
.I set
argument and  suspends the caller
until delivery of a signal whose action is either to execute a signal
catching function or to terminate the process. If the
.I set
argument
points to an invalid address, the behavior is undefined and
.B errno
may
be set to
.BR EFAULT .
.sp
.LP
If the action is to terminate the process,
.B sigsuspend()
does not
return. If the action is to execute a signal catching function,
\fBsigsuspend()\fR returns after the signal catching function returns. On
return, the signal mask is restored to the set that existed before the  call
to
.BR sigsuspend() .
.sp
.LP
It is not possible to block signals that cannot be ignored (see
.BR signal.h (3HEAD)).
This restriction is silently imposed by the
system.
.SH RETURN VALUES
.sp
.LP
Since
.B sigsuspend()
suspends the caller's execution indefinitely,
there is no successful completion return value. On failure, it returns
\fB\(mi1\fR and sets \fBerrno\fR to indicate the error.
.SH ERRORS
.sp
.LP
The
.B sigsuspend()
function will fail if:
.sp
.ne 2
.mk
.na
.B EINTR
.ad
.RS 9n
.rt
A signal was caught by the caller and control was returned from the signal
catching function.
.RE

.sp
.LP
The
.B sigsuspend()
function may fail if:
.sp
.ne 2
.mk
.na
.B EFAULT
.ad
.RS 10n
.rt
The
.I set
argument points to an illegal address.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard
_
MT-LevelAsync-Signal-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR sigaction (2),
.BR sigprocmask (2),
.BR sigwait (2),
.BR signal (3C),
.BR signal.h (3HEAD),
.BR sigsetops (3C),
.BR attributes (5)
.SH NOTES
.sp
.LP
If the caller specifies more than one unblocked signal in the mask to
.BR sigsuspend() ,
more than one signal might be processed before the call
to
.B sigsuspend()
returns.
.sp
.LP
While the caller is executing the signal handler that interrupted its call
to
.BR sigsuspend() ,
its signal mask is the one passed to
.BR sigsuspend() ,
modified as usual by the signal mask specification in
the signal's
.BR sigaction (2)
parameters.  The caller's signal mask is not
restored to its previous value until the caller returns from all the signal
handlers that interrupted
.BR sigsuspend() .
