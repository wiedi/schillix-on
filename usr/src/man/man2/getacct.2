'\" te
.\" Copyright (c) 2003, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH getacct 2 "20 Jan 2003" "SunOS 5.11" "System Calls"
.SH NAME
getacct, putacct, wracct \- get, put, or write extended accounting data
.SH SYNOPSIS
.LP
.nf
#include <sys/exacct.h>

\fBsize_t\fR \fBgetacct\fR(\fBidtype_t\fR \fIidtype\fR, \fBid_t\fR \fIid\fR, \fBvoid *\fIbuf\fR, \fBsize_t\fR \fIbufsize\fR);
.fi

.LP
.nf
\fBint\fR \fBputacct\fR(\fBidtype_t\fR \fIidtype\fR, \fBid_t\fR \fIid\fR, \fBvoid *\fIbuf\fR, \fBsize_t\fR \fIbufsize\fR, \fBint\fR \fIflags\fR);
.fi

.LP
.nf
\fBint\fR \fBwracct\fR(\fBidtype_t\fR \fIidtype\fR, \fBid_t\fR \fIid\fR, \fBint\fR \fIflags\fR);
.fi

.SH DESCRIPTION
.sp
.LP
These functions provide access to the extended accounting facility.
.sp
.LP
The
.B getacct()
function returns extended accounting buffers from the
kernel for currently executing tasks and processes. The resulting data buffer
is a packed
.B exacct
object that can be unpacked using
.B ea_unpack_object()
(see \fBea_pack_object\fR(3EXACCT)) and subsequently
manipulated using the functions of the extended accounting library,
.BR libexacct (3LIB).
.sp
.LP
The
.B putacct()
function provides privileged processes the ability to
tag accounting records with additional data specific to that process.  For
instance, a queueing facility might want to record to which queue a given
task or process was submitted prior to running. The
.I flags
argument
determines whether the contents of
.I buf
should be treated as raw data
(\fBEP_RAW\fR) or as an embedded \fBexacct\fR structure
(\fBEP_EXACCT_OBJECT\fR). In the case of
.BR EP_EXACCT_OBJECT ,
.I buf
must be a packed
.B exacct
object as returned by
.BR ea_pack_object (3EXACCT).
The use of an inappropriate flag or the
inclusion of corrupt
.B exacct
data will likely corrupt the enclosing
.B exacct
file.
.sp
.LP
The
.B wracct()
function requests the kernel to write, given its internal
state of resource usage, the appropriate data for the specified task or
process. The flags field determines whether a partial (\fBEW_PARTIAL\fR) or
interval record (\fBEW_INTERVAL\fR) is written.
.sp
.LP
These functions require root privilege, as they allow inquiry or reporting
relevant to system tasks and processes other than the invoking process. The
.B putacct()
and
.B wracct()
functions also cause the kernel to write
records to the system's extended accounting files.
.SH RETURN VALUES
.sp
.LP
The
.B getacct()
function returns the number of bytes required to
represent the extended accounting record for the requested system task or
process. If \fIbufsize\fR exceeds the returned size, \fIbuf\fR will contain a
valid accounting record buffer. If
.I bufsize
is less than the return
value, \fIbuf\fR will contain the first \fIbufsize\fR bytes of the record. If
.I bufsize
is 0,
.B getacct()
returns only the number of  bytes
required to represent the extended accounting record. In the event of
failure, \fB\(mi1\fR is returned and
.B errno
is set to indicate the
error.
.sp
.LP
The
.B putacct()
and
.B wracct()
functions return
.B 0
if the
record was successfully written. Otherwise, \fB\(mi1\fR is returned and
.B errno
is set to indicate the error.
.SH ERRORS
.sp
.LP
The
.BR getacct() ,
.BR putacct() ,
and
.B wracct()
functions will fail
if:
.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 14n
.rt
The
.I idtype
argument was not
.B P_TASKID
or
.BR P_PID .
.RE

.sp
.ne 2
.mk
.na
.B ENOSPC
.ad
.RS 14n
.rt
The file system containing the extended accounting file is full.  The
.B wracct()
or
.B putacct()
function will fail if the record size would
exceed the amount of space remaining on the file system.
.RE

.sp
.ne 2
.mk
.na
.B ENOTACTIVE
.ad
.RS 14n
.rt
The extended accounting facility for the requested
.B idtype_t
is not
active. Either
.B putacct()
attempted to write a task record when the task
accounting file was unset, or
.B getacct()
attempted to retrieve
accounting data for a process when extended process accounting was
inactive.
.RE

.sp
.ne 2
.mk
.na
.B EPERM
.ad
.RS 14n
.rt
The {\fBPRIV_SYS_ACCT\fR} privilege is not asserted in the effective set of
the calling process.
.RE

.sp
.ne 2
.mk
.na
.B ERSCH
.ad
.RS 14n
.rt
The
.I id
argument does not refer to a presently active system task
.B ID
or process
.BR ID .
.RE

.sp
.LP
The
.B putacct()
and
.B wracct()
functions will fail if:
.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The
.I flags
argument is neither
.B EW_PARTIAL
nor
.BR EW_INTERVAL .
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
lw(2.75i) |lw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE  TYPEATTRIBUTE	VALUE
_
MT-LevelAsync-Signal-Safe
.TE

.SH SEE ALSO
.sp
.LP
\fBea_pack_object\fR(3EXACCT), \fBlibexacct\fR(3LIB)\fBattributes\fR(5)
