'\" te
.\" Copyright (c) 2008, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright 1989 AT&T.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH umount 2 "4 Aug 2008" "SunOS 5.11" "System Calls"
.SH NAME
umount, umount2 \- unmount a file system
.SH SYNOPSIS
.LP
.nf
#include <sys/mount.h>

\fBint\fR \fBumount\fR(\fBconst char *\fIfile\fR);
.fi

.LP
.nf
\fBint\fR \fBumount2\fR(\fBconst char *\fIfile\fR, \fBint\fR \fImflag\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B umount()
function requests that a previously mounted file system
contained on a block special device or directory be unmounted.  The
\fIfile\fR argument is a pointer to the absolute pathname of the file system
to be unmounted. After unmounting the file system, the directory upon which
the file system was mounted reverts to its ordinary interpretation.
.sp
.LP
The
.B umount2()
function is identical to
.BR umount() ,
with the
additional capability of unmounting file systems even if there are open
files active. The \fImflag\fR argument must contain one of the following
values:
.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 12n
.rt
Perform a normal unmount that is equivalent to
.BR umount() .
The
\fBumount2()\fR function  returns \fBEBUSY\fR if there are open files active
within the file system to be unmounted.
.RE

.sp
.ne 2
.mk
.na
.B MS_FORCE
.ad
.RS 12n
.rt
Unmount the file system, even if there are open files active. A forced
unmount can result in loss of data, so it should be used only when a regular
unmount is unsuccessful. The
.B umount2()
function returns
.BR ENOTSUP
if the specified file systems does not support
.BR MS_FORCE .
Only file
systems of type
.BR nfs ,
.BR ufs ,
.BR pcfs ,
and \fBzfs\fR support
.BR MS_FORCE .
.RE

.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B 0
is returned. Otherwise,
.B \(mi1
is
returned and
.B errno
is set to indicate the error.
.SH ERRORS
.sp
.LP
The
.B umount()
and
.B umount2()
functions will fail if:
.sp
.ne 2
.mk
.na
.B EACCES
.ad
.RS 16n
.rt
The permission bits of the mount point do not permit read/write access or
search permission is denied on a component of the path prefix.
.sp
The calling process is not the owner of the mountpoint.
.sp
The mountpoint is not a regular file or a directory and the caller does not
have all privileges available in a its zone.
.sp
The special device device does not permit read access in the case of
read-only mounts or read-write access in the case of read/write mounts.
.RE

.sp
.ne 2
.mk
.na
.B EBUSY
.ad
.RS 16n
.rt
A file on \fIfile\fR is busy.
.RE

.sp
.ne 2
.mk
.na
.B EFAULT
.ad
.RS 16n
.rt
The file pointed to by \fIfile\fR points to an illegal address.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 16n
.rt
The file pointed to by \fIfile\fR is not mounted.
.RE

.sp
.ne 2
.mk
.na
.B ELOOP
.ad
.RS 16n
.rt
Too many symbolic links were encountered in translating the path pointed to
by
.IR file .
.RE

.sp
.ne 2
.mk
.na
.B ENAMETOOLONG
.ad
.RS 16n
.rt
The length of the \fIfile\fR argument exceeds
.IR PATH_MAX ,
or the
length of a  \fIfile\fR component exceeds
.I NAME_MAX
while
\fB_POSIX_NO_TRUNC\fR is in effect.
.RE

.sp
.ne 2
.mk
.na
.B ENOENT
.ad
.RS 16n
.rt
The file pointed to by \fIfile\fR does not exist or is not an absolute
path.
.RE

.sp
.ne 2
.mk
.na
.B ENOLINK
.ad
.RS 16n
.rt
The file pointed to by \fIfile\fR is on a remote machine and the link to
that machine is no longer active.
.RE

.sp
.ne 2
.mk
.na
.B ENOTBLK
.ad
.RS 16n
.rt
The file pointed to by \fIfile\fR is not a block special device.
.RE

.sp
.ne 2
.mk
.na
.B EPERM
.ad
.RS 16n
.rt
The {\fBPRIV_SYS_MOUNT\fR} privilege is not asserted in the effective set
of the calling process.
.RE

.sp
.ne 2
.mk
.na
.B EREMOTE
.ad
.RS 16n
.rt
The file pointed to by \fIfile\fR is remote.
.RE

.sp
.LP
The
.B umount2()
function will fail if:
.sp
.ne 2
.mk
.na
.B ENOTSUP
.ad
.RS 11n
.rt
The file pointed to by \fIfile\fR does not support this operation.
.RE

.SH USAGE
.sp
.LP
The
.B umount()
and
.B umount2()
functions can be invoked only by a
process that has the {\fBPRIV_SYS_MOUNT\fR} privilege asserted in its
effective set.
.sp
.LP
Because it provides greater functionality, the
.B umount2()
function is
preferred.
.SH SEE ALSO
.sp
.LP
.BR mount (2),
.BR privileges (5)
