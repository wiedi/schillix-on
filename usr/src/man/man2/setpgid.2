'\" te
.\" Copyright 1989 AT&T  Copyright (c) 1997, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH setpgid 2 "28 Dec 1996" "SunOS 5.11" "System Calls"
.SH NAME
setpgid \- set process group ID
.SH SYNOPSIS
.LP
.nf
#include <sys/types.h>
#include <unistd.h>

\fBint\fR \fBsetpgid\fR(\fBpid_t\fR \fIpid\fR, \fBpid_t\fR \fIpgid\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B setpgid()
function sets the process group
.B ID
of the process
with
.B ID
\fIpid\fR to \fIpgid\fR.
.sp
.LP
If
.I pgid
is equal to
.IR pid ,
the process becomes a process group
leader. See
.BR Intro (2)
for more information on session leaders and
process group leaders.
.sp
.LP
If
.I pgid
is not equal to
.IR pid ,
the process becomes a member of an
existing process group.
.sp
.LP
If
.I pid
is equal to 0, the process
.B ID
of the calling process is
used. If
.I pgid
is equal to 0, the process specified by \fIpid\fR
becomes a process group leader.
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B 0
is returned. Otherwise,
.B \(mi1
is
returned and
.B errno
is set to indicate the error.
.SH ERRORS
.sp
.LP
The
.B setpgid()
function will fail if:
.sp
.ne 2
.mk
.na
.B EACCES
.ad
.RS 10n
.rt
The
.I pid
argument matches the process
.B ID
of a child process of
the calling process and the child process has successfully executed one of
the
.I exec
family of functions (see
.BR exec (2)).
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The
.I pgid
argument is less than (\fBpid_t) 0\fR or greater than or
equal to
.BR PID_MAX ,
or the calling process has a controlling terminal
that does not support job control.
.RE

.sp
.ne 2
.mk
.na
.B EPERM
.ad
.RS 10n
.rt
The process indicated by the
.I pid
argument is a session leader.
.RE

.sp
.ne 2
.mk
.na
.B EPERM
.ad
.RS 10n
.rt
The
.I pid
argument matches the process
.B ID
of a child process of
the calling process and the child process is not in the same session as the
calling process.
.RE

.sp
.ne 2
.mk
.na
.B EPERM
.ad
.RS 10n
.rt
The
.I pgid
argument does not match the process
.B ID
of the process
indicated by the
.I pid
argument, and there is no process with a process
group
.B ID
that matches
.I pgid
in the same session as the calling
process.
.RE

.sp
.ne 2
.mk
.na
.B ESRCH
.ad
.RS 10n
.rt
The
.I pid
argument does not match the process
.B ID
of the calling
process or of a child process of the calling process.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard
_
MT-LevelAsync-Signal-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR Intro (2),
.BR exec (2),
.BR exit (2),
.BR fork (2),
.BR getpid (2),
.BR getsid (2),
.BR attributes (5),
.BR standards (5)
