'\" te
.\" Copyright 1989 AT&T  Copyright (c) 1997, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mincore 2 "12 Aug 1990" "SunOS 5.11" "System Calls"
.SH NAME
mincore \- determine residency of memory pages
.SH SYNOPSIS
.LP
.nf
#include <sys/types.h>

\fBint\fR \fBmincore\fR(\fBcaddr_t\fR \fIaddr\fR, \fBsize_t\fR \fIlen\fR, \fBchar *\fIvec\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B mincore()
function determines the residency of the memory pages in
the address space covered by mappings in the range
.RI [ addr ,
.I addr
+
.IR len ].
The status is returned as a character-per-page in the character
array referenced by
.I *vec
(which the system assumes to be large enough
to encompass all the pages in the address range). The least significant bit
of each character is set to 1 to indicate that the referenced page is in
primary memory, and to 0 to indicate that it is not. The settings of other
bits in each character are undefined and may contain other information in
future implementations.
.sp
.LP
Because the status of a page can change between the time
.BR mincore()
checks and returns the information, returned information might be outdated.
Only locked pages are guaranteed to remain in memory; see
.BR mlock (3C).
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B mincore()
returns
.BR 0 .
Otherwise,
.B
\(mi1 \c
is returned and
.B errno
is set to indicate the error.
.SH ERRORS
.sp
.LP
The
.B mincore()
function will fail if:
.sp
.ne 2
.mk
.na
.B EFAULT
.ad
.RS 10n
.rt
The
.I vec
argument points to an illegal address.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The
.I addr
argument is not a multiple of the page size as returned by
.BR sysconf (3C),
or the
.I len
argument has a value less than or equal
to 0.
.RE

.sp
.ne 2
.mk
.na
.B ENOMEM
.ad
.RS 10n
.rt
Addresses in the range
.RI [ "addr, addr + len" ]
are invalid for the address
space of a process or specify one or more pages which are not mapped.
.RE

.SH SEE ALSO
.sp
.LP
.BR mmap (2),
.BR mlock (3C),
.BR sysconf (3C)
