'\" te
.\" Copyright 1989 AT&T. Copyright (c) 2004, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mount 2 "26 Feb 2004" "SunOS 5.11" "System Calls"
.SH NAME
mount \- mount a file system
.SH SYNOPSIS
.LP
.nf
#include <sys/types.h>
#include <sys/mount.h>
#include <sys/mntent.h>

\fBint\fR \fBmount\fR(\fBconst char *\fIspec\fR, \fBconst char *\fIdir\fR, \fBint\fR \fImflag\fR,
     \fBchar *\fIfstype\fR, \fBchar *\fIdataptr\fR,\fBint\fR \fIdatalen\fR, \fBchar *\fIoptptr\fR,
     \fBint\fR \fIoptlen\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B mount()
function requests that a removable file system contained
on the block special file identified by
.I spec
be mounted on the
directory identified by
.IR dir .
The
.I spec
and
.I dir
arguments
are pointers to path names.
.sp
.LP
After a successful call to
.BR mount() ,
all references to the file
.I dir
refer to the root directory on the mounted file system. The
mounted file system is inserted into the kernel list of all mounted file
systems. This list can be examined through the mounted file system table
(see
.BR mnttab (4)).
.sp
.LP
The
.I fstype
argument is the file system type name. Standard file
system names are defined with the prefix
.B MNTTYPE_
in
<\fBsys/mntent.h\fR>. If neither \fBMS_DATA\fR nor
.B MS_OPTIONSTR
is set
in
.IR mflag ,
then
.I fstype
is ignored and the type of the root file
system is assumed.
.sp
.LP
The
.I dataptr
argument is 0 if no file system-specific data is to be
passed; otherwise it points to an area of size
.I datalen
that contains
the file system-specific data for this mount and the
.B MS_DATA
flag
should be set.
.sp
.LP
If the
.B MS_OPTIONSTR
flag is set, then
.I optptr
points to a buffer
containing the list of options to be used for this mount. The
.I optlen
argument specifies the length of the buffer. On completion of the
.B mount()
call, the options in effect for the mounted file system are
returned in this buffer. If
.B MS_OPTIONSTR
is not specified, then the
options for this mount will not appear in the mounted file systems table.
.sp
.LP
If the caller does not have all privileges available in the current zone,
the
.B nosuid
option is automatically set on the mount point. The
.B restrict
option is automatically added for
.B autofs
mounts.
.sp
.LP
If the caller is not in the global zone, the
.B nodevices
option is
automatically set.
.sp
.LP
The
.I mflag
argument is constructed by a bitwise-inclusive-OR of flags
from the following list, defined in
.RB < sys/mount.h >.
.sp
.ne 2
.mk
.na
.B MS_DATA
.ad
.RS 16n
.rt
The
.I dataptr
and
.I datalen
arguments describe a block of file
system-specific binary data at address
.I dataptr
of length
.IR datalen .
This is interpreted by file system-specific code within the
operating system and its format depends on the file system type. If a
particular file system type does not require this data,
.I dataptr
and
.I datalen
should both be 0.
.RE

.sp
.ne 2
.mk
.na
.B MS_GLOBAL
.ad
.RS 16n
.rt
Mount a file system globally if the system is configured and booted as part
of a cluster (see
.BR clinfo (1M)).
.RE

.sp
.ne 2
.mk
.na
.B MS_NOSUID
.ad
.RS 16n
.rt
.RB "Prevent programs that are marked set-user-" ID " or set-group-" ID 
from executing (see
.BR chmod (1)).
It also causes
.BR open (2)
to return
.B ENXIO
when attempting to open block or character special files.
.RE

.sp
.ne 2
.mk
.na
.B MS_OPTIONSTR
.ad
.RS 16n
.rt
The
.I optptr
and
.I optlen
arguments describe a character buffer at
address
.I optptr
of size
.IR optlen .
When calling
.BR mount() ,
the
character buffer should contain a null-terminated string of options to be
passed to the file system-specific code within the operating system. On a
successful return, the file system-specific code will return the list of
options recognized. Unrecognized options are ignored. The format of the
string is a list of option names separated by commas. Options that have
values (rather than binary options such as
.B suid
or
.BR nosuid ),
are
separated by "\fB=\fR" such as \fBdev=2c4046c\fR. Standard option names are
defined in <\fBsys/mntent.h\fR>. Only strings defined in the "C" locale are
supported. The maximum length option string that can be passed to or
returned from a
.B mount()
call is defined by the
.BR MAX_MNTOPT_STR
constant. The buffer should be long enough to contain more options than were
passed in, as the state of any default options that were not passed in the
input option string may also be returned in the recognized options list that
is returned.
.RE

.sp
.ne 2
.mk
.na
.B MS_OVERLAY
.ad
.RS 16n
.rt
Allow the file system to be mounted over an existing file system mounted on
.IR dir ,
making the underlying file system inaccessible. If a mount is
attempted on a pre-existing mount point without setting this flag, the mount
will fail.
.RE

.sp
.ne 2
.mk
.na
.B MS_RDONLY
.ad
.RS 16n
.rt
Mount the file system for reading only. This flag should also be specified
for file systems that are incapable of writing (for example, CDROM). Without
this flag, writing is permitted according to individual file
accessibility.
.RE

.sp
.ne 2
.mk
.na
.B MS_REMOUNT
.ad
.RS 16n
.rt
Remount a read-only file system as read-write.
.RE

.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B 0
is returned. Otherwise,
.B \(mi1
is
returned and
.B errno
is set to indicate the error.
.SH ERRORS
.sp
.LP
The
.B mount()
function will fail if:
.sp
.ne 2
.mk
.na
.B EACCES
.ad
.RS 16n
.rt
The permission bits of the mount point do not permit read/write access or
search permission is denied on a component of the path prefix.
.sp
The calling process is not the owner of the mountpoint.
.sp
The mountpoint is not a regular file or a directory and the caller does not
have all privileges available in a its zone.
.sp
The special device device does not permit read access in the case of
read-only mounts or read-write access in the case of read/write mounts.
.RE

.sp
.ne 2
.mk
.na
.B EBUSY
.ad
.RS 16n
.rt
The
.I dir
argument is currently mounted on, is someone's current
working directory, or is otherwise busy; or the device associated with
.I spec
is currently mounted.
.RE

.sp
.ne 2
.mk
.na
.B EFAULT
.ad
.RS 16n
.rt
The
.IR spec ,
.IR dir ,
.IR fstype ,
.IR dataptr ,
or
.IR optptr
argument points outside the allocated address space of the process.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 16n
.rt
The super block has an invalid magic number, the
.I fstype
is invalid,
or
.I dir
is not an absolute path.
.RE

.sp
.ne 2
.mk
.na
.B ELOOP
.ad
.RS 16n
.rt
Too many symbolic links were encountered in translating
.I spec
or
.IR dir .
.RE

.sp
.ne 2
.mk
.na
.B ENAMETOOLONG
.ad
.RS 16n
.rt
The length of the
.I path
argument exceeds
.IR PATH_MAX ,
or the length
of a
.I path
component exceeds
.I NAME_MAX
while
.BR _POSIX_NO_TRUNC
is in effect.
.RE

.sp
.ne 2
.mk
.na
.B ENOENT
.ad
.RS 16n
.rt
None of the named files exists or is a null pathname.
.RE

.sp
.ne 2
.mk
.na
.B ENOLINK
.ad
.RS 16n
.rt
The
.I path
argument points to a remote machine and the link to that
machine is no longer active.
.RE

.sp
.ne 2
.mk
.na
.B ENOSPC
.ad
.RS 16n
.rt
The file system state in the super-block is not
.B FsOKAY
and
.I mflag
requests write permission.
.RE

.sp
.ne 2
.mk
.na
.B ENOTBLK
.ad
.RS 16n
.rt
The
.I spec
argument is not a block special device.
.RE

.sp
.ne 2
.mk
.na
.B ENOTDIR
.ad
.RS 16n
.rt
The
.I dir
argument is not a directory, or a component of a path prefix
is not a directory.
.RE

.sp
.ne 2
.mk
.na
.B ENOTSUP
.ad
.RS 16n
.rt
A global mount is attempted (the
.B MS_GLOBAL
flag is set in
.IR mflag )
on a machine which is not booted as a cluster; a local mount is
attempted and
.I dir
is within a globally mounted file system; or a
remount was attempted on a file system that does not support remounting.
.RE

.sp
.ne 2
.mk
.na
.B ENXIO
.ad
.RS 16n
.rt
The device associated with
.I spec
does not exist.
.RE

.sp
.ne 2
.mk
.na
.B EOVERFLOW
.ad
.RS 16n
.rt
The length of the option string to be returned in the
.I optptr
argument
exceeds the size of the buffer specified by
.IR optlen .
.RE

.sp
.ne 2
.mk
.na
.B EPERM
.ad
.RS 16n
.rt
The
.RB { PRIV_SYS_MOUNT }
privilege is not asserted in the effective set
of the calling process.
.RE

.sp
.ne 2
.mk
.na
.B EREMOTE
.ad
.RS 16n
.rt
The
.I spec
argument is remote and cannot be mounted.
.RE

.sp
.ne 2
.mk
.na
.B EROFS
.ad
.RS 16n
.rt
The
.I spec
argument is write protected and
.I mflag
requests write
permission.
.RE

.SH USAGE
.sp
.LP
The
.B mount()
function can be invoked only by processes with
appropriate privileges.
.SH SEE ALSO
.sp
.LP
.BR mount (1M),
.BR umount (2),
.BR mnttab (4)
.SH NOTES
.sp
.LP
\fBMS_OPTIONSTR\fR-type option strings should be used.
.sp
.LP
Some flag bits set file system options that can also be passed in an option
string. Options are first set from the option string with the last setting
of an option in the string determining the value to be set by the option
string. Any options controlled by flags are then applied, overriding any
value set by the option string.
