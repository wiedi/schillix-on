'\" te
.\" Copyright (c) 1998, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH pcsample 2 "10 Mar 1998" "SunOS 5.11" "System Calls"
.SH NAME
pcsample \- program execution time profile
.SH SYNOPSIS
.LP
.nf
#include <pcsample.h>

\fBlong\fR \fBpcsample\fR(\fBuintptr_t\fR \fIsamples[]\fR, \fBlong\fR \fInsamples\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B pcsample()
function provides CPU-use statistics by profiling the
amount of
.B CPU
time expended by a program.
.sp
.LP
For profiling dynamically-linked programs and 64-bit programs, it is
superior to the
.BR profil (2)
function, which assumes that the entire
program is contained in a small, contiguous segment of the address space,
divides this segment into "bins", and on each clock tick increments the
counter in the bin where the program is currently executing. With shared
libraries creating discontinuous program segments spread throughout the
address space, and with 64-bit address spaces so large that the size of
"bins" would be measured in megabytes, the \fBprofil()\fR function is of
limited value.
.sp
.LP
The
.B pcsample()
function is passed an array
.I samples
containing
.I nsamples
pointer-sized elements. During program execution, the kernel
samples the program counter of the process, storing unadulterated values in
the array on each clock tick. The kernel stops writing to the array when it
is full, which occurs after
.I nsamples
/
.B HZ
seconds of process
virtual time. The
.B HZ
value is obtained by invoking the call
.BR sysconf(_SC_CLK_TCK) .
See \fBsysconf\fR(3C).
.sp
.LP
The sampling can be stopped by a subsequent call to
.B pcsample()
with
the
.I nsamples
argument set to 0.  Like
.BR profil() ,
sampling
continues across a call to
.BR fork (2),
but is disabled by a call to one
of the
.B exec
family of functions (see
.BR exec (2)).
It is also
disabled if an update of the \fIsamples\fB[\|]\fR array causes a memory
fault.
.SH RETURN VALUES
.sp
.LP
The
.B pcsample()
function always returns
.B 0
the first time it is
called. On subsequent calls, it returns the number of samples that were
stored during the previous invocation. If
.I nsamples
is invalid, it
returns \fB\(mi1\fR and sets
.B errno
to indicate the error.
.SH ERRORS
.sp
.LP
The
.B pcsample()
function will fail if:
.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The value of
.I nsamples
is not valid.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelAsync-Signal-Safe
_
Interface StabilityStable
.TE

.SH SEE ALSO
.sp
.LP
.BR exec (2),
.BR fork (2),
.BR profil (2),
.BR sysconf (3C),
.BR attributes (5)
