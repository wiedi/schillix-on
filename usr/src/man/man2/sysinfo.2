'\" te
.\" Copyright (c) 2009, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright 1989 AT&T
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH sysinfo 2 "29 Jan 2009" "SunOS 5.11" "System Calls"
.SH NAME
sysinfo \- get and set system information strings
.SH SYNOPSIS
.LP
.nf
#include <sys/systeminfo.h>

\fBint\fR \fBsysinfo\fR(\fBint\fR \fIcommand\fR, \fBchar *\fIbuf\fR, \fBlong\fR \fIcount\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The \fBsysinfo()\fR function copies information relating to the operating
system on which the process is executing into the buffer pointed to by
\fIbuf\fR. It can also set certain information where appropriate commands
are available. The
.I count
parameter indicates the size of the buffer.
.sp
.LP
The POSIX P1003.1 interface (see
.BR standards (5))
\fBsysconf\fR(3C)
provides a similar class of configuration information, but returns an
integer rather than a string.
.sp
.LP
The values for
.I command
are as follows:
.sp
.ne 2
.mk
.na
.B SI_SYSNAME
.ad
.sp .6
.RS 4n
Copy into the array pointed to by \fIbuf\fR the string that would be
returned by
.BR uname (2)
in the \fIsysname\fRfield. This is the name of
the implementation of the operating system, for example,
.B SunOS
or
.BR UTS .
.RE

.sp
.ne 2
.mk
.na
.B SI_HOSTNAME
.ad
.sp .6
.RS 4n
Copy into the array pointed to by \fIbuf\fR a string that names the present
host machine. This is the string that would be returned by
.B uname()
in
the \fInodename\fRfield. This hostname or nodename is often the name the
machine is known by locally. The
.I hostname
is the name of this machine
as a node in some network. Different networks might have different names for
the node, but presenting the nodename to the appropriate network directory
or name-to-address mapping service should produce a transport end point
address. The name might not be fully qualified. Internet host names can be
up to
.B 256
bytes in length (plus the terminating null).
.RE

.sp
.ne 2
.mk
.na
.B SI_SET_HOSTNAME
.ad
.sp .6
.RS 4n
Copy the null-terminated contents of the array pointed to by \fIbuf\fR into
the string maintained by the kernel whose value will be returned by
succeeding calls to \fBsysinfo()\fR with the command
.BR SI_HOSTNAME .
This
command requires that {\fBPRIV_SYS_ADMIN\fR} is asserted in the effective
set of the calling process.
.RE

.sp
.ne 2
.mk
.na
.B SI_RELEASE
.ad
.sp .6
.RS 4n
Copy into the array pointed to by \fIbuf\fR the string that would be
returned by
.BR uname (2)
in the
.I release
field. Typical values might
be
.B 5.2
or
.BR 4.1 .
.RE

.sp
.ne 2
.mk
.na
.B SI_VERSION
.ad
.sp .6
.RS 4n
Copy into the array pointed to by \fIbuf\fR the string that would be
returned by
.BR uname (2)
in the \fIversion\fRfield. The syntax and
semantics of this string are defined by the system provider.
.RE

.sp
.ne 2
.mk
.na
.B SI_MACHINE
.ad
.sp .6
.RS 4n
Copy into the array pointed to by \fIbuf\fR the string that would be
returned by
.BR uname (2)
in the
.I machine
field, for example,
.BR sun4u .
.RE

.sp
.ne 2
.mk
.na
.B SI_ARCHITECTURE
.ad
.sp .6
.RS 4n
Copy into the array pointed to by \fIbuf\fR a string describing the basic
instruction set architecture of the current system, for example,
.BR sparc ,
.BR mc68030 ,
.BR m32100 ,
or
.BR i386 .
These names might
not match predefined names in the C language compilation system.
.RE

.sp
.ne 2
.mk
.na
.B SI_ARCHITECTURE_64
.ad
.sp .6
.RS 4n
Copy into the array pointed to by \fIbuf\fR a string describing the 64-bit
instruction set architecture of the current system, for example,
\fBsparcv9\fR or
.BR amd64 .
These names might not match predefined names
in the C language compilation system.  This subcode is not recognized on
systems that do not allow a 64-bit application to run.
.RE

.sp
.ne 2
.mk
.na
.B SI_ARCHITECTURE_32
.ad
.sp .6
.RS 4n
Copy into the array pointed to by \fIbuf\fR a string describing the 32-bit
instruction set architecture of the current system, for example, \fBsparc\fR
or
.BR i386 .
These names might not match predefined names in the C
language compilation system.
.RE

.sp
.ne 2
.mk
.na
.B SI_ARCHITECTURE_K
.ad
.sp .6
.RS 4n
Copy into the array pointed to by \fIbuf\fR a string describing the kernel
instruction set architecture of the current system for example
.BR sparcv9
or
.BR i386 .
These names might not match predefined names in the C
language compilation system.
.RE

.sp
.ne 2
.mk
.na
.B SI_ARCHITECTURE_NATIVE
.ad
.sp .6
.RS 4n
Copy into the array pointed to by \fIbuf\fR a string describing the native
instruction set architecture of the current system, for example
\fBsparcv9\fR or
.BR i386 .
These names might not match predefined names
in the C language compilation system.
.RE

.sp
.ne 2
.mk
.na
.B SI_ISALIST
.ad
.sp .6
.RS 4n
Copy into the array pointed to by \fIbuf\fR the names of the variant
instruction set architectures executable on the current system.
.sp
The names are space-separated and are ordered in the sense of best
performance. That is, earlier-named instruction sets might contain more
instructions than later-named instruction sets; a program that is compiled
for an earlier-named instruction set will most likely run faster on this
machine than the same program compiled for a later-named instruction set.
.sp
Programs compiled for an instruction set that does not appear in the list
will most likely experience performance degradation or not run at all on
this machine.
.sp
The instruction set names known to the system are listed in
.BR isalist (5);
these names might not match predefined names or compiler
options in the C language compilation system.
.sp
This command is obsolete and might be removed in a future release. See
.BR getisax (2)
and the
.I "Linker and Libraries Guide"
for a better way
to handle instruction set extensions.
.RE

.sp
.ne 2
.mk
.na
.B SI_PLATFORM
.ad
.sp .6
.RS 4n
Copy into the array pointed to by \fIbuf\fR a string describing the
specific model of the hardware platform, for example,
.BR SUNW,Sun-Blade-1500 ,
.BR SUNW,Sun-Fire-T200 ,
or
.BR i86pc .
.RE

.sp
.ne 2
.mk
.na
.B SI_HW_PROVIDER
.ad
.sp .6
.RS 4n
Copies the name of the hardware manufacturer into the array pointed to by
\fIbuf\fR.
.RE

.sp
.ne 2
.mk
.na
.B SI_HW_SERIAL
.ad
.sp .6
.RS 4n
Copy into the array pointed to by \fIbuf\fR a string which is the ASCII
representation of the hardware-specific serial number of the physical
machine on which the function is executed. This might be implemented in
Read-Only Memory, using software constants set when building the operating
system, or by other means, and might contain non-numeric characters. If the
function is executed within a non-global zone that emulates a host
identifier, then the ASCII representation of the zone's host identifier is
copied into the array pointed to by
.IR buf .
It is anticipated that
manufacturers will not issue the same "serial number" to more than one
physical machine. The pair of strings returned by
.B SI_HW_PROVIDER
and
\fBSI_HW_SERIAL\fR is not guaranteed to be unique across all vendor's SVR4
implementations and could change over the lifetime of a given system.
.RE

.sp
.ne 2
.mk
.na
.B SI_SRPC_DOMAIN
.ad
.sp .6
.RS 4n
Copies the Secure Remote Procedure Call domain name into the array pointed
to by \fIbuf\fR.
.RE

.sp
.ne 2
.mk
.na
.B SI_SET_SRPC_DOMAIN
.ad
.sp .6
.RS 4n
Set the string to be returned by \fBsysinfo()\fR with the
\fBSI_SRPC_DOMAIN\fR command to the value contained in the array pointed to
by
.IR buf .
This command requires that {\fBPRIV_SYS_ADMIN\fR} is asserted
in the effective set of the calling process.
.RE

.sp
.ne 2
.mk
.na
.B SI_DHCP_CACHE
.ad
.sp .6
.RS 4n
Copy into the array pointed to by \fIbuf\fR an ASCII string consisting of
the ASCII hexidecimal encoding of the name of the interface configured by
.BR boot (1M)
followed by the DHCPACK reply from the server. This command
is intended for use only by the \fBdhcpagent\fR(1M) DHCP client daemon for
the purpose of adopting the DHCP maintenance of the interface configured by
.BR boot .
.RE

.SH RETURN VALUES
.sp
.LP
Upon successful completion, the value returned indicates the buffer size in
bytes required to hold the complete value and the terminating null
character. If this value is no greater than the value passed in \fIcount\fR,
the entire string was copied. If this value is greater than
.IR count ,
the
string copied into \fIbuf\fR has been truncated to  \fIcount\fR\(mi1 bytes
plus a terminating null character.
.sp
.LP
Otherwise, \(mi1 is returned and
.B errno
is set to indicate the
error.
.SH ERRORS
.sp
.LP
The \fBsysinfo()\fR function will fail if:
.sp
.ne 2
.mk
.na
.B EFAULT
.ad
.RS 10n
.rt
The \fIbuf\fR argument does not point to a valid address.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 10n
.rt
The
.I count
argument for a non-SET command is less than 0 or the data
for a SET command exceeds the limits established by the implementation.
.RE

.sp
.ne 2
.mk
.na
.B EPERM
.ad
.RS 10n
.rt
The {\fBPRIV_SYS_ADMIN\fR} was not asserted in the effective set of the
calling process.
.RE

.SH USAGE
.sp
.LP
In many cases there is no corresponding programming interface to set these
values; such strings are typically settable only by the system administrator
modifying entries in the
.B /etc/system
directory or the code provided by
the particular OEM reading a serial number or code out of read-only memory,
or hard-coded in the version of the operating system.
.sp
.LP
A good estimation for
.I count
is 257, which is likely to cover all
strings returned by this interface in typical installations.
.SH SEE ALSO
.sp
.LP
.BR boot (1M),
.BR dhcpagent (1M),
.BR getisax (2),
.BR uname (2),
.BR gethostid (3C),
.BR gethostname (3C),
\fBsysconf\fR(3C),
.BR isalist (5),
.BR privileges (5),
.BR standards (5),
.BR zones (5)
.sp
.LP
.I Linker and Libraries Guide
