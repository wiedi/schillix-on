'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" Copyright 1989 AT&T
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH symlink 2 "18 May 2007" "SunOS 5.11" "System Calls"
.SH NAME
symlink \- make a symbolic link to a file
.SH SYNOPSIS
.LP
.nf
#include <unistd.h>

\fBint\fR \fBsymlink\fR(\fBconst char *\fIname1\fR, \fBconst char *\fIname2\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B symlink()
function creates a symbolic link
.I name2
to the
file
.IR name1 .
Either name may be an arbitrary pathname, the files need
not be on the same file system, and
.I name1
may be nonexistent.
.sp
.LP
The file to which the symbolic link points is used when an
.BR open (2)
operation is performed on the link. A
.B stat()
operation performed on a
symbolic link returns the linked-to file, while an
.B lstat()
operation
returns information about the link itself.  See
.BR stat (2).
Unexpected
results may occur when a symbolic link is made to a directory. To avoid
confusion in applications, the
.BR readlink (2)
call can be used to read
the contents of a symbolic link.
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B 0
is returned.  Otherwise,
.B \(mi1
is
returned,
.B errno
is set to indicate the error, and the symbolic link is
not made.
.SH ERRORS
.sp
.LP
The
.B symlink()
function will fail if:
.sp
.ne 2
.mk
.na
.B EACCES
.ad
.RS 16n
.rt
Search permission is denied for a component of the path prefix of
.IR name2 .
.RE

.sp
.ne 2
.mk
.na
.B EDQUOT
.ad
.RS 16n
.rt
The directory where the entry for the new symbolic link is being placed
cannot be extended because the user's quota of disk blocks on that file
system has been exhausted; the new symbolic link cannot be created because
the user's quota of disk blocks on that file system has been exhausted; or
the user's quota of inodes on the file system where the file is being
created has been exhausted.
.RE

.sp
.ne 2
.mk
.na
.B EEXIST
.ad
.RS 16n
.rt
The file referred to by
.I name2
already exists.
.RE

.sp
.ne 2
.mk
.na
.B EFAULT
.ad
.RS 16n
.rt
The
.I name1
or
.I name2
argument points to an illegal address.
.RE

.sp
.ne 2
.mk
.na
.B EILSEQ
.ad
.RS 16n
.rt
The path argument includes non-UTF8 characters and the file system accepts
only file names where all characters are part of the UTF-8 character
codeset.
.RE

.sp
.ne 2
.mk
.na
.B EIO
.ad
.RS 16n
.rt
An I/O error occurs while reading from or writing to the file system.
.RE

.sp
.ne 2
.mk
.na
.B ELOOP
.ad
.RS 16n
.rt
Too many symbolic links are encountered in translating
.IR name2 .
.RE

.sp
.ne 2
.mk
.na
.B ENAMETOOLONG
.ad
.RS 16n
.rt
The length of the
.I name2
argument exceeds
.BR PATH_MAX ,
or the
length of a
.I name2
component exceeds
.B NAME_MAX
while
.B _POSIX_NO_TRUNC
is in effect.
.RE

.sp
.ne 2
.mk
.na
.B ENOENT
.ad
.RS 16n
.rt
A component of the path prefix of
.I name2
does not exist.
.RE

.sp
.ne 2
.mk
.na
.B ENOSPC
.ad
.RS 16n
.rt
The directory in which the entry for the new symbolic link is being placed
cannot be extended because no space is left on the file system containing
the directory; the new symbolic link cannot be created because no space is
left on the file system which will contain the link; or there are no free
inodes on the file system on which the file is being created.
.RE

.sp
.ne 2
.mk
.na
.B ENOSYS
.ad
.RS 16n
.rt
The file system does not support symbolic links.
.RE

.sp
.ne 2
.mk
.na
.B ENOTDIR
.ad
.RS 16n
.rt
A component of the path prefix of
.I name2
is not a directory.
.RE

.sp
.ne 2
.mk
.na
.B EROFS
.ad
.RS 16n
.rt
The file
.I name2
would reside on a read-only file system.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStandard
.TE

.SH SEE ALSO
.sp
.LP
.BR cp (1),
.BR link (2),
.BR open (2),
.BR readlink (2),
.BR stat (2),
.BR unlink (2),
.BR attributes (5)
