'\" te
.\" Copyright 1989 AT&T  Copyright (c) 2001, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH getdents 2 "17 Jul 2001" "SunOS 5.11" "System Calls"
.SH NAME
getdents \- read directory entries and put in a file system independent
format
.SH SYNOPSIS
.LP
.nf
#include <dirent.h>

\fBint\fR \fBgetdents\fR(\fBint\fR \fIfildes\fR, \fBstruct dirent *\fIbuf\fR, \fBsize_t\fR \fInbyte\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B getdents()
function attempts to read
.I nbyte
bytes from the
directory associated with the file descriptor \fIfildes\fR and to format
them as file system independent directory entries in the buffer pointed to
by
.IR buf .
Since the file system independent directory entries are of
variable lengths, in most cases the actual number of bytes returned will be
less than
.IR nbyte .
The file system independent directory entry is
specified by the
.B dirent
structure.  See
.BR dirent.h (3HEAD).
.sp
.LP
On devices capable of seeking,
.B getdents()
starts at a position in the
file given by the file pointer associated with
.IR fildes .
Upon return
from
.BR getdents() ,
the file pointer is incremented to point to the next
directory entry.
.SH RETURN VALUES
.sp
.LP
Upon successful completion, a non-negative integer is returned indicating
the number of bytes actually read. A return value of
.B 0
indicates the
end of the directory has been reached. Otherwise, \fB\(mi1\fR is returned
and
.B errno
is set to indicate the error.
.SH ERRORS
.sp
.LP
The
.B getdents()
function will fail if:
.sp
.ne 2
.mk
.na
.B EBADF
.ad
.RS 13n
.rt
The \fIfildes\fR argument is not a valid file descriptor open for
reading.
.RE

.sp
.ne 2
.mk
.na
.B EFAULT
.ad
.RS 13n
.rt
The \fIbuf\fR argument points to an illegal address.
.RE

.sp
.ne 2
.mk
.na
.B EINVAL
.ad
.RS 13n
.rt
The
.I nbyte
argument is not large enough for one directory entry.
.RE

.sp
.ne 2
.mk
.na
.B EIO
.ad
.RS 13n
.rt
An I/O error occurred while accessing the file system.
.RE

.sp
.ne 2
.mk
.na
.B ENOENT
.ad
.RS 13n
.rt
The current file pointer for the directory is not located at a valid
entry.
.RE

.sp
.ne 2
.mk
.na
.B ENOLINK
.ad
.RS 13n
.rt
The \fIfildes\fR argument points to a remote machine and the link to that
machine is no longer active.
.RE

.sp
.ne 2
.mk
.na
.B ENOTDIR
.ad
.RS 13n
.rt
The \fIfildes\fR argument is not a directory.
.RE

.sp
.ne 2
.mk
.na
.B EOVERFLOW
.ad
.RS 13n
.rt
The value of the
.B dirent
structure member
.B d_ino
or \fBd_off\fR
cannot be represented in an
.B ino_t
or
.BR off_t .
.RE

.SH USAGE
.sp
.LP
The
.B getdents()
function was developed to implement the
.BR readdir (3C)
function and should not be used for other purposes.
.sp
.LP
The
.B getdents()
function has a transitional interface for 64-bit file
offsets. See
.BR lf64 (5).
.SH SEE ALSO
.sp
.LP
.BR readdir (3C),
.BR dirent.h (3HEAD),
.BR lf64 (5)
