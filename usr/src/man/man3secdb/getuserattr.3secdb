'\" te
.\" Copyright (c) 2005, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH getuserattr 3SECDB "31 Mar 2005" "SunOS 5.11" "Security Attributes Database Library Functions"
.SH NAME
getuserattr, getusernam, getuseruid, free_userattr, setuserattr,
enduserattr, fgetuserattr \- get user_attr entry
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. -lsecdb  -lsocket  -lnsl [ \fIlibrary\fR.\|.\|. ]
#include <user_attr.h>

\fBuserattr_t *\fBgetuserattr\fR(\fBvoid\fR);
.fi

.LP
.nf
\fBuserattr_t *\fBgetusernam\fR(\fBconst char *\fIname\fR);
.fi

.LP
.nf
\fBuserattr_t *\fBgetuseruid\fR(\fBuid_t\fR \fIuid\fR);
.fi

.LP
.nf
\fBvoid\fR \fBfree_userattr\fR(\fBuserattr_t *\fIuserattr\fR);
.fi

.LP
.nf
\fBvoid\fR \fBsetuserattr\fR(\fBvoid\fR);
.fi

.LP
.nf
\fBvoid\fR \fBenduserattr\fR(\fBvoid\fR);
.fi

.LP
.nf
\fBuserattr_t *\fBfgetuserattr\fR(\fBFILE *\fIf\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.BR getuserattr() ,
.BR getusernam() ,
and
.BR getuseruid()
functions each return a
.BR user_attr (4)
entry. Entries can come from any
of the sources specified in the
.BR nsswitch.conf (4)
file. The
.B getuserattr()
function enumerates
.B user_attr
entries. The
.B getusernam()
function searches for a
.B user_attr
entry with a
given user name
.IR name .
The
.B getuseruid()
function searches for a
.B user_attr
entry with a given user ID
.IR uid .
Successive calls to
these functions return either successive
.B user_attr
entries or
.IR NULL .
.sp
.LP
The \fBfgetuserattr()\fR function does not use \fBnsswitch.conf\fR but
reads and parses the next line from the stream
.IR f .
This stream is
assumed to have the format of the
.B user_attr
files.
.sp
.LP
The
.B free_userattr()
function releases memory allocated by the
.BR getusernam() ,
.BR getuserattr() ,
and \fBfgetuserattr()\fR
functions.
.sp
.LP
The internal representation of a
.B user_attr
entry is a
.B userattr_t
structure defined in <\fBuser_attr.h\fR> with the following
members:
.sp
.in +2
.nf
char  *name;       /* name of the user */
char  *qualifier;  /* reserved for future use */
char  *res1;       /* reserved for future use */
char  *res2;       /* reserved for future use */
kva_t *attr;       /* list of attributes */
.fi
.in -2

.sp
.LP
The \fBsetuserattr()\fR function "rewinds" to the beginning of the
enumeration of
.B user_attr
entries.  Calls to
.B getusernam()
may
.RB "leave the enumeration in an indeterminate state, so" " setuserattr()"
should be called before the first call to
.BR getuserattr() .
.sp
.LP
The
.B enduserattr()
function may be called to indicate that
.B user_attr
processing is complete; the library may then close any open
.B user_attr
file, deallocate any internal storage, and so forth.
.SH RETURN VALUES
.sp
.LP
The
.B getuserattr()
function returns a pointer to a
.B userattr_t
if
it successfully enumerates an entry; otherwise it returns
.IR NULL ,
indicating the end of the enumeration.
.sp
.LP
The
.B getusernam()
function returns a pointer to a
.B userattr_t
if
it successfully locates the requested entry; otherwise it returns
.IR NULL .
.SH USAGE
.sp
.LP
The
.B getuserattr()
and
.B getusernam()
functions both allocate
memory for the pointers they return. This memory should be deallocated with
the
.B free_userattr()
function.
.sp
.LP
Individual attributes can be referenced in the
.B attr
structure by
calling the \fBkva_match\fR(3SECDB) function.
.SH WARININGS
.sp
.LP
Because the list of legal keys is likely to expand, code  must be written
to ignore unknown key-value pairs without error.
.SH FILES
.sp
.ne 2
.mk
.na
.B /etc/user_attr
.ad
.RS 22n
.rt
extended user attributes
.RE

.sp
.ne 2
.mk
.na
.B /etc/nsswitch.conf
.ad
.RS 22n
.rt
configuration file lookup information for the name server switch
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR getauthattr (3SECDB),
.BR getexecattr (3SECDB),
.BR getprofattr (3SECDB),
.BR user_attr (4),
.BR attributes (5)
