'\" te
.\" Copyright (c) 2005, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH getprofattr 3SECDB "31 Mar 2005" "SunOS 5.11" "Security Attributes Database Library Functions"
.SH NAME
getprofattr, getprofnam, free_profattr, setprofattr, endprofattr,
getproflist, free_proflist \- get profile description and attributes
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. -lsecdb  -lsocket  -lnsl [ \fIlibrary\fR.\|.\|. ]
#include <prof_attr.h>

\fBprofattr_t *\fBgetprofattr\fR(\fBvoid\fR);
.fi

.LP
.nf
\fBprofattr_t *\fBgetprofnam\fR(\fBconst char *\fIname\fR);
.fi

.LP
.nf
\fBvoid\fR \fBfree_profattr\fR(\fBprofattr_t *\fIpd\fR);
.fi

.LP
.nf
\fBvoid\fR \fBsetprofattr\fR(\fBvoid\fR);
.fi

.LP
.nf
\fBvoid\fR \fBendprofattr\fR(\fBvoid\fR);
.fi

.LP
.nf
\fBvoid\fR \fBgetproflist\fR(\fBconst char *\fIprofname\fR, \fBchar **\fIproflist\fR, \fBint *\fIprofcnt\fR);
.fi

.LP
.nf
\fBvoid\fR \fBfree_proflist\fR(\fBchar **\fIproflist\fR, \fBint\fR \fIprofcnt\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The \fBgetprofattr()\fR and \fBgetprofnam()\fR functions each return a
.B prof_attr
entry. Entries can come from any of the sources specified in
the
.BR nsswitch.conf (4)
file.
.sp
.LP
The \fBgetprofattr()\fR function enumerates \fBprof_attr\fR entries. The
.B getprofnam()
function searches for a
.B prof_attr
entry with a
given
.IR name .
Successive calls to these functions return either
successive
.B prof_attr
entries or
.IR NULL .
.sp
.LP
The internal representation of a
.B prof_attr
entry is a
.B profattr_t
structure defined in  <\fBprof_attr.h\fR> with the
following members:
.sp
.in +2
.nf
char	 *name;   /* Name of the profile */
char	 *res1;   /* Reserved for future use */
char	 *res2;   /* Reserved for future use */
char	 *desc;   /* Description/Purpose of the profile */
kva_t *attr;   /* Profile attributes */
.fi
.in -2

.sp
.LP
The
.B free_profattr()
function releases memory allocated by the
.B getprofattr()
and
.B getprofnam()
functions.
.sp
.LP
The \fBsetprofattr()\fR function "rewinds" to the beginning of the
enumeration of \fBprof_attr\fR entries. Calls to \fBgetprofnam()\fR can
leave the enumeration in an indeterminate state. Therefore,
.B setprofattr()
should be called before the first call to
.BR getprofattr() .
.sp
.LP
The
.B endprofattr()
function may be called to indicate that
.B prof_attr
processing is complete; the system may then close any open
.B prof_attr
file, deallocate storage, and so forth.
.sp
.LP
The
.B getproflist()
function searches for the list of sub-profiles
found in the given
.I profname
and allocates memory to store this list in
.IR proflist .
The given
.I profname
will be included in the list of
sub-profiles. The
.I profcnt
argument indicates the number of items
currently valid in
.IR proflist .
Memory allocated by \fBgetproflist()\fR
should be freed using the
.B free_proflist()
function.
.sp
.LP
The
.B free_proflist()
function frees memory allocated by the
.B getproflist()
function.  The
.I profcnt
argument specifies the
number of items to free from the
.I proflist
argument.
.SH RETURN VALUES
.sp
.LP
The \fBgetprofattr()\fR function returns a pointer to a \fBprofattr_t\fR if
it successfully enumerates an entry; otherwise it returns
.IR NULL ,
indicating the end of the enumeration.
.sp
.LP
The \fBgetprofnam()\fR function returns a pointer to a \fBprofattr_t\fR if
it successfully locates the requested entry; otherwise it returns
.IR NULL .
.SH USAGE
.sp
.LP
Individual attributes in the
.B prof_attr_t
structure can be referred to
by calling the \fBkva_match\fR(3SECDB) function.
.sp
.LP
Because the list of legal keys is likely to expand, any code must be
written to ignore unknown key-value pairs without error.
.sp
.LP
The \fBgetprofattr()\fR and \fBgetprofnam()\fR functions both allocate
memory for the pointers they return. This memory should be deallocated with
the
.B free_profattr()
function.
.SH FILES
.sp
.ne 2
.mk
.na
.B /etc/security/prof_attr
.ad
.RS 27n
.rt
profiles and their descriptions
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR auths (1),
.BR profiles (1),
.BR getexecattr (3SECDB),
.BR getauthattr (3SECDB),
.BR prof_attr (4)
