'\" te
.\" Copyright (c) 2005, Sun Microsystems, Inc.  All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH getexecattr 3SECDB "31 Mar 2005" "SunOS 5.11" "Security Attributes Database Library Functions"
.SH NAME
getexecattr, free_execattr, setexecattr, endexecattr, getexecuser,
getexecprof, match_execattr \- get execution profile entry
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. -lsecdb  -lsocket  -lnsl  [ \fIlibrary\fR.\|.\|. ]
#include <exec_attr.h>
#include <secdb.h>

\fBexecattr_t *\fBgetexecattr\fR(\fBvoid\fR);
.fi

.LP
.nf
\fBvoid\fR \fBfree_execattr\fR(\fBexecattr_t *\fIep\fR);
.fi

.LP
.nf
\fBvoid\fR \fBsetexecattr\fR(\fBvoid\fR);
.fi

.LP
.nf
\fBvoid\fR \fBendexecattr\fR(\fBvoid\fR);
.fi

.LP
.nf
\fBexecattr_t *\fBgetexecuser\fR(\fBconst char *\fIusername\fR, \fBconst char *\fItype\fR,
     \fBconst char *\fIid\fR, \fBint\fR \fIsearch_flag\fR);
.fi

.LP
.nf
\fBexecattr_t *\fBgetexecprof\fR(\fBconst char *\fIprofname\fR, \fBconst char *\fItype\fR,
     \fBconst char *\fIid\fR, \fBint\fR \fIsearch_flag\fR);
.fi

.LP
.nf
\fBexecattr_t *\fBmatch_execattr\fR(\fBexecattr_t *\fIep\fR, \fBchar *\fIprofname\fR,
     \fBchar *\fItype\fR, \fBchar *\fIid\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B getexecattr()
function returns a single
.BR exec_attr (4)
entry.
Entries can come from any of the sources specified in the
\fBnsswitch.conf\fR(4) file.
.sp
.LP
Successive calls to
.B getexecattr()
return either successive
\fBexec_attr\fR entries or
.IR NULL .
Because
.B getexecattr()
always
returns a single entry, the
.B next
pointer in the 
.B execattr_t
data
structure points to
.IR NULL .
.sp
.LP
The internal representation of an
.B exec_attr
entry is an
\fBexecattr_t\fR structure defined in  <\fBexec_attr.h\fR> with the
following members:
.sp
.in +2
.nf
char              *name;   /* name of the profile */
char              *type;   /* type of profile */
char              *policy; /* policy under which the attributes are */
                           /* relevant*/
char              *res1;   /* reserved for future use */
char              *res2;   /* reserved for future use */
char              *id;     /* unique identifier */
kva_t             *attr;   /* attributes */
struct execattr_s *next;   /* optional pointer to next profile */
.fi
.in -2

.sp
.LP
The \fBfree_execattr()\fR function releases memory. It follows the
\fBnext\fR pointers in the \fBexecattr_t\fR structure so that the entire
linked list is released.
.sp
.LP
The \fBsetexecattr()\fR function "rewinds" to the beginning of the
enumeration of
.B exec_attr
entries. Calls to
.B getexecuser()
can
leave the enumeration in an indeterminate state. Therefore,
\fBsetexecattr()\fR should be called before the first call to
.BR getexecattr() .
.sp
.LP
The
.B endexecattr()
function can be called to indicate that
\fBexec_attr\fR processing is complete; the library can then close any open
\fBexec_attr\fR file, deallocate any internal storage, and so forth.
.sp
.LP
The
.B getexecuser()
function returns a linked list of entries that
match the
.I type
and
.I id
arguments and have a profile that has been
assigned to the user specified by
.IR username ,
as described in
.BR passwd (4).
Profiles for the user are obtained from the list of default
profiles in \fB/etc/security/policy.conf\fR (see
.BR policy.conf (4))
and
the
.BR user_attr (4)
database. Only entries in the name service scope for
which the corresponding profile entry is found in the \fBprof_attr\fR(4)
database are returned.
.sp
.LP
The \fBgetexecprof()\fR function returns a linked list of entries that
match the
.I type
and
.I id
arguments and have the profile specified
by the \fIprofname\fR argument. Only entries in the name service scope for
which the corresponding profile entry is found in the \fBprof_attr\fR
database are returned.
.sp
.LP
Using
.B getexecuser()
and
.BR getexecprof() ,
programmers can search
for any
.I type
argument, such as the manifest constant \fBKV_COMMAND\fR.
The arguments are logically AND-ed together so that only entries exactly
matching all of the arguments are returned. Wildcard matching applies if
there is no exact match for an
.BR ID .
Any argument can be assigned the
\fINULL\fR value to indicate that it is not used as part of the matching
criteria. The\fR  search_flag controls whether the function returns the
first match
.RB ( GET_ONE ),
setting the
.B next
pointer to
.I NULL
or
all matching entries
.RB ( GET_ALL ),
using the
.B next
pointer to create
a linked list of all entries that meet the search criteria. See
.BR EXAMPLES .
.sp
.LP
Once a list of entries is returned by
.B getexecuser()
or
\fBgetexecprof()\fR, the convenience function \fBmatch_execattr()\fR can be
used to identify an individual entry. It returns a pointer to the individual
element with the same profile name (
.IR profname ),
type name (
.IR type ),
and
.IR id .
Function parameters set to
.I NULL
are not
used as part of the matching criteria. In the event that multiple entries
meet the matching criteria, only a pointer to the first entry is returned.
The \fBkva_match\fR(3SECDB) function can be used to look up a key in a
key-value array.
.SH RETURN VALUES
.sp
.LP
Those functions returning data only return data related to the active
policy. The
.B getexecattr()
function returns a pointer to a
\fBexecattr_t\fR if it successfully enumerates an entry; otherwise it
returns
.IR NULL ,
indicating the end of the enumeration.
.SH USAGE
.sp
.LP
The
.BR getexecattr() ,
.BR getexecuser() ,
and \fBgetexecprof()\fR
functions all allocate memory for the pointers they return. This memory
should be deallocated with the \fBfree_execattr()\fR call. The
.BR match_execattr() (
function does not allocate any memory. Therefore,
pointers returned by this function should not be deallocated.
.sp
.LP
Individual attributes may be referenced in the
.B attr
structure by
calling the \fBkva_match\fR(3SECDB) function.
.SH EXAMPLES
.LP
\fBExample 1\fR Find all profiles that have the  \fBping\fR command.
.sp
.in +2
.nf
if ((execprof=getexecprof(NULL, KV_COMMAND, "/usr/sbin/ping",
    GET_ONE)) == NULL) {
        /* do error */
}
.fi
.in -2

.LP
\fBExample 2\fR Find the entry for the \fBping\fR command in the Network
Administration Profile.
.sp
.in +2
.nf
if ((execprof=getexecprof("Network Administration", KV_COMMAND,
    "/usr/sbin/ping", GET_ALL))==NULL) {
        /* do error */
}
.fi
.in -2

.LP
\fBExample 3\fR Tell everything that can be done in the Filesystem Security
profile.
.sp
.in +2
.nf
if ((execprof=getexecprof("Filesystem Security", KV_NULL, NULL,
    GET_ALL))==NULL)) {
        /* do error */
}
.fi
.in -2

.LP
\fBExample 4\fR Tell if the \fBtar\fR utility is in a profile assigned to
user wetmore. If there is no exact profile entry, the wildcard (*), if
defined, is returned.
.sp
.LP
The following tells if the
.B tar
utility is in a profile assigned to
user wetmore. If there is no exact profile entry, the wildcard (*), if
defined, is returned.

.sp
.in +2
.nf
if ((execprof=getexecuser("wetmore", KV_COMMAND, "/usr/bin/tar",
    GET_ONE))==NULL) {
        /* do error */
}
.fi
.in -2

.SH FILES
.sp
.ne 2
.mk
.na
\fB/etc/nsswitch.conf\fR
.ad
.RS 29n
.rt
configuration file lookup information for the name server switch
.RE

.sp
.ne 2
.mk
.na
.B /etc/user_attr
.ad
.RS 29n
.rt
extended user attributes
.RE

.sp
.ne 2
.mk
.na
.B /etc/security/exec_attr
.ad
.RS 29n
.rt
execution profiles
.RE

.sp
.ne 2
.mk
.na
\fB/etc/security/policy.conf\fR
.ad
.RS 29n
.rt
policy definitions
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR getauthattr (3SECDB),
.BR getuserattr (3SECDB),
.BR kva_match (3SECDB),
.BR exec_attr (4),
.BR passwd (4),
\fBpolicy.conf\fR(4),
.BR prof_attr (4),
.BR user_attr (4),
.BR attributes (5)
