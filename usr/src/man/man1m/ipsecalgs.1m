'\" te
.\" Copyright (C) 2006, Sun Microsystems, Inc. All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH ipsecalgs 1M "5 Jul 2007" "SunOS 5.11" "System Administration Commands"
.SH NAME
ipsecalgs \- configure the IPsec protocols and algorithms table
.SH SYNOPSIS
.LP
.nf
\fBipsecalgs\fR
.fi

.LP
.nf
\fBipsecalgs\fR \fB-l\fR
.fi

.LP
.nf
\fBipsecalgs\fR \fB-s\fR
.fi

.LP
.nf
\fBipsecalgs\fR \fB-a\fR [\fB-P\fR \fIprotocol-number\fR | \fB-p\fR \fIprotocol-name\fR] \fB-k\fR \fIkeylen-list\fR
     [\fB-i\fR \fIinc\fR] [\fB-K\fR \fIdefault-keylen\fR] \fB-b\fR \fIblocklen-list\fR \fB-n\fR \fIalg-names\fR
     \fB-N\fR \fIalg-number\fR \fB-m\fR \fImech-name\fR [\fB-f\fR] [\fB-s\fR]
.fi

.LP
.nf
\fBipsecalgs\fR \fB-P\fR \fIprotocol-number\fR \fB-p\fR \fIprotocol-name\fR
     [\fB-e\fR \fIexec-mode\fR] [\fB-f\fR] [\fB-s\fR]
.fi

.LP
.nf
\fBipsecalgs\fR \fB-r\fR \fB-p\fR \fIprotocol-name\fR [] \fB-n\fR \fIalg-name\fR [\fB-s\fR]
.fi

.LP
.nf
\fBipsecalgs\fR \fB-r\fR \fB-p\fR \fIprotocol-name\fR [] \fB-N\fR \fIalg-number\fR [\fB-s\fR]
.fi

.LP
.nf
\fBipsecalgs\fR \fB-R\fR \fB-P\fR \fIprotocol-number\fR [\fB-s\fR]
.fi

.LP
.nf
\fBipsecalgs\fR \fB-R\fR \fB-p\fR \fIprotocol-name\fR [\fB-s\fR]
.fi

.LP
.nf
\fBipsecalgs\fR \fB-e\fR \fIexec-mode\fR \fB-P\fR \fIprotocol-number\fR [\fB-s\fR]
.fi

.LP
.nf
\fBipsecalgs\fR \fB-e\fR \fIexec-mode\fR \fB-p\fR \fIprotocol-name\fR [\fB-s\fR]
.fi

.SH DESCRIPTION
.sp
.LP
Use the
.B ipsecalgs
command to query and modify the IPsec protocol and
algorithms stored in
.BR /etc/inet/ipsecalgs .
You can use the
\fBipsecalgs\fR command to do the following:
.RS +4
.TP
.ie t \(bu
.el o
list the currently defined IPsec protocols and algorithms
.RE
.RS +4
.TP
.ie t \(bu
.el o
modify IPsec protocols definitions
.RE
.RS +4
.TP
.ie t \(bu
.el o
modify IPsec algorithms definitions
.RE
.sp
.LP
\fBNever\fR edit the \fB/etc/inet/ipsecalgs\fR file manually. The valid
IPsec protocols and algorithms are described by the ISAKMP DOI. See \fIRFC
2407\fR. In the general sense, a Domain of Interpretation (DOI) defines data
formats, network traffic exchange types, and conventions for naming
security-relevant information such as security policies or cryptographic
algorithms and modes. For
.BR ipsecalgs ,
the DOI defines naming and
numbering conventions for algorithms and the protocols they belong to. These
numbers are defined by the Internet Assigned Numbers Authority (IANA). Each
algorithm belongs to a protocol. Algorithm information includes supported
key lengths, block or MAC length, and the name of the cryptographic
mechanism corresponding to that algorithm. This information is used by the
IPsec modules,
.BR ipsecesp (7P)
and
.BR ipsecah (7P),
to determine the
authentication and encryption algorithms that can be applied to IPsec
traffic.
.sp
.LP
The following protocols are predefined:
.sp
.ne 2
.mk
.na
.B IPSEC_PROTO_ESP
.ad
.RS 19n
.rt
Defines the encryption algorithms (transforms) that can be used by IPsec to
provide data confidentiality.
.RE

.sp
.ne 2
.mk
.na
.B IPSEC_PROTO_AH
.ad
.RS 19n
.rt
Defines the authentication algorithms (transforms) that can be used by
IPsec to provide authentication.
.RE

.sp
.LP
The mechanism name specified by an algorithm entry must correspond to a
valid Solaris Cryptographic Framework mechanism. You can obtain the list of
available mechanisms by using the
.BR cryptoadm "(1M) command."
.sp
.LP
Applications can retrieve the supported algorithms and their associated
protocols by using the functions
.BR getipsecalgbyname (3NSL),
.BR getipsecalgbynum (3NSL),
.BR getipsecprotobyname (3NSL)
and
.BR getipsecprotobynum (3NSL).
.sp
.LP
Modifications to the protocols and algorithm by default update only the
contents of the
.B /etc/inet/ipsecalgs
configuration file. In order for
the new definitions to be used for IPsec processing, the changes must be
communicated to the kernel using the
.B -s
option. See
.B NOTES
for a
description of how the
.B ipsecalgs
configuration is synchronized with
the kernel at system restart.
.sp
.LP
When invoked without arguments,
.B ipsecalgs
displays the list of
mappings that are currently defined in
.BR /etc/inet/ipsecalgs .
You can
obtain the corresponding kernel table of protocols and algorithms by using
the
.B -l
option.
.SH OPTIONS
.sp
.LP
\fBipsecalgs\fR supports the following options:
.sp
.ne 2
.mk
.na
.B -a
.ad
.RS 6n
.rt
Adds an algorithm of the protocol specified by the
.B -P
option. The
algorithm name(s) are specified with the
.B -n
option. The supported key
lengths and block sizes are specified with the
.BR -k ,
.BR -i ,
and
\fB-b\fR options.
.RE

.sp
.ne 2
.mk
.na
.B -b
.ad
.RS 6n
.rt
Specifies the block or MAC lengths of an algorithm, in bytes. Set more than
one block length by separating the values with commas.
.RE

.sp
.ne 2
.mk
.na
.B -e
.ad
.RS 6n
.rt
Designates the execution mode of cryptographic requests for the specified
protocol in the absence of cryptographic hardware provider. See
.BR cryptoadm (1M).
\fIexec-mode\fR can be one of the following values:
.sp
.ne 2
.mk
.na
.B sync
.ad
.RS 9n
.rt
Cryptographic requests are processed synchronously in the absence of a
cryptographic hardware provider. This execution mode leads to better latency
when no cryptographic hardware providers are available
.RE

.sp
.ne 2
.mk
.na
.B async
.ad
.RS 9n
.rt
Cryptographic requests are always processed asynchronously in the absence
of cryptographic hardware provider. This execution can improve the resource
utilization on a multi-CPU system, but can lead to higher latency when no
cryptographic hardware providers are available.
.RE

This option can be specified when defining a new protocol or to modify the
execution mode of an existing protocol. By default, the
.B sync
execution
mode is used in the absence of a cryptographic hardware provider.
.RE

.sp
.ne 2
.mk
.na
\fB-f\fR
.ad
.RS 6n
.rt
Used with the
.B -a
option to force the addition of an algorithm or
protocol if an entry with the same name or number already exists.
.RE

.sp
.ne 2
.mk
.na
.B -i
.ad
.RS 6n
.rt
Specifies the valid key length increments in bits. This option must be used
when the valid key lengths for an algorithm are specified by a range with
the
.B -k
option.
.RE

.sp
.ne 2
.mk
.na
.B -K
.ad
.RS 6n
.rt
Specifies the default key lengths for an algorithm, in bits. If the
\fB-K\fR option is not specified, the minimum key length will be determined
as follows:
.RS +4
.TP
.ie t \(bu
.el o
If the supported key lengths are specified by range, the default key length
will be the minimum key length.
.RE
.RS +4
.TP
.ie t \(bu
.el o
If the supported key lengths are specified by enumeration, the default key
length will be the first listed key length.
.RE
.RE

.sp
.ne 2
.mk
.na
.B -k
.ad
.RS 6n
.rt
Specifies the supported key lengths for an algorithm, in bits. You can
designate the supported key lengths by enumeration or by range.
.sp
Without the
.B -i
option,
.B -k
specifies the supported key lengths
by enumeration. In this case,
.I keylen-list
consists of a list of one or
more key lengths separated by commas, for example:
.sp
.in +2
.nf
128,192,256
.fi
.in -2
.sp

The listed key lengths need not be increasing, and the first listed key
length will be used as the default key length for that algorithm unless the
\fB-K\fR option is used.
.sp
With the
.B -i
option,
.B -k
specifies the range of supported key
lengths for the algorithm. The minimum and maximum key lengths must be
separated by a dash ('\fB-\fR') character, for example:
.sp
.in +2
.nf
32-448
.fi
.in -2
.sp

.RE

.sp
.ne 2
.mk
.na
.B -l
.ad
.RS 6n
.rt
Displays the kernel algorithm tables.
.RE

.sp
.ne 2
.mk
.na
.B -m
.ad
.RS 6n
.rt
Specifies the name of the cryptographic framework mechanism name
corresponding to the algorithm. Cryptographic framework mechanisms are
described in the
.BR cryptoadm "(1M) man page."
.RE

.sp
.ne 2
.mk
.na
.B -N
.ad
.RS 6n
.rt
Specifies an algorithm number. The algorithm number for a protocol must be
unique. IANA manages the algorithm numbers. See \fIRFC 2407\fR.
.RE

.sp
.ne 2
.mk
.na
.B -n
.ad
.RS 6n
.rt
Specifies one or more names for an algorithm. When adding an algorithm with
the
.B -a
option,
.I alg-names
contains a string or a comma-separated
list of strings, for example:
.sp
.in +2
.nf
des-cbs,des
.fi
.in -2
.sp

When used with the
.B -r
.RI "option to remove an algorithm," " alg-names"
contains one of the valid algorithm names.
.RE

.sp
.ne 2
.mk
.na
.B -P
.ad
.RS 6n
.rt
Adds a protocol of the number specified by
.I protocol-number
with the
name specified by the
.B -p
option. This option is also used to specify
an IPsec protocol when used with the
.B -a
and the
.B -R
options.
Protocol numbers are managed by the IANA. See \fIRFC 2407\fR.
.RE

.sp
.ne 2
.mk
.na
.B -p
.ad
.RS 6n
.rt
Specifies the name of the IPsec protocol.
.RE

.sp
.ne 2
.mk
.na
.B -R
.ad
.RS 6n
.rt
Removes and IPsec protocol from the algorithm table. The protocol can be
specified by number by using the
.B -P
option or by name by using the
\fB-p\fR option. The algorithms associated with the protocol are removed as
well.
.RE

.sp
.ne 2
.mk
.na
.B -r
.ad
.RS 6n
.rt
Removes the mapping for an algorithm The algorithm can be specified by
algorithm number using the
.B -N
option or by algorithm name using the
\fB-A\fR option.
.RE

.sp
.ne 2
.mk
.na
.B -s
.ad
.RS 6n
.rt
Synchronizes the kernel with the contents of
.BR /etc/inet/ipsecalgs .
The
contents of
.B /etc/inet/ipsecalgs
are always updated, but new
information is not passed on to the kernel unless the
.B -s
is used. See
\fBNOTES\fR for a description of how the \fBipsecalgs\fR configuration is
synchronized with the kernel at system restart.
.RE

.SH EXAMPLES
.LP
\fBExample 1\fR Adding a Protocol for IPsec Encryption
.sp
.LP
The following example shows how to add a protocol for IPsec encryption:

.sp
.in +2
.nf
example# \fBipsecalgs -P 3 -p "IPSEC_PROTO_ESP"\fR
.fi
.in -2
.sp

.LP
\fBExample 2\fR Adding the Blowfish Algorithm
.sp
.LP
The following example shows how to add the Blowfish algorithm:

.sp
.in +2
.nf
example# \fBipsecalgs -a -P 3 -k 32-488 -K 128 -i 8 -n "blowfish" \e
  -b 8 -N 7 -m CKM_BF_CBC\fR
.fi
.in -2
.sp

.LP
\fBExample 3\fR Updating the Kernel Algorithm Table
.sp
.LP
The following example updates the kernel algorithm table with the currently
defined protocol and algorithm definitions:

.sp
.in +2
.nf
example# \fBsvcadm refresh ipsecalgs\fR
.fi
.in -2
.sp

.SH FILES
.sp
.ne 2
.mk
.na
.B /etc/inet/ipsecalgs
.ad
.sp .6
.RS 4n
File that contains the configured IPsec protocols and algorithm
definitions. Never edit this file manually.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcsu
_
Interface StabilityEvolving
.TE

.SH SEE ALSO
.sp
.LP
.BR cryptoadm (1M),
\fBipsecconf\fR(1M), \fBipseckey\fR(1M),
.BR svcadm (1M),
.BR getipsecalgbyname (3NSL),
.BR getipsecprotobyname (3NSL),
\fBike.config\fR(4), \fBattributes\fR(5),
\fBsmf\fR(5), \fBipsecah\fR(7P), \fBipsecesp\fR(7P)
.sp
.LP
Piper, Derrell, \fIRFC 2407, The Internet IP Security Domain of
Interpretation for ISAKMP\fR. Network Working Group. November 1998.
.SH NOTES
.sp
.LP
When protocols or algorithm definitions that are removed or altered,
services that rely upon these definitions can become unavailable. For
example, if the
.B IPSEC_PROTO_ESP
protocol is removed, then IPsec cannot
encrypt and decrypt packets.
.sp
.LP
Synchronization of the
.B ipsecalgs
configuration with the kernel at
system startup is provided by the following
.BR smf (5)
service:
.sp
.in +2
.nf
svc:/network/ipsec/ipsecalgs:default
.fi
.in -2
.sp

.sp
.LP
The IPsec services are delivered as follows:
.sp
.in +2
.nf
svc:/network/ipsec/policy:default (enabled)
svc:/network/ipsec/ipsecalgs:default (enabled)
svc:/network/ipsec/manual-key:default (disabled)
svc:/network/ipsec/ike:default (disabled)
.fi
.in -2
.sp

.sp
.LP
Services that are delivered disabled are delivered that way because the
system administrator must create configuration files for those services
before enabling them. See
.BR ipseckey (1M)
and
.BR ike.config (4).
The
default policy for the
.B policy
service is to allow all traffic to pass
without IPsec protection. See \fBipsecconf\fR(1M).
.sp
.LP
The correct administrative procedure is to create the configuration file
for each service, then enable each service using
.BR svcadm (1M),
as shown
in the following example:
.sp
.in +2
.nf
example# \fBsvcadm enable ipsecalgs\fR
.fi
.in -2
.sp

.sp
.LP
The service's status can be queried using the
.BR svcs (1)
command.
.sp
.LP
If the
.B ipsecalgs
configuration is modified, the new configuration
should be resynchronized as follows:
.sp
.in +2
.nf
example# \fBsvcadm refresh ipsecalgs\fR
.fi
.in -2
.sp

.sp
.LP
Administrative actions on this service, such as enabling, disabling,
refreshing, and requesting restart can be performed using \fBsvcadm\fR(1M).
A user who has been assigned the authorization shown below can perform these
actions:
.sp
.in +2
.nf
solaris.smf.manage.ipsec
.fi
.in -2
.sp

.sp
.LP
See
.BR auths (1),
.BR user_attr (4),
.BR rbac (5).
.sp
.LP
The
.BR "ipsecalgs smf" (5)
service does not have any
user-configurable properties.
.sp
.LP
The
.BR smf (5)
framework records any errors in the service-specific log
file. Use any of the following commands to examine the \fBlogfile\fR
property:
.sp
.in +2
.nf
example# \fBsvcs -l ipsecalgs\fR
example# \fBsvcprop ipsecalgs\fR
example# \fBsvccfg -s ipsecalgs listprop\fR
.fi
.in -2
.sp

.sp
.LP
This command requires \fBsys_ip_config\fR privilege to operate and thus can
run in the global zone and in exclusive-IP zones. All shared-IP zones share
the same available set of algorithms; however, you can use
\fBipsecconf\fR(1M) to set up system policy that uses differing algorithms
for various shared-IP zones. All exclusive-IP zones have their own set of
algorithms.
