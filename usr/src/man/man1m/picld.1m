'\" te
.\" Copyright (c) 2004, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH picld 1M "10 Aug 2004" "SunOS 5.11" "System Administration Commands"
.SH NAME
picld \- PICL daemon
.SH SYNOPSIS
.LP
.nf
\fB/usr/lib/picl/picld\fR
.fi

.SH DESCRIPTION
.sp
.LP
The Platform Information and Control Library
.RB ( PICL )
provides a
mechanism to publish platform-specific information for clients to access in
a platform-independent way.
.B picld
maintains and controls access to the
.B PICL
information from clients and plug-in modules. The daemon is
started in both single-user and multi-user boot mode.
.sp
.LP
Upon startup, the
.B PICL
daemon loads and initializes the plug-in
modules. These modules use the
.BR libpicltree (3PICLTREE)
interface to
create nodes and properties in the
.B PICL
tree to publish platform
configuration information. After the plug-in modules are initialized, the
daemon opens the
.B PICL
daemon door to service client requests to access
information in the
.B PICL
tree.
.SS "PICL Tree"
.sp
.LP
The
.B PICL
tree is the repository of all the nodes and properties
created by the plug-in modules to represent the platform configuration.
Every node in the
.B PICL
tree is an instance of a well-defined
.B PICL
class. The name of the base
.B PICL
class is
.BR picl ,
which
defines a basic set of properties that all nodes in the tree must possess.
Two of those properties are
.B name
and
.BR _class ,
where
.BR name
contains the name of the node, and the
.B _class
contains the
.BR PICL
class name of the node. Certain nodes in the
.B PICL
tree have well-known
names. For example, the name of the root node of the
.B PICL
tree is
.B /
and the name of the root node of the sub-tree containing platform
device nodes is
.BR platform .
.SS "PICL plug-in Modules"
.sp
.LP
The
.B PICL
plug-in modules are shared objects that publish
platform-specific data in the
.B PICL
tree. They are located in
well-known directories so that the daemon can locate and load them.
.sp
.LP
Plug-in modules are located in one of the following plug-in directories
depending on the plaform-specific nature of the data that they collect and
publish:
.sp
.in +2
.nf
/usr/platform/`uname -i`/lib/picl/plugins
/usr/platform/`uname -m`/lib/picl/plugins
.fi
.in -2
.sp

.sp
.LP
A plug-in module can specify its dependency on another plug-in module using
the
.B -l
or
.B -R
linker option. The plug-ins are loaded by the
daemon using
.BR dlopen (3C)
according to the specified dependencies. Each
plug-in module must define a \fB\&.init\fR section, which is executed when
the plug-in module is loaded, to register themselves with the daemon. See
.BR picld_plugin_register (3PICLTREE)
for additional information on plug-in
registration.
.sp
.LP
The plug-in modules use the
.BR libpicltree (3PICLTREE)
interface to
publish nodes and properties in the
.B PICL
tree so that clients can
access them.
.sp
.LP
When the
.B PICL
daemon invokes the initialization routine of the
plug-in module, the plug-in collects the platform information and creates
nodes and/or properties to represent the configuration in the
.B PICL
tree. A plug-in can create additional threads to monitor the platform
configuration and update the
.B PICL
tree with any changes. This enables
a
.B PICL
plug-in to operate as a daemon within the
.B PICL
framework.

.sp
.LP
An environmental monitor is an example of a plug-in module that uses a
thread to monitor the temperatures and fan speeds of the platform, then
publishes the environmental information in the
.B PICL
tree so clients
can access them.
.sp
.LP
Clients use the
.BR libpicl (3PICL)
interface to send requests to
.B picld
for accessing the
.B PICL
tree.
.SH EXIT STATUS
.sp
.LP
.B picld
does not return an exit status.
.SH FILES
.sp
.ne 2
.mk
.na
.B /var/run/picld_door
.ad
.RS 23n
.rt
.B PICL
daemon door
.RE

.sp
.ne 2
.mk
.na
.B /usr/lib/picl/picld
.ad
.RS 23n
.rt
.B PICL
daemon
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWpiclu
.TE

.SH SEE ALSO
.sp
.LP
.BR svcs (1),
.BR svcadm (1M),
.BR dlopen (3C),
.BR libpicl (3PICL),
.BR libpicltree (3PICLTREE),
.BR picld_log (3PICLTREE),
.BR picld_plugin_register (3PICLTREE),
.BR attributes (5),
.BR smf (5)
.SH NOTES
.sp
.LP
The
.B picld
service is managed by the service management facility,
.BR smf (5),
under the service identifier:
.sp
.in +2
.nf
svc:/system/picl
.fi
.in -2
.sp

.sp
.LP
Administrative actions on this service, such as enabling, disabling, or
requesting restart, can be performed using
.BR svcadm (1M).
The service's
status can be queried using the
.BR svcs (1)
command.
