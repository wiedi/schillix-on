'\" te
.\" Copyright (c) 2009, Sun Microsystems, Inc. All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH pkgcond 1M "20 Oct 2009" "SunOS 5.11" "System Administration Commands"
.SH NAME
pkgcond \- determine type and capability of target
.SH SYNOPSIS
.LP
.nf
\fB/usr/bin/pkgcond\fR [\fB-nv\fR] \fIcondition\fR
.fi

.SH DESCRIPTION
.sp
.LP
The
.B pkgcond
command allows you to determine the type of target being
operated on (global zone, non-global zone, diskless client, and so forth)
and the capabilities available for that type of client (can add a driver,
path is writable, and so forth). The
.B pkgcond
command is intended to be
invoked from package and patch scripts, but can also be used in situations
that mimic the context of these scripts. See
.B NOTES
for further
guidance.
.sp
.LP
.B pkgcond
has one mandatory argument, a condition. The command tests
whether the condition is true for the specified path. The condition can be
one of the following:
.RS +4
.TP
.ie t \(bu
.el o
.B can_add_driver
[\fIpath\fR]
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B can_remove_driver
[\fIpath\fR]
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B can_update_driver
[\fIpath\fR]
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B is_alternative_root
[\fIpath\fR]
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B is_boot_environment
[\fIpath\fR]
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B is_diskless_client
[\fIpath\fR]
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B is_global_zone
[\fIpath\fR]
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B is_mounted_miniroot
[\fIpath\fR]
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B is_netinstall_image
[\fIpath\fR]
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B is_nonglobal_zone
[\fIpath\fR]
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B is_path_writable
.I path
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B is_running_system
[\fIpath\fR]
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B is_sparse_root_nonglobal_zone
[\fIpath\fR]
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B is_what
[\fIpath\fR]
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B is_whole_root_nonglobal_zone
[\fIpath\fR]
.RE
.sp
.LP
The
.I path
argument usually denotes the root of the global zone or
non-global zone, or alternate root. If path is optional and not specified,
the default is
.BR / .
.sp
.LP
The behavior of the
.B is_what
condition is somewhat special, because it
displays results of all other conditions to standard output.
.SH OPTIONS
.sp
.LP
The following options are supported:
.sp
.ne 2
.mk
.na
.B -n
.ad
.sp .6
.RS 4n
Negate return status (\fB0\fR becomes
.B 1
and
.B 1
becomes
.BR 0 ).
It negates results in the case of
.B is_what
condition.
.RE

.sp
.ne 2
.mk
.na
.B -v
.ad
.sp .6
.RS 4n
Verbose mode. Displays detailed data about intermediate checks performed.
.RE

.SH EXAMPLES
.LP
.B Example 1
Listing All Available Information
.sp
.LP
The following command lists all available information about the current
running system, in a user-friendly way.

.sp
.in +2
.nf
example# \fBpkgcond -n is_what\fR
.fi
.in -2
.sp

.LP
.B Example 2
Determining if Target is an Alternate Root
.sp
.LP
The following command determines whether an alternate boot environment
exists under
.BR /altroot_mount .

.sp
.in +2
.nf
example# \fBpkgcond is_alternative_root /altroot_mount\fR
.fi
.in -2
.sp

.SH EXIT STATUS
.sp
.ne 2
.mk
.na
.B 0
.ad
.sp .6
.RS 4n
Condition is true unless
.B -n
was specified.
.RE

.sp
.ne 2
.mk
.na
.B 1
.ad
.sp .6
.RS 4n
Condition is false unless
.B -n
was specified.
.RE

.sp
.ne 2
.mk
.na
.B 2
.ad
.sp .6
.RS 4n
Command line usage error.
.RE

.sp
.ne 2
.mk
.na
.B 3
.ad
.sp .6
.RS 4n
Command failed to perform the test due to a fatal error.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcsr
_
Interface StabilityUncommitted
.TE

.SH SEE ALSO
.sp
.LP
.BR pkgtrans (1),
.BR pkgadd (1M),
.BR pkgask (1M),
.BR pkgchk (1M),
.BR pkgrm (1M),
.BR pkginfo (4),
.BR attributes (5)
.SH NOTES
.sp
.LP
Supported usage of
.B pkgcond
is subject to the following constraints:
.RS +4
.TP
1.
Do not use
.B pkgcond
outside of the Solaris marketing release in which
it is provided (for example, do not use Solaris 10
.B pkgcond
against a
Solaris 9 target).
.RE
.RS +4
.TP
2.
Restrict use of the optional path argument according to the following
rules:
.RS +4
.TP
.ie t \(bu
.el o
The command
.B pkgcond
.I condition
.B $ROOTDIR
can be used in
patch level scripts.
.RE
.RS +4
.TP
.ie t \(bu
.el o
The command
.B pkgcond
.I condition
.B $PKG_INSTALL_ROOT
can be
used in package level scripts.
.RE
.RS +4
.TP
.ie t \(bu
.el o
A command of the form
.B pkgcond
.I condition
.B without
the
optional path argument can be used in any context.
.RE
.RE
.sp
.LP
Use of
.B pkgcond
with an arbitrary path argument is
.BR not
recommended or supported, as the results returned might not be accurate.
