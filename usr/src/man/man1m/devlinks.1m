'\" te
.\" Copyright (c) 2002 Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH devlinks 1M "15 Jul 2002" "SunOS 5.11" "System Administration Commands"
.SH NAME
devlinks \- adds /dev entries for miscellaneous devices and
pseudo-devices
.SH SYNOPSIS
.LP
.nf
\fB/usr/sbin/devlinks\fR [\fB-d\fR] [\fB-r\fR \fIrootdir\fR] [\fB-t\fR \fItable-file\fR]
.fi

.SH DESCRIPTION
.sp
.LP
.BR devfsadm (1M)
is now the preferred command for
.B /dev
and
.B /devices
and should be used instead of
.BR devlinks .
.sp
.LP
.B devlinks
creates symbolic links from the
.B /dev
directory tree to
the actual block- and character-special device nodes under the
.B /devices
directory tree. The links are created according to
specifications found in the
.I table-file
(by default
.BR /etc/devlink.tab ).
.sp
.LP
.B devlinks
is called each time the system is reconfiguration-booted,
and can only be run after
.BR drvconfig (1M)
is run.
.sp
.LP
The
.I table-file
(normally
.BR /etc/devlink.tab )
is an ASCII file,
with one line per record. Comment lines, which must contain a hash character
.RB (` # ')
as their first character, are allowed. Each entry must contain
at least two fields, but may contain three fields. Fields are separated by
single TAB characters.
.sp
.LP
The fields are:
.sp
.ne 2
.mk
.na
.I devfs-spec
.ad
.RS 18n
.rt
Specification of devinfo nodes that will have links created for them. This
specification consists of one or more keyword-value pairs, where the keyword
is separated from the value by an equal-sign
.RB (` = '),
and keyword-value
pairs are separated from one another by semicolons.
.sp
The possible keywords are:
.sp
.ne 2
.mk
.na
.I type
.ad
.RS 12n
.rt
The devinfo device type. Possible values are specified in
.BR ddi_create_minor_node (9F)
.RE

.sp
.ne 2
.mk
.na
.I name
.ad
.RS 12n
.rt
The name of the node. This is the portion of the
.B /devices
tree entry
.RB "name that occurs before the first `" @ "' or `" : '
character.
.RE

.sp
.ne 2
.mk
.na
\fIaddr\fR[\fIn\fR]\fR
.ad
.RS 12n
.rt
The address portion of a node name. This is the portion of a node name that
.RB "occurs between the `" @ "' and the `" : '
characters. It is possible
that a node may have a name without an address part, which is the case for
many of the pseudo-device nodes. If a number is given after the
.I addr
it specifies a match of a particular comma-separated subfield of the address
field:
.I addr1
matches the first subfield,
.I addr2
matches the
second, and so on.
.I addr0
is the same as
.I addr
and matches the
whole field.
.RE

.sp
.ne 2
.mk
.na
\fIminor\fR[\fIn\fR]\fR
.ad
.RS 12n
.rt
The minor portion of a node name \(mi the portion of the name after the
`\fB:\fR'. As with \fIaddr\fR above, a number after the
.I minor
keyword
specifies a subfield to match.
.RE

Of these four specifications, only the
.I type
specification must always
be present.
.RE

.sp
.ne 2
.mk
.na
.I name
.ad
.RS 18n
.rt
Specification of the
.B /dev
links that correspond to the devinfo nodes.
This field allows
.B devlinks
to determine matching
.B /dev
names for
the
.B /devices
nodes it has found. The specification of this field uses
escape-sequences to allow portions of the
.B /devices
name to be included
in the
.B /dev
name,
.I or
to allow a counter to be used in creating
node names. If a counter is used to create a name, the portion of the name
before the counter must be specified absolutely, and all names in the
\fB/dev/\fR-subdirectory that match (up to and including the counter) are
considered to be subdevices of the same device. This means that they should
all point to the same directory,
.B name
and
.B address
under the
.BR /devices/ -tree
.sp
The possible escape-sequences are:
.sp
.ne 2
.mk
.na
\fB\eD\fR
.ad
.RS 8n
.rt
Substitute the
.B device-name
(name) portion of the corresponding
devinfo node-name.
.RE

.sp
.ne 2
.mk
.na
\fB\eA\fIn\fR
.ad
.RS 8n
.rt
Substitute the
.IR n th
component of the \fBaddress\fR component of the
corresponding devinfo node name. Sub-components are separated by commas, and
sub-component
.B 0
is the whole
.B address
component.
.RE

.sp
.ne 2
.mk
.na
\fB\eM\fIn\fR
.ad
.RS 8n
.rt
Substitute the
.IR n th
sub-component of the \fBminor\fR component of the
corresponding devinfo node name. Sub-components are separated by commas, and
sub-component
.B 0
is the whole
.B minor
component.
.RE

.sp
.ne 2
.mk
.na
\fB\eN\fIn\fR
.ad
.RS 8n
.rt
Substitute the value of a 'counter' starting at
.IR n .
There can be only
one counter for each dev-spec, and counter-values will be selected so they
are as low as possible while not colliding with already-existing link
names.
.sp
In a dev-spec the
.B counter
sequence should not be followed by a digit,
either explicitly or as a result of another escape-sequence expansion. If
this occurs, it would not be possible to correctly match already-existing
links to their counter entries, since it would not be possible to
unambiguously parse the already-existing
.BR /dev -name.
.RE

.RE

.sp
.ne 2
.mk
.na
.I extra-dev-link
.ad
.RS 18n
.rt
Optional specification of an extra
.B /dev
link that points to the
initial
.B /dev
link (specified in field 2). This field may contain a
.B counter
escape-sequence (as described for the
.I dev-spec
field)
but may not contain any of the other escape-sequences. It provides a way to
specify an alias of a particular
.B /dev
name.
.RE

.SH OPTIONS
.sp
.LP
The following options are supported:
.sp
.ne 2
.mk
.na
.B -d
.ad
.RS 17n
.rt
Debugging mode \(mi print out all
.B devinfo
nodes found, and indicate
what links would be created, but do not do anything.
.RE

.sp
.ne 2
.mk
.na
.B -r
.I rootdir
.ad
.RS 17n
.rt
Use
.I rootdir
as the root of the
.B /dev
and
.BR /devices
directories under which the device nodes and links are created. Changing the
root directory does not change the location of the
.BR /etc/devlink.tab
default table, nor is the root directory applied to the filename supplied to
the
.B -t
option.
.RE

.sp
.ne 2
.mk
.na
.B -t
.I table-file
.ad
.RS 17n
.rt
Set the table file used by
.B devlinks
to specify the links that must be
created. If this option is not given,
.B /etc/devlink.tab
is used. This
option gives a way to instruct
.B devlinks
just to perform a particular
piece of work, since just the links-types that
.B devlinks
is supposed to
create can be specified in a command-file and fed to
.BR devlinks .
.RE

.SH ERRORS
.sp
.LP
If
.B devlinks
finds an error in a line of the
.I table-file
it
prints a warning message on its standard output and goes on to the next line
in the
.I table-file
without performing any of the actions specified by
the erroneous rule.
.sp
.LP
If it cannot create a link for some filesystem-related reason it prints an
error-message and continues with the current rule.
.sp
.LP
If it cannot read necessary data it prints an error message and continues
with the next
.I table-file
line.
.SH EXAMPLES
.LP
.B Example 1
Using the
.B /etc/devlink.tab
Fields
.sp
.LP
The following are examples of the
.B /etc/devlink.tab
fields:

.sp
.in +2
.nf
type=pseudo;name=win	win\eM0
type=ddi_display	framebuffer/\eM0	fb\eN0
.fi
.in -2

.sp
.LP
The first example states that all devices of type
.B pseudo
with a name
component of
.B win
will be linked to \fB/dev/win\fIx,\fR where
.I x
is the minor-component of the
.I devinfo-name
(this is always a
single-digit number for the
.B win
driver).

.sp
.LP
The second example states that all devinfo nodes of type
.BR ddi_display
will be linked to entries under the
.B /dev/framebuffer
directory, with
names identical to the entire minor component of the
.B /devices
name. In
addition an extra link will be created pointing from
.BI /dev/fb n
to
the entry under
.BR /dev/framebuffer .
This entry will use a counter to end
the name.

.SH FILES
.sp
.ne 2
.mk
.na
.B /dev
.ad
.RS 20n
.rt
entries for the miscellaneous devices for general use
.RE

.sp
.ne 2
.mk
.na
.B /devices
.ad
.RS 20n
.rt
device nodes
.RE

.sp
.ne 2
.mk
.na
.B /etc/devlink.tab
.ad
.RS 20n
.rt
the default rule-file
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcsu
.TE

.SH SEE ALSO
.sp
.LP
.BR devfsadm (1M),
.BR attributes (5),
.BR devfs (7FS),
.BR ddi_create_minor_node (9F)
.SH BUGS
.sp
.LP
It is very easy to construct mutually-contradictory link specifications, or
specifications that can never be matched. The program does not check for
these conditions.
