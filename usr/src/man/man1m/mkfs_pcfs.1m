'\" te
.\" Copyright (c) 2003, Sun Microsystems, Inc. All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mkfs_pcfs 1M "1 Dec 2003" "SunOS 5.11" "System Administration Commands"
.SH NAME
mkfs_pcfs \- construct a FAT file system
.SH SYNOPSIS
.LP
.nf
\fBmkfs\fR \fB-F\fR pcfs [\fIgeneric_options\fR] [\fB-o\fR \fIFSType_specific_options\fR] \fIraw_device_file\fR
.fi

.SH DESCRIPTION
.sp
.LP
The
.BR pcfs -specific
module of
.B mkfs
constructs a File Allocation
Table
.RB ( FAT )
on removable media (diskette, JAZ disk, ZIP disk, PCMCIA
card), a hard disk, or a file (see NOTES).
.BR FAT s
are the standard
.B MS-DOS
and Windows file system format. Note that you can use
.BR fdformat (1)
to construct a FAT file system only on a diskette or PCMCIA
card.
.sp
.LP
.B mkfs
for
.BR pcfs " determines an appropriate "
.B FAT
size for the
medium, then it installs an initial boot sector and an empty
.BR FAT .
A
sector size of 512 bytes is used.
.BR mkfs " for "
.B pcfs
can also install
the initial file in the file system (see the
.BR pcfs -specific
.B "-o i"
option). This first file can optionally be marked as read-only, system, and/or
hidden.
.sp
.LP
If you want to construct a FAT with
.BR mkfs " for "
.B pcfs
on a medium that
is not formatted, you must first perform a low-level format on the medium with
.BR fdformat (1)
or
.BR format (1M).
Non-diskette media must also be
partitioned with the
.BR fdisk (1M)
utility. Note that all existing data on
the diskette or disk partition, if any, is destroyed when a new
.B FAT
is
constructed.
.sp
.LP
.I generic_options
are supported by the generic
.B mkfs
command. See
.BR mkfs (1M)
for a description of these options.
.sp
.LP
.I raw_device_file
indicates the device on which to write unless the
.B "-o N"
option has been specified, or if the
.B -V
or
.B -m
generic options
are passed from the generic
.B mkfs
module.
.SH OPTIONS
.sp
.LP
See
.BR mkfs (1M)
for the list of supported generic options.
.sp
.LP
The following options are supported:
.sp
.ne 2
.mk
.na
.B -o
.I FSType_specific_options
.ad
.RS 30n
.rt
Specify
.B pcfs
file system-specific options in a comma-separated list with
no intervening spaces. If invalid options are specified, a warning message is
printed and the invalid options are ignored.
.sp
.ne 2
.mk
.na
.BI b= label
.ad
.RS 14n
.rt
Label the media with volume label. The volume label is restricted to 11
uppercase characters.
.RE

.sp
.ne 2
.mk
.na
.BI B= filename
.ad
.RS 14n
.rt
Install
.I filename
as the boot loader in the file system's boot sector. If
you don't specify a boot loader, an
.B MS-DOS
boot loader is installed. The
.B MS-DOS
boot loader requires specific
.B MS-DOS
system files to make
the diskette bootable. See
.B NOTES
for more information.
.RE

.sp
.ne 2
.mk
.na
.BI fat= n
.ad
.RS 14n
.rt
The size of a
.B FAT
entry. Currently, 12, 16, and 32 are valid values. The
default is 12 for diskettes, 16 for larger media.
.RE

.sp
.ne 2
.mk
.na
.B h
.ad
.RS 14n
.rt
Mark the first file installed as a hidden file. The
.B -i
option must also
be specified.
.RE

.sp
.ne 2
.mk
.na
.BI hidden= n
.ad
.RS 14n
.rt
Set the number of hidden sectors to
.IR n .
This is the number of sectors on
the physical disk preceding the start of the volume (which is the boot sector
itself). This defaults to 0 for diskettes or a computed valued (based on the
fdisk table) for disks. This option may be used only in conjunction with the
.B nofdisk
option.
.RE

.sp
.ne 2
.mk
.na
.BI i= filename
.ad
.RS 14n
.rt
Install
.I filename
as the initial file in the new file system. The initial
file's contents are guaranteed to occupy consecutive clusters at the start of
the files area. When creating bootable media, a boot program should be
specified as the initial file.
.RE

.sp
.ne 2
.mk
.na
.B nofdisk
.ad
.RS 14n
.rt
Do not attempt to find an
.B fdisk
table on the medium. Instead rely on the
.B size
option for determining the partition size. By default, the created
.B FAT
is 16 bits and begins at the first sector of the device. This
origination sector can be modified with the hidden option
.RB ( -h ).
.RE

.sp
.ne 2
.mk
.na
.BI nsect= n
.ad
.RS 14n
.rt
The number of sectors per track on the disk. If not specified, the value is
determined by using a
.BR dkio (7I)
ioctl to get the disk geometry, or (for
diskette) from the results of an
.B FDIOGCHAR
ioctl.
.RE

.sp
.ne 2
.mk
.na
.BI ntrack= n
.ad
.RS 14n
.rt
The number of tracks per cylinder on the disk. If not specified, the value is
determined by using a
.BR dkio (7I)
ioctl to get the disk geometry, or (for
diskette) from the results of an
.B FDIOGCHAR
ioctl.
.RE

.sp
.ne 2
.mk
.na
.B N
.ad
.RS 14n
.rt
No execution mode. Print normal output, but do not actually write the file
system to the medium. This is most useful when used in conjunction with the
verbose option.
.RE

.sp
.ne 2
.mk
.na
.B r
.ad
.RS 14n
.rt
Mark the first file installed as read-only. The
.B -i
option must also be
specified.
.RE

.sp
.ne 2
.mk
.na
.BI reserve= n
.ad
.RS 14n
.rt
Set the number of reserved sectors to
.IR n .
This is the number of sectors
in the volume, preceding the start of the first
.BR FAT ,
including the boot
sector. The value should always be at least 1, and the default value is exactly
1.
.RE

.sp
.ne 2
.mk
.na
.B s
.ad
.RS 14n
.rt
Mark the first file installed as a system file. The
.B -i
option must also
be specified.
.RE

.sp
.ne 2
.mk
.na
.BI size= n
.ad
.RS 14n
.rt
The number of sectors in the file system. If not specified, the value is
determined from the size of the partition given in the fdisk table or (for
diskette) by way of computation using the
.B FDIOGCHAR
ioctl.
.RE

.sp
.ne 2
.mk
.na
.BI spc= n
.ad
.RS 14n
.rt
The size of the allocation unit for space within the file system, expressed as
a number of sectors. The default value depends on the
.B FAT
entry size and
the size of the file system.
.RE

.sp
.ne 2
.mk
.na
.B v
.ad
.RS 14n
.rt
Verbose output. Describe, in detail, operations being performed.
.RE

.RE

.SH FILES
.sp
.ne 2
.mk
.na
.I raw_device_file
.ad
.RS 19n
.rt
The device on which to build the
.BR FAT .
The device name for a diskette
must be specified as
.B /dev/rdiskette0
for the first diskette drive, or
.B /dev/rdiskette1
for a second diskette drive. For non-diskette media, a
disk device name must be qualified with a suffix to indicate the proper
partition. For example, in the name
.BR /dev/rdsk/c0t0d0p0:c ,
the
.BR :c
suffix indicates that the first partition on the disk should receive the new
.BR FAT .
.sp
For a file,
.I raw_device_file
is the block device name returned by
.BR lofiadm (1M).
.RE

.SH EXAMPLES
.sp
.LP
The media in these examples must be formatted before running
.B mkfs
for
.BR pcfs .
See DESCRIPTION for more details.
.LP
.B Example 1
Creating a FAT File System on a Diskette
.sp
.LP
The following command creates a
.B FAT
file system on a diskette:

.sp
.in +2
.nf
mkfs -F pcfs /dev/rdiskette
.fi
.in -2
.sp

.LP
.B Example 2
Creating a FAT File System on a Disk
.sp
.LP
The following command creates a
.B FAT
file system on the second fdisk
partition of a disk attached to an x86 based system:

.sp
.in +2
.nf
mkfs -F pcfs /dev/rdsk/c0d0p0:d
.fi
.in -2
.sp

.LP
.B Example 3
Creating a FAT File System on a ZIP Disk
.sp
.LP
The following command creates a
.B FAT
file system on a ZIP disk located on
a SPARC based system:

.sp
.in +2
.nf
mkfs -F pcfs /dev/rdsk/c0t4d0s2:c
.fi
.in -2
.sp

.LP
.B Example 4
Creating a FAT File System on a JAZ Disk
.sp
.LP
The following command creates a
.B FAT
file system on a JAZ disk located on
a SPARC based system and overrides the sectors/track and tracks/cylinder values
obtained from the device's controller:

.sp
.in +2
.nf
mkfs -F pcfs -o nsect=32,ntrack=64 /dev/rdsk/c0t3d0s2:c
.fi
.in -2
.sp

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWesu
_
Interface StabilityStable
.TE

.SH SEE ALSO
.sp
.LP
.BR fdformat (1),
.BR fdisk (1M),
.BR format (1M),
.BR lofiadm (1M),
.BR mkfs (1M),
.BR attributes (5),
.BR fd (7D),
.BR dkio (7I),
.BR fdio (7I)
.SH NOTES
.sp
.LP
The default
.B MS-DOS
boot loader, which is installed by default if \fB-o B\fR is not specified, requires specific \fBMS-DOS\fR system files to make the
diskette bootable. These
.B MS-DOS
files are not installed when you format a
diskette with
.B mkfs
for
.BR pcfs ,
which makes a diskette formatted this
way not bootable. Trying to boot from it on an x86 based system will result in
the following message:
.sp
.in +2
.nf
Non-System disk or disk error
Replace and strike any key when ready
.fi
.in -2
.sp

.sp
.LP
You must format a diskette with the
.B "DOS format"
command to install
the specific
.B MS-DOS
system files required by the default boot loader.
.sp
.LP
.RB "You can use " lofiadm " to create a file that appears to a " mkfs 
command (for example,
.B mkfs_pcfs
or
.BR mkfs_ufs )
as a raw device. You
can then use a
.B mkfs
command to create a file system on that device. See
.BR lofiadm (1M)
for examples of creating a UFS and a PC (FAT) file system on
a device created by
.BR lofiadm .
