'\" te
.\" Copyright (c) 2009 Sun Microsystems, Inc. All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" Copyright 1989 AT&T
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mount_nfs 1M "26 Jul 2009" "SunOS 5.11" "System Administration Commands"
.SH NAME
mount_nfs \- mount remote NFS resources
.SH SYNOPSIS
.LP
.nf
\fBmount\fR [\fB-F\fR nfs] [\fIgeneric_options\fR] [\fB-o\fR \fIspecific_options\fR] [\fB-O\fR] \fIresource\fR
.fi

.LP
.nf
\fBmount\fR [\fB-F\fR nfs] [\fIgeneric_options\fR] [\fB-o\fR \fIspecific_options\fR] [\fB-O\fR] \fImount_point\fR
.fi

.LP
.nf
\fBmount\fR [\fB-F\fR nfs] [\fIgeneric_options\fR] [\fB-o\fR \fIspecific_options\fR]
     [\fB-O\fR] \fIresource\fR \fImount_point\fR
.fi

.SH DESCRIPTION
.sp
.LP
The
.B mount
utility attaches a named
.I resource
to the file system
hierarchy at the pathname location
.IR mount_point ,
which must already
exist. If
.I mount_point
has any contents prior to the
.BR mount
operation, the contents remain hidden until the
.I resource
is once again
unmounted.
.sp
.LP
.B mount_nfs
starts the
.BR lockd (1M)
and \fBstatd\fR(1M) daemons if
they are not already running.
.sp
.LP
If the resource is listed in the
.B /etc/vfstab
file, the command line
can specify either
.I resource
or
.IR mount_point ,
and
.BR mount
consults
.B /etc/vfstab
for more information. If the
.B -F
option is
omitted,
.B mount
takes the file system type from
.BR /etc/vfstab .
.sp
.LP
If the resource is not listed in the
.B /etc/vfstab
file, then the
command line must specify both the
.I resource
and the
.IR mount_point .
.sp
.LP
.I host
can be an IPv4 or IPv6 address string. As IPv6 addresses already
contain colons, enclose
.I host
in a pair of square brackets when
specifying an IPv6 address string. Otherwise the first occurrence of a colon
can be interpreted as the separator between the host name and path, for
example,
.BR [1080::8:800:200C:417A]:tmp/file .
See
.BR inet "(7P) and"
.BR inet6 (7P).
.sp
.ne 2
.mk
.na
\fIhost\fR:\fIpathname\fR
.ad
.sp .6
.RS 4n
Where
.I host
is the name of the
.B NFS
server host, and
.I pathname
is the path name of the directory on the server being
mounted. The path name is interpreted according to the server's path name
parsing rules and is not necessarily slash-separated, though on most
servers, this is the case.
.RE

.sp
.ne 2
.mk
.na
\fInfs\fR://\fIhost\fR[:\fIport\fR]/\fIpathname\fR
.ad
.sp .6
.RS 4n
This is an
.B "NFS URL"
and follows the standard convention for
\fBNFS URL\fRs as described in
.IR "NFS URL Scheme" ,
RFC 2224. See the
discussion of
.BR URL 's
and the public option under \fBNFS FILE SYSTEMS\fR
for a more detailed discussion.
.RE

.sp
.ne 2
.mk
.na
\fIhost\fR:\fIpathname\fR
\fInfs\fR://\fIhost\fR[:\fIport\fR]/\fIpathname\fR
.ad
.br
.na
\fR
.ad
.sp .6
.RS 4n
\fIhost\fR:\fIpathname\fR is a comma-separated list of
.IR host\fR:\fIpathname .
.sp
See the discussion of replicated file systems and failover under \fBNFS FILE SYSTEMS\fR for a more detailed discussion.
.RE

.sp
.ne 2
.mk
.na
.I hostlist pathname
.ad
.sp .6
.RS 4n
.I hostlist
is a comma-separated list of hosts.
.sp
See the discussion of replicated file systems and failover under \fBNFS FILE SYSTEMS\fR for a more detailed discussion.
.RE

.sp
.LP
The
.B mount
command maintains a table of mounted file systems in
.BR /etc/mnttab ,
described in
.BR mnttab (4).
.sp
.LP
.B mount_nfs
supports both NFSv3 and NFSv4 mounts. The default NFS
version is NFSv4.
.SH OPTIONS
.sp
.LP
See
.BR mount (1M)
for the list of supported
.IR generic_options .
See
.BR share_nfs (1M)
for a description of server options.
.sp
.ne 2
.mk
.na
.B -o
.I specific_options
.ad
.sp .6
.RS 4n
Set file system specific options according to a comma-separated list with
no intervening spaces.
.sp
.ne 2
.mk
.na
.BI acdirmax= n
.ad
.sp .6
.RS 4n
Hold cached attributes for no more than
.I n
seconds after directory
update. The default value is
.BR 60 .
.RE

.sp
.ne 2
.mk
.na
.BI acdirmin= n
.ad
.sp .6
.RS 4n
Hold cached attributes for at least
.I n
seconds after directory update.
The default value is
.BR 30 .
.RE

.sp
.ne 2
.mk
.na
.BI acregmax= n
.ad
.sp .6
.RS 4n
Hold cached attributes for no more than
.I n
seconds after file
modification. The default value is
.BR 60 .
.RE

.sp
.ne 2
.mk
.na
.BI acregmin= n
.ad
.sp .6
.RS 4n
Hold cached attributes for at least
.I n
seconds after file
modification. The default value is
.BR 3 .
.RE

.sp
.ne 2
.mk
.na
.BI actimeo= n
.ad
.sp .6
.RS 4n
Set
.I min
and
.I max
times for regular files and directories to
\fIn\fR seconds. See "File Attributes," below, for a description of the
effect of setting this option to
.BR 0 .
.sp
See "Specifying Values for Attribute Cache Duration Options," below, for a
description of how
.BR acdirmax ,
.BR acdirmin ,
.BR acregmax ,
.BR acregmin ,
and
.B actimeo
are parsed on a
.B mount
command
line.
.RE

.sp
.ne 2
.mk
.na
.B bg
|
.B fg
.ad
.sp .6
.RS 4n
If the first attempt fails, retry in the background, or, in the foreground.
The default is
.BR fg .
.RE

.sp
.ne 2
.mk
.na
.B forcedirectio
|
.B noforcedirectio
.ad
.sp .6
.RS 4n
If
.B forcedirectio
is specified, then for the duration of the mount,
forced direct
.B I/O
is used. If the filesystem is mounted using
.BR forcedirectio ,
data is transferred directly between client and server,
with no buffering on the client. If the filesystem is mounted using
.BR noforcedirectio ,
data is buffered on the client.
.B forcedirectio
is a performance option that is of benefit only in large sequential data
transfers. The default behavior is
.BR noforcedirectio .
.RE

.sp
.ne 2
.mk
.na
.B grpid
.ad
.sp .6
.RS 4n
By default, the
.B GID
associated with a newly created file obeys the
System V semantics; that is, the
.B GID
is set to the effective
.BR GID
of the calling process. This behavior can be overridden on a per-directory
basis by setting the set-GID bit of the parent directory; in this case, the
.B GID
of a newly created file is set to the
.B GID
of the parent
directory (see
.BR open (2)
and
.BR mkdir (2)).
Files created on file
systems that are mounted with the
.B grpid
option obeys
.BR BSD
semantics independent of whether the set-GID bit of the parent directory is
set; that is, the
.B GID
is unconditionally inherited from that of the
parent directory.
.RE

.sp
.ne 2
.mk
.na
.B hard
|
.B soft
.ad
.sp .6
.RS 4n
Continue to retry requests until the server responds
.RB ( hard )
or give
up and return an error
.RB ( soft ).
The default value is
.BR hard .
Note
that NFSv4 clients do not support soft mounts.
.RE

.sp
.ne 2
.mk
.na
.B intr
|
.B nointr
.ad
.sp .6
.RS 4n
Allow (do not allow) keyboard interrupts to kill a process that is hung
while waiting for a response on a hard-mounted file system. The default is
.BR intr ,
which makes it possible for clients to interrupt applications
that can be waiting for a remote mount.
.RE

.sp
.ne 2
.mk
.na
.B noac
.ad
.sp .6
.RS 4n
Suppress data and attribute caching. The data caching that is suppressed is
the write-behind. The local page cache is still maintained, but data copied
into it is immediately written to the server.
.RE

.sp
.ne 2
.mk
.na
.B nocto
.ad
.sp .6
.RS 4n
Do not perform the normal close-to-open consistency. When a file is closed,
all modified data associated with the file is flushed to the server and not
held on the client. When a file is opened the client sends a request to the
server to validate the client's local caches. This behavior ensures a file's
consistency across multiple NFS clients. When
.B -nocto
is in effect, the
client does not perform the flush on close and the request for validation,
allowing the possiblity of differences among copies of the same file as
stored on multiple clients.
.sp
This option can be used where it can be guaranteed that accesses to a
specified file system are made from only one client and only that client.
Under such a condition, the effect of
.B -nocto
can be a slight
performance gain.
.RE

.sp
.ne 2
.mk
.na
.BI port= n
.ad
.sp .6
.RS 4n
The server
.B IP
port number. The default is
.BR NFS_PORT .
If the
.B port
option is specified, and if the resource includes one or more
\fBNFS URL\fRs, and if any of the \fBURL\fRs include a \fBport\fR
number, then the
.B port
number in the option and in the
.B URL
must
be the same.
.RE

.sp
.ne 2
.mk
.na
.B posix
.ad
.sp .6
.RS 4n
Request
.B POSIX.1
semantics for the file system. Requires a mount
Version 2
.BR mountd "(1M) on the server. See"
.BR standards (5)
for
information regarding POSIX.
.RE

.sp
.ne 2
.mk
.na
.BI proto= netid
| \fBrdma\fR
.ad
.sp .6
.RS 4n
By default, the transport protocol that the NFS mount uses is the first
available RDMA transport supported both by the client and the server. If no
RDMA transport is found, then it attempts to use a TCP transport or, failing
that, a UDP transport, as ordered in the
.B /etc/netconfig
file. If it
does not find a connection oriented transport, it uses the first available
connectionless transport.
.sp
Use this option to override the default behavior.
.sp
.B proto
is set to the value of
.I netid
or
.BR rdma .
.I netid
is the value of the
.B network_id
field entry in the
.B /etc/netconfig
file.
.sp
The UDP protocol is not supported for NFS Version 4. If you specify a UDP
protocol with the
.B proto
option, NFS version 4 is not used.
.RE

.sp
.ne 2
.mk
.na
.B public
.ad
.sp .6
.RS 4n
The
.B public
option forces the use of the public file handle when
connecting to the
.B NFS
server. The resource specified might not have an
.BR "NFS URL" .
See the discussion of
.BR URL "s and the public option"
under
.B "NFS FILE SYSTEMS"
for a more detailed discussion.
.RE

.sp
.ne 2
.mk
.na
.B quota
|
.B noquota
.ad
.sp .6
.RS 4n
Enable or prevent
.BR quota "(1M) to check whether the user is over quota"
on this file system; if the file system has quotas enabled on the server,
quotas are still checked for operations on this file system.
.RE

.sp
.ne 2
.mk
.na
.B remount
.ad
.sp .6
.RS 4n
Remounts a read-only file system as read-write (using the
.B rw
option).
This option cannot be used with other
.B -o
options, and this option
works only on currently mounted read-only file systems.
.RE

.sp
.ne 2
.mk
.na
.BI retrans= n
.ad
.sp .6
.RS 4n
Set the number of
.B NFS
retransmissions to
.IR n .
The default value
is
.BR 5 .
For connection-oriented transports, this option has no effect
because it is assumed that the transport performs retransmissions on behalf
of NFS.
.RE

.sp
.ne 2
.mk
.na
.BI retry= n
.ad
.sp .6
.RS 4n
The number of times to retry the
.B mount
operation. The default for the
.B mount
command is
.BR 10000 .
.sp
The default for the automounter is
.BR 0 ,
in other words, do not retry.
You might find it useful to increase this value on heavily loaded servers,
where automounter traffic is dropped, causing unnecessary server not
responding errors.
.RE

.sp
.ne 2
.mk
.na
.BI rsize= n
.ad
.sp .6
.RS 4n
Set the read buffer size to a maximum of
.I n
bytes. The default value
is
.B 1048576
when using connection-orientated transports with Version 3
or Version 4 of the
.B NFS
protocol, and
.B 32768
when using
connection-less transports. The default can be negotiated down if the server
prefers a smaller transfer size. "\fBRead\fR" operations may not necessarily
use the maximum buffer size. When using Version 2, the default value is
.B 32768
for all transports.
.RE

.sp
.ne 2
.mk
.na
.BI sec= mode
.ad
.sp .6
.RS 4n
Set the security
.I mode
for
.B NFS
transactions. If
.B sec=
is
not specified, then the default action is to use
.B AUTH_SYS
over
.B NFS
Version 2 mounts, use a user-configured default
.B auth
over
NFS version 3 mounts, or to  negotiate a mode over Version 4 mounts.
.sp
The preferred mode for NFS Version 3 mounts is the default mode specified
in
.B /etc/nfssec.conf
(see
.BR nfssec.conf (4))
on the client. If there
is no default configured in this file or if the server does not export using
the client's default mode, then the client picks the first mode that it
supports in the array of modes returned by the server. These alternatives
are limited to the security flavors listed in
.BR /etc/nfssec.conf .
.sp
NFS Version 4 mounts negotiate a security mode when the server returns an
array of security modes. The client attempts the mount with each security
mode, in order, until one is successful.
.sp
Only one mode can be specified with the
.B sec=
option. See
.BR nfssec (5)
for the available
.I mode
options.
.RE

.sp
.ne 2
.mk
.na
.B secure
.ad
.sp .6
.RS 4n
This option has been deprecated in favor of the
.BI sec= dh
option.
.RE

.sp
.ne 2
.mk
.na
.BI timeo= n
.ad
.sp .6
.RS 4n
Set the
.B NFS
timeout to
.I n
tenths of a second. The default value
is
.B 11
tenths of a second for connectionless transports, and
.B 600
tenths of a second for connection-oriented transports. This value is ignored
for connectionless transports. Such transports might implement their own
timeouts, which are outside the control of NFS.
.RE

.sp
.ne 2
.mk
.na
.BI vers= "NFS version number"
.ad
.sp .6
.RS 4n
By default, the version of
.B NFS
protocol used between the client and
the server is the highest one available on both systems. The default maximum
for the client is Version 4. This can be changed by setting the
.B NFS_CLIENT_VERSMAX
parameter in
.B /etc/default/nfs
to a valid
version (2, 3, or 4). If the
.B NFS
server does not support the client's
default maximum, the next lowest version attempted until a matching version
is found.
.RE

.sp
.ne 2
.mk
.na
.BI wsize= n
.ad
.sp .6
.RS 4n
Set the write buffer size to a maximum of
.I n
bytes. The default value
is
.B 1048576
when using connection-orientated transports with Version 3
or Version 4 of the
.B NFS
protocol, and
.B 32768
when using
connection-less transports. The default can be negotiated down if the server
prefers a smaller transfer size. "\fBWrite\fR" operations may not
necessarily use the maximum buffer size. When using Version 2, the default
value is
.B 32768
for all transports.
.RE

.sp
.ne 2
.mk
.na
.B xattr
|
.B noxattr
.ad
.sp .6
.RS 4n
Allow or disallow the creation and manipulation of extended attributes. The
default is
.BR xattr .
See
.BR fsattr (5)
for a description of extended
attributes.
.RE

.RE

.sp
.ne 2
.mk
.na
.B -O
.ad
.sp .6
.RS 4n
Overlay mount. Allow the file system to be mounted over an existing mount
point, making the underlying file system inaccessible. If a mount is
attempted on a pre-existing mount point without setting this flag, the mount
fails, producing the error "device busy."
.RE

.SH NFS FILE SYSTEMS
.sp
.ne 2
.mk
.na
.B Background versus Foreground
.ad
.sp .6
.RS 4n
File systems mounted with the
.B bg
option indicate that
.B mount
is
to retry in the background if the server's mount daemon
.RB ( mountd (1M))
does not respond.
.B mount
retries the request up to the count specified
in the
.BI retry= n
option. (Note that the default value for
.B retry
differs between
.B mount
and
.BR automount .
See the
description of
.BR retry ,
above.) Once the file system is mounted, each
\fBNFS\fR request made in the kernel waits \fBtimeo=\fIn\fR tenths of a
second for a response. If no response arrives, the time-out is multiplied by
.B 2
and the request is retransmitted. When the number of retransmissions
has reached the number specified in the
.BI retrans= n
option, a file
system mounted with the
.B soft
option returns an error on the request;
one mounted with the
.B hard
option prints a warning message and
continues to retry the request.
.RE

.sp
.ne 2
.mk
.na
.B Hard versus Soft
.ad
.sp .6
.RS 4n
File systems that are mounted read-write or that contain executable files
should always be mounted with the
.B hard
option. Applications using
.B soft
mounted file systems can incur unexpected
.B I/O
errors, file
corruption, and unexpected program core dumps. The soft option is not
recommended.
.RE

.sp
.ne 2
.mk
.na
.B Authenticated requests
.ad
.sp .6
.RS 4n
The server can require authenticated
.B NFS
requests from the client.
.BI sec= dh
authentication might be required. See \fBnfssec\fR(5).
.RE

.sp
.ne 2
.mk
.na
.B URLs and the public option
.ad
.sp .6
.RS 4n
If the
.B public
option is specified, or if the
.I resource
includes
and
.BR "NFS URL" ,
.B mount
attempts to connect to the server using
the public file handle lookup protocol. See \fIWebNFS Client Specification\fR, RFC 2054. If the server supports the public file handle,
the attempt is successful;
.B mount
does not need to contact the server's
.BR rpcbind (1M)
and the
.BR mountd (1M)
daemons to get the port number of
the
.B mount
server and the initial file handle of
.IR pathname ,
respectively. If the
.B NFS
client and server are separated by a firewall
that allows all outbound connections through specific ports, such as
.BR NFS_PORT ,
then this enables
.B NFS
operations through the firewall.
The public option and the
.B "NFS URL"
can be specified independently
or together. They interact as specified in the following matrix:
.sp
.in +2
.nf
                   Resource Style

                    \fIhost\fR:\fIpathname\fR              NFS URL

public option      Force public file          Force public file
                    handle and fail            handle and fail
                    mount if not supported.    mount if not supported.

                    Use Native paths.          Use Canonical paths.

default            Use MOUNT protocol.        Try public file handle
                                               with Canonical paths.
                                               Fall back to MOUNT
                                               protocol if not
                                               supported.
.fi
.in -2

A Native path is a path name that is interpreted according to conventions
used on the native operating system of the
.B NFS
server. A Canonical
path is a path name that is interpreted according to the
.B URL
rules.
See
.IR "Uniform Resource Locators (URL)" ,
RFC 1738. See  for uses of Native
and Canonical paths.
.RE

.sp
.ne 2
.mk
.na
.B Replicated file systems and failover
.ad
.sp .6
.RS 4n
.I resource
can list multiple read\(mionly file systems to be used to
provide data. These file systems should contain equivalent directory
structures and identical files. It is also recommended that they be created
by a utility such as
.BR rdist (1).
The file systems can be specified
either with a comma\(miseparated list of
.I host:/pathname
entries and/or
.B NFS URL
entries, or with a comma \(miseparated list of hosts, if
all file system names are the same. If multiple file systems are named and
the first server in the list is down, failover uses the next alternate
server to access files. If the read\(mionly option is not chosen,
replication is disabled. File access, for NFS Versions 2 and 3, is blocked
on the original if NFS locks are active for that file.
.RE

.SS "File Attributes"
.sp
.LP
To improve
.B NFS
read performance, files and file attributes are
cached. File modification times get updated whenever a write occurs.
However, file access times can be temporarily out-of-date until the cache
gets refreshed.
.sp
.LP
The attribute cache retains file attributes on the client. Attributes for a
file are assigned a time to be flushed. If the file is modified before the
flush time, then the flush time is extended by the time since the last
modification (under the assumption that files that changed recently are
likely to change soon). There is a minimum and maximum flush time extension
for regular files and for directories. Setting
.BI actimeo= n
sets
flush time to
.I n
seconds for both regular files and directories.
.sp
.LP
Setting
.B actimeo=0
disables attribute caching on the client. This
means that every reference to attributes is satisfied directly from the
server though file data is still cached. While this guarantees that the
client always has the latest file attributes from the server, it has an
adverse effect on performance through additional latency, network load, and
server load.
.sp
.LP
Setting the
.B noac
option also disables attribute caching, but has the
further effect of disabling client write caching. While this guarantees that
data written by an application is written directly to a server, where it can
be viewed immediately by other clients, it has a significant adverse effect
on client write performance. Data written into memory-mapped file pages
.RB ( mmap (2))
are not written directly to this server.
.SS "Specifying Values for Attribute Cache Duration Options"
.sp
.LP
The attribute cache duration options are
.BR acdirmax ,
.BR acdirmin ,
.BR acregmax ,
.BR acregmin ,
and
.BR actimeo ,
as described under
OPTIONS. A value specified for
.B actimeo
sets the values of all
attribute cache duration options except for any of these options specified
following
.B actimeo
on a
.B mount
command line. For example, consider
the following command:
.sp
.in +2
.nf
example# mount -o acdirmax=10,actimeo=1000 server:/path /localpath
.fi
.in -2

.sp
.LP
Because
.B actimeo
is the last duration option in the command line, its
value
.RB ( 1000 )
becomes the setting for all of the duration options,
including
.BR acdirmax .
Now consider:
.sp
.in +2
.nf
example# mount -o actimeo=1000,acdirmax=10 server:/path /localpath
.fi
.in -2

.sp
.LP
Because the
.B acdirmax
option follows
.B actimeo
on the command
line, it is assigned the value specified
.RB ( 10 ).
The remaining duration
options are set to the value of
.BR actimeo
.RB ( 1000 ).
.SH EXAMPLES
.LP
.B Example 1
Mounting an
.B NFS
File System
.sp
.LP
To mount an
.B NFS
file system:

.sp
.in +2
.nf
example# mount serv:/usr/src /usr/src
.fi
.in -2
.sp

.LP
.B Example 2
Mounting An
.B NFS
File System Read-Only With No suid
Privileges
.sp
.LP
To mount an
.B NFS
file system read-only with no suid privileges:

.sp
.in +2
.nf
example# mount -r -o nosuid serv:/usr/src /usr/src
.fi
.in -2
.sp

.LP
.B Example 3
Mounting An
.B NFS
File System Over Version 2, with the
UDP Transport
.sp
.LP
To mount an
.B NFS
file system over Version 2, with the UDP transport:

.sp
.in +2
.nf
example# mount -o vers=2,proto=udp serv:/usr/src /usr/src
.fi
.in -2
.sp

.LP
.B Example 4
Mounting an
.B NFS
File System Using An
.BR NFS
.B URL
.sp
.LP
To mount an
.B NFS
file system using an
.B "NFS URL"
(a canonical
path):

.sp
.in +2
.nf
example# mount nfs://serv/usr/man /usr/man
.fi
.in -2
.sp

.LP
.B Example 5
Mounting An
.B NFS
File System Forcing Use Of The Public
File Handle
.sp
.LP
To mount an
.B NFS
file system and force the use of the public file
handle and an
.B "NFS URL"
(a canonical path) that has a non 7-bit
ASCII escape sequence:

.sp
.in +2
.nf
example# mount -o public nfs://serv/usr/%A0abc /mnt/test
.fi
.in -2
.sp

.LP
.B Example 6
Mounting an
.B NFS
File System Using a Native Path
.sp
.LP
To mount an
.B NFS
file system using a native path (where the server
uses colons (":") as the component separator) and the public file handle:

.sp
.in +2
.nf
example# mount -o public serv:C:doc:new /usr/doc
.fi
.in -2
.sp

.LP
.B Example 7
Mounting a Replicated Set of
.B NFS
File Systems with
the Same Pathnames
.sp
.LP
To mount a replicated set of
.B NFS
file systems with the same
pathnames:

.sp
.in +2
.nf
example# mount serv\(mia,serv\(mib,serv\(mic:/usr/man /usr/man
.fi
.in -2
.sp

.LP
.B Example 8
Mounting a Replicated Set of
.B NFS
File Systems with
Different Pathnames
.sp
.LP
To mount a replicated set of
.B NFS
file systems with different
pathnames:

.sp
.in +2
.nf
example# mount serv\(mix:/usr/man,serv\(miy:/var/man,nfs://serv-z/man /usr/man
.fi
.in -2
.sp

.SH FILES
.sp
.ne 2
.mk
.na
.B /etc/mnttab
.ad
.sp .6
.RS 4n
table of mounted file systems
.RE

.sp
.ne 2
.mk
.na
.B /etc/dfs/fstypes
.ad
.sp .6
.RS 4n
default distributed file system type
.RE

.sp
.ne 2
.mk
.na
.B /etc/vfstab
.ad
.sp .6
.RS 4n
table of automatically mounted resources
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWnfscu
.TE

.SH SEE ALSO
.sp
.LP
.BR rdist (1),
.BR lockd (1M),
.BR mountall (1M),
.BR mountd (1M),
.BR nfsd (1M),
.BR quota (1M),
.BR statd (1M),
.BR mkdir (2),
.BR mmap (2),
.BR mount (2),
.BR open (2),
.BR umount (2),
.BR mnttab (4),
.BR nfs (4),
.BR nfssec.conf (4),
.BR attributes (5),
.BR fsattr (5),
.BR nfssec (5),
.BR standards (5),
.BR inet (7P),
.BR inet6 (7P),
.BR lofs (7FS)
.sp
.LP
Callaghan, Brent,
.IR "WebNFS Client Specification" ,
RFC 2054, October
1996.
.sp
.LP
Callaghan, Brent,
.IR "NFS URL Scheme" ,
RFC 2224, October 1997.
.sp
.LP
Berners-Lee, Masinter & McCahill ,
.IR "Uniform Resource Locators (URL)" ,
RFC 1738, December 1994.
.SH NOTES
.sp
.LP
An
.B NFS
server should not attempt to mount its own file systems. See
.BR lofs (7FS).
.sp
.LP
If the directory on which a file system is to be mounted is a symbolic
link, the file system is mounted on \fBthe directory to which the symbolic link refers,\fR rather than being mounted on top of the symbolic link
itself.
.sp
.LP
SunOS 4.x used the
.B biod
maintenance procedure to perform parallel
read-ahead and write-behind on
.B NFS
.RB "clients. SunOS 5.x made" " biod"
obsolete with multi-threaded processing, which transparently performs
parallel read-ahead and write-behind.
.sp
.LP
.RB "Since the root " ( / ) " file system is mounted read-only by the"
kernel during the boot process, only the
.B remount
option (and options
that can be used in conjunction with
.BR remount )
affect the root
.RB ( / ") entry in the " /etc/vfstab " file."
.sp
.LP
.B mount_cachefs
cannot be used with replicated NFS mounts or any NFS
Version 4 mount.
.sp
.LP
The NFS client service is managed by the service management facility,
.BR smf (5),
under the service identifier:
.sp
.in +2
.nf
svc:/network/nfs/client:default
.fi
.in -2
.sp

.sp
.LP
Administrative actions on this service, such as enabling, disabling, or
requesting restart, can be performed using
.BR svcadm (1M).
The service's
status can be queried using the
.BR svcs (1)
command.
