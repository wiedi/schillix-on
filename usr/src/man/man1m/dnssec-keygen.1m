'\" te
.\" Copyright (C) 2004  Internet Systems Consortium, Inc. ("ISC")
.\" Copyright (C) 2000, 2001 Internet Software Consortium.
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND ISC DISCLAIMS ALL WARRANTIES WITH
.\" REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
.\" AND FITNESS. IN NO EVENT SHALL ISC BE LIABLE FOR ANY SPECIAL, DIRECT,
.\" INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
.\" LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE
.\" OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
.\" PERFORMANCE OF THIS SOFTWARE.
.\"
.\" Portions Copyright (c) 2004, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.TH dnssec-keygen 1M "24 Dec 2008" "SunOS 5.11" "System Administration Commands"
.SH NAME
dnssec-keygen \- DNSSEC key generation tool
.SH SYNOPSIS
.LP
.nf
\fBdnssec-keygen\fR \fB-a\fR \fIalgorithm\fR \fB-b\fR \fIkeysize\fR \fB-n\fR \fInametype\fR [\fB-ehk\fR]
     [\fB-c\fR \fIclass\fR] [\fB-f\fR \fIflag\fR] [\fB-g\fR \fIgenerator\fR] [\fB-p\fR \fIprotocol\fR]
     [\fB-r\fR \fIrandomdev\fR] [\fB-s\fR \fIstrength\fR] [\fB-t\fR \fItype\fR] [\fB-v\fR \fIlevel\fR] \fIname\fR
.fi

.SH DESCRIPTION
.sp
.LP
The
.B dnssec-keygen
utility generates keys for DNSSEC (Secure DNS), as
defined in RFC 2535 and RFC 4034. It can also generate keys for use with
TSIG (Transaction Signatures), as defined in RFC 2845.
.SH OPTIONS
.sp
.LP
The following options are supported:
.sp
.ne 2
.mk
.na
.B -a
.I algorithm
.ad
.RS 16n
.rt
Select the cryptographic algorithm. The value of algorithm must be one of
RSAMD5 (RSA) or RSASHA1, DSA,
.B DH
(Diffie Hellman), or HMAC-MD5. These
values are case insensitive.
.sp
For DNSSEC, RSASHA1 is a mandatory-to-implement algorithm and DSA is
recommended. For TSIG, HMAC-MD5 is mandatory.
.LP
Note -
.sp
.RS 2
HMAC-MD5 and DH automatically set the
.B -k
flag.
.RE
.RE

.sp
.ne 2
.mk
.na
.B -b
.I keysize
.ad
.RS 16n
.rt
Specify the number of bits in the key. The choice of key size depends on
the algorithm used. RSAMD5 and RSASHA1 keys must be between 512 and 2048
bits. Diffie Hellman keys must be between 128 and 4096 bits. DSA keys must
be between 512 and 1024 bits and an exact multiple of 64. HMAC-MD5 keys must
be between 1 and 512 bits.
.RE

.sp
.ne 2
.mk
.na
.B -c
.I class
.ad
.RS 16n
.rt
Indicate that the DNS record containing the key should have the specified
class. If not specified, class IN is used.
.RE

.sp
.ne 2
.mk
.na
.B -e
.ad
.RS 16n
.rt
Use a large exponent if generating an RSAMD5 or RSASHA1 key.
.RE

.sp
.ne 2
.mk
.na
.B -f
.I flag
.ad
.RS 16n
.rt
Set the specified flag in the flag field of the KEY/DNSKEY record. The only
recognized flag is KSK (Key Signing Key) DNSKEY.
.RE

.sp
.ne 2
.mk
.na
.B -g
.I generator
.ad
.RS 16n
.rt
Use this
.I generator
if generating a Diffie Hellman key. Allowed values
are 2 and 5. If no generator is specified, a known prime from RFC 2539 will
be used if possible; otherwise the default is 2.
.RE

.sp
.ne 2
.mk
.na
.B -h
.ad
.RS 16n
.rt
Print a short summary of the options and arguments to
.BR dnssec-keygen .
.RE

.sp
.ne 2
.mk
.na
.B -k
.ad
.RS 16n
.rt
Generate KEY records rather than DNSKEY records.
.RE

.sp
.ne 2
.mk
.na
.B -n
.I nametype
.ad
.RS 16n
.rt
Specify the owner type of the key. The value of
.I nametype
must either
be
.B ZONE
(for a DNSSEC zone key),
.B HOST
or
.B ENTITY
(for a key
associated with a user) or
.B OTHER
(DNSKEY). These values are case
insensitive.
.RE

.sp
.ne 2
.mk
.na
.B -p
.I protocol
.ad
.RS 16n
.rt
Set the protocol value for the generated key. The
.I protocol
argument
is a number between 0 and 255. The default is 3 (DNSSEC) Other possible
values for this argument are listed in RFC 2535 and its successors.
.RE

.sp
.ne 2
.mk
.na
.B -r
.I randomdev
.ad
.RS 16n
.rt
Specify the source of randomness. By default,
.B /dev/random
is used.
The
.I randomdev
argument specifies the name of a character device or
file containing random data to be used instead of the default. The special
value "\fBkeyboard\fR" indicates that keyboard input should be used.
.RE

.sp
.ne 2
.mk
.na
.B -s
.I strength
.ad
.RS 16n
.rt
Specify the strength value of the key. The
.I strength
argument is a
number between 0 and 15, and currently has no defined purpose in DNSSEC.
.RE

.sp
.ne 2
.mk
.na
.B -t
.I type
.ad
.RS 16n
.rt
Indicate the use of the key.
.B type
must be one of
.BR AUTHCONF ,
.BR NOAUTHCONF ,
.BR NOAUTH ,
or
.BR NOCONF .
The default is
.BR AUTHCONF .
.B AUTH
refers to the ability to authenticate data, and
.B CONF
the ability to encrypt data.
.RE

.sp
.ne 2
.mk
.na
.B -v
.I level
.ad
.RS 16n
.rt
Set the debugging level.
.RE

.SH GENERATED KEYS
.sp
.LP
When
.B dnssec-keygen
completes successfully, it prints a string of the
form \fBK\fInnnn\fR.+\fIaaa\fR+\fIiiiii\fR to the standard output. This
is an identification string for the key it has generated.
.RS +4
.TP
.ie t \(bu
.el o
.I nnnn
is the key name.
.RE
.RS +4
.TP
.ie t \(bu
.el o
.I aaa
is the numeric representation of the algorithm.
.RE
.RS +4
.TP
.ie t \(bu
.el o
.I iiiii
is the key identifier (or footprint).
.RE
.sp
.LP
The
.B dnssec-keygen
utility creates two files, with names based on the
printed string.
.RS +4
.TP
.ie t \(bu
.el o
\fBK\fInnnn\fR.+\fIaaa\fR+\fIiiiii\fR.\fBkey\fR contains the public
key.
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fBK\fInnnn\fR.+\fIaaa\fR+\fIiiiii\fR.\fBprivate\fR contains the private
key.
.RE
.sp
.LP
The \fB\&.key\fR file contains a DNS
.B KEY
record that can be inserted
into a zone file (directly or with a
.B $INCLUDE
statement).
.sp
.LP
The \fB\&.private\fR file contains algorithm specific fields. For obvious
security reasons, this file does not have general read permission.
.sp
.LP
Both \fB\&.key\fR and \fB\&.private\fR files are generated for symmetric
encryption algorithm such as HMAC-MD5, even though the public and private
key are equivalent.
.SH EXAMPLES
.LP
.B Example 1
Generate a 768-bit DSA key for the domain
.BR example.com .
.sp
.LP
To generate a 768-bit DSA key for the domain
.BR example.com ,
the
following command would be issued:

.sp
.in +2
.nf
dnssec-keygen -a DSA -b 768 -n ZONE example.com
.fi
.in -2
.sp

.sp
.LP
The command would print a string of the form:

.sp
.in +2
.nf
Kexample.com.+003+26160
.fi
.in -2
.sp

.LP
.B Example 2
Create the files
.B Kexample.com.+003+26160.key
and
.BR Kexample.com.+003+26160.private .
.sp
.LP
In the following example,
.B dnssec-keygen
creates the files
.B Kexample.com.+003+26160.key
and
.B Kexample.com.+003+26160.private

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWbind
_
Interface StabilityVolatile
.TE

.SH SEE ALSO
.sp
.LP
.BR dnssec-signzone (1M),
.BR attributes (5)
.sp
.LP
.IR "RFC 2535" ,
.IR "RFC 2845" ,
.IR "RFC 2539" ,
.IR "RFC 4033" ,
\fIRFC
4034\fR
.sp
.LP
.I BIND 9 Administrator Reference Manual
