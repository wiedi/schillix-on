'\" te
.\" Copyright (c) 2008, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH lockfs 1M "2 Jan 2008" "SunOS 5.11" "System Administration Commands"
.SH NAME
lockfs \- change or report file system locks
.SH SYNOPSIS
.LP
.nf
\fB/usr/sbin/lockfs\fR [\fB-adefhnuw\fR] [\fB-c\fR \fIstring\fR] [\fIfile-system\fR]...
.fi

.SH DESCRIPTION
.sp
.LP
.B lockfs
is used to change and report the status of file system locks.
.B lockfs
reports the lock status and unlocks the file systems that were
improperly left locked.
.sp
.LP
Using
.B lockfs
to lock a file system is discouraged because this requires
extensive knowledge of SunOS internals to be used effectively and correctly.
.sp
.LP
When invoked with no arguments,
.BR lockfs " lists the "
.B UFS
file systems
that are locked. If
.I file-system
is not specified, and
.B -a
is
.RB "specified, " lockfs " is run on all mounted, " UFS " type file systems."
.SH OPTIONS
.sp
.LP
The options are mutually exclusive:
.BR wndheuf .
If you do specify more than
one of these options on a
.B lockfs
command line, the utility does not
protest and invokes only the last option specified. In particular, you cannot
specify a flush
.RB ( -f )
and a lock (for example,
.BR -w )
on the same
command line. However, all locking operations implicitly perform a flush, so
the
.B -f
is superfluous when specifying a lock.
.sp
.LP
You must be super-user to use any of the following options, with the exception
of
.BR -a ,
.B -f
and
.BR -v .
.sp
.LP
The following options are supported.
.sp
.ne 2
.mk
.na
.B -a
.ad
.sp .6
.RS 4n
Apply command to all mounted,
.B UFS
type file systems.
.I file-system
is
ignored when
.B -a
is specified.
.RE

.sp
.ne 2
.mk
.na
.B -c
.I string
.ad
.sp .6
.RS 4n
Accept a string that is passed as the comment field. The
.B -c
only takes
affect when the lock is being set using the
.BR -d ,
.BR -h ,
.BR -n ,
.BR -u ,
or
.B -w
options.
.RE

.sp
.ne 2
.mk
.na
.B -d
.ad
.sp .6
.RS 4n
Delete-lock
.RB ( dlock )
the specified
.IR file-system .
dlock suspends
access that could remove directory entries.
.RE

.sp
.ne 2
.mk
.na
.B -e
.ad
.sp .6
.RS 4n
Error-lock
.RB ( elock )
the specified
.IR file-system .
elock blocks all
local access to the locked file system and returns
.B EWOULDBLOCK
on all
remote access. File systems are elocked by
.B UFS
on detection of internal
inconsistency. They may only be unlocked after successful repair by
.BR fsck ,
which is usually done automatically (see
.BR mount_ufs (1M)).
elocked file
systems can be unmounted.
.RE

.sp
.ne 2
.mk
.na
.B -f
.ad
.sp .6
.RS 4n
Force a synchronous flush of all data that is dirty at the time
.B fsflush
is run to its backing store for the named file system (or for all file systems.)

.sp
It is a more reliable method than using
.BR sync "(1M) because it does not"
return until all possible data has been pushed. In the case of
.B UFS
filesystems with logging enabled, the log is also rolled before returning.
Additional data can be modified by the time
.B fsflush
exits, so using one of
the locking options is more likely to be of general use.
.RE

.sp
.ne 2
.mk
.na
.B -h
.ad
.sp .6
.RS 4n
Hard-lock
.RB ( hlock )
the specified
.IR file-system .
hlock returns an error
on every access to the locked file system, and cannot be unlocked. hlocked file
systems can be unmounted.
.RE

.sp
.ne 2
.mk
.na
.B -n
.ad
.sp .6
.RS 4n
Name-lock
.RB ( nlock )
the specified
.IR file-system .
nlock suspends
accesses that could change or remove existing directories entries.
.RE

.sp
.ne 2
.mk
.na
.B -u
.ad
.sp .6
.RS 4n
Unlock
.RB ( ulock )
the specified
.IR file-system .
ulock awakens suspended
accesses.
.RE

.sp
.ne 2
.mk
.na
.B -v
.ad
.sp .6
.RS 4n
Enable verbose output.
.RE

.sp
.ne 2
.mk
.na
.B -w
.ad
.sp .6
.RS 4n
Write-lock
.RB ( wlock )
the specified
.IR file-system .
wlock suspends writes
that would modify the file system. Access times are not kept while a file
system
is write-locked.
.RE

.SH OPERANDS
.sp
.LP
The following operands are supported.
.sp
.ne 2
.mk
.na
.I file-system
.ad
.sp .6
.RS 4n
A list of path names separated by whitespace. Note that
.I file-system
can
be a directory rather than the specific name of a file system, such as
.B /
or
.BR /usr .
For example, if you specify
.B /export/home
as an argument to
a \fBlockfs\fR command and
.B /export/home
is mounted on the root (\fB/\fR)
file system, the
.B lockfs
command will take effect on the root file
system.
.RE

.SH USAGE
.sp
.LP
See
.BR largefile (5)
for the description of the behavior of
.B lockfs
when
encountering files greater than or equal to 2 Gbyte ( 2^31 bytes).
.SH EXAMPLES
.LP
.B Example 1
Using
.B "lockfs -a"
.sp
.LP
In the following examples,
.I filesystem
is the pathname of the mounted-on
directory (mount point). \fBLocktype\fR is one of "\fBwrite\fR," "\fIname\fR,"
"\fIdelete\fR," "\fIhard\fR," or "\fIunlock\fR". When enclosed in parenthesis,
the lock is being set.
.B Comment
is a string set by the process that last
issued a lock command.

.sp
.LP
.RB "The following example shows the " lockfs " output when only the " -a 
option is specified.

.sp
.in +2
.nf
example#  \fB/usr/sbin/lockfs -a\fR
.fi
.in -2
.sp

.sp

.sp
.TS
tab();
lw(1.83i) lw(1.83i) lw(1.83i)
lw(1.83i) lw(1.83i) lw(1.83i)
.
FilesystemLocktype Comment
/unlock
/varunlock
.TE

.sp
.in +2
.nf
example#
.fi
.in -2
.sp

.LP
.B Example 2
Using
.B "lockfs -w"
.sp
.LP
The following example shows the
.B lockfs
output when the
.B -w
option is
used to write lock the
.B /var
file system and the comment string is set
using the
.B -c
option.  The
.B -a
option is then specified on a separate
command line.

.sp
.in +2
.nf
example#  \fB/usr/sbin/lockfs -w -c "lockfs: write lock example" /var\fR
example#  \fB/usr/sbin/lockfs -a\fR
.fi
.in -2
.sp

.sp

.sp
.TS
tab();
lw(1.83i) lw(1.83i) lw(1.83i)
lw(1.83i) lw(1.83i) lw(1.83i)
.
FilesystemLocktypeComment
/unlock
/varwritelockfs: write lock example
.TE

.sp
.in +2
.nf
example#
.fi
.in -2
.sp

.LP
.B Example 3
Using
.B "lockfs -u"
.sp
.LP
The following example shows the
.B lockfs
output when the
.B -u
option is
used to unlock the
.B /var
file system and the comment string is set using
the
.B -c
option.

.sp
.in +2
.nf
example#  \fB/usr/sbin/lockfs -uc "lockfs: unlock example" /var\fR
example#  \fB/usr/sbin/lockfs /var\fR
.fi
.in -2
.sp

.sp

.sp
.TS
tab();
lw(1.83i) lw(1.83i) lw(1.83i)
lw(1.83i) lw(1.83i) lw(1.83i)
.
FilesystemLocktypeComment
/varunlocklockfs: unlock example
.TE

.sp
.in +2
.nf
example#
.fi
.in -2
.sp

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcsu
.TE

.SH SEE ALSO
.sp
.LP
.BR kill (1),
.BR mount_ufs (1M),
.BR sync (1M),
.BR attributes (5),
.BR largefile (5),
.BR ufs (7FS),
.sp
.LP
\fR
.SH DIAGNOSTICS
.sp
.ne 2
.mk
.na
.IB "file system" ": Not owner"
.ad
.sp .6
.RS 4n
You must be root to use this command.
.RE

.sp
.ne 2
.mk
.na
.I file system
.B :Deadlock condition detected/avoided
.ad
.sp .6
.RS 4n
A file is enabled for accounting or swapping, on
.IR "file system" .
.RE

.sp
.ne 2
.mk
.na
.IB "file system" ": Device busy"
.ad
.sp .6
.RS 4n
Another process is setting the lock on
.IR "file system" .
.RE

