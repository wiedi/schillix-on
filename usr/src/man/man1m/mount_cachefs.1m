'\" te
.\" Copyright (c) 2004, Sun Microsystems, Inc. All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mount_cachefs 1M "18 Mar 2004" "SunOS 5.11" "System Administration Commands"
.SH NAME
mount_cachefs \- mount CacheFS file systems
.SH SYNOPSIS
.LP
.nf
\fBmount\fR \fB-F\fR cachefs [\fIgeneric_options\fR] \fB-o\fR backfstype=\fIfile_system_type\fR
     [\fIspecific_options\fR]
     [\fB-O\fR] \fIspecial\fR \fImount_point\fR
.fi

.SH DESCRIPTION
.sp
.LP
The CacheFS-specific version of the
.B mount
command mounts a cached file
system; if necessary, it NFS-mounts its back file system. It also provides a
number of CacheFS-specific options for controlling the caching process. For
more information regarding back file systems, refer to the\fR .
.sp
.LP
.B mount_cachefs
cannot be used with replicated NFS mounts.
.B mount_cachefs
creates a pass through when used with an NFS version 4
mount. No caching is performed.
.SH OPTIONS
.sp
.LP
To mount a CacheFS file system, use the generic
.B mount
command with the
.B -F
option followed by the argument \fBcachefs\fR.
.sp
.LP
See \fBmount\fR(1M) for a list of supported
.IR generic_options .
.sp
.ne 2
.mk
.na
\fB-o \fIspecific_options\fR
.ad
.RS 23n
.rt
Specify CacheFS file system specific options in a comma-separated list with
no intervening spaces.
.sp
.ne 2
.mk
.na
\fBacdirmax=\fIn\fR
.ad
.sp .6
.RS 4n
Specifies that cached attributes are held for no more than
.I n
seconds
after directory update. After
.I n
seconds, all directory information is
purged from the cache. The default value is
.B 30
seconds.
.RE

.sp
.ne 2
.mk
.na
\fBacdirmin=\fIn\fR
.ad
.sp .6
.RS 4n
Specifies that cached attributes are held for at least
.I n
seconds after
directory update. After
.I n
seconds, CacheFS checks to see if the
directory modification time on the back file system has changed. If it has,
all information about the directory is purged from the cache and new data is
retrieved from the back file system. The default value is
.B 30
seconds.
.RE

.sp
.ne 2
.mk
.na
\fBacregmax=\fIn\fR
.ad
.sp .6
.RS 4n
Specifies that cached attributes are held for no more than
.I n
seconds
after file modification. After
.I n
seconds, all file information is
purged from the cache. The default value is
.B 30
seconds.
.RE

.sp
.ne 2
.mk
.na
\fBacregmin=\fIn\fR
.ad
.sp .6
.RS 4n
Specifies that cached attributes are held for at least
.I n
seconds after
file modification. After
.I n
seconds, CacheFS checks to see if the file
modification time on the back file system has changed. If it has, all
information about the file is purged from the cache and new data is retrieved
from the back file system. The default value is
.B 30
seconds.
.RE

.sp
.ne 2
.mk
.na
\fBactimeo=\fIn\fR
.ad
.sp .6
.RS 4n
Sets
.BR acregmin ,
.BR acregmax ,
.BR acdirmin ,
and
.B acdirmax
to
.IR n .
.RE

.sp
.ne 2
.mk
.na
\fBbackfstype=\fIfile_system_type\fR
.ad
.sp .6
.RS 4n
The file system type of the back file system (can be
.B nfs
or
.BR hsfs ).
.RE

.sp
.ne 2
.mk
.na
\fBbackpath=\fIpath\fR
.ad
.sp .6
.RS 4n
Specifies where the back file system is already mounted. If this argument is
not supplied, CacheFS determines a mount point for the back file system. The
back file system must be read-only.
.RE

.sp
.ne 2
.mk
.na
\fBcachedir=\fIdirectory\fR
.ad
.sp .6
.RS 4n
The name of the cache directory.
.RE

.sp
.ne 2
.mk
.na
\fBcacheid=\fIID\fR
.ad
.sp .6
.RS 4n
.I ID
is a string specifying a particular instance of a cache. If you do
not specify a cache ID, CacheFS will construct one.
.RE

.sp
.ne 2
.mk
.na
.B demandconst
.ad
.sp .6
.RS 4n
Verifies cache consistency only when explicitly requested, rather than the
periodic checking that is done by default. A consistency check is requested
by using the
.B -s
option of the \fBcfsadmin\fR(1M) command. This option
is useful for back file systems that change infrequently, for example,
.BR /usr/openwin .
.B demandconst
and
.B noconst
are mutually
exclusive.
.RE

.sp
.ne 2
.mk
.na
.B local-access
.ad
.sp .6
.RS 4n
Causes the front file system to interpret the mode bits used for access
checking instead of having the back file system verify access permissions. Do
not use this argument with secure
.BR NFS .
.RE

.sp
.ne 2
.mk
.na
.B noconst
.ad
.sp .6
.RS 4n
Disables cache consistency checking. By default, periodic consistency
checking is enabled. Specify
.B noconst
only when you know that the back
file system will not be modified. Trying to perform cache consistency check
using
.B "cfsadmin -s"
will result in error.
.B demandconst
and
.B noconst
are mutually exclusive.
.RE

.sp
.ne 2
.mk
.na
.B write-around
|
.B non-shared
.ad
.sp .6
.RS 4n
Write modes for CacheFS. The
.B write-around
mode (the default) handles
writes the same as
.B NFS
does; that is, writes are made to the back file
system, and the affected file is purged from the cache. You can use the
.B non-shared
mode when you are sure that no one else will be writing to
the cached file system. In this mode, all writes are made to both the front
and the back file system, and the file remains in the cache.
.RE

.RE

.sp
.ne 2
.mk
.na
.B -O
.ad
.RS 23n
.rt
Overlay mount. Allows the filesystem to be mounted over an existing mount
point, making the underlying filesystem inaccessible. If a mount is attempted
on a pre-existing mount point without setting this flag, mount will fail with
the error: \fBmount -F cachefs: mount failed Device busy\fR.
.RE

.SH EXAMPLES
.LP
.B Example 1
CacheFS-mounting a File System
.sp
.LP
The following example CacheFS-mounts the file system
.BR server1:/user2 ,
which is already NFS-mounted on
.B /usr/abc
as
.BR /xyz .

.sp
.in +2
.nf
example# mount -F cachefs -o backfstype=nfs,backpath=/usr/abc,
     cachedir=/cache1 server1:/user2 /xyz
.fi
.in -2
.sp

.sp
.LP
The lines similar to the following appear in the
.B /etc/mnttab
file
after the
.B mount
command is executed:

.sp
.in +2
.nf
server1:/user2   /usr/abc        nfs
/usr/abc         /cache1/xyz    cachefs     backfstype=nfs
.fi
.in -2
.sp

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcsu
.TE

.SH SEE ALSO
.sp
.LP
.BR cfsadmin (1M),
.BR fsck_cachefs (1M),
.BR mount (1M),
\fBattributes\fR(5)\fR
.SH BUGS
.sp
.LP
The output for the
.I generic_option
.B -p
output is incorrect for
.BR cachefs .
