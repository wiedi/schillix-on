'\" te
.\"  Copyright (c) 2004, Sun Microsystems, Inc. All Rights Reserved
.\" The contents of this file are subject to the terms of the Common Development and Distribution License (the "License").  You may not use this file except in compliance with the License.
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE or http://www.opensolaris.org/os/licensing.  See the License for the specific language governing permissions and limitations under the License.
.\" When distributing Covered Code, include this CDDL HEADER in each file and include the License file at usr/src/OPENSOLARIS.LICENSE.  If applicable, add the following below this CDDL HEADER, with the fields enclosed by brackets "[]" replaced with your own identifying information: Portions Copyright [yyyy] [name of copyright owner]
.TH mount_cachefs 1M "18 Mar 2004" "SunOS 5.11" "System Administration Commands"
.SH NAME
mount_cachefs \- mount CacheFS file systems
.SH SYNOPSIS
.LP
.nf
\fBmount\fR \fB-F\fR cachefs [\fIgeneric_options\fR] \fB-o\fR backfstype=\fIfile_system_type\fR 
     [\fIspecific_options\fR] 
     [\fB-O\fR] \fIspecial\fR \fImount_point\fR
.fi

.SH DESCRIPTION
.sp
.LP
The CacheFS-specific version of the \fBmount\fR command mounts a cached file system; if necessary, it NFS-mounts its back file system. It also provides a number of CacheFS-specific options for controlling the caching process. For more information regarding back file systems, refer to the \fI\fR.
.sp
.LP
\fBmount_cachefs\fR cannot be used with replicated NFS mounts. \fBmount_cachefs\fR creates a pass through when used with an NFS version 4 mount. No caching is performed.
.SH OPTIONS
.sp
.LP
To mount a CacheFS file system, use the generic \fBmount\fR command with the \fB-F\fR option followed by the argument \fBcachefs\fR.
.sp
.LP
See \fBmount\fR(1M) for a list of supported \fIgeneric_options\fR.
.sp
.ne 2
.mk
.na
\fB\fB\fR\fB-o\fR\fB \fR\fIspecific_options\fR\fR
.ad
.RS 23n
.rt  
Specify CacheFS file system specific options in a comma-separated list with no intervening spaces. 
.sp
.ne 2
.mk
.na
\fB\fBacdirmax=\fR\fIn\fR\fR
.ad
.sp .6
.RS 4n
Specifies that cached attributes are held for no more than \fIn\fR seconds after directory update. After \fIn\fR seconds, all directory information is purged from the cache. The default value is \fB30\fR seconds.
.RE

.sp
.ne 2
.mk
.na
\fB\fBacdirmin=\fR\fIn\fR\fR
.ad
.sp .6
.RS 4n
Specifies that cached attributes are held for at least \fIn\fR seconds after directory update. After \fIn\fR seconds, CacheFS checks to see if the directory modification time on the back file system has changed. If it has, all information about the directory is purged from the cache and new data is retrieved from the back file system. The default value is \fB30\fR seconds.
.RE

.sp
.ne 2
.mk
.na
\fB\fBacregmax=\fR\fIn\fR\fR
.ad
.sp .6
.RS 4n
Specifies that cached attributes are held for no more than \fIn\fR seconds after file modification. After \fIn\fR seconds, all file information is purged from the cache. The default value is \fB30\fR seconds.
.RE

.sp
.ne 2
.mk
.na
\fB\fBacregmin=\fR\fIn\fR\fR
.ad
.sp .6
.RS 4n
Specifies that cached attributes are held for at least \fIn\fR seconds after file modification. After \fIn\fR seconds, CacheFS checks to see if the file modification time on the back file system has changed. If it has, all information about the file is purged from the cache and new data is retrieved from the back file system. The default value is \fB30\fR seconds.
.RE

.sp
.ne 2
.mk
.na
\fB\fBactimeo=\fR\fIn\fR\fR
.ad
.sp .6
.RS 4n
Sets \fBacregmin\fR, \fBacregmax\fR, \fBacdirmin\fR, and \fBacdirmax\fR to \fIn\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fBbackfstype=\fR\fIfile_system_type\fR\fR
.ad
.sp .6
.RS 4n
The file system type of the back file system (can be \fBnfs\fR or \fBhsfs\fR).
.RE

.sp
.ne 2
.mk
.na
\fB\fBbackpath=\fR\fIpath\fR\fR
.ad
.sp .6
.RS 4n
Specifies where the back file system is already mounted. If this argument is not supplied, CacheFS determines a mount point for the back file system. The back file system must be read-only.
.RE

.sp
.ne 2
.mk
.na
\fB\fBcachedir=\fR\fIdirectory\fR\fR
.ad
.sp .6
.RS 4n
The name of the cache directory.
.RE

.sp
.ne 2
.mk
.na
\fB\fBcacheid=\fR\fIID\fR\fR
.ad
.sp .6
.RS 4n
\fIID\fR is a string specifying a particular instance of a cache. If you do not specify a cache ID, CacheFS will construct one.
.RE

.sp
.ne 2
.mk
.na
\fB\fBdemandconst\fR\fR
.ad
.sp .6
.RS 4n
Verifies cache consistency only when explicitly requested, rather than the periodic checking that is done by default. A consistency check is requested by using the \fB-s\fR option of the \fBcfsadmin\fR(1M) command. This option is useful for back file systems that change infrequently, for example, \fB/usr/openwin\fR. \fBdemandconst\fR and \fBnoconst\fR are mutually exclusive.
.RE

.sp
.ne 2
.mk
.na
\fB\fBlocal-access\fR\fR
.ad
.sp .6
.RS 4n
Causes the front file system to interpret the mode bits used for access checking instead of having the back file system verify access permissions. Do not use this argument with secure \fBNFS\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fBnoconst\fR\fR
.ad
.sp .6
.RS 4n
Disables cache consistency checking. By default, periodic consistency checking is enabled. Specify \fBnoconst\fR only when you know that the back file system will not be modified. Trying to perform cache consistency check using \fBcfsadmin\fR \fB-s\fR will result in error. \fBdemandconst\fR and \fBnoconst\fR are mutually exclusive.
.RE

.sp
.ne 2
.mk
.na
\fB\fBwrite-around\fR | \fBnon-shared\fR\fR
.ad
.sp .6
.RS 4n
Write modes for CacheFS. The \fBwrite-around\fR mode (the default) handles writes the same as \fBNFS\fR does; that is, writes are made to the back file system, and the affected file is purged from the cache. You can use the \fBnon-shared\fR mode when you are sure that no one else will be writing to the cached file system. In this mode, all writes are made to both the front and the back file system, and the file remains in the cache.
.RE

.RE

.sp
.ne 2
.mk
.na
\fB\fB-O\fR\fR
.ad
.RS 23n
.rt  
Overlay mount. Allows the filesystem to be mounted over an existing mount point, making the underlying filesystem inaccessible. If a mount is attempted on a pre-existing mount point without setting this flag, mount will fail with the error: \fBmount \fR\fB-F\fR\fB cachefs: mount failed Device busy\fR.
.RE

.SH EXAMPLES
.LP
\fBExample 1 \fRCacheFS-mounting a File System
.sp
.LP
The following example CacheFS-mounts the file system \fBserver1:/user2\fR, which is already NFS-mounted on \fB/usr/abc\fR as \fB/xyz\fR.

.sp
.in +2
.nf
example# mount -F cachefs -o backfstype=nfs,backpath=/usr/abc,
     cachedir=/cache1 server1:/user2 /xyz
.fi
.in -2
.sp

.sp
.LP
The lines similar to the following appear in the \fB/etc/mnttab\fR file after the \fBmount\fR command is executed:

.sp
.in +2
.nf
server1:/user2   /usr/abc        nfs 
/usr/abc         /cache1/xyz    cachefs     backfstype=nfs
.fi
.in -2
.sp

.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcsu
.TE

.SH SEE ALSO
.sp
.LP
\fBcfsadmin\fR(1M), \fBfsck_cachefs\fR(1M), \fBmount\fR(1M), \fBattributes\fR(5) \fI\fR
.SH BUGS
.sp
.LP
The output for the \fIgeneric_option\fR \fB-p\fR output is incorrect for \fBcachefs\fR.
