'\" te
.\" Copyright (c) 2008, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH svc.startd 1M "5 May 2008" "SunOS 5.11" "System Administration Commands"
.SH NAME
svc.startd \- Service Management Facility master restarter
.SH SYNOPSIS
.LP
.nf
\fB/lib/svc/bin/svc.startd\fR
.fi

.LP
.nf
\fBsvc:/system/svc/restarter:default\fR
.fi

.SH DESCRIPTION
.sp
.LP
.B svc.startd
is the master restarter daemon for Service Management
Facility (SMF) and the default restarter for all services.
.B svc.startd
starts, stops, and restarts services based on administrative requests, system
failures, or application failures.
.sp
.LP
.B svc.startd
maintains service state, as well as being responsible for
managing faults in accordance with the dependencies of each service.
.sp
.LP
.B svc.startd
is invoked automatically during system startup. It is
restarted if any failures occur.
.B svc.startd
should never be invoked
directly.
.sp
.LP
See
.BR smf_restarter (5)
for information on configuration and behavior
common to all restarters.
.sp
.LP
.BR svcs (1)
reports status for all services managed by the Service
Configuration Facility.
.BR svcadm (1M)
allows manipulation of service
instances with respect to the service's restarter.
.SS "Environment Variables"
.sp
.LP
Environment variables with the "SMF_" prefix are reserved and may be
overwritten.
.sp
.LP
.B
svc.startd \c
supplies the "SMF_" environment variables specified in
.BR smf_method (5)
to the method. PATH is set to "\fB/usr/sbin:/usr/bin\fR"
by default. By default, all other environment variables supplied to
.B svc.startd
are those inherited from
.BR init (1M).
.sp
.LP
Duplicate entries are reduced to a single entry. The value used is
undefined. Environment entries that are not prefixed with "<\fIname\fR>=" are
ignored.
.SS "Restarter Options"
.sp
.LP
.B svc.startd
is not configured by command line options. Instead,
configuration is read from the service configuration repository. You can use
.BR svccfg (1M)
to set all options and properties.
.sp
.LP
The following configuration variables in the
.B options
property group
are available to developers and administrators:
.sp
.ne 2
.mk
.na
.B boot_messages
.ad
.sp .6
.RS 4n
An
.I astring
(as defined in
.BR scf_value_is_type ;
see
.BR scf_value_is_type (3SCF))
that describes the default level of messages
to print to the console during boot. The supported message options include
.B quiet
and
.BR verbose .
The
.B quiet
option prints minimal messages
to console during boot. The
.B verbose
option prints a single message per
service started to indicate success or failure. You can use the
.B boot
.B -m
option to override the
.B boot_messages
setting at boot time. See
.BR kernel (1M).
.RE

.sp
.ne 2
.mk
.na
.B logging
.ad
.sp .6
.RS 4n
Control the level of global service logging for
.BR svc.startd .
An
.I astring
(as defined in
.BR scf_value_is_type ;
see
.BR scf_value_is_type (3SCF))
that describes the default level of messages
to log to
.B syslog
(see
.BR syslog (3C)
and \fBsvc.startd\fR's global
logfile,
.BR /var/svc/log/svc.startd.log .
The supported message options
include
.BR quiet ,
.BR verbose ,
and
.BR debug .
The
.B quiet
option
sends error messages requiring administrative intervention to the console,
.B syslog
and
.BR svc.startd 's
global logfile. The
.B verbose
option
sends error messages requiring administrative intervention to the console,
.B syslog
and
.BR svc.startd 's
global logfile, and information about
errors which do not require administrative intervention to
.BR svc.startd 's
global logfile. A single message per service started is also sent to the
console. The
.B debug
option sends
.B svc.startd
debug messages to
\fBsvc.startd\fR's global logfile, error messages requiring
administrative intervention to the console,
.B syslog
and
\fBsvc.startd\fR's global logfile, and a single message per service started
to the console.
.RE

.sp
.ne 2
.mk
.na
.B milestone
.ad
.sp .6
.RS 4n
An FMRI which determines the milestone used as the default boot level.
Acceptable options include only the major milestones:
.sp
.in +2
.nf
svc:/milestone/single-user:default
svc:/milestone/multi-user:default
svc:/milestone/multi-user-server:default
.fi
.in -2
.sp

or the special values
.B all
or
.BR none .
.B all
represents an
idealized milestone that depends on every service.
.B none
is a special
milestone where no services are running apart from the master
.BR svc:/system/svc/restarter:default .
By default,
.B svc.startd
uses
.BR all ,
a synthetic milestone that depends on every service. If this
property is specified, it overrides any
.B initdefault
setting in
.BR inittab (4).
.RE

.sp
.ne 2
.mk
.na
.B system/reconfigure
.ad
.sp .6
.RS 4n
Indicates that a reconfiguration reboot has been requested. Services with
actions that must key off of a reconfiguration reboot may check that this
property exists and is set to 1 to confirm a reconfiguration boot has been
requested.
.sp
This property is managed by
.B svc.startd
and should not be modified by
the administrator.
.RE

.sp
.LP
Configuration errors, such as disabling
.B svc.startd
are logged by
.BR syslog ,
but ignored.
.SS "SERVICE STATES"
.sp
.LP
Services managed by
.B svc.startd
can appear in any of the states
described in
.BR smf (5).
The state definitions are unmodified by this
restarter.
.SS "SERVICE REPORTING"
.sp
.LP
.RB "In addition to any logging done by the managed service," " svc.startd"
provides a common set of service reporting and logging mechanisms.
.sp
.LP
Reporting properties
.B svc.startd
updates a common set of properties on
all services it manages. These properties are a common interface that can be
used to take action based on service instance health. The
.BR svcs (1)
command can be used to easily display these properties.
.sp
.ne 2
.mk
.na
.B restarter/state
.ad
.br
.na
.B restarter/next_state
.ad
.sp .6
.RS 4n
The current and next (if currently in transition) state for an instance.
.RE

.sp
.ne 2
.mk
.na
.B restarter/auxiliary_state
.ad
.sp .6
.RS 4n
A caption detailing additional information about the current instance state.
The auxiliary state available for services managed by
.B svc.startd
is:
.sp
.ne 2
.mk
.na
.B maintenance
.ad
.RS 15n
.rt
.sp
.in +2
.nf
fault_threshold_reached
stop_method_failed
administrative_request
.fi
.in -2
.sp

.RE

.RE

.sp
.ne 2
.mk
.na
.B restarter/state_timestamp
.ad
.sp .6
.RS 4n
The time when the current state was reached.
.RE

.sp
.ne 2
.mk
.na
.B restarter/contract
.ad
.sp .6
.RS 4n
The primary process contract ID, if any, that under which the service
instance is executing.
.RE

.sp
.LP
.B Logs
.sp
.LP
By default,
.B svc.startd
provides logging of significant restarter
actions for the service as well as method standard output and standard error
file descriptors to \fB/var/svc/log/\fIservice\fR:\fIinstance\fR.log\fR. The
level of logging to system global locations like
.B /var/svc/log/svc.startd.log
and
.B syslog
is controlled by the
.B options/logging
property.
.SS "SERVICE DEFINITION"
.sp
.LP
When developing or configuring a service managed by
.BR svc.startd ,
a
common set of properties are used to affect the interaction between the
service instance and the restarter.
.sp
.LP
.B Methods
.sp
.LP
The general form of methods for the fork/exec model provided by
.B svc.startd
are presented in
.BR smf_method (5).
The following methods
are supported as required or optional by services managed by
.BR svc.startd .
.sp
.ne 2
.mk
.na
.B refresh
.ad
.RS 11n
.rt
Reload any appropriate configuration parameters from the repository or
.B config
file, without interrupting service. This is often implemented
using
.B SIGHUP
for system daemons. If the service is unable to recognize
configuration changes without a restart, no refresh method is provided.
.sp
This method is optional.
.RE

.sp
.ne 2
.mk
.na
.B start
.ad
.RS 11n
.rt
Start the service. Return success only after the application is available to
consumers. Fail if a conflicting instance is already running, or if the
service is unable to start.
.sp
This method is required.
.RE

.sp
.ne 2
.mk
.na
.B stop
.ad
.RS 11n
.rt
Stop the service. In some cases, the stop method can be invoked when some or
all of the service has already been stopped. Only return an error if the
service is not entirely stopped on method return.
.sp
This method is required.
.RE

.sp
.LP
If the service does not need to take any action in a required method, it
must specify the
.B :true
token for that method.
.sp
.LP
.B svc.startd
honors any method context specified for the service or any
specific method. The method expansion tokens described in
.BR smf_method (5)
are available for use in all methods invoked by
.BR svc.startd .
.sp
.LP
.B Properties
.sp
.LP
An overview of the general properties is available in
.BR smf (5).
The
specific way in which these general properties interacts with
.B svc.startd
follows:
.sp
.ne 2
.mk
.na
.B general/enabled
.ad
.sp .6
.RS 4n
If enabled is set to true, the restarter attempts to start the service once
all its dependencies are satisfied. If set to false, the service remains in
the disabled state, not running.
.RE

.sp
.ne 2
.mk
.na
.B general/restarter
.ad
.sp .6
.RS 4n
If this FMRI property is empty or set to
.BR svc:/system/svc/restarter:default ,
the service is managed by
.BR svc.startd .
Otherwise, the restarter specified is responsible (once it
is available) for managing the service.
.RE

.sp
.ne 2
.mk
.na
.B general/single_instance
.ad
.sp .6
.RS 4n
If
.B single_instance
is set to true,
.B svc.startd
only allows one
instance of this service to transition to online or degraded at any time.
.RE

.sp
.LP
Additionally,
.B svc.startd
managed services can define the optional
properties listed below in the
.B startd
property group.
.sp
.ne 2
.mk
.na
.B startd/duration
.ad
.sp .6
.RS 4n
The
.B duration
property defines the service's model. It can be set to
\fBtransient\fR, \fBchild\fR also known as "\fBwait\fR" model services, or
.B contract
(the default).
.RE

.sp
.ne 2
.mk
.na
.B startd/ignore_error
.ad
.sp .6
.RS 4n
The
.B ignore_error
property, if set, specifies a comma-separated list of
ignored events. Legitimate string values in that list are
.B core
and
.BR signal .
The default is to restart on all errors.
.RE

.sp
.ne 2
.mk
.na
.B startd/need_session
.ad
.sp .6
.RS 4n
The
.B need_session
property, if set to true, indicates that the instance
should be launched in its own session. The default is not to do so.
.RE

.sp
.ne 2
.mk
.na
.B startd/utmpx_prefix
.ad
.sp .6
.RS 4n
The
.B utmpx_prefix
string property defines that the instance requires a
valid
.B utmpx
entry prior to start method execution. The default is not
to create a
.B utmpx
entry.
.RE

.SS "SERVICE FAILURE"
.sp
.LP
.B svc.startd
assumes that a method has failed if it returns a non-zero
exit code or if fails to complete before the timeout specified expires. If
.B $SMF_EXIT_ERR_CONFIG
or
.B $SMF_EXIT_ERR_FATAL
is returned,
.B svc.startd
immediately places the service in the maintenance state. For
all other failures,
.B svc.startd
places the service in the offline state.
If a service is offline and its dependencies are satisfied,
.B svc.startd
tries again to start the service (see
.BR smf (5)).
.sp
.LP
If a contract or transient service does not return from its start method
before its defined timeout elapses,
.B svc.startd
sends a
.B SIGKILL
to
the method, and returns the service to the offline state.
.sp
.LP
If three failures happen in a row, or if the service is restarting more than
once a second,
.B svc.startd
places the service in the maintenance
state.
.sp
.LP
The conditions of service failure are defined by a combination of the
service model (defined by the
.B startd/duration
property) and the value
of the
.B startd/ignore_error
property.
.sp
.LP
A contract model service fails if any of the following conditions occur:
.RS +4
.TP
.ie t \(bu
.el o
all processes in the service exit
.RE
.RS +4
.TP
.ie t \(bu
.el o
any processes in the service produce a core dump
.RE
.RS +4
.TP
.ie t \(bu
.el o
a process outside the service sends a service process a fatal signal (for
.RB "example, an administrator terminates a service process with the" " pkill"
command)
.RE
.sp
.LP
The last two conditions may be ignored by the service by specifying core
and/or signal in
.BR startd/ignore_error .
.sp
.LP
Defining a service as transient means that
.B svc.startd
does not track
processes for that service. Thus, the potential faults described for contract
model services are not considered failures for transient services. A
transient service only enters the maintenance state if one of the method
failure conditions occurs.
.sp
.LP
"\fBWait\fR" model services are restarted whenever the child process
associated with the service exits. A child process that exits is not
considered an error for "\fBwait\fR" model services, and repeated failures do
not lead to a transition to maintenance state.
.SS "LEGACY SERVICES"
.sp
.LP
.B svc.startd
continues to provide support for services invoked during
the startup run level transitions. Each
.B /etc/rc?.d
directory is
processed after all managed services which constitute the equivalent run
.RB "level milestone have transitioned to the online state. Standard" " init"
scripts placed in the
.B /etc/rc?.d
directories are run in the order of
their sequence numbers.
.sp
.LP
The milestone to run-level mapping is:
.sp
.ne 2
.mk
.na
.B milestone/single-user
.ad
.sp .6
.RS 4n
Single-user
.RB ( S )
.RE

.sp
.ne 2
.mk
.na
.B milestone/multi-user
.ad
.sp .6
.RS 4n
Multi-user
.RB ( 2 )
.RE

.sp
.ne 2
.mk
.na
.B milestone/multi-user-server
.ad
.sp .6
.RS 4n
Multi-user with network services
.RB ( 3 )
.RE

.sp
.LP
Additionally,
.B svc.startd
gives these legacy services visibility in SMF
by inserting an instance per script into the repository. These legacy
instances are visible using standard SMF interfaces such as
.BR svcs (1),
always appear in the
.B LEGACY-RUN
state, cannot be modified, and can not
be specified as dependencies of other services. The initial start time of the
legacy service is captured as a convenience for the administrator.
.SH FILES
.sp
.ne 2
.mk
.na
.B /var/svc/log
.ad
.RS 21n
.rt
Directory where
.B svc.startd
stores log files.
.RE

.sp
.ne 2
.mk
.na
.B /etc/svc/volatile
.ad
.RS 21n
.rt
Directory where
.B svc.startd
stores log files in early stages of boot,
before
.B /var
is mounted read-write.
.RE

.SH EXAMPLE
.LP
.B Example 1
Turning on Verbose Logging
.sp
.LP
To turn on verbose logging, type the following:

.sp
.in +2
.nf
# /usr/sbin/svccfg -s system/svc/restarter:default
svc:/system/svc/restarter:default> addpg options application
svc:/system/svc/restarter:default> setprop options/logging = \e
astring: verbose
svc:/system/svc/restarter:default> exit
.fi
.in -2
.sp

.sp
.LP
This request will take effect on the next restart of
.BR svc.startd .

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcsu
.TE

.SH SEE ALSO
.sp
.LP
.BR svcs (1),
.BR svcprop (1),
.BR kernel (1M),
.BR init (1M),
.BR svcadm (1M),
.BR svccfg (1M),
.BR svc.configd (1M),
.BR setsid (2),
.BR syslog (3C),
.BR libscf (3LIB),
.BR scf_value_is_type (3SCF),
.BR contract (4),
.BR init.d (4),
.BR process (4),
.BR inittab (4),
.BR attributes (5),
.BR smf (5),
.BR smf_method (5)
