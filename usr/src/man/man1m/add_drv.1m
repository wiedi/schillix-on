'\" te
.\" Copyright (c) 2005 Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH add_drv 1M "1 Dec 2005" "SunOS 5.11" "System Administration Commands"
.SH NAME
add_drv \- add a new device driver to the system
.SH SYNOPSIS
.LP
.nf
\fBadd_drv\fR [\fB-b\fR \fIbasedir\fR] [\fB-c\fR \fIclass_name\fR]
     [\fB-i\fR '\fIidentify_name\fR.\|.\|.'] [\fB-m\fR '\fIpermission\fR','.\|.\|.']
     [\fB-p\fR '\fIpolicy\fR'] [\fB-P\fR \fIprivilege\fR] [\fB-n\fR] [\fB-f\fR] [\fB-v\fR] \fIdevice_driver\fR
.fi

.SH DESCRIPTION
.sp
.LP
The
.B add_drv
command is used to inform the system about newly
installed device drivers.
.sp
.LP
Each device on the system has a name associated with it. This name is
represented by the
.B name
property for the device. Similarly, the device
may also have a list of driver names associated with it. This list is
represented by the
.B compatible
property for the device.
.sp
.LP
The system determines which devices will be managed by the driver being
added by examining the contents of the
.B name
property and the
.B compatible
property (if it exists) on each device. If the value in the
.B name
property does not match the driver being added, each entry in the
.B compatible
property is tried, in order, until either a match occurs or
there are no more entries in the
.B compatible
property.
.sp
.LP
In some cases, adding a new driver may require a reconfiguration boot. See
the
.B NOTES
section.
.sp
.LP
Aliases might require quoting (with double-quotes) if they contain numbers.
See
.BR EXAMPLES .
.SS "The \fB/etc/minor_perm\fR File"
.sp
.LP
.B add_drv
and
.BR update_drv (1M)
read the \fB/etc/minor_perm\fR file
to obtain permission information. The permission specified is applied to
matching minor nodes created when a device bound to the driver is attached.
A minor node's permission may be manually changed by
.BR chmod (1).
For
such nodes, the specified permissions apply, overriding the default
permissions specified via
.B add_drv
or
.BR update_drv (1M).
.sp
.LP
The format of the
.B /etc/minor_perm
file is as follows:
.sp
.in +2
.nf
\fIname\fB:\fIminor_name permissions owner group\fR
.fi
.in -2
.sp

.sp
.LP
.I minor_name
may be the actual name of the minor node, or contain shell
metacharacters to represent several minor nodes (see
.BR sh (1)).
.sp
.LP
For example:
.sp
.in +2
.nf
sd:* 0640 root sys
zs:[a-z],cu 0600 uucp uucp
mm:kmem 0640 root bin
.fi
.in -2
.sp

.sp
.LP
The first line sets all devices exported by the
.B sd
node to
.BR 0640
permissions, owned by
.BR root ,
with group
.BR sys .
In the second line,
devices such as
.B "a,cu and"
.B z,cu
exported by the
.BR zs
driver are set to
.B 0600
permission, owned by
.BR uucp ,
with group
.BR uucp .
In the third line the
.B kmem
device exported by the
.BR mm
driver is set to
.B 0640
permission, owned by
.BR root ,
with group
.BR bin .
.SS "Running \fBadd_drv\fR from a \fBpostinstall\fR Script"
.sp
.LP
When running
.B add_drv
from within the context of a package's
postinstall script, you must consider whether the package is being added to
a system image or to a running system. When a package is being installed on
a system image, such as occurs with the Live Upgrade or flash features (see
.BR live_upgrade (5)
and
.BR flarcreate "(1M)), the"
.B BASEDIR
variable
refers to the image's base directory. In this situation,
.B add_drv
should be invoked with
.BR "-b $BASEDIR" .
This causes
.BR add_drv
only to update the image's system files; a reboot of the system or client
would be required to make the driver operational.
.sp
.LP
When a package is being installed on the running system itself, the system
files need to be updated, as in the case above. However, the running kernel
can be informed of the existence of the new driver without requiring a
.RB "reboot. To accomplish this, the postinstall script must invoke" " add_drv"
without the
.B -b
option. Accordingly,
.B postinstall
scripts invoking
.B add_drv
should be written thusly:
.sp
.in +2
.nf
if [ "${BASEDIR:=/}" = "/" ]
then
        ADD_DRV="add_drv"
else
        ADD_DRV="add_drv -b ${BASEDIR}"
fi
$ADD_DRV [<options>] \fI<driver>\fR
.fi
.in -2
.sp

.sp
.LP
\&.\|.\|.or, alternatively:
.sp
.in +2
.nf
if [ "${BASEDIR:=/}" != "/" ]
then
         BASEDIR_OPT="-b $BASEDIR"
fi
         add_drv $BASEDIR_OPT [<options>] \fI<driver>\fR
.fi
.in -2
.sp

.sp
.LP
The
.B -b
option is described below.
.SH OPTIONS
.sp
.ne 2
.mk
.na
.B -b
.I basedir
.ad
.RS 26n
.rt
Installs the driver on the system with a root directory of
.IR basedir
rather than installing on the system executing
.BR add_drv .
This option is
typically used in package post-installation scripts when the package is not
being installed on the system executing the
.B pkgadd
command. The system
using
.I basedir
as its root directory must reboot to complete the driver
installation.
.LP
Note -
.sp
.RS 2
The root file system of any non-global zones must not be referenced with
the
.B -b
option. Doing so might damage the global zone's file system,
might compromise the security of the global zone, and might damage the
non-global zone's file system. See
.BR zones (5).
.RE
.RE

.sp
.ne 2
.mk
.na
.B -c
.I class_name
.ad
.RS 26n
.rt
The driver being added to the system exports the class
.IR class_name .
.RE

.sp
.ne 2
.mk
.na
.B -f
.ad
.RS 26n
.rt
Normally if a reconfiguration boot is required to complete the
configuration of the driver into the system,
.B add_drv
will not add the
driver. The force flag forces
.B add_drv
to add the driver even if a
reconfiguration boot is required. See the
.B -v
flag.
.RE

.sp
.ne 2
.mk
.na
\fB-i\fR \fB\&'\fIidentify_name\fB\&'\fR
.ad
.RS 26n
.rt
A white-space separated list of aliases for the driver
.IR device_driver .
.RE

.sp
.ne 2
.mk
.na
\fB-m\fR \fB\&'\fIpermission\fB\&'\fR
.ad
.RS 26n
.rt
Specify the file system permissions for device nodes created by the system
on behalf of
.IR device_driver .
.RE

.sp
.ne 2
.mk
.na
.B -n
.ad
.RS 26n
.rt
Do not try to load and attach
.IR device_driver ,
just modify the system
configuration files for the
.IR device_driver .
.RE

.sp
.ne 2
.mk
.na
\fB-p\fR '\fIpolicy\fB\&'\fR
.ad
.RS 26n
.rt
Specify an additional device security policy.
.sp
The device security policy constists of several whitespace separated
tokens:
.sp
.in +2
.nf
{\fIminorspec\fR {token=value}+}+
.fi
.in -2
.sp

.I minorspec
is a simple wildcard pattern for a minor device. A single
.B *
matches all minor devices. Only one
.B *
is allowed in the
pattern.
.sp
Patterns are matched in the following order:
.RS +4
.TP
.ie t \(bu
.el o
entries without a wildcard
.RE
.RS +4
.TP
.ie t \(bu
.el o
entries with wildcards, longest wildcard first
.RE
The following tokens are defined:
.B read_priv_set
and
.BR write_priv_set .
.B read_priv_set
defines the privileges that need
to be asserted in the effective set of the calling process when opening a
device for reading.
.B write_priv_set
defines the privileges that need to
be asserted in the effective set of the calling process when opening a
device for writing. See
.BR privileges (5).
.sp
A missing minor spec is interpreted as a
.BR * .
.RE

.sp
.ne 2
.mk
.na
\fB-P\fR '\fIprivilege\fB\&'\fR
.ad
.RS 26n
.rt
Specify additional, comma separated, privileges used by the driver. You can
also use specific privileges in the device's policy.
.RE

.sp
.ne 2
.mk
.na
.B -v
.ad
.RS 26n
.rt
The verbose flag causes
.B add_drv
to provide additional information
regarding the success or failure of a driver's configuration into the
system. See the
.B EXAMPLES
section.
.RE

.SH EXAMPLES
.LP
.B Example 1
Adding SUNW Example Driver to the System
.sp
.LP
The following example adds the
.B SUNW,example
driver to a 32-bit
system, with an alias name of
.BR SUNW,alias .
It assumes the driver has
already been copied to
.BR /usr/kernel/drv .

.sp
.in +2
.nf
example# add_drv \fB-m\fR '* 0666 bin bin','a 0644 root sys' \e
      \fB-p\fR 'a write_priv_set=sys_config  * write_priv_set=none' \e
      \fB-i\fR 'SUNW,alias' SUNW,example
.fi
.in -2
.sp

.sp
.LP
Every minor node created by the system for the
.B SUNW,example
driver
will have the permission
.BR 0666 ,
and be owned by user
.B bin
in the
group
.BR bin ,
except for the minor device
.BR a ,
which will be owned by
.BR root ,
group
.BR sys ,
and have a permission of
.BR 0644 .
The
specified device policy requires no additional privileges to open all minor
nodes, except minor device
.BR a ,
which requires the
.B sys_config
privilege when opening the device for writing.

.LP
.B Example 2
Adding Driver to the Client
.BR /export/root/sun1
.sp
.LP
The following example adds the driver to the client
.BR /export/root/sun1 .
The driver is installed and loaded when the client
machine,
.BR sun1 ,
is rebooted. This second example produces the same
result as the first, except the changes are on the diskless client,
.BR sun1 ,
and the client must be rebooted for the driver to be
installed.

.sp
.in +2
.nf
example# add_drv \fB-m\fR '* 0666 bin bin','a 0644 root sys' \e
        \fB-i\fR 'SUNW,alias' -b /export/root/sun1 \e
	SUNW,example
.fi
.in -2
.sp

.sp
.LP
See the note in the description of the
.B -b
option, above, specifying
the caveat regarding the use of this option with the Solaris zones
feature.

.LP
.B Example 3
Adding Driver for a Device Already Managed by an Existing
Driver
.sp
.LP
The following example illustrates the case where a new driver is added for
a device that is already managed by an existing driver. Consider a device
that is currently managed by the driver
.BR dumb_framebuffer .
The
.B name
and
.B compatible
properties for this device are as follows:

.sp
.in +2
.nf
name="display"
compatible="whizzy_framebuffer", "dumb_framebuffer"
.fi
.in -2
.sp

.sp
.LP
If
.B add_drv
is used to add the
.B whizzy_framebuffer
driver, the
following will result.

.sp
.in +2
.nf
example# add_drv whizzy_framebuffer
Error: Could not install driver (whizzy_framebuffer)
Device managed by another driver.
.fi
.in -2
.sp

.sp
.LP
If the
.B -v
flag is specified, the following will result.

.sp
.in +2
.nf
example# add_drv -v whizzy_framebuffer
Error: Could not install driver (whizzy_framebuffer)
Device managed by another driver.
Driver installation failed because the following
entries in /devices would be affected:

        /devices/iommu@f,e0000000/sbus@f,e0001000/display[:*]
        (Device currently managed by driver "dumb_framebuffer")

The following entries in /dev would be affected:

        /dev/fbs/dumb_framebuffer0
.fi
.in -2
.sp

.sp
.LP
If the
.B -v
and
.B -f
flags are specified, the driver will be added
resulting in the following.

.sp
.in +2
.nf
example# add_drv -vf whizzy_framebuffer
A reconfiguration boot must be performed to complete the
installation of this driver.

The following entries in /devices will be affected:

        /devices/iommu@f,e0000000/sbus@f,e0001000/display[:*]
        (Device currently managed by driver "dumb_framebuffer"

The following entries in /dev will be affected:

        /dev/fbs/dumb_framebuffer0
.fi
.in -2
.sp

.sp
.LP
The above example is currently only relevant to devices exporting a generic
device name.

.LP
.B Example 4
Use of Double Quotes in Specifying Driver Alias
.sp
.LP
The following example shows the use of double quotes in specifying a driver
alias that contains numbers.

.sp
.in +2
.nf
example# add_drv -i '"pci10c5,25"' smc
.fi
.in -2
.sp

.SH EXIT STATUS
.sp
.LP
.B add_drv
returns
.B 0
on success and
.B 1
on failure.
.SH FILES
.sp
.ne 2
.mk
.na
.B /kernel/drv
.ad
.sp .6
.RS 4n
32-bit boot device drivers
.RE

.sp
.ne 2
.mk
.na
.B /kernel/drv/sparcv9
.ad
.sp .6
.RS 4n
64-bit SPARC boot device drivers
.RE

.sp
.ne 2
.mk
.na
.B /kernel/drv/amd64
.ad
.sp .6
.RS 4n
64-bit x86 boot device drivers
.RE

.sp
.ne 2
.mk
.na
.B /usr/kernel/drv
.ad
.sp .6
.RS 4n
other 32-bit drivers that could potentially be shared between platforms
.RE

.sp
.ne 2
.mk
.na
.B /usr/kernel/drv/sparcv9
.ad
.sp .6
.RS 4n
other 64-bit SPARC drivers that could potentially be shared between
platforms
.RE

.sp
.ne 2
.mk
.na
.B /usr/kernel/drv/amd64
.ad
.sp .6
.RS 4n
other 64-bit x86 drivers that could potentially be shared between
platforms
.RE

.sp
.ne 2
.mk
.na
.B /platform/`uname -i`/kernel/drv
.ad
.sp .6
.RS 4n
32-bit platform-dependent drivers
.RE

.sp
.ne 2
.mk
.na
.B /platform/`uname -i`/kernel/drv/sparcv9
.ad
.sp .6
.RS 4n
64-bit SPARC platform-dependent drivers
.RE

.sp
.ne 2
.mk
.na
.B /platform/`uname -i`/kernel/drv/amd64
.ad
.sp .6
.RS 4n
64-bit x86 platform-dependent drivers
.RE

.sp
.ne 2
.mk
.na
.B /etc/driver_aliases
.ad
.sp .6
.RS 4n
driver aliases file
.RE

.sp
.ne 2
.mk
.na
.B /etc/driver_classes
.ad
.sp .6
.RS 4n
driver classes file
.RE

.sp
.ne 2
.mk
.na
.B /etc/minor_perm
.ad
.sp .6
.RS 4n
minor node permissions
.RE

.sp
.ne 2
.mk
.na
.B /etc/name_to_major
.ad
.sp .6
.RS 4n
major number binding
.RE

.sp
.ne 2
.mk
.na
.B /etc/security/device_policy
.ad
.sp .6
.RS 4n
device policy
.RE

.sp
.ne 2
.mk
.na
.B /etc/security/extra_privs
.ad
.sp .6
.RS 4n
device privileges
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcsu
.TE

.SH SEE ALSO
.sp
.LP
.BR boot (1M),
.BR chmod (1),
.BR devfsadm (1M),
.BR flarcreate (1M),
.BR kernel (1M),
.BR modinfo (1M),
.BR rem_drv (1M),
.BR update_drv (1M),
.BR driver.conf (4),
.BR system (4),
.BR attributes (5),
.BR live_upgrade (5),
.BR privileges (5),
.BR devfs (7FS),
.BR ddi_create_minor_node (9F)
.sp
.LP
\fR
.SH NOTES
.sp
.LP
It is possible to add a driver for a device already being managed by a
different driver, where the driver being added appears in the device's
.B compatible
list before the current driver. In such cases, a
reconfiguration boot is required (see
.BR boot (1M)
and
.BR kernel (1M)).
After the reconfiguration boot, device links in
.B /dev
and references to
these files may no longer be valid (see the
.B -v
flag). If a
reconfiguration boot would be required to complete the driver installation,
.B add_drv
will fail unless the
.B -f
option is specified. See
.B Example 3
in the
.B EXAMPLES
section.
.sp
.LP
With the introduction of the device policy several drivers have had their
minor permissions changed and a device policy instated. The typical network
driver should use the following device policy:
.sp
.in +2
.nf
add_drv -p 'read_priv_set=net_rawaccess\e
   write_priv_set=net_rawaccess' -m '* 666 root sys'\e
   mynet
.fi
.in -2
.sp

.sp
.LP
This document does not constitute an API.
.BR /etc/minor_perm ,
.BR /etc/name_to_major ,
.BR /etc/driver_classes ,
and
.B /devices
may
not exist or may have different contents or interpretations in a future
release. The existence of this notice does not imply that any other
documentation that lacks this notice constitutes an API.
.sp
.LP
.B /etc/minor_perm
can only be updated by
.BR add_drv (1M),
.BR rem_drv (1M)
or
.BR update_drv (1M).
.sp
.LP
In the current version of
.BR add_drv ,
the use of double quotes to
specify an alias is optional when used from the command line. However, when
using
.B add_drv
from packaging scripts, you should continue to use
double quotes to specify an alias.
.SH BUGS
.sp
.LP
Previous versions of
.B add_drv
accepted a pathname for
.IR device_driver .
This feature is no longer supported and results in
failure.
