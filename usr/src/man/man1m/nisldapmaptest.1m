'\" te
.\" Copyright (C) 2001, Sun Microsystems, Inc. All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH nisldapmaptest 1M "5 Dec 2001" "SunOS 5.11" "System Administration Commands"
.SH NAME
nisldapmaptest \- test NIS+ and LDAP mapping configuration files
.SH SYNOPSIS
.LP
.nf
\fBnisldapmaptest\fR [\fB-s\fR | \fB-r\fR | \fB-d\fR] [\fB-l\fR | \fB-t\fR \fIobject\fR] [\fB-v\fR] [\fB-i\fR]
     [\fB-o\fR] [\fB-m\fR \fIconffile\fR] [\fB-x\fR attr=val...] [ col=val]...
.fi

.SH DESCRIPTION
.sp
.LP
Use the \fBnisldapmaptest\fR utility to test NIS+ to LDAP mapping
configuration files. See \fBNIS+LDAPmapping\fR(4). The \fBnisldapmaptest\fR
utility uses much of the same internal interface as the \fBrpc.nisd\fR(1M)
does to read, add, modify, or delete LDAP data, as specified by the column
name and value operand pairs. \fBnisldapmaptest\fR does not read or modify
any of the \fBrpc.nisd\fR(1M)  database files.
.sp
.LP
See  for details on important differences between the ways that
\fBnisldapmaptest\fR and \fBrpc.nisd\fR(1M) operate on LDAP data.
.SH OPTIONS
.sp
.LP
The \fBnisldapmaptest\fR utility supports the following options:
.sp
.ne 2
.mk
.na
\fB\fB-d\fR\fR
.ad
.RS 18n
.rt
Delete data in LDAP.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-i\fR\fR
.ad
.RS 18n
.rt
Ignore failures when obtaining information from the NIS+ server. This
enables \fBnisldapmaptest\fR to work to some extent, even if the NIS+ server
is unreachable, or if the system is not a NIS+ client. However, NIS+ lookups
are still  attempted, so there may be NIS+ error messages.
.sp
In this mode, \fBnisldapmaptest\fR also tries to guess things such as  NIS+
object types and derives table column information from the mapping rules in
the configuration files.  Avoid using the \fB-i\fR option to add, modify, or
delete, until you have determined that the \fBnisldapmaptest\fR's guesses
are adequate for your needs.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-l\fR\fR
.ad
.RS 18n
.rt
Parse the configuration file into internal data   structures, and then
print out the configuration per those structures. Note that the printed data
is not in configuration file format.
.sp
Either \fB-l\fR or \fB-t\fR must be specified. If both are  present,
\fB-l\fR is ignored.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-m\fR \fIconffile\fR\fR
.ad
.RS 18n
.rt
Specify the name of the \fBNIS+LDAPmapping\fR(4) configuration file. The
default directory is \fB/var/nis\fR , and the default mapping file is
\fBNIS+LDAPmapping\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-o\fR\fR
.ad
.RS 18n
.rt
For NIS+ tables, work on the NIS+ object itself, specified by means of the
\fB-t\fR option, not on the table entries.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-r\fR\fR
.ad
.RS 18n
.rt
Replace or add data in LDAP.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-s\fR\fR
.ad
.RS 18n
.rt
Search for data in LDAP. This is the default.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-t\fR \fIobject\fR\fR
.ad
.RS 18n
.rt
Specify the NIS+ object on which to operate. If the object name is not
fully qualified, that is, it does not end in a dot, the value of the
\fBnisplusLDAPbaseDomain\fR attribute is appended.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-v\fR\fR
.ad
.RS 18n
.rt
Set the verbose flag. This flag produces extra diagnostic information.
.RE

.sp
.ne 2
.mk
.na
\fB\fB-x\fR \fBattr=val\fR...\fR
.ad
.RS 18n
.rt
Specify mapping attribute and value pairs to override those  obtained by
means of the configuration file. Although any  attributes defined on
\fBNIS+LDAPmapping\fR(4) or \fBrpc.nisd\fR(4) can be specified,  the ones
that control \fBrpc.nisd\fR(1M) operation have no effect on
\fBnisldapmaptest\fR. 
.RE

.SH OPERANDS
.sp
.LP
The following operands are supported:
.sp
.ne 2
.mk
.na
\fB\fBcol=val\fR...\fR
.ad
.RS 14n
.rt
NIS+ column and value pairs used to specify which entries should be looked
up, added, modified, or deleted. For additions and modifications, use
\fBcol=val\fR to specify the new values.
.RE

.SH EXAMPLES
.LP
\fBExample 1 \fRSearching for a User
.sp
.LP
Use the following example to search for the user \fBxyzzy\fR in the LDAP
container specified for the \fBpasswd.org_dir\fR table.

.sp
.in +2
.nf
example% \fBnisldapmaptest -t passwd.org_dir name=xyzzy\fR
.fi
.in -2
.sp

.LP
\fBExample 2 \fRListing Table Entries
.sp
.LP
Use the following example to list all entries in the container specified
for the \fBservices.org_dir\fR table.

.sp
.in +2
.nf
example% \fBnisldapmaptest -t services.org_dir\fR
.fi
.in -2
.sp

.LP
\fBExample 3 \fRListing an Object
.sp
.LP
Use the following example to list the \fBservices.org_dir\fR object itself,
as it is stored in LDAP.

.sp
.in +2
.nf
example% \fBnisldapmaptest -o -t services.org_dir\fR
.fi
.in -2
.sp

.LP
\fBExample 4 \fRModifying a Table Entry
.sp
.LP
Use the following example to modify the membership list of the group
\fBgrp\fR, in the container specified for the \fBgroup.org_dir\fR table, to
be \fBmem1\fR, \fBmem2\fR, and \fBmem3\fR.

.sp
.in +2
.nf
example% \fBnisldapmaptest -r -t group.org_dir name=grp \e
     members=mem1,mem2,mem3\fR
.fi
.in -2
.sp

.LP
\fBExample 5 \fRDeleting a Table Entry
.sp
.LP
Use the following example to delete the host called \fBbad\fR from the
container specified for the \fBhosts.org_dir\fR table.

.sp
.in +2
.nf
example% \fBnisldapmaptest -d -t hosts.org_dir name=bad\fR
.fi
.in -2
.sp

.SH EXIT STATUS
.sp
.LP
The following exit values are returned:
.sp
.ne 2
.mk
.na
\fB\fB0\fR\fR
.ad
.RS 8n
.rt
The requested operation was successful.
.RE

.sp
.ne 2
.mk
.na
\fB\fB!= 0\fR\fR
.ad
.RS 8n
.rt
An error occurred.
.RE

.SH FILES
.sp
.ne 2
.mk
.na
\fB\fB/var/nis/NIS+LDAPmapping.template\fR\fR
.ad
.sp .6
.RS 4n

.RE

.sp
.ne 2
.mk
.na
\fB\fB/etc/default/rpd.nisd\fR\fR
.ad
.sp .6
.RS 4n

.RE

.SH ATTRIBUTES
.sp
.LP
See \fBattributes\fR(5) for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWnisr
_
Interface StabilityObsolete
.TE

.SH SEE ALSO
.sp
.LP
\fBrpc.nisd\fR(1M), \fBNIS+LDAPmapping\fR(4), \fBrpc.nisd\fR(4),
\fBattributes\fR(5)
.SH NOTES
.sp
.LP
There are several differences between the ways that \fBnisldapmaptest\fR
and \fBrpc.nisd\fR operate:
.RS +4
.TP
1.
\fBnisldapmaptest\fR obtains information about NIS+ by means of the NIS+
API calls, while \fBrpc.nisd\fR looks in its internal database. Thus, if the
NIS+ server is not available, \fBnisldapmaptest\fR may be unable to
determine NIS+ object types or table column information.
.RE
.RS +4
.TP
2.
While \fBnisldapmaptest\fR can add, modify, or delete LDAP data, it does
not modify any NIS+ data.
.RE
.RS +4
.TP
3.
When operating on table entries, if \fBnisldapmaptest\fR is unable to
obtain the entry from NIS+, it composes LDAP operations using only the
supplied \fBcol=val\fR operands.  Depending on the mapping used, this can
result in extra LDAP operations, for example, attempting to obtain a
\fBDN\fR for add, modify, or delete.
.RE
.RS +4
.TP
4.
The default value for \fBnisplusLDAPbaseDomain\fR is the  system domain
name per \fBsysinfo\fR(2) in \fBnisldapmaptest\fR, but the internal notion
of the domain it serves in \fBrpc.nisd\fR. While the two usually are the
same, this is not necessarily always the case.
.RE
.RS +4
.TP
5.
When more than one NIS+ entry maps to a single LDAP entry,
\fBnisldapmaptest\fR may be unable to perform a complete update, unless you
make sure that the \fBcol=val\fR specification picks  up all relevant NIS+
entries. For example, if you have the \fBservices.org_dir\fR NIS+ entries:
.sp
.in +2
.nf
cname   name    proto   port

x       x       tcp     12345
x       y       tcp     12345
x       z       tcp     12345
.fi
.in -2

then specifying \fBcname=x\fR will pick up all three entries and create or
modify the corresponding LDAP entry to have three \fBCN\fR values: \fBx\fR,
\fBy\fR, and \fBz\fR. However, specifying \fBname=x\fR will match just the
first NIS+ entry, and create or modify the  LDAP entry to have just one
\fBCN\fR: \fBx\fR.
.RE
