'\" te
.\" Copyright (C) 2009, Sun Microsystems, Inc. All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH snoop 1M "18 Feb 2009" "SunOS 5.11" "System Administration Commands"
.SH NAME
snoop \- capture and inspect network packets
.SH SYNOPSIS
.LP
.nf
\fBsnoop\fR  [\fB-aqrCDINPSvV\fR] [\fB-t\fR [r |  a |  d]] [\fB-c\fR \fImaxcount\fR]
 [\fB-d\fR \fIdevice\fR] [\fB-i\fR \fIfilename\fR] [\fB-n\fR \fIfilename\fR] [\fB-o\fR \fIfilename\fR]
 [\fB-p\fR \fIfirst\fR [, \fIlast\fR]] [\fB-s\fR \fIsnaplen\fR] [\fB-x\fR \fIoffset\fR [, \fIlength\fR]]
 [\fIexpression\fR]
.fi

.SH DESCRIPTION
.sp
.LP
From a datalink or IP interface,
.B snoop
captures packets and displays
their contents. If the datalink or IP interface is not specified, \fBsnoop\fR
will pick a datalink to use, giving priority to datalinks that have been
plumbed for IP traffic.
.B snoop
uses the \fBpfmod\fR(7M) and
.BR bufmod (7M)
STREAMS modules to provide efficient capture of packets from
the network. Captured packets can be displayed as they are received or saved
to a file (which is \fIRFC 1761\fR-compliant) for later inspection.
.sp
.LP
.B snoop
can display packets in a single-line summary form or in verbose
multi-line forms. In summary form, with the exception of certain VLAN
packets, only the data pertaining to the highest level protocol is displayed.
If a packet has a VLAN header and its VLAN ID is non-zero, then \fBsnoop\fR
will show that the packet is VLAN tagged. For example, an
.B NFS
packet
will have only
.B NFS
information displayed. Except for VLAN information
under the condition just described, the underlying
.BR RPC ,
.BR UDP ,
.BR IP ,
and Ethernet frame information is suppressed, but can be displayed
if either of the verbose options are chosen.
.sp
.LP
In the absence of a name service, such as LDAP or NIS,
.B snoop
displays
host names as numeric IP addresses.
.sp
.LP
.B snoop
requires an interactive interface.
.SH OPTIONS
.sp
.ne 2
.mk
.na
.B -C
.ad
.sp .6
.RS 4n
List the code generated from the filter expression for either the kernel
packet filter, or \fBsnoop\fR's own filter.
.RE

.sp
.ne 2
.mk
.na
.B -D
.ad
.sp .6
.RS 4n
Display number of packets dropped during capture on the summary line.
.RE

.sp
.ne 2
.mk
.na
.B -N
.ad
.sp .6
.RS 4n
Create an
.B IP
address-to-name file from a capture file. This must be
set together with the
.B -i
option that names a capture file. The
address-to-name file has the same name as the capture file with
\fB\&.names\fR appended. This file records the \fBIP\fR address to hostname
mapping at the capture site and increases the portability of the capture
file. Generate a \fB\&.names\fR file if the capture file is to be analyzed
elsewhere. Packets are not displayed when this flag is used.
.RE

.sp
.ne 2
.mk
.na
.B -I
.I interface
.ad
.sp .6
.RS 4n
Capture IP packets from the network using the IP interface specified by
.IR interface ,
for example,
.BR lo0 .
The \fBifconfig\fR(1M) command can
be used to list available IP interfaces. The
.B -I
and
.B -d
options
are mutually exclusive.
.RE

.sp
.ne 2
.mk
.na
.B -P
.ad
.sp .6
.RS 4n
Capture packets in non-promiscuous mode. Only broadcast, multicast, or
packets addressed to the host machine will be seen.
.RE

.sp
.ne 2
.mk
.na
.B -S
.ad
.sp .6
.RS 4n
Display size of the entire link layer frame in bytes on the summary line.
.RE

.sp
.ne 2
.mk
.na
.B -V
.ad
.sp .6
.RS 4n
Verbose summary mode. This is halfway between summary mode and verbose mode
in degree of verbosity. Instead of displaying just the summary line for the
highest level protocol in a packet, it displays a summary line for each
protocol layer in the packet. For instance, for an
.B NFS
packet it will
display a line each for the
.BR ETHER ,
.BR IP ,
.BR UDP ,
.B RPC
and
.B NFS
layers. Verbose summary mode output may be easily piped through
.B grep
to extract packets of interest. For example, to view only
.B RPC
summary lines, enter the following:
.B example#
\fBsnoop -i
rpc.cap -V | grep RPC\fR
.RE

.sp
.ne 2
.mk
.na
.B -a
.ad
.sp .6
.RS 4n
Listen to packets on
.B /dev/audio
(warning: can be noisy).
.RE

.sp
.ne 2
.mk
.na
.B -c
.I maxcount
.ad
.sp .6
.RS 4n
Quit after capturing
.I maxcount
packets. Otherwise keep capturing until
there is no disk space left or until interrupted with Control-C.
.RE

.sp
.ne 2
.mk
.na
.B -d
.I datalink
.ad
.sp .6
.RS 4n
Capture link-layer packets from the network using the DLPI datalink
specified by
.IR datalink ,
for example,
.B bge0
or
.BR net0 .
The
.BR dladm (1M)
.B show-link
subcommand can be used to list available
datalinks. The
.B -d
and
.B -I
options are mutually exclusive.
.RE

.sp
.ne 2
.mk
.na
.B -i
.I filename
.ad
.sp .6
.RS 4n
Display packets previously captured in
.IR filename .
Without this option,
.B snoop
reads packets from the network interface. If a
\fIfilename\fB\&.names\fR file is present, it is automatically loaded into
the
.B "snoop IP"
address-to-name mapping table (See
.B -N
flag).
.RE

.sp
.ne 2
.mk
.na
.B -n
.I filename
.ad
.sp .6
.RS 4n
Use \fIfilename\fR as an \fBIP\fR address-to-name mapping table. This file
must have the same format as the
.B /etc/hosts
file (IP address followed
by the hostname).
.RE

.sp
.ne 2
.mk
.na
.B -o
.I filename
.ad
.sp .6
.RS 4n
Save captured packets in
.I filename
as they are captured. (This
\fIfilename\fR is referred to as the "capture file".) The format of the
capture file is RFC 1761-compliant. During packet capture, a count of the
number of packets saved in the file is displayed. If you wish just to count
packets without saving to a file, name the file
.BR /dev/null .
.RE

.sp
.ne 2
.mk
.na
.B -p
.I first
[ , \fBlast\fR ]\fR
.ad
.sp .6
.RS 4n
Select one or more packets to be displayed from a capture file. The
.I first
packet in the file is packet number 1.
.RE

.sp
.ne 2
.mk
.na
.B -q
.ad
.sp .6
.RS 4n
When capturing network packets into a file, do not display the packet count.
This can improve packet capturing performance.
.RE

.sp
.ne 2
.mk
.na
.B -r
.ad
.sp .6
.RS 4n
Do not resolve the
.B IP
address to the symbolic name. This prevents
.B snoop
from generating network traffic while capturing and displaying
packets. However, if the
.B -n
option is used, and an address is found in
the mapping file, its corresponding name will be used.
.RE

.sp
.ne 2
.mk
.na
.B -s
.I snaplen
.ad
.sp .6
.RS 4n
Truncate each packet after
.I snaplen
bytes. Usually the whole packet is
captured. This option is useful if only certain packet header information is
required. The packet truncation is done within the kernel giving better
utilization of the streams packet buffer. This means less chance of dropped
packets due to buffer overflow during periods of high traffic. It also saves
disk space when capturing large traces to a capture file. To capture only
.B IP
headers (no options) use a
.I snaplen
of 34. For
.B UDP
use
42, and for
.B TCP
use 54. You can capture
.B RPC
headers with a
.I snaplen
of 80 bytes.
.B NFS
headers can be captured in 120 bytes.
.RE

.sp
.ne 2
.mk
.na
.B -t
[ \fBr\fR | \fBa\fR | \fBd\fR ]\fR
.ad
.sp .6
.RS 4n
Time-stamp presentation. Time-stamps are accurate to within 4 microseconds.
The default is for times to be presented in
.B d
(delta) format (the time
since receiving the previous packet). Option
.B a
(absolute) gives
wall-clock time. Option
.B r
(relative) gives time relative to the first
packet displayed. This can be used with the
.B -p
option to display time
relative to any selected packet.
.RE

.sp
.ne 2
.mk
.na
.B -v
.ad
.sp .6
.RS 4n
Verbose mode. Print packet headers in lots of detail. This display consumes
many lines per packet and should be used only on selected packets.
.RE

.sp
.ne 2
.mk
.na
\fB-x\fIoffset\fR [ , \fIlength\fR]\fR
.ad
.sp .6
.RS 4n
Display packet data in hexadecimal and
.B ASCII
format. The \fIoffset\fR
and
.I length
values select a portion of the packet to be displayed. To
display the whole packet, use an
.I offset
of 0. If a
.I length
value
is not provided, the rest of the packet is displayed.
.RE

.SH OPERANDS
.sp
.ne 2
.mk
.na
.I expression
.ad
.sp .6
.RS 4n
Select packets either from the network or from a capture file. Only packets
for which the expression is true will be selected. If no expression is
provided it is assumed to be true.
.sp
Given a filter expression,
.B snoop
generates code for either the kernel
packet filter or for its own internal filter. If capturing packets with the
network interface, code for the kernel packet filter is generated. This
filter is implemented as a streams module, upstream of the buffer module. The
buffer module accumulates packets until it becomes full and passes the
packets on to
.BR snoop .
The kernel packet filter is very efficient, since
it rejects unwanted packets in the kernel before they reach the packet buffer
or
.BR snoop .
The kernel packet filter has some limitations in its
implementation; it is possible to construct filter expressions that it cannot
handle. In this event,
.B snoop
tries to split the filter and do as much
filtering in the kernel as possible. The remaining filtering is done by the
packet filter for
.BR snoop .
The
.B -C
flag can be used to view
generated code for either the packet filter for the kernel or the packet
filter for
.BR snoop .
If packets are read from a capture file using the
.B -i
option, only the packet filter for
.B snoop
is used.
.sp
A filter
.I expression
consists of a series of one or more boolean
primitives that may be combined with boolean operators (\fBAND\fR,
.BR OR ,
and
.BR NOT ).
Normal precedence rules for boolean operators apply. Order of
evaluation of these operators may be controlled with parentheses. Since
parentheses and other filter expression characters are known to the shell, it
is often necessary to enclose the filter expression in quotes. Refer to for
information about setting up more efficient filters.
.sp
The primitives are:
.sp
.ne 2
.mk
.na
.B host
.I hostname
.ad
.sp .6
.RS 4n
True if the source or destination address is that of
.BR hostname .
The
.I hostname
argument may be a literal address. The keyword
.B host
may
be omitted if the name does not conflict with the name of another expression
primitive. For example,
.B pinky
selects packets transmitted to or
received from the host
.BR pinky ,
whereas
.B "pinky and dinky"
selects
packets exchanged between hosts
.BR "pinky AND dinky" .
.sp
The type of address used depends on the primitive which precedes the
.B host
primitive. The possible qualifiers are
.BR inet ,
.BR inet6 ,
.BR ether ,
or none. These three primitives are discussed below. Having none
of the primitives present is equivalent to "inet host hostname or inet6 host
hostname". In other words, snoop tries to filter on all IP addresses
associated with hostname.
.RE

.sp
.ne 2
.mk
.na
.I inet
or
.IR inet6
.ad
.sp .6
.RS 4n
A qualifier that modifies the
.B host
primitive that follows. If it is
.IR inet ,
then
.B snoop
tries to filter on all IPv4 addresses returned
from a name lookup. If it is
.IR inet6 ,
.B snoop
tries to filter on all
IPv6 addresses returned from a name lookup.
.RE

.sp
.ne 2
.mk
.na
.IR ipaddr ,
.IR atalkaddr ,
or
.IR etheraddr
.ad
.sp .6
.RS 4n
Literal addresses,
.B IP
dotted, AppleTalk dotted, and Ethernet colon are
recognized. For example,
.RS +4
.TP
.ie t \(bu
.el o
"\fB172.16.40.13\fR" matches all packets with that \fBIP\fR
.RE
.RS +4
.TP
.ie t \(bu
.el o
"\fB2::9255:a00:20ff:fe73:6e35\fR" matches all packets with that IPv6
address as source or destination;
.RE
.RS +4
.TP
.ie t \(bu
.el o
"\fB65281.13\fR" matches all packets with that AppleTalk address;
.RE
.RS +4
.TP
.ie t \(bu
.el o
"\fB8:0:20:f:b1:51\fR" matches all packets with the Ethernet address as
source or destination.
.RE
An Ethernet address beginning with a letter is interpreted as a hostname. To
avoid this, prepend a zero when specifying the address. For example, if the
Ethernet address is
.BR aa:0:45:23:52:44 ,
then specify it by add a leading
zero to make it
.BR 0aa:0:45:23:52:44 .
.RE

.sp
.ne 2
.mk
.na
.B from
or
.BR src
.ad
.sp .6
.RS 4n
A qualifier that modifies the following
.BR host ,
.BR net ,
.IR ipaddr ,
.IR atalkaddr ,
.IR etheraddr ,
.B port
or
.B rpc
primitive to match
just the source address, port, or
.B RPC
reply.
.RE

.sp
.ne 2
.mk
.na
.B to
or
.BR dst
.ad
.sp .6
.RS 4n
A qualifier that modifies the following
.BR host ,
.BR net ,
.IR ipaddr ,
.IR atalkaddr ,
.IR etheraddr ,
.B port
or
.B rpc
primitive to match
just the destination address, port, or
.B RPC
call.
.RE

.sp
.ne 2
.mk
.na
.B ether
.ad
.sp .6
.RS 4n
A qualifier that modifies the following
.B host
primitive to resolve a
name to an Ethernet address. Normally,
.B IP
address matching is
performed. This option is not supported on media such as IPoIB (IP over
InfiniBand).
.RE

.sp
.ne 2
.mk
.na
.B ethertype
.I number
.ad
.sp .6
.RS 4n
True if the Ethernet type field has value
.IR number .
If
.I number
is
not 0x8100 (VLAN) and the packet is VLAN tagged, then the expression will
match the encapsulated Ethernet type.
.RE

.sp
.ne 2
.mk
.na
.BR ip ,
.BR ip6 ,
.BR arp ,
.BR rarp ,
.BR pppoed ,
.B pppoes
.ad
.sp .6
.RS 4n
True if the packet is of the appropriate ethertype.
.RE

.sp
.ne 2
.mk
.na
.B vlan
.ad
.sp .6
.RS 4n
True if the packet has
.B ethertype
VLAN and the VLAN ID is not zero.
.RE

.sp
.ne 2
.mk
.na
.B vlan-id
.I id
.ad
.sp .6
.RS 4n
True for packets of ethertype VLAN with the id
.IR id .
.RE

.sp
.ne 2
.mk
.na
.B pppoe
.ad
.sp .6
.RS 4n
True if the ethertype of the packet is either
.B pppoed
or
.BR pppoes .
.RE

.sp
.ne 2
.mk
.na
.B broadcast
.ad
.sp .6
.RS 4n
True if the packet is a broadcast packet. Equivalent to \fBether[2:4] =
0xffffffff\fR for Ethernet. This option is not supported on media such as
IPoIB (IP over InfiniBand).
.RE

.sp
.ne 2
.mk
.na
.B multicast
.ad
.sp .6
.RS 4n
True if the packet is a multicast packet. Equivalent to "\fBether[0] & 1 =
1\fR" on Ethernet. This option is not supported on media such as IPoIB (IP
over InfiniBand).
.RE

.sp
.ne 2
.mk
.na
.BR bootp ,
.B dhcp
.ad
.sp .6
.RS 4n
True if the packet is an unfragmented IPv4 UDP packet with either a source
port of
.B "BOOTPS (67)"
and a destination port of
.BR "BOOTPC (68)" ,
or a
source port of
.B "BOOTPC (68)"
and a destination of
.BR "BOOTPS (67)" .
.RE

.sp
.ne 2
.mk
.na
.B dhcp6
.ad
.sp .6
.RS 4n
True if the packet is an unfragmented IPv6 UDP packet with either a source
port of
.B DHCPV6-SERVER
(547) and a destination port of
.B DHCPV6-CLIENT
(546), or a source port of
.B DHCPV6-CLIENT
(546) and
a destination of
.B DHCPV6-SERVER
(547).
.RE

.sp
.ne 2
.mk
.na
.B apple
.ad
.sp .6
.RS 4n
True if the packet is an Apple Ethertalk packet. Equivalent to "\fBethertype
0x809b or ethertype 0x80f3\fR".
.RE

.sp
.ne 2
.mk
.na
.B decnet
.ad
.sp .6
.RS 4n
True if the packet is a
.B DECNET
packet.
.RE

.sp
.ne 2
.mk
.na
.B greater
.I length
.ad
.sp .6
.RS 4n
True if the packet is longer than
.IR length .
.RE

.sp
.ne 2
.mk
.na
.B less
.I length
.ad
.sp .6
.RS 4n
True if the packet is shorter than
.IR length .
.RE

.sp
.ne 2
.mk
.na
.BR udp ,
.BR tcp ,
.BR icmp ,
.BR icmp6 ,
.BR ah ,
.B esp
.ad
.sp .6
.RS 4n
True if the
.B IP
or IPv6 protocol is of the appropriate type.
.RE

.sp
.ne 2
.mk
.na
.B net
.I net
.ad
.sp .6
.RS 4n
True if either the
.B IP
source or destination address has a network
number of
.IR net .
The \fBfrom\fR or \fBto\fR qualifier may be used to
select packets for which the network number occurs only in the source or
destination address.
.RE

.sp
.ne 2
.mk
.na
.B port
.I port
.ad
.sp .6
.RS 4n
True if either the source or destination port is
.IR port .
The
.IR port
may be either a port number or name from
.BR /etc/services .
The
.BR tcp
or
.B udp
primitives may be used to select
.B TCP
or
.B UDP
ports
only. The \fBfrom\fR or \fBto\fR qualifier may be used to select packets for
which the
.I port
occurs only as the source or destination.
.RE

.sp
.ne 2
.mk
.na
.B rpc
.I prog
[ , \fIvers\fR [ , \fBproc\fR ] ]\fR
.ad
.sp .6
.RS 4n
True if the packet is an
.B RPC
call or reply packet for the protocol
identified by
.IR prog .
The
.I prog
may be either the name of an
.B RPC
protocol from
.B /etc/rpc
or a program number. The
.I vers
and
.B proc
may be used to further qualify the program
.I version
and
.I procedure
number, for example,
.B "rpc nfs,2,0"
selects all calls and
replies for the
.B NFS
null procedure. The
.B to
or \fBfrom\fR
qualifier may be used to select either call or reply packets only.
.RE

.sp
.ne 2
.mk
.na
.B zone
.I zoneid
.ad
.sp .6
.RS 4n
True if
.I zoneid
matches either the source or destination
.IR zoneid
of a packet received on an
.B ipnet
device.
.RE

.sp
.ne 2
.mk
.na
.B ldap
.ad
.sp .6
.RS 4n
True if the packet is an
.B LDAP
packet on port 389.
.RE

.sp
.ne 2
.mk
.na
.B gateway
.I host
.ad
.sp .6
.RS 4n
True if the packet used
.I host
as a gateway, that is, the Ethernet
source or destination address was for
.I host
but not the
.BR IP
address. Equivalent to "\fBether host\fR \fIhost\fR and not host
\fIhost\fR".
.RE

.sp
.ne 2
.mk
.na
.B nofrag
.ad
.sp .6
.RS 4n
True if the packet is unfragmented or is the first in a series of
.BR IP
fragments. Equivalent to
.BR "ip[6:2] & 0x1fff = 0" .
.RE

.sp
.ne 2
.mk
.na
.I "expr relop" expr
.ad
.sp .6
.RS 4n
True if the relation holds, where
.I relop
is one of
.BR > ,
.BR < ,
.BR >= ,
.BR <= ,
.BR = ,
.BR != ,
and
.B expr
is an arithmetic
expression composed of numbers, packet field selectors, the \fBlength\fR
primitive, and arithmetic operators
.BR + ,
.BR \(mi ,
.BR * ,
.BR & ,
.BR | ,
.BR ^ ,
and
.BR % .
The arithmetic operators within
.B expr
are
evaluated before the relational operator and normal precedence rules apply
between the arithmetic operators, such as multiplication before addition.
Parentheses may be used to control the order of evaluation. To use the value
of a field in the packet use the following syntax:
.sp
.in +2
.nf
\fIbase\fR[\fBexpr\fR [\fB:\fR \fBsize\fR ] ]
.fi
.in -2
.sp

where
.B expr
evaluates the value of an offset into the packet from a
.I base
offset which may be
.BR ether ,
.BR ip ,
.BR ip6 ,
.BR udp ,
.BR tcp ,
or
.BR icmp .
The
.B size
value specifies the size of the
field. If not given, 1 is assumed. Other legal values are 2 and 4. For
example,
.sp
.in +2
.nf
ether[0] & 1 = 1
.fi
.in -2

is equivalent to
.BR multicast
.sp
.in +2
.nf
ether[2:4] = 0xffffffff
.fi
.in -2

is equivalent to
.BR broadcast .
.sp
.in +2
.nf
ip[ip[0] & 0xf * 4 : 2] = 2049
.fi
.in -2

is equivalent to \fBudp[0:2] = 2049\fR
.sp
.in +2
.nf
ip[0] & 0xf > 5
.fi
.in -2

selects
.B IP
packets with options.
.sp
.in +2
.nf
ip[6:2] & 0x1fff = 0
.fi
.in -2

eliminates
.B IP
fragments.
.sp
.in +2
.nf
udp and ip[6:2]&0x1fff = 0 and udp[6:2] != 0
.fi
.in -2

finds all packets with
.B UDP
checksums.
.sp
The
.B length
primitive may be used to obtain the length of the packet.
For instance "\fBlength > 60\fR" is equivalent to "\fBgreater 60\fR", and
"\fBether[length \(mi 1]\fR" obtains the value of the last byte in a
packet.
.RE

.sp
.ne 2
.mk
.na
.B and
.ad
.sp .6
.RS 4n
Perform a logical
.B AND
operation between two boolean values. The
.B AND
operation is implied by the juxtaposition of two boolean
expressions, for example "\fBdinky pinky\fR" is the same as "\fBdinky AND
pinky\fR".
.RE

.sp
.ne 2
.mk
.na
.B or
or
.BR ,
.ad
.sp .6
.RS 4n
Perform a logical
.B OR
operation between two boolean values. A comma may
be used instead, for example, "\fBdinky,pinky\fR" is the same as "\fBdinky OR
pinky\fR".
.RE

.sp
.ne 2
.mk
.na
.B not
or
.BR !
.ad
.sp .6
.RS 4n
Perform a logical
.B NOT
operation on the following boolean value. This
operator is evaluated before
.B AND
or OR.
.RE

.sp
.ne 2
.mk
.na
.B slp
.ad
.sp .6
.RS 4n
True if the packet is an
.B SLP
packet.
.RE

.sp
.ne 2
.mk
.na
.B sctp
.ad
.sp .6
.RS 4n
True if the packet is an
.B SCTP
packet.
.RE

.sp
.ne 2
.mk
.na
.B ospf
.ad
.sp .6
.RS 4n
True if the packet is an
.B OSPF
packet.
.RE

.RE

.SH EXAMPLES
.LP
.B Example 1
Using the
.B snoop
Command
.sp
.LP
Capture all packets and display them as they are received:

.sp
.in +2
.nf
example# \fBsnoop\fR
.fi
.in -2
.sp

.sp
.LP
Capture packets with host
.B funky
as either the source or destination
and display them as they are received:

.sp
.in +2
.nf
example# \fBsnoop funky\fR
.fi
.in -2
.sp

.sp
.LP
Capture packets between \fBfunky\fR and \fBpinky\fR and save them to a file.
Then inspect the packets using times (in seconds) relative to the first
captured packet:

.sp
.in +2
.nf
example# \fBsnoop -o cap funky pinky\fR
example# \fBsnoop -i cap -t r | more\fR
.fi
.in -2
.sp

.sp
.LP
To look at selected packets in another capture file:

.sp
.in +2
.nf
example# \fBsnoop -i pkts -p 99,108\fR
 99   0.0027   boutique -> sunroof     NFS C GETATTR FH=8E6
100   0.0046   sunroof -> boutique     NFS R GETATTR OK
101   0.0080   boutique -> sunroof NFS C RENAME FH=8E6C MTra00192 to .nfs08
102   0.0102   marmot -> viper        NFS C LOOKUP FH=561E screen.r.13.i386
103   0.0072   viper -> marmot       NFS R LOOKUP No such file or directory
104   0.0085   bugbomb -> sunroof    RLOGIN C PORT=1023 h
105   0.0005   kandinsky -> sparky    RSTAT C Get Statistics
106   0.0004   beeblebrox -> sunroof  NFS C GETATTR FH=0307
107   0.0021   sparky -> kandinsky    RSTAT R
108   0.0073   office -> jeremiah      NFS C READ FH=2584 at 40960 for 8192
.fi
.in -2
.sp

.sp
.LP
To look at packet 101 in more detail:

.sp
.in +2
.nf
example# \fBsnoop -i pkts -v -p101\fR
ETHER:  ----- Ether Header -----
ETHER:
ETHER:  Packet 101 arrived at 16:09:53.59
ETHER:  Packet size = 210 bytes
ETHER:  Destination = 8:0:20:1:3d:94, Sun
ETHER:  Source      = 8:0:69:1:5f:e,  Silicon Graphics
ETHER:  Ethertype = 0800 (IP)
ETHER:
IP:   ----- IP Header -----
IP:
IP:   Version = 4, header length = 20 bytes
IP:   Type of service = 00
IP:         ..0. .... = routine
IP:         ...0 .... = normal delay
IP:         .... 0... = normal throughput
IP:         .... .0.. = normal reliability
IP:   Total length = 196 bytes
IP:   Identification 19846
IP:   Flags = 0X
IP:   .0.. .... = may fragment
IP:   ..0. .... = more fragments
IP:   Fragment offset = 0 bytes
IP:   Time to live = 255 seconds/hops
IP:   Protocol = 17 (UDP)
IP:   Header checksum = 18DC
IP:   Source address = 172.16.40.222, boutique
IP:   Destination address = 172.16.40.200, sunroof
IP:
UDP:  ----- UDP Header -----
UDP:
UDP:  Source port = 1023
UDP:  Destination port = 2049 (Sun RPC)
UDP:  Length = 176
UDP:  Checksum = 0
UDP:
RPC:  ----- SUN RPC Header -----
RPC:
RPC:  Transaction id = 665905
RPC:  Type = 0 (Call)
RPC:  RPC version = 2
RPC:  Program = 100003 (NFS), version = 2, procedure = 1
RPC:  Credentials: Flavor = 1 (Unix), len = 32 bytes
RPC:     Time = 06-Mar-90 07:26:58
RPC:     Hostname = boutique
RPC:     Uid = 0, Gid = 1
RPC:     Groups = 1
RPC:  Verifier   : Flavor = 0 (None), len = 0 bytes
RPC:
NFS:  ----- SUN NFS -----
NFS:
NFS:  Proc = 11 (Rename)
NFS:  File handle = 000016430000000100080000305A1C47
NFS:                597A0000000800002046314AFC450000
NFS:  File name = MTra00192
NFS:  File handle = 000016430000000100080000305A1C47
NFS:                597A0000000800002046314AFC450000
NFS:  File name = .nfs08
NFS:
.fi
.in -2
.sp

.sp
.LP
To view just the
.B NFS
packets between
.B sunroof
and
.BR boutique :

.sp
.in +2
.nf
example# \fBsnoop -i pkts rpc nfs and sunroof and boutique\fR
1   0.0000   boutique -> sunroof    NFS C GETATTR FH=8E6C
2   0.0046    sunroof -> boutique   NFS R GETATTR OK
3   0.0080   boutique -> sunroof   NFS C RENAME FH=8E6C MTra00192 to .nfs08
.fi
.in -2
.sp

.sp
.LP
To save these packets to a new capture file:

.sp
.in +2
.nf
example# \fBsnoop -i pkts -o pkts.nfs rpc nfs sunroof boutique\fR
.fi
.in -2
.sp

.sp
.LP
To view encapsulated packets, there will be an indicator of encapsulation:

.sp
.in +2
.nf
example# \fBsnoop ip-in-ip\fR
sunroof -> boutique ICMP Echo request    (1 encap)
.fi
.in -2
.sp

.sp
.LP
If -V is used on an encapsulated packet:

.sp
.in +2
.nf
example# \fBsnoop -V ip-in-ip\fR
sunroof -> boutique  ETHER Type=0800 (IP), size = 118 bytes
sunroof -> boutique  IP D=172.16.40.222 S=172.16.40.200 LEN=104, ID=27497
sunroof -> boutique  IP  D=10.1.1.2 S=10.1.1.1 LEN=84, ID=27497
sunroof -> boutique  ICMP Echo request
.fi
.in -2
.sp

.LP
.B Example 2
Setting Up A More Efficient Filter
.sp
.LP
To set up a more efficient filter, the following filters should be used
toward the end of the expression, so that the first part of the expression
can be set up in the kernel:
.BR greater ,
.BR less ,
.BR port ,
.BR rpc ,
.BR nofrag ,
and
.BR relop .
The presence of
.B OR
makes it
difficult to split the filtering when using these primitives that cannot be
set in the kernel. Instead, use parentheses to enforce the primitives that
should be
.BR OR 'd.

.sp
.LP
To capture packets between \fBfunky\fR and \fBpinky\fR of type
.B tcp
or
.B udp
on
.B port
80:

.sp
.in +2
.nf
example# \fBsnoop funky and pinky and port 80 and tcp or udp\fR
.fi
.in -2
.sp

.sp
.LP
Since the primitive
.B port
cannot be handled by the kernel filter, and
there is also an
.B OR
in the expression, a more efficient way to filter
is to move the
.B OR
to the end of the expression and to use parentheses
to enforce the
.B OR
between
.B tcp
and
.BR udp :

.sp
.in +2
.nf
example# \fBsnoop funky and pinky and (tcp or udp) and port 80\fR
.fi
.in -2
.sp

.SH EXIT STATUS
.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 5n
.rt
Successful completion.
.RE

.sp
.ne 2
.mk
.na
.B 1
.ad
.RS 5n
.rt
An error occurred.
.RE

.SH FILES
.sp
.ne 2
.mk
.na
.B /dev/audio
.ad
.RS 17n
.rt
Symbolic link to the system's primary audio device.
.RE

.sp
.ne 2
.mk
.na
.B /dev/null
.ad
.RS 17n
.rt
The null file.
.RE

.sp
.ne 2
.mk
.na
.B /etc/hosts
.ad
.RS 17n
.rt
Host name database.
.RE

.sp
.ne 2
.mk
.na
.B /etc/rpc
.ad
.RS 17n
.rt
RPC program number data base.
.RE

.sp
.ne 2
.mk
.na
.B /etc/services
.ad
.RS 17n
.rt
Internet services and aliases.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWrcmdc
.TE

.SH SEE ALSO
.sp
.LP
.BR dladm (1M),
.BR ifconfig (1M),
.BR netstat (1M),
.BR hosts (4),
.BR rpc (4),
.BR services (4),
.BR attributes (5),
.BR audio (7I),
.BR ipnet (7D),
.BR bufmod (7M),
.BR dlpi (7P),
.BR pfmod (7M)
.sp
.LP
Callaghan, B. and Gilligan, R. \fIRFC 1761, Snoop Version 2 Packet Capture
File Format\fR. Network Working Group. February 1995.
.SH WARNINGS
.sp
.LP
The processing overhead is much higher for real-time packet interpretation.
Consequently, the packet drop count may be higher. For more reliable capture,
output raw packets to a file using the
.B -o
option and analyze the
packets offline.
.sp
.LP
Unfiltered packet capture imposes a heavy processing load on the host
computer, particularly if the captured packets are interpreted real-time.
This processing load further increases if verbose options are used. Since
heavy use of
.B snoop
may deny computing resources to other processes, it
should not be used on production servers. Heavy use of
.B snoop
should be
restricted to a dedicated computer.
.sp
.LP
.B snoop
does not reassemble
.B IP
fragments. Interpretation of higher
level protocol halts at the end of the first
.B IP
fragment.
.sp
.LP
.B snoop
may generate extra packets as a side-effect of its use. For
.RB "example it may use a network name service (NIS or NIS+) to convert" " IP"
addresses to host names for display. Capturing into a file for later display
can be used to postpone the address-to-name mapping until after the capture
session is complete. Capturing into an NFS-mounted file may also generate
extra packets.
.sp
.LP
Setting the
.B snaplen
(\fB-s\fR option) to small values may remove
header information that is needed to interpret higher level protocols. The
exact cutoff value depends on the network and protocols being used. For
.B NFS
Version 2 traffic using
.B UDP
on 10 Mb/s Ethernet, do not set
.B snaplen
less than 150 bytes. For
.B NFS
Version 3 traffic using
.B TCP
on 100 Mb/s Ethernet,
.B snaplen
should be 250 bytes or more.
.sp
.LP
.B snoop
requires information from an
.B RPC
request to fully
interpret an
.B RPC
reply. If an
.B RPC
reply in a capture file or
.RB "packet range does not have a request preceding it, then only the" " RPC"
reply header will be displayed.
