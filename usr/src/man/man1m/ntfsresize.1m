'\" te
.\" Portions Copyright (c) 2009, Sun Microsystems, Inc. All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" Copyright (c) 2002-2006 Szabolcs Szakacsits
.\" Copyright (c) 2002-2005 Anton Altaparmakov
.\" Copyright (c) 2002-2003 Richard Russon
.\" Copyright (c) 2007 Yura Pakhuchiy
.\" This program is free software; you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation ; either version 2 of the License, or (at your option)
.\" any later version.
.\"
.\" This program is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License along with this
.\" program (in the main directory of the Linux-NTFS distribution in the file COPYING);
.\" if not, write to the Free Software Foundation, Inc.,
.\" 59 Temple Place, Suite 330, Boston, MA 11-1307 USA
.TH ntfsresize 1M "21 May 2009" "SunOS 5.11" "System Administration Commands"
.SH NAME
ntfsresize \- resize an NTFS file system without data loss
.SH SYNOPSIS
.LP
.nf
\fBntfsresize\fR  [\fIoptions\fR] \fB--info\fR \fIdevice\fR
.fi

.LP
.nf
\fBntfsresize\fR  [\fIoptions\fR] [\fB--size\fR \fIsize\fR[k|M|G]] \fIdevice\fR
.fi

.SH DESCRIPTION
.sp
.LP
The
.B ntfsresize
program safely resizes Windows XP, Windows Server 2003,
Windows 2000, Windows NT4 and Longhorn NTFS filesystems without data loss. All
NTFS versions used by 32-bit and 64-bit Windows "operating systems" are
supported. Defragmentation is not required prior to resizing, because
.B ntfsresize
can relocate any data if needed, without risking data
integrity.
.sp
.LP
.B ntfsresize
can be used to shrink or enlarge any NTFS file system located
on an unmounted device (usually a disk partition). The new file system will have
a size that you specify. The size parameter can have one of the optional
modifiers
.BR k ,
.BR M ,
.BR G ,
denoting, respectively, kilobytes,
megabytes, or gigabytes.
.B ntfsresize
conforms to the SI, ATA, an IEEE
standards and the disk manufacturers by supporting
.BR k=10 ^3,
.BR M=10 ^6
and
.BR G=10 ^9.
.sp
.LP
If both
.BR ---info " and "
.B ---size
options are omitted then the NTFS file
system will be enlarged to the underlying device size.
.sp
.LP
To resize a file system on a partition, you must resize both the file system
and the partition, by editing the partition table on the disk. Similarly to
other command-line file system resizers,
.B ntfsresize
does not manipulate
the size of the partitions. To do that you must use a disk  partitioning tool,
such as
.BR fdisk (1M).
Alternatively, you could use one of the many user
friendly partitioners that uses
.B ntfsresize
internally. Such partitioners
include, among others, Mandriva's DiskDrake, QTParted, SUSE/Novell's YaST
Partitioner, IBM's EVMS, GParted, or Debian/Ubuntu's Partman.
.sp
.LP
Back up your data and your partition table before using any partitioning tool.
For an NTFS file system, you can use
.BR ntfsclone (1M)
as a means of backup.
.sp
.LP
To shrink an NTFS partition, first use
.B ntfsresize
to shrink the size of
the file system. Then use a utility such as
.BR fdisk (1M)
to shrink the size
of the partition by deleting the partition and recreating it with the smaller
size. Do not make the partition smaller than the new size of NTFS; otherwise,
you will not be able to boot from that partition. If you mistakenly made a
too-small partition, you would have to recreate the partition to be as large as
newly sized NTFS file system.
.sp
.LP
To enlarge an NTFS file system, you must first enlarge the size of the
underlying partition. You can use
.BR fdisk (1M)
to delete the partition and
recreate it with a larger size. Make sure the newly sized partition does not
overlap with any other partition. Then use
.B ntfsresize
to enlarge the file
system.
.sp
.LP
When recreating a partition, make sure you create it at the same starting
sector and with the same partition type as was used in the partition you are
replacing. Otherwise, you will not be able to access your file system. Use the
.B fdisk u
command to switch from the default cylinder unit to the reliable
sector unit. Also, if the bootable flag was set in the old partition, make sure
to set it in the recreated partiton. Otherwise, you might not be able to boot
from the new partition.
.SH EXTENDED DESCRIPTION
.sp
.LP
There are a handful of very rarely met restrictions in the use of
.BR ntfsresize .
An example of such a restriction occurs with a file system
stored on a disk having unknown bad sectors. Relocation of the first
.B MFT
extent and resizing into the middle of a
.B $MFTMirr
extent  are not
supported. These cases are detected and resizing is restricted to a safe size
or
the closest safe size is displayed.
.sp
.LP
Upon completion of a resizing,
.B ntfsresize
schedules an NTFS consistency
check. In Windows, this check is performed by
.BR chkdsk .
Upon the first
subsequent reboot into Windows, you will note
.B chkdsk
running in a blue
background. This is normal. Windows might force a quick reboot after the
consistency check. Depending on your hardware configuration, Windows might
alert
you to a systems setting change and recommend or require a reboot. Acknowledge
the message and reboot a second time.
.SH OPTIONS
.sp
.LP
Supported options are listed below. Most options have both single-letter and
full-name forms. Multiple single-letter options that do not take an argument
can
be combined. For example,
.B -fv
is the equivalent of
.BR "-f -v" .
A
full-name option can be abbreviated to a unique prefix of its name.
.sp
.ne 2
.mk
.na
.BR -b ,
.B --bad-sectors
.ad
.sp .6
.RS 4n
By default,
.B ntfsresize
exits upon encountering bad sectors. This option
allows the utility to proceed in spite of such sectors.
.sp
Prior using this option, it is strongly recommended that you use
.BR ntfsclone (1M)
with the
.B --rescue
option to make a backup, then, in
Windows, run
.BR "chkdsk /f /r volume" :
from the command line. If the disk
guarantee displays as valid, then replace it, as it is defective. Note that no
software can repair bad sector errors. The most that can be done is to work
around these defects.
.sp
This option has no effect if a disk has no bad sectors.
.RE

.sp
.ne 2
.mk
.na
.BR -f ,
.B --force
.ad
.sp .6
.RS 4n
.B ntfsresize
always marks a file system for consistency check before a real
(not using
.BR --no-action )
resize operation and it leaves that way for extra
safety. Thus, if an NTFS file system was marked by
.BR ntfsresize ,
it is safe
to use this option. You must use this option, if you need to resize several
times without booting into Windows between each resizing step.
.RE

.sp
.ne 2
.mk
.na
.BR -h ,
.B --help
.ad
.sp .6
.RS 4n
Display usage information and exit.
.RE

.sp
.ne 2
.mk
.na
.BR -i ,
.B --info
.ad
.sp .6
.RS 4n
Used when you want to shrink a file system. Causes
.B ntfsresize
to
determine the smallest shrunken file system size supported. Most of the time
the
smallest size is the space already used on the file system.
.B ntfsresize
does not shrink a file system to a smaller size than what is returned by this
option. Depending on several factors, it might be unable to shrink to this
theoretical size. Although the integrity of your data should be never at risk,
it is nevertheless strongly recommended to make a test run by using the
.B --no-action
option before actual resizing.
.sp
Based on testing, the smallest attainable size is approximately space used in
the file system plus 20-200 MB. Note also that Windows might need an additional
50-100 MB to boot safely.
.sp
This option never causes any changes to the file system; the partition is
opened read-only.
.RE

.sp
.ne 2
.mk
.na
.BR -n ,
.B --no-action
.ad
.sp .6
.RS 4n
Use this option to make a test run before doing the resize operation. Volume
will be opened read-only and
.B ntfsresize
displays what it would do if it
were to resize the file system. Proceed with the actual resizing only if the
test run passed.
.RE

.sp
.ne 2
.mk
.na
.BR -P ,
.B --no-progress-bar
.ad
.sp .6
.RS 4n
Do not display progress bars during
.B ntfsresize
operation.
.RE

.sp
.ne 2
.mk
.na
.BR -s ,
\fB--size\fR \fIsize\fR[k|M|G]]\fR
.ad
.sp .6
.RS 4n
Resize file system to
.I size
bytes. The new file system will have a size
that you specify. The size parameter can have one of the optional modifiers
.BR k ,
.BR M ,
.BR G ,
denoting, respectively, kilobytes, megabytes, or
gigabytes.
.B ntfsresize
conforms to the SI, ATA, an IEEE standards and the
disk manufacturers by supporting
.BR k=10 ^3,
\fBM=10\fR^6 and \fBG=10\fR^9.
Before performing an actual resizing, run
.B ntfsresize
with the
.B --no-action
option, along with this option, first.
.RE

.sp
.ne 2
.mk
.na
.BR -v ,
.B --verbose
.ad
.sp .6
.RS 4n
Display copious output.
.RE

.sp
.ne 2
.mk
.na
.BR -V ,
.B --version
.ad
.sp .6
.RS 4n
Display the version number of
.BR ntfsresize .
.RE

.SH EXIT STATUS
.sp
.LP
Display zero on success, non-zero otherwise.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWntfsprogs
_
Interface StabilityUncommitted
.TE

.SH SEE ALSO
.sp
.LP
.BR fdisk (1M),
.BR ntfsclone (1M),
.BR parted (1M),
.BR attributes (5)
.sp
.LP
http://wiki.linux-ntfs.org
.SH NOTES
.sp
.LP
In Linux version 2.6, with partitions that have been manipulated by
.BR parted (1M),
use of
.B ntfsresize
preceded corruption of partition
tables, which resulted in unbootable Windows systems. This occurred even if the
NTFS file system was consistent. This problem is independent of NTFS and, thus,
.BR ntfsresize .
Moreover,
.B ntfsresize
never touches the partition table.
Under the conditions just described, you can, in the BIOS, change \fBDisk Access Mode\fR to \fBLBA\fR to regain the ability to boot. For further discussion of
this condition see the
.B ntfsresize
FAQ at:
.BR http://mlf.linux.rulez.org/mlf/ezaz/ntfsresize.html .
.SH AUTHORS
.sp
.LP
.B ntfsresize
was written by Szabolcs Szakacsits, with  contributions from
Anton Altaparmakov and Richard Russon.
