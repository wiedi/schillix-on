'\" te
.\" This manual page is derived from documentation obtained from Red Hat.
.\" Portions Copyright (c) 2009, Sun Microsystems, Inc. All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH virsh 1M "9 Jul 2009" "SunOS 5.11" "System Administration Commands"
.SH NAME
virsh \- management user interface for guest domains
.SH SYNOPSIS
.LP
.nf
\fBvirsh\fR \fIsubcommand\fR [\fIarguments\fR]
.fi

.SH DESCRIPTION
.sp
.LP
The
.B virsh
command provides the main interface for command and control
of both xVM and guest domains. Users should use
.B virsh
wherever
possible, as it provides a generic and stable interface to controlling
virtualized operating systems. Some xVM operations are not yet implemented
by
.BR virsh .
In those cases, the legacy utility
.BR xm (1M)
can be used
for detailed control.
.sp
.LP
.B virsh
can be used to administer both transient and managed guests. A
managed guest has a persistent configuration which is maintained across
multiple invocations of the guest. The configuration of a transient guest is
discarded when the guest shuts down.
.sp
.LP
With minor exceptions, the basic form of a
.B virsh
command is:
.sp
.in +2
.nf
# \fBvirsh \fIsubcommand\fR \fIdomain-id\fR | \fIname\fR | \fIuuid\fR [\fIoptions\fR]\fR
.fi
.in -2
.sp

.sp
.LP
The components of a
.B virsh
command are described as follows:
.sp
.ne 2
.mk
.na
.I subcommand
.ad
.sp .6
.RS 4n
One of the subcommands described below.
.RE

.sp
.ne 2
.mk
.na
.I domain-id
|
.I name
|
.I uuid
.ad
.sp .6
.RS 4n
An identifier for a specific domain.
.RE

.sp
.ne 2
.mk
.na
.I options
.ad
.sp .6
.RS 4n
A subcommand-specific option.
.RE

.sp
.LP
Exceptions to command form described above occur when a subcommand acts on
all domains, the entire machine, or directly on the Solaris xVM
hypervisor.
.sp
.LP
Most
.B virsh
subcommands require root privileges or that you assume the
Primary Administrator role.
.sp
.LP
Many
.B virsh
commands act asynchronously, so that the system prompt
returns immediately while activity proceeds in the background. Many
operations on domains, such as
.B create
and
.BR shutdown ,
can take
considerable time (30 seconds or more) to reach completion. Use the
.B list
subcommand to determine whether such an operation is complete.
.SH SUBCOMMANDS
.sp
.LP
The \fBvirsh\fR subcommands are categorized under the rubrics "generic",
"domain", and "device" and are described in the following subsections of
those names.
.SS "Generic Subcommands"
.sp
.ne 2
.mk
.na
.B capabilities
.ad
.sp .6
.RS 4n
Display an XML document describing the capabilities of the hypervisor to
which we are currently connected. This includes a section on the host
capabilities in terms of CPU features, and a description for each kind of
guest which can be virtualized. For a more complete description, see the
page under \fBlibvirt.org\fR entitled "XML Format". The XML also shows the
NUMA topology information, if available.
.RE

.sp
.ne 2
.mk
.na
\fBconnect\fR \fIURI\fR [\fB--readonly\fR]\fR
.ad
.sp .6
.RS 4n
Connect to the hypervisor. The URI parameter, if provided, specifies how to
connect to the hypervisor. Without this parameter, the connection will be to
the local hypervisor. The web page entitled "Connection URIs", under
.BR libvirt.org ,
lists the possible values, but not all types are
supported by all systems.
.sp
With the
.B --readonly
option, the connection is read-only.
.RE

.sp
.ne 2
.mk
.na
\fBhelp\fR [\fIsubcommand\fR]\fR
.ad
.sp .6
.RS 4n
With no argument,
.B help
displays a brief synopsis of all subcommands.
With a specified subcommand, displays a brief description of that
subcommand.
.RE

.sp
.ne 2
.mk
.na
.B nodeinfo
.ad
.sp .6
.RS 4n
Returns basic information about a node, such as the number and type of
CPUs, and the size of physical memory.
.RE

.sp
.ne 2
.mk
.na
.B quit
.ad
.sp .6
.RS 4n
Quit this interactive terminal.
.RE

.sp
.ne 2
.mk
.na
.B version
.ad
.sp .6
.RS 4n
Display version information about this instance of
.BR virsh .
.RE

.SS "Domain Subcommands"
.sp
.LP
The following subcommands manipulate domains directly. Most take a domain
identifier as their first argument. In the following description, the
notation
.I domain
can be either a symbolic domain name, a numeric domain
id, or a UUID, any of which uniquely identify a domain.
.sp
.ne 2
.mk
.na
\fBconsole\fR \fIdomain\fR [\fB--verbose\fR]\fR
.ad
.sp .6
.RS 4n
Connect the virtual serial console for the guest. This subcommand takes the
following option:
.sp
.ne 2
.mk
.na
.B --verbose
.ad
.sp .6
.RS 4n
Displays verbose connection and disconnection messages.
.RE

.RE

.sp
.ne 2
.mk
.na
.B create
.I file
.ad
.sp .6
.RS 4n
Create (and start) a domain based on the parameters contained in the XML
file
.IR file ,
where
.I file
is an absolute pathname. Such a file can
be created using
.B "virsh dumpxml"
subcommand.  Directly editing XML
configuration is not recommended. Use this subcommand to create a transient
guest. Use
.B define
(below) to create a managed guest.
.RE

.sp
.ne 2
.mk
.na
\fBdefine\fR \fIfile\fR [\fB--relative-path\fR \fIpath\fR]\fR
.ad
.sp .6
.RS 4n
Define (but do not start) a domain from the specified XML file. If the disk
paths in the XML file contain relative paths, the domain will be created
with those paths relative to
.IR path ,
if provided.
.RE

.sp
.ne 2
.mk
.na
.B destroy
.I domain
.ad
.sp .6
.RS 4n
Immediately terminate a domain. This is the equivalent of abruptly
terminating power to a machine. In most cases, you should use the
.B shutdown
subcommand instead.
.RE

.sp
.ne 2
.mk
.na
.B domid
.I domain_name
.ad
.sp .6
.RS 4n
Converts a domain name to a numeric domain ID.
.RE

.sp
.ne 2
.mk
.na
.B dominfo
.I domain
.ad
.sp .6
.RS 4n
Returns basic information about a domain. In
.B dominfo
output, note
that the
.B "OS Type"
field displays the type of virtualization--\fBhvm\fR
for a Hardware-assisted Virtual Machine (HVM),
.B linux
for a
paravirtualized domain--not the guest OS installed in a domain.
.sp
Note that, when the domain is running,
.B dominfo
displays dynamic data.
Memory values include any hypervisor overhead.
.RE

.sp
.ne 2
.mk
.na
.B domname
.I domain_id
.ad
.sp .6
.RS 4n
Converts a numeric domain id to a domain name.
.RE

.sp
.ne 2
.mk
.na
.B domstate
.I domain
.ad
.sp .6
.RS 4n
Returns the state of a running domain. See the description of the
.B list
subcommand.
.RE

.sp
.ne 2
.mk
.na
.B domuuid
.I domain
.ad
.sp .6
.RS 4n
Convert the specified domain name or ID to a domain UUID.
.RE

.sp
.ne 2
.mk
.na
.B dump
.I domain file
.ad
.sp .6
.RS 4n
Dump the core of the domain specified by
.I domain
to the file specified
by
.I file
for analysis.
.RE

.sp
.ne 2
.mk
.na
\fBdumpxml\fR \fIdomain\fR [\fB--relative-path\fR \fIpath\fR]\fR
.ad
.sp .6
.RS 4n
Output the configuration of the given domain in XML format. Captured in a
file, this data can be used as the argument to a subsequent \fBcreate\fR
subcommand.
.sp
By default, all paths in the XML will be absolute. Adding the
.B --relative-path
option will make all disk paths relative to
.IR path .
.RE

.sp
.ne 2
.mk
.na
.B edit
.ad
.sp .6
.RS 4n
Starts the editor specified by the value of $EDITOR and, in this editor,
opens the result of the command
.BR "virsh dumpxml" .
The subcommand then
redefines the domain with the edited XML. Editing XML is \fBnot\fR
recommended.
.RE

.sp
.ne 2
.mk
.na
.B hostname
.ad
.sp .6
.RS 4n
Returns the hostname of the control domain.
.RE

.sp
.ne 2
.mk
.na
\fBlist\fR [\fIdomain\fR.\|.\|.]\fR
.ad
.sp .6
.RS 4n
Displays information about one or more domains. If no domains are
specified, displays information about all defined domains. This subcommand
takes the following options:
.sp
.ne 2
.mk
.na
.B --active
.ad
.RS 14n
.rt
Display only running domains.
.RE

.sp
.ne 2
.mk
.na
.B --inactive
.ad
.RS 14n
.rt
Display only non-running domains.
.RE

.sp
.ne 2
.mk
.na
.B --all
.ad
.RS 14n
.rt
Display both running and non-running domains.
.RE

By default, all domains are displayed.
.sp
An example of
.B list
output is as follows:
.sp
.in +2
.nf
% \fBvirsh list\fR
Id Name                 State

----------------------------------

0 Domain-0              running
2 fedora                paused
- solaris-hvm           shut off
.fi
.in -2
.sp

.B Id
is the numeric id for a domain;
.B Name
is the symbolic name.
.B State
is the run state and can be one of the following:
.sp
.ne 2
.mk
.na
.B running
.ad
.sp .6
.RS 4n
The domain is currently running on a CPU.
.RE

.sp
.ne 2
.mk
.na
.B idle
.ad
.sp .6
.RS 4n
The domain is not currently running on any CPU. This can be because the
domain is waiting on I/O (a traditional wait state) or has gone to sleep
because of inactivity.
.RE

.sp
.ne 2
.mk
.na
.B paused
.ad
.sp .6
.RS 4n
The domain has been paused, usually as a result of the administrator
running
.BR "virsh suspend" .
When in a
.B paused
state the domain still
consumes allocated resources, such as memory, but is not eligible for
scheduling by the xVM hypervisor.
.RE

.sp
.ne 2
.mk
.na
.B in shutdown
.ad
.sp .6
.RS 4n
The domain is in process of shutting down, but has not completely shutdown
or crashed.
.RE

.sp
.ne 2
.mk
.na
.B shut off
.ad
.sp .6
.RS 4n
The domain is down.
.RE

.sp
.ne 2
.mk
.na
.B crashed
.ad
.sp .6
.RS 4n
The domain has crashed as a result of a sudden event. Normally, this state
can occur only if the domain has been configured not to restart following a
crash.
.RE

.RE

.sp
.ne 2
.mk
.na
.B migrate
[\fB--live\fR] \fIdomain dest_uri\fR
[\fImigrate_uri\fR]\fR
.ad
.sp .6
.RS 4n
Migrate the
.I domain
to the host specified by
.IR dest_uri .
The
.B --live
option attempts a live migration. The optional
.I migrate_uri
is a separate URI that specifies a transport method
between the host and destination.
.RE

.sp
.ne 2
.mk
.na
.B reboot
.I domain
.ad
.sp .6
.RS 4n
Reboot a domain. The effect of this command is identical to the effect of
running
.BR "init 6" .
The command returns immediately, however, if
successful, the entire reboot process might take a minute or more. There is
no guarantee that the subcommand will succeed and it might take an
unexpected length of time, depending on what services  in the domain must be
shutdown.
.RE

.sp
.ne 2
.mk
.na
.B restore
.I state-file
.ad
.sp .6
.RS 4n
Restores a domain from a
.B "virsh save"
state file. See the description
of the
.B save
subcommand.
.RE

.sp
.ne 2
.mk
.na
.B resume
.I domain
.ad
.sp .6
.RS 4n
Moves a domain out of the
.B paused
state, making the domain eligible
for scheduling by the underlying hypervisor.
.RE

.sp
.ne 2
.mk
.na
.B save
.I domain state-file
.ad
.sp .6
.RS 4n
Saves a running domain to a file
.IR state-file ,
so that it can later be
restored, using the
.B restore
subcommand. Once saved, the domain will no
longer be running on the system, thus the memory allocated for the domain
will be free for the use of other domains.
.sp
Note that network connections present before the
.B save
operation might
be severed, as TCP timeouts might have expired.
.RE

.sp
.ne 2
.mk
.na
.B schedinfo
.I domain
.ad
.sp .6
.RS 4n
Show or set the scheduling parameters for the specified domain name, ID or
UUID.
.B schedinfo
works only on running domains. This subcommand takes
the following options:
.sp
.ne 2
.mk
.na
.B --weight
.I number
.ad
.RS 19n
.rt
weight for credit scheduler
.RE

.sp
.ne 2
.mk
.na
.B --cap
.I number
.ad
.RS 19n
.rt
cap for credit scheduler
.RE

.sp
.ne 2
.mk
.na
.B --set
.ad
.RS 19n
.rt
Not implemented.
.RE

.RE

.sp
.ne 2
.mk
.na
.B setmaxmem
.I domain kilobytes
.ad
.sp .6
.RS 4n
Change the maximum memory allocation limit in the specified guest domain.
The
.I kilobytes
parameter is the maximum memory limit in kilobytes. If
this subcommand is applied to a running domain, the specified value applies
only after the domain has been rebooted.
.RE

.sp
.ne 2
.mk
.na
.B setmem
.I domain kilobytes
.ad
.sp .6
.RS 4n
Change the current memory allocation in the specified guest domain. The
.I kilobytes
parameter is the number of kilobytes of memory. Note that
only paravirtualized domains support changing this value by means of the
balloon driver, and it cannot exceed the maximum memory limit for the domain
\&. A Solaris paravirtualized domain can never exceed the memory value set
at boot time.
.RE

.sp
.ne 2
.mk
.na
.B setvcpus
.I domain count
.ad
.sp .6
.RS 4n
Change the number of virtual CPUs active in the specified guest domain. The
.I count
parameter is the number of virtual CPUs. Only paravirtualized
domains can dynamically change this value, and only up to the value that was
set at boot time. To change the number of CPUs in a way that persists, you
must change the value when the domain is not running.
.RE

.sp
.ne 2
.mk
.na
.B shutdown
.I domain
.ad
.sp .6
.RS 4n
Coordinates with the domain OS to perform graceful shutdown. The effect of
this command is identical to the effect of running
.BR "init 5" .
There is no
guarantee that the subcommand will succeed and it might take an unexpected
length of time, depending on what services in the domain must be shutdown.
.RE

.sp
.ne 2
.mk
.na
.B start
.I domain
.ad
.sp .6
.RS 4n
Start a (previously defined) inactive domain.
.RE

.sp
.ne 2
.mk
.na
.B suspend
.I domain
.ad
.sp .6
.RS 4n
Suspend a domain. When in this state, a domain still consumes allocated
resources, such as memory, but is not eligible for scheduling by the xVM
hypervisor.
.RE

.sp
.ne 2
.mk
.na
.B ttyconsole
.ad
.sp .6
.RS 4n
Return the pseudo-terminal used by the domain's serial console, if any.
.RE

.sp
.ne 2
.mk
.na
.B undefine
.I domain
.ad
.sp .6
.RS 4n
Undefine the configuration for the inactive domain which is specified by
either its domain name or UUID.
.RE

.sp
.ne 2
.mk
.na
.B uri
.ad
.sp .6
.RS 4n
Return the URI of the
.B libvirt
connection.
.RE

.sp
.ne 2
.mk
.na
.B vcpuinfo
.I domain
.ad
.sp .6
.RS 4n
Return basic information about the domain virtual CPUs.
.RE

.sp
.ne 2
.mk
.na
.B vcpupin
.I "domain vcpu"
.I cpulist
.ad
.sp .6
.RS 4n
Pin domain VCPUs to the host physical CPUs. The
.I domain
parameter is
the domain name, ID, or
.IR uuid .
The
.I vcpu
parameter is the VCPU
number. The
.I cpulist
parameter is a list of host CPU numbers, separated
by commas.
.sp
This subcommand applies only to running domains.
.RE

.sp
.ne 2
.mk
.na
.B vncdisplay
.I domain
.ad
.sp .6
.RS 4n
Output the IP address and port number for the VNC display.
.RE

.SS "Device Subcommands"
.sp
.LP
The following subcommands manipulate devices associated with domains. In
the following descriptions,
.I domain
can stand for either a symbolic
domain name, a numeric domain id, or a UUID, any of which uniquely identify
a domain.
.sp
.ne 2
.mk
.na
.B attach-device
.I domain file
.ad
.sp .6
.RS 4n
Attach a device defined by the given XML file (\fIfile\fR) to the specified
domain.
.RE

.sp
.ne 2
.mk
.na
.B attach-disk
.I "domain source"
.I target
.B --driver
.I driver
.B --subdriver
.I subdriver
.B --type
.I type
.B --mode
.I mode
.ad
.sp .6
.RS 4n
Attach a new or existing disk device to the domain. A disk device can be a
removable media device, such as a CD or DVD drive.
.I source
and
.I target
are paths for the files and devices.
.I driver
can be
.BR file ,
.B tap
or
.BR phy ,
depending on the kind of access.
.I type
can indicate
.B cdrom
or
.B floppy
as an alternative to the
default,
.BR disk .
.I mode
can specify either
.B readonly
or
.BR shareable .
.sp
Note that in a Solaris Hardware-assisted Virtual Machine (HVM) domU, you
must run
.BR eject (1)
in the domU to unlock a removable-media device (for
example, a CD device) before running the
.B attach-disk
subcommand.
.RE

.sp
.ne 2
.mk
.na
.B attach-interface
.I domain type
.I source
.B --target
.I target
.B --mac
.I mac
.B --script
.I script
.B --capped-bandwidth
.I bandwidth
.B --vlanid
.I vid
.ad
.sp .6
.RS 4n
Attach a new network interface to the domain.
.I type
can be either
.BR network ,
to indicate a physical network device, or
.BR bridge ,
to
indicate a bridge to a device.
.I source
indicates the source device. The
.B --target
option allows you to specify the target device in the guest.
.B --mac
allows you to specify the MAC address of the network interface.
.B --script
specifies a path to a script handling a bridge.
.B --capped-bandwidth
sets the bandwidth for this interface. Bandwidth
should be specified as an integer with one of the scale suffixes (\fBK\fR,
.BR M ,
or
.B G
for Kbps, Mbps, or Gbps, respectively). Bandwidth will
be rounded up to 1.2M, if the  input number is smaller than that.
.B --vlanid
sets the VLAN ID for this interface to
.IR vid .
.RE

.sp
.ne 2
.mk
.na
.B detach-device
.I domain file
.ad
.sp .6
.RS 4n
Detach a device defined by the given XML file (\fIfile\fR) from the
specified domain. This subcommand takes the same type of XML descriptions as
the subcommand
.BR attach-device .
.RE

.sp
.ne 2
.mk
.na
.B detach-disk
.I domain target
.ad
.sp .6
.RS 4n
Detach a disk device from a domain. The target is the device as seen from
the domain.
.RE

.sp
.ne 2
.mk
.na
.B detach-interface
.I domain type
.B --mac
.I mac
.ad
.sp .6
.RS 4n
Detach a network interface from a domain.
.I type
can be either
.BR network ,
to indicate a physical network device, or
.BR bridge ,
to
.RB "indicate a bridge to a device. It is recommended you use the" " --mac"
option to distinguish between the interfaces if more than one is present in
the domain.
.RE

.SH EXAMPLES
.LP
.B Example 1
Adding an ISO File to a Solaris Domain as a Virtual Disk
.sp
.LP
The following command adds an ISO file to a paravirtualized Solaris domain
as a virtual disk
.BR /dev/dsk/c0t1d0 .

.sp
.in +2
.nf
# \fBvirsh attach-disk --type cdrom --driver file --mode readonly \e
domu-220 /data.iso xvdb\fR
.fi
.in -2
.sp

.LP
.B Example 2
Migrating a Domain, Relying on
.B sshd
Configuration
.sp
.LP
To migrate a domain named
.B domu
to a machine named
.B foo
over
.BR ssh (1),
first create the
.B ssh
connection:

.sp
.in +2
.nf
# \fBssh -N -L 8003:localhost:8002 root@foo\fR
.fi
.in -2
.sp

.sp
.LP
\&.\|.\|.then run the \fBvirsh migrate\fR command:

.sp
.in +2
.nf
# \fBvirsh migrate --live domu xen:/// xenmigr://localhost:8003\fR
.fi
.in -2
.sp

.sp
.LP
This example assumes that TCP port forwarding is allowed by
.BR sshd_config (4).
Note that this example does not require any
modification of
.BR xend "(1M) properties."

.LP
.B Example 3
Migrating a Domain, Relying on
.B xend
Configuration
.sp
.LP
The following
.B "virsh migrate"
command requires the proper setting of
the
.B "xend xend-relocation-address"
and
.B xend-relocation-hosts-allow
properties, as described in the
.BR xend (1M)
man page.

.sp
.in +2
.nf
# \fBvirsh migrate --live domu xen:/// xenmigr://remotehost\fR
.fi
.in -2
.sp

.LP
.B Example 4
Changing a CD in a Solaris HVM Guest Domain
.sp
.LP
The following sequence of commands attaches a CD drive to a guest domain.

.sp
.LP
In the guest domain, eject the CD:

.sp
.in +2
.nf
solaris-hvm# \fBeject cdrom\fR
.fi
.in -2
.sp

.sp
.LP
Then, in the control domain, enter:

.sp
.in +2
.nf
# \fBvirsh attach-disk solaris-hvm --type cdrom --driver file \e
--mode readonly /isos/solaris.iso hdc\fR
.fi
.in -2
.sp

.sp
.LP
Finally, in the guest domain, load the CD:

.sp
.in +2
.nf
solaris-hvm# \fBrmformat\fR
.fi
.in -2
.sp

.LP
.B Example 5
Displaying
.B dominfo
Output
.sp
.LP
The following command displays information about domain 0.

.sp
.in +2
.nf
# \fBvirsh dominfo Domain-0\fR

Id:             0
Name:           Domain-0
UUID:           00000000-0000-0000-0000-000000000000
OS Type:        linux
State:          running
CPU(s):         4
CPU time:       14436.6s
Max memory:     no limit
Used memory:    3145728 kB
.fi
.in -2
.sp

.sp
.LP
In the preceding output, note that the OS Type,
.BR linux ,
indicates a
paravirtualized domain.

.LP
.B Example 6
Attaching an Interface
.sp
.LP
The following command attaches a new network interface to a guest domain,
connected to the NIC
.BR e1000g0 ,
with an auto-generated MAC address (that
is, the
.B --mac
option is omitted).

.sp
.in +2
.nf
# \fBvirsh attach-interface pv-domu bridge e1000g0\fR
.fi
.in -2
.sp

.LP
.B Example 7
Attaching a Disk
.sp
.LP
The following command attaches a disk generated by
.BR vdiskadm "(1M) to a"
paravirtualized domain.

.sp
.in +2
.nf
# \fBvirsh attach-disk domu-223 /disks/data.vdisk xvdb --driver \e\fR
\fBtap --subdriver vdisk\fR
.fi
.in -2
.sp

.SH FILES
.sp
.ne 2
.mk
.na
.B /usr/share/lib/xml/rng/libvirt
.ad
.sp .6
.RS 4n
Relax-NG schemas for the XML formats used by
.B libvirt
and
.BR virsh .
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWlibvirt
_
Interface StabilityVolatile
.TE

.SH SEE ALSO
.sp
.LP
.BR init (1M),
.BR vdiskadm (1M),
.BR xend (1M),
.BR xentop (1M),
.BR xm (1M),
.BR attributes (5),
.BR xVM (5)
.sp
.LP
The
.B ldm(1M)
man page shipped with the LDoms software.
.sp
.LP
The virtualization library (\fBlibvirt\fR) web site, at the date of this
publication, at:
.sp
.in +2
.nf
http://www.libvirt.org
.fi
.in -2
.sp

.SH AUTHORS
.RS +4
.TP
.ie t \(bu
.el o
.RB "Andrew Puch," " apuch at redhat dot com"
.RE
.RS +4
.TP
.ie t \(bu
.el o
.RB "Daniel Veillard," " veillard at redhat dot com"
.RE
.sp
.LP
The preceding authors credit the
.B xm
man page authored by:
.RS +4
.TP
.ie t \(bu
.el o
.RB "Sean Dague," " sean at dague dot net"
.RE
.RS +4
.TP
.ie t \(bu
.el o
Daniel Stekloff, \fBdsteklof at us dot ibm dot com\fR
.RE
.SH NOTES
.sp
.LP
Terminology differs between
.BR xm "(1M) and"
.BR virsh .
In particular,
the suspend and resume commands have different meanings.
.sp

.sp
.TS
tab();
cw(2.75i) cw(2.75i)
lw(2.75i) lw(2.75i)
.
virshxm
_
\fBsuspend\fR\fBpause\fR
\fBresume\fR\fBunpause\fR
\fBsave\fR\fBsuspend\fR (without output file argument)
\fBrestore\fR\fBresume\fR (without output file argument)
.TE

.sp
.LP
Terminology for the domain states differs between LDoms utilities, such as
.BR ldm ,
and
.BR virsh .
.sp

.sp
.TS
tab();
cw(2.75i) cw(2.75i)
lw(2.75i) lw(2.75i)
.
virshLDoms utility
_
\fBrunning\fR\fBactive\fR
\fBshut off\fR\fBinactive\fR
\fBin shutdown\fR\fBbound\fR
.TE

