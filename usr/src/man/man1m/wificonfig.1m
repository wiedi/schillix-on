'\" te
.\" Copyright (c) 2003, Sun Microsystems, Inc. All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH wificonfig 1M "31 Oct 2007" "SunOS 5.11" "System Administration Commands"
.SH NAME
wificonfig \- WLAN configuration
.SH SYNOPSIS
.LP
.nf
\fBwificonfig\fR [\fB-R\fR \fIroot_path\fR] [\fB-i\fR \fIinterface\fR] autoconf
     [\fIwait\fR={\fIn\fR|\fIforever\fR}]
.fi

.LP
.nf
\fBwificonfig\fR [\fB-R\fR \fIroot_path\fR] [\fB-i\fR \fIinterface\fR] connect profile
     [\fIwait\fR={\fIn\fR|\fIforever\fR}]
.fi

.LP
.nf
\fBwificonfig\fR [\fB-R\fR \fIroot_path\fR] [\fB-i\fR \fIinterface\fR] connect essid
     [\fIwait\fR={\fIn\fR|\fIforever\fR}]
.fi

.LP
.nf
\fBwificonfig\fR [\fB-R\fR \fIroot_path\fR] [\fB-i\fR \fIinterface\fR] disconnect
.fi

.LP
.nf
\fBwificonfig\fR [\fB-R\fR \fIroot_path\fR] [\fB-i\fR \fIinterface\fR] getparam
     [\fIparameter\fR [].\|.\|.]
.fi

.LP
.nf
\fBwificonfig\fR [\fB-R\fR \fIroot_path\fR] [\fB-i\fR \fIinterface\fR] setparam
     [\fIparameter\fR=\fIvalue\fR [].\|.\|.]
.fi

.LP
.nf
\fBwificonfig\fR [\fB-R\fR \fIroot_path\fR] [\fB-i\fR \fIinterface\fR] restoredef
.fi

.LP
.nf
\fBwificonfig\fR [\fB-R\fR \fIroot_path\fR] [\fB-i\fR \fIinterface\fR] scan
.fi

.LP
.nf
\fBwificonfig\fR [\fB-R\fR \fIroot_path\fR] [\fB-i\fR \fIinterface\fR] showstatus
.fi

.LP
.nf
\fBwificonfig\fR [\fB-R\fR \fIroot_path\fR] [\fB-i\fR \fIinterface\fR] setwepkey 1|2|3|4
.fi

.LP
.nf
\fBwificonfig\fR [\fB-R\fR \fIroot_path\fR] createprofile profile
     [\fIparameter\fR=\fIvalue\fR [].\|.\|.]
.fi

.LP
.nf
\fBwificonfig\fR [\fB-R\fR \fIroot_path\fR] deleteprofile \fIprofile1\fR
     [\fIprofile2\fR [].\|.\|.]
.fi

.LP
.nf
\fBwificonfig\fR [\fB-R\fR \fIroot_path\fR] showprofile [\fIprofile\fR]
.fi

.LP
.nf
\fBwificonfig\fR [\fB-R\fR \fIroot_path\fR] setprofilewepkey \fIprofile\fR 1|2|3|4
.fi

.LP
.nf
\fBwificonfig\fR [\fB-R\fR \fIroot_path\fR] getprofileparam \fIprofile\fR
     [\fIparameter\fR [].\|.\|.]
.fi

.LP
.nf
\fBwificonfig\fR [\fB-R\fR \fIroot_path\fR] setprofileparam
     [\fIparameter\fR=\fIvalue\fR [].\|.\|.]
.fi

.LP
.nf
\fBwificonfig\fR [\fB-R\fR \fIroot_path\fR] history
.fi

.LP
.nf
\fBwificonfig\fR [\fB-R\fR \fIroot_path\fR] listprefer
.fi

.LP
.nf
\fBwificonfig\fR [\fB-R\fR \fIroot_path\fR] removeprefer \fIprofile\fR
.fi

.LP
.nf
\fBwificonfig\fR [\fB-R\fR \fIroot_path\fR] setprefer \fIprofile\fR [\fIn\fR]
.fi

.SH DESCRIPTION
.sp
.LP
.B wificonfig
defines a set of subcommands and parameters to configure
.B WiFi
interfaces in the system. A driver may support all parameters or
a subset of these parameters.
.sp
.LP
.B wificonfig
uses
.BR rbac (5)
to control user access to the
interface. Only users with the "solaris.network.wifi.config" authorization
can manage a
.B WiFi
interface, while only users with
"solaris.network.wifi.wep"authorizations can configure the
.B WEP
(Wired
Equivalent Privacy) key. Other users can only read parameters from the
interface. By default, the "solaris.network.wifi.config" and
"solaris.network.wifi.wep" authorizations are not granted to any user apart
from root.
.sp
.LP
.B Wificonfig
comes in two classes of forms. The first class, shown as
the first set of synopsis combined with the optional interface name, is the
subcommands used to a manipulate a particular
.B WiFi
network interface.
The second class, shown as the second set of synopsis, is used to create and
operate on
.B WiFi
Configuration Profiles. A Configuration Profile allows
the user to pre-specify a set of parameters which can later be applied to a
.B WiFi
network interface using the
.B connect
or
.B autoconf
subcommands.
.sp
.LP
In the interface subcommands, if the interface is not specified (that is,
the
.B -i
option is missing),
.B wificonfig
selects a random interface
from the known
.B WiFi
interfaces on the system. If there are multiple
.B WiFi
network interfaces on the system, then the selection will be the
same over time as long as the number of and names of the
.BR WiFi
interfaces does not change.
.sp
.LP
A Configuration Profile can be created for a
.B WLAN
by using the
.B createprofile
subcommand (see the SUBCOMMANDS section). The actual
.B WLAN
may be present or not.
.sp
.LP
.B wificonfig
also maintains a list of Configuration Profiles called the
Preference List. This list makes automatic configuration possible. When the
.B autoconf
subcommand is used,
.B wificonfig
tries to connect to each
pre-configured
.B WLAN
according to the order of the Preference List. If
the Preference List is empty or none of the
.BR WLAN s
in the Preference
List can be found,
.B wificonfig
uses its built-in heuristics to
automatically configure the interface. (See the
.B autoconf
subcommand
.RB "for the heuristics). A few subcommands (" listprefer ", " setprefer ,
.BR removeprefer )
are defined to manipulate the Preference List.
.SH OPTIONS
.sp
.LP
The following options are supported:
.sp
.ne 2
.mk
.na
.B -i
.I interface
.ad
.RS 16n
.rt
Specifies a wireless network interface to do the configuration.
.RE

.sp
.ne 2
.mk
.na
.B -R
.I root_path
.ad
.RS 16n
.rt
Defines the full path name of a directory to use as the
.IR root_path .
This affects the location of the private files where
.B wificonfig
stores
the Configuration Profiles and
.B WEP
keys.
.RE

.SS "OPERANDS"
.sp
.LP
The following operand is supported:
.sp
.ne 2
.mk
.na
.B profile
.ad
.RS 11n
.rt
The name of a
.B WiFi
profile. It can be a string between 1 and 32
characters. However, "all", "{preference}", "{history}", "{active_profile}",
and any strings contained in brackets, such as "[foo]", are not allowed as a
profile name.
.RE

.SS "SUBCOMMANDS"
.sp
.LP
The following subcommands are supported:
.sp
.ne 2
.mk
.na
\fBautoconf\fR [wait={\fIn\fR|\fIforever\fR}]\fR
.ad
.sp .6
.RS 4n
Configures the interface automatically. The interface is configured
according to the previously saved Preference List found in
.BR /etc/inet/wifi .
.B wificonfig
first gets a list of available
\fBWLAN\fRs by scanning the radio. It then compares the list of available
\fBWLAN\fRs with the Preference List. If the Preference List is empty, or if
none of the
.BR WLAN s
in the Preference List can be found,
.B wificonfig
chooses a
.B WLAN
to connect to using the following
priorities: 1) the
.BR WLAN s
without encryption, 2) the \fBWLAN\fRs with
stronger signal strength, and 3) the
.BR WLAN s
with higher transmit
rates.
.sp
If the
.BR WLAN s
in the Preference list are available, the user can
specify the number of seconds to wait before
.B autoconf
returns using
the wait option. By default (without the wait option),
.B autoconf
returns within 10 seconds. If "\fIforever\fR" or -1 follows the wait option,
.B wificonfig
waits until the
.B NIC
is successfully connected to the
.B WLAN
specified by the profile in the Preference list.
.sp
The "solaris.network.wifi.config" authorization is required for this
subcommand.
.sp
The
.B WiFi
device driver can not guarantee to retain the state for the
connection when it is not held open. For this reason, it is strongly
recommended that the
.B plumb
subcommand for
.BR ifconfig (1M)
is done
before the
.B "wificonfig autoconf"
subcommand is given.
.RE

.sp
.ne 2
.mk
.na
\fBconnect\fR \fIprofile\fR[wait={\fIn\fR|\fIforever\fR}]\fR
.ad
.br
.na
\fBconnect\fR \fIessid\fR[wait={\fIn\fR|\fIforever\fR}]\fR
.ad
.sp .6
.RS 4n
Connects to a wireless network according to a pre-configured "profile". If
the specified Configuration Profile exists in /etc/inet/wifi, the
.B connect
subcommand uses that Configuration Profile to configure the
interface. That profile subsequently becomes the current active profile of
the interface after the
.B connect
subcommand succeeds. If no existing
Configuration Profile matches the specified name, the behavior of the
.B connect
subcommand is equivalent to the
.B restoredef
subcommand,
except that the "essid" parameter is set as "profile".
.sp
If the
.BR WLAN s
in the Preference list are available, the user can
specify the number of seconds to wait before
.B connect
returns using the
wait option. By default (without the wait option),
.B connect
trys for 10
seconds. If "\fIforever\fR" or -1 follows the wait option, \fBwificonfig\fR
tries until the
.B NIC
is successfully connected to the profile or essid
that was specified.
.sp
The
.B connect
subcommand prints one of the following lines depending on
whether or not a Configuration Profile was found for the specified name:
.sp
.in +2
.nf
Connecting to profile <name>
Connecting to essid <name>
.fi
.in -2
.sp

The "solaris.network.wifi.config" authorization is required for this
subcommand.
.sp
The
.B WiFi
device driver can not guarantee to retain the state for the
connection when it is not held open. For this reason, it is strongly
recommended that the
.B plumb
subcommand for
.BR ifconfig (1M)
is done
before the
.B "wificonfig autoconf"
subcommand is given.
.RE

.sp
.ne 2
.mk
.na
.B disconnect
.ad
.sp .6
.RS 4n
Disconnects the interface from the currently associated wireless network.
The interface associates with none of the wireless networks.
.sp
The "solaris.network.wifi.config" authorization is required for this
subcommand.
.RE

.sp
.ne 2
.mk
.na
.B getparam
[parameter [.\|.\|.]]\fR
.ad
.br
.na
.B setparam
[parameter=value [.\|.\|.]]\fR
.ad
.sp .6
.RS 4n
Gets or sets parameters in the network interface. This does not affect any
profile. The
.B setprofileparam
subcommand can be used to set and change
parameters in a profile that has already been created.
.sp
The
.B setparam
subcommand without any parameters displays the set of
parameters supported by the network interface, including whether they are
read/write or read only. The
.B getparam
subcommand without any
parameters displays all the parameters and their values.
.sp
The
.B "setparam wepkey1|wepkey2|wepkey3|wepkey4"
subcommand requires the
"solaris.network.wifi.wep" authorization. For all other parameters, the
.B setparam
subcommand requires the
"solaris.network.wifi.config"authorization. 
.sp
For example,
.sp
.in +2
.nf
$ wificonfig setparam <parameter1=value1> [parameter2=value2 [.\|.\|.]]
$ wificonfig getparam <parameter1> [parameter2 [.\|.\|.]]
.fi
.in -2
.sp

.B wificonfig
currently supports the following parameters (the values
are case insensitive).
.sp
.ne 2
.mk
.na
.I bssid
.ad
.sp .6
.RS 4n
.B MAC
address of the associated Access Point. The valid value is a hex
value of 6 bytes. The
.I bssid
can also be the
.B IBSSID
in an ad-hoc
configuration. If the network interface is not connected to any
.BR WLAN ,
then the string "none" is shown instead of a 6 byte \fBMAC\fR address.
Otherwise, the network interface is connected to a
.BR WLAN .
The default
value is "none". This parameter is read-only.
.RE

.sp
.ne 2
.mk
.na
.I essid
.ad
.sp .6
.RS 4n
Network name. The valid value is a string of up to 32 chars. If
.I essid
.RB "is an empty string, the driver automatically scans and joins the" " WLAN"
using the built-in heuristics. The default value is an empty string.
.RE

.sp
.ne 2
.mk
.na
.I bsstype
.ad
.sp .6
.RS 4n
Specifies whether the Infrastructure Mode or Ad-Hoc Mode is used. The valid
values are "ap", "bss", or "infrastructure" to join a \fBWLAN\fR through an
Access Point, that is, to use infrastructure mode. The valid values are
"ibss" or "ad-hoc" to join a peer-to-peer WLAN (also named "ad-hoc"). The
valid value of "auto" automatically switches between the two types. The
default value is "infrastructure'".
.RE

.sp
.ne 2
.mk
.na
.I createibss
.ad
.sp .6
.RS 4n
Specifies whether to create an ad-hoc network (also called an
.I IBSS
if
the
.B connect
does not result in finding the desired network. This
enables the user to start an ad-hoc network so that other hosts can join.
The valid values are YES to start a new ad-hoc
.B WLAN
(instead of
joining one) and NO to not start an ad-hoc
.BR WLAN .
The default value is
NO. The
.B NIC
always tries to join a
.B WLAN
first. If this is
successful, the setting of
.I createibss
is ignored.
.RE

.sp
.ne 2
.mk
.na
.I channel
.ad
.sp .6
.RS 4n
An integer indicating the operating frequency. This channel number varies
by regulatory domain. When the channel number is obtained by the
.B getparam
subcommand, the value indicates the actual channel the card
uses to connect to the network. The channel number is set by the
.B setparam
subcommand, and the value is only applicable when the card is
in ad-hoc mode. It indicates the operating channel of the
.IR IBSS .
The
default value is the channel number on the card.
.RE

.sp
.ne 2
.mk
.na
.I rates
.ad
.sp .6
.RS 4n
Specifies the transmission rates. The valid values (in Mbit/s) are 1, 2,
5.5, 6, 9, 11, 12, 18, 22, 24, 33, 36, 48, and 54. A
.B NIC
may support
multiple transmission rates depending on its capability. This is the only
parameter that accepts multiple values. When multiple values are supplied to
set this parameter, each value must be separated by a comma (,). See the
.B EXAMPLES
section for details. The default values are the data rates
supported by the chip.
.RE

.sp
.ne 2
.mk
.na
.I powermode
.ad
.sp .6
.RS 4n
Specifies the power management mode. The valid values are "off" to disable
power management, "mps" for maximum power saving, and "fast" for the best
combination of speed and power saving. The default value is "off".
.RE

.sp
.ne 2
.mk
.na
.I authmode
.ad
.sp .6
.RS 4n
Specifies the authorization type. The valid values are "opensystem" for an
open system, where anyone can be authenticated and "shared_key" for a Shared
Key authentication mode. The default value is "opensystem".
.RE

.sp
.ne 2
.mk
.na
.I encryption
.ad
.sp .6
.RS 4n
Specifies the encryption algorithm to be used. The valid values are "none"
for no encryption algorithm and "wep" to turn on \fBWEP\fR encryption. The
default value is "none".
.RE

.sp
.ne 2
.mk
.na
\fIwepkey1\fR|\fIwepkey2\fR|\fIwepkey3\fR|\fIwepkey4\fR
.ad
.sp .6
.RS 4n
A maximum of 4
.B WEP
keys (indexed 1 through 4) can be set in an
.BR NIC .
They are write-only parameters which can be set by the
.B setparam
subcommand, but cannot be read back by the
.B getparam
subcommand.
.B WEP
keys can either be set by the
.B setwepkey
or the
.B setparam
subcommand.
.B setparam
uses plain text but it's
scriptable. See the
.B setwepkey
subcommand for more information about
how a
.B WEP
key is encoded. Setting
.B WEP
keys requires
"solaris.network.wifi.wep"authorization.
.sp
When these subcommands are used to set a
.B WEP
key, any user on the
system can read the key from the
.BR ps (1)
output. Thus, the
.B setwepkey
subcommand is recommended for setting the
.B WEP
keys
since it does not allow
.BR ps (1)
to read the keys.
.RE

.sp
.ne 2
.mk
.na
.I wepkeyindex
.ad
.sp .6
.RS 4n
Specifies the encryption keys. The valid values are 1 to use wepkey1, 2 to
use wepkey2, 3 to use wepkey3, and 4 to use wepkey4. The default value is 1.
This subcommand is only valid when
.B WEP
is on.
.RE

.sp
.ne 2
.mk
.na
.I signal
.ad
.sp .6
.RS 4n
Specifies the strength of the received radio signal. The valid values are 0
- 15 , where 0 is the weakest signal and 15 is the strongest signal. This
parameter is read-only and indicates the radio signal strength received by
the
.BR NIC .
.RE

.sp
.ne 2
.mk
.na
.I radio
.ad
.sp .6
.RS 4n
Specifies whether the radio is turned on or off. The valid values are "on"
to turn on the radio and "off" to turn off the radio. The default value is
"on".
.RE

.RE

.sp
.ne 2
.mk
.na
.B restoredef
.ad
.sp .6
.RS 4n
Forces the
.B NIC
to restore the network interface to use the default
values for all the parameters. See the
.B getparam
and
.BR setparam
subcommands for the default values of the parameters.
.sp
The "solaris.network.wifi.config" authorization is required for this
subcommand.
.RE

.sp
.ne 2
.mk
.na
.B scan
.ad
.sp .6
.RS 4n
Scans and lists the currently available
.BR WLAN s.
.RE

.sp
.ne 2
.mk
.na
.B showstatus
.ad
.sp .6
.RS 4n
Display the basic status of a
.B WLAN
interface. If the
.B WLAN
interface is connected, the basic status includes: the name of the current
active profile, the name of the network, the
.IR bssid ,
whether the
network is encrypted or not, and the signal strength.
.RE

.sp
.ne 2
.mk
.na
.BR setwepkey " 1|2|3|4"
.ad
.sp .6
.RS 4n
Sets one of the 4
.B WEP
encryption keys.
.B WEP
keys are used to
encrypt the content of the network packets which are transmitted on air.
There are 4
.B WEP
keys in the
.B NIC
according to the 802.11
standards. The
.B setwepkey
subcommand is used to update one of the 4
keys by prompting the user for the key. The user must enter the key twice.
The input is not echoed. For example, to update setwepkey2:
.sp
.in +2
.nf
example% wificonfig -i ath0 setwepkey 2
input wepkey2: < user input here>
confirm wepkey2: < user input here>
.fi
.in -2
.sp

A
.B WEP
key can be 5 bytes or 13 bytes long. There are two ways to
enter a
.B WEP
key, by
.B ASCII
values or by hex values. If the user
enters 5 or 13 characters, it is considered the
.B ASCII
representation
of the key. If the user enters 10 or 26 characters, it is considered the hex
representation of the key. For example "1234" is equivalent to "6162636465".
If the user enters other number of characters, the subcommand fails.
.B WEP
keys are write-only; they cannot be read back via
.BR wificonfig .
.sp
The
.B WEP
keys can also be set in plain text form by the
.BR setparam
subcommand. This makes setting
.B WEP
keys scriptable (see the parameters
of
.B setparam
for the details).
.sp
The "solaris.network.wifi.wep" authorization is required for this
subcommand.
.RE

.sp
.LP
The following profile subcommands are supported:
.sp
.ne 2
.mk
.na
.B createprofile
.I profile
[parameter=value] [.\|.\|.]\fR
.ad
.sp .6
.RS 4n
Creates a Configuration Profile named
.I profile
off-line. The specified
parameters are saved as items of this Configuration Profile. The user can
specify a group of parameters. At a minimum, the
.I essid
must be
specified.
.sp
The "solaris.network.wifi.config" authorization is required for this
subcommand.
.RE

.sp
.ne 2
.mk
.na
.B deleteprofile
.I profile1
[\fIprofile2\fR [.\|.\|.]]\fR
.ad
.sp .6
.RS 4n
Deletes one or more Configuration Profiles according to the specified
names. If the specified Configuration Profile does not exist, this
subcommand fails. The wild-card "all" can be used to delete all profiles.
.sp
The "solaris.network.wifi.config" authorization is required for this
subcommand.
.RE

.sp
.ne 2
.mk
.na
\fBshowprofile\fR [\fIprofile\fR]\fR
.ad
.sp .6
.RS 4n
Displays the parameters in the Configuration Profile according to the
specified
.IR profile .
.B WEP
(wired equivalent privacy) keys are not
printed because they are write-only parameters. If no
.I profile
is
specified, all the profiles are shown.
.RE

.sp
.ne 2
.mk
.na
.B setprofilewepkey
1|2|3|4\fR
.ad
.sp .6
.RS 4n
Sets one of the 4
.B WEP
encryption keys in the specified Configuration
Profile "profile". Like the other \fBprofile\fR subcommands,
.B setprofilewepkey
does not affect the configuration of a network
interface, even if a
.B WiFi
interface is currently running with the
specified profile. In order for the modified profile to be applied to the
network interface, the
.B connect
or
.B autoconf
subcommands have to
be used after the profile has been updated.
.sp
Other than that difference, the usage of
.B setprofilewepkey
is the same
as the
.B setwepkey
subcommand. For example, to update wepkey 2 in
profile "\fIhome\fR":
.sp
.in +2
.nf
example% wificonfig setprofilewepkey home 2
input wepkey2: < user input here>
confirm wepkey2: < user input here>
.fi
.in -2
.sp

The "solaris.network.wifi.wep" authorization is required for this
subcommand.
.RE

.sp
.ne 2
.mk
.na
\fBgetprofileparam\fR \fIprofile\fR [parameter]\  [.\|.\|.]]\fR
.ad
.br
.na
\fBsetprofileparam\fR \fIprofile\fR [parameter=value]\  [.\|.\|.]]\fR
.ad
.sp .6
.RS 4n
Gets or sets parameters in the specified Configuration Profile
"\fIprofile\fR". Like the other profile subcommands, these subcommands do
not affect the configuration of a network interface, even if a
.B WiFi
interface is currently running with the specified profile. In order for
the modified profile to be applied to the network interface, the
.B connect
or
.B autoconf
subcommands have to be used after the
profile has been updated.
.sp
A
.B getprofileparam
without any parameters will display all the
parameters and their values.
.sp
"Solaris.network.wifi.wep" authorization is required when the
.B setparam
subcommand is used with the
\fIwepkey1\fR|\fIwepkey2\fR|\fIwepkey3\fR|\fIwepkey4\fR parameter. For all
other parameters, the
.B setparam
subcommand requires
"solaris.network.wifi.config"authorization.
.sp
For example, to change the settings for the "\fIhome\fR" Configuration
Profile, use:
.sp
.in +2
.nf
$ wificonfig setprofileparam home <parameter1=value1> \e
[parameter2=value2 [.\|.\|.]]
$ wificonfig getprofileparam home <parameter1> [parameter2 [.\|.\|.]]
.fi
.in -2
.sp

The set of parameters and their allowed values are the same as those
specified for the
.B setparam
subcommand.
.RE

.sp
.ne 2
.mk
.na
.B history
.ad
.sp .6
.RS 4n
Lists the
.BR WLAN s
in the History List. \fBwificonfig\fR automatically
records the
.BR WLAN "s that appear in every scanning attempt. The History"
List contains a maximum of 10 records of the most recent
.BR WLAN "s, sorted"
by time. These records can be listed by using this subcommand.
.RE

.sp
.ne 2
.mk
.na
.B listprefer
.ad
.sp .6
.RS 4n
Lists the content of the Preference List.
.RE

.sp
.ne 2
.mk
.na
.B removeprefer
.I profile
.ad
.sp .6
.RS 4n
Removes one or more profiles from the Preference List. The wild-card "all"
can be used to delete all profiles.
.sp
The "solaris.network.wifi.config" authorization is required for this
subcommand.
.RE

.sp
.ne 2
.mk
.na
\fBsetprefer\fR
.I profile
[\fIn\fR]\fR
.ad
.sp .6
.RS 4n
Sets the position of a
.I profile
in the Preference List. This may add
or change the position of a
.I profile
in the Preference List. The valid
values of "\fIn\fR" range from 1 to 10. If "\fIn\fR" is missing, the default
value of 1 is assumed. If the specified position is already occupied, the
occupying \fIprofile\fR is moved lower on the list. If "\fIn\fR" is off the
end of the list,
.I profile
is added to the end of the list. The
Preference List can also be created by using this subcommand. If the
.B autoconf
subcommand is used at a later time,
.B wificonfig
tries to
join the
.BR WLAN s
according to the Preference List.
.sp
The "solaris.network.wifi.config" authorization is required for this
subcommand.
.RE

.SH EXAMPLES
.LP
.B Example 1
Listing the Parameters Supported by a Driver
.sp
.LP
To display what parameters the
.I ath
driver supports and the read/write
modes of the parameters:

.sp
.in +2
.nf
% wificonfig -i ath0 setparam
          parameter     property
              bssid     read only
              essid     read/write
            bsstype     read/write
              rates     read/write
           authmode     read/write
         encryption     read/write
        wepkeyindex     read/write
             signal     read only

.fi
.in -2
.sp

.LP
.B Example 2
Getting and Setting Parameters on the WiFi interface
.sp
.LP
To get the current rates and signal strength from the driver:

.sp
.in +2
.nf
% wificonfig -i ath0 getparam rates signal
      ath0:
         rates = 1,2,5.5,11
         signal = 10
.fi
.in -2
.sp

.LP
.B Example 3
Managing Configuration Profiles
.sp
.LP
A Configuration Profile can be created offline and then connected to the
network with the created Configuration Profile. The following series of
commands creates the Configuration Profile, displays the contents of that
profile, and connects to the network with the Configuration Profile:

.sp
.in +2
.nf
% wificonfig createprofile myXXX essid=rover encryption=WEP \e
			wepkey1=12345
% wificonfig showprofile myXXX
  [myXXX]
  essid=rover
  encryption=WEP
  wepkey1=[secret]

% ifconfig ath0 plumb
% wificonfig -i ath0 connect myXXX
.fi
.in -2
.sp

.LP
.B Example 4
Managing the Preference List
.sp
.LP
A profile can be added to the Preference List and then used by the
.B autoconf
subcommand. The following series of commands adds a profile
named
.I myXXX
to the top of the Preference List, automatically connects
.I ath0
to the first available
.B WLAN
in the Preference List, and
removes
.I my_neighbor
from the Preference List

.sp
.in +2
.nf
% wificonfig setprefer myXXX 1
% ifconfig ath0 plumb
% wificonfig -i ath0 autoconf
% wificonfig removeprefer my_neighbor
.fi
.in -2
.sp

.LP
.B Example 5
Viewing the History List
.sp
.LP
To display the history of the
.BR WLAN s:

.sp
.in +2
.nf
% wificonfig history

    WLAN history:

  essid	        bssid	            encryption	last seen
  myXXX           00:0f:24:11:12:14  WEP     	Fri Sep 13 09:15:24 2004
  my_office_ssid  00:0f:24:11:12:15  WEP     	Fri Sep 13 13:20:04 2004
  my_neighbor1    00:0f:24:11:12:16  NONE    	Fri Sep 14 08:01:26 2004
  my_neighbor2    00:0f:24:11:12:17  WEP      Fri Sep 18 21:33:12 2004
.fi
.in -2
.sp

.LP
.B Example 6
Automatic Configuration
.sp
.LP
To configure the interface according to the previously saved Preference
List:

.sp
.in +2
.nf
% ifconfig ath0 plumb
% wificonfig -i ath0 autoconf
.fi
.in -2
.sp

.sp
.LP
If the Preference List is empty, or none of the
.BR WLAN s
listed by the
Proference List can be found,
.B wificonfig
uses the default
configuration, directs the interface to scan and join the
.B WLAN
using
the built-in heuristics specified above.

.LP
.B Example 7
Connecting To a WLAN
.sp
.LP
To search for a Configuration Profile with the name
.I myXXX
and
configure the interface accordingly:

.sp
.in +2
.nf
% ifconfig ath0 plumb
% wificonfig -i ath0 connect myXXX
.fi
.in -2
.sp

.sp
.LP
If the specified Configuration Profile does not exist,
.B wificonfig
interprets it as an
.I essid
and sets
.I ath0
to use
.IR essid
.IR myXXX ,
and no other parameters are set.

.LP
.B Example 8
Displaying the Content of a Configuration Profile
.sp
.LP
To print the parameters of the previously Configured Profile named
.IR my_home_ssid :

.sp
.in +2
.nf
% wificonfig showprofile my_home_ssid
.fi
.in -2
.sp

.LP
.B Example 9
Monitoring the link status
.sp
.LP
To monitor the link status:

.sp
.in +2
.nf
% wificonfig -i ath0 showstatus
        ath0:
                linkstatus: not connected,
.fi
.in -2
.sp

.sp
.LP
or

.sp
.in +2
.nf
        ath0:
                linkstatus: connected
                active profile: [home]
                essid: myhome
                bssid: 00:0b:0e:12:e2:02
                encryption: WEP
                signal: medium(10)
.fi
.in -2
.sp

.LP
.B Example 10
Scanning for available networks
.sp
.LP
To scan for available networks:

.sp
.in +2
.nf
% wificonfig -i ath0 scan
essid           bssid             type          encryption      signal
                                                                level
ietf64-secure   00:0b:0e:12:e2:02 access point  WEP             9
roomlinx        00:40:96:a1:13:70 access point  none            6
ietf64          00:0b:0e:13:32:00 access point  none            3
ietf64-secure   00:0b:0e:13:32:02 access point  WEP             3
ietf64          00:0b:0e:12:e2:00 access point  none            9
ietf64-secure   00:0b:0e:12:e4:c2 access point  WEP             8
ietf64          00:0b:0e:12:e4:c0 access point  none            8
roomlinx        00:40:96:a0:aa:aa access point  none            1
roomlinx        00:40:96:a0:ab:39 access point  none            8
.fi
.in -2
.sp

.SH EXIT STATUS
.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 5n
.rt
Successful operation
.RE

.sp
.ne 2
.mk
.na
.B 1
.ad
.RS 5n
.rt
Fatal Error; the operation failed. For example, a connect failed to
associate with an Access Point.
.RE

.sp
.ne 2
.mk
.na
.B 2
.ad
.RS 5n
.rt
Improper Use; help information will be printed
.RE

.sp
.ne 2
.mk
.na
.B 3
.ad
.RS 5n
.rt
Minor error
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWwlanr, SUNWwlanu
_
Interface StabilityUnstable
.TE

.SH SEE ALSO
.sp
.LP
.BR ps (1),
.BR ifconfig (1M),
.BR attributes (5),
.BR ath (7D)
