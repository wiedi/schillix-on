'\" te
.\" To view license terms, attribution, and copyright for OpenSSH, the
.\" default path is /var/sadm/pkg/SUNWsshdr/install/copyright.
.\" If the Solaris operating environment has been installed anywhere other
.\" than the default, modify the given path to access the file at the
.\" installed location.
.\" Portions Copyright (c) 2008, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.TH sshd 1M "17 Mar 2009" "SunOS 5.11" "System Administration Commands"
.SH NAME
sshd \- secure shell daemon
.SH SYNOPSIS
.LP
.nf
\fBsshd\fR [\fB-deiqtD46\fR] [\fB-b\fR \fIbits\fR] [\fB-f\fR \fIconfig_file\fR]
     [\fB-g\fR \fIlogin_grace_time\fR] [\fB-h\fR \fIhost_key_file\fR]
     [\fB-k\fR \fIkey_gen_time\fR] [\fB-p\fR \fIport\fR] [\fB-V\fR \fIclient_protocol_id\fR]
.fi

.SH DESCRIPTION
.sp
.LP
The
.B sshd
(Secure Shell daemon) is the daemon program for
.BR ssh (1).
Together these programs replace
.B rlogin
and
.BR rsh ,
and provide secure encrypted communications between two untrusted hosts over
an insecure network. The programs are intended to be as easy to install and
use as possible.
.sp
.LP
.B sshd
is the daemon that listens for connections from clients. It
forks a new daemon for each incoming connection. The forked daemons handle
key exchange, encryption, authentication, command execution, and data
exchange.
.sp
.LP
This implementation of
.B sshd
supports both SSH protocol versions 1 and
2 simultaneously. Because of security weaknesses in the v1 protocol, sites
should run only v2, if possible. In the default configuration, only protocol
v2 is enabled for the server. To enable v1 and v2 simultaneously, see the
instructions in
.BR sshd_config (4).
.sp
.LP
Support for v1 is provided to help sites with existing
.B ssh
v1 clients
and servers to transition to v2. v1 might not be supported in a future
release.
.SS "SSH Protocol Version 1"
.sp
.LP
Each host has a host-specific RSA key (normally 1024 bits) used to identify
the host. Additionally, when the daemon starts, it generates a server RSA
key (normally 768 bits). This key is normally regenerated every hour if it
has been used, and is never stored on disk.
.sp
.LP
Whenever a client connects the daemon responds with its public host and
server keys. The client compares the RSA host key against its own database
to verify that it has not changed. The client then generates a 256-bit
random number. It encrypts this random number using both the host key and
the server key, and sends the encrypted number to the server. Both sides
then use this random number as a session key which is used to encrypt all
further communications in the session. The rest of the session is encrypted
using a conventional cipher, currently Blowfish or 3DES, with 3DES being
used by default. The client selects the encryption algorithm to use from
those offered by the server.
.sp
.LP
Next, the server and the client enter an authentication dialog. The client
tries to authenticate itself using
.B \&.rhosts
authentication,
.B
\&.rhosts \c
authentication combined with RSA host authentication, RSA
challenge-response authentication, or password-based authentication.
.sp
.LP
Rhosts authentication is normally disabled because it is fundamentally
insecure, but can be enabled in the server configuration file if desired.
System security is not improved unless
.BR rshd (1M),
.BR rlogind (1M),
.BR rexecd (1M),
and
.BR rexd "(1M) are disabled (thus completely disabling"
.BR rlogin (1)
and
.BR rsh (1)
into the machine).
.SS "SSH Protocol Version 2"
.sp
.LP
Version 2 works similarly to version 1: Each host has a host-specific
DSA/RSA key. However, when the daemon starts, it does not generate a server
key. Forward security is provided through a Diffie-Hellman key agreement.
This key agreement results in a shared session key. The rest of the session
is encrypted using a symmetric cipher, currently 128-bit AES, Blowfish,
3DES, or AES. The client selects the encryption algorithm to use from those
offered by the server. Additionally, session integrity is provided through a
cryptographic message authentication code
.RB ( hmac-sha1
or
.BR hmac-md5 ).
.sp
.LP
Protocol version 2 provides a public key based user authentication method
(PubKeyAuthentication) GSS-API based user authentication, conventional
password authentication, and a generic prompt/reply protocol for
password-based authentication.
.SS "Command Execution and Data Forwarding"
.sp
.LP
If the client successfully authenticates itself, a dialog for preparing the
session is entered. At this time the client can request things like
allocating a pseudo-tty, forwarding X11 connections, forwarding TCP/IP
connections, or forwarding the authentication agent connection over the
secure channel.
.sp
.LP
Finally, the client either requests a shell or execution of a command. The
sides then enter session mode. In this mode, either side may send data at
any time, and such data is forwarded to/from the shell or command on the
server side, and the user terminal on the client side.
.sp
.LP
When the user program terminates and all forwarded X11 and other
connections have been closed, the server sends command exit status to the
client, and both sides exit.
.sp
.LP
.B sshd
can be configured using command-line options or the
configuration file
.BR /etc/ssh/ssh_config ,
described in
.BR ssh_config (4).
Command-line options override values specified in the
configuration file.
.sp
.LP
.B sshd
rereads its configuration file when it receives a hangup signal,
.BR SIGHUP ,
by executing itself with the name it was started as, that is,
.BR /usr/lib/ssh/sshd .
.SS "Host Access Control"
.sp
.LP
The
.B sshd
daemon uses TCP Wrappers to restrict access to hosts. It
uses the service name of
.B sshd
for
.BR hosts_access() .
For more
information on TCP Wrappers see
.B tcpd(1M)
and
.B hosts_access(3)
man
pages, which are part of the
.B SUNWsfman
package (they are not SunOS man
pages). TCP wrappers binaries, including
.BR libwrap ,
are in
.BR SUNWtcpd ,
a required package for
.BR SUNWsshdu ,
the package
containing
.BR sshd .
.SH OPTIONS
.sp
.LP
The options for
.B sshd
are as follows:
.sp
.ne 2
.mk
.na
.B -b
.I bits
.ad
.sp .6
.RS 4n
Specifies the number of bits in the server key (the default is 768).
.RE

.sp
.ne 2
.mk
.na
.B -d
.ad
.sp .6
.RS 4n
Debug mode. The server sends verbose debug output to the system log, and
does not put itself in the background. The server also will not fork and
will only process one connection. This option is only intended for debugging
for the server. Multiple
.B -d
options increase the debugging level.
Maximum is 3.
.RE

.sp
.ne 2
.mk
.na
.B -e
.ad
.sp .6
.RS 4n
When this option is specified,
.B sshd
will send the output to standard
error instead of to the system log.
.RE

.sp
.ne 2
.mk
.na
.B -f
.I configuration_file
.ad
.sp .6
.RS 4n
Specifies the name of the configuration file. The default is
.BR /etc/ssh/sshd_config .
.B sshd
refuses to start if there is no
configuration file.
.RE

.sp
.ne 2
.mk
.na
.B -g
.I login_grace_time
.ad
.sp .6
.RS 4n
Gives the grace time for clients to authenticate themselves (the default is
300 seconds). If the client fails to authenticate the user within this
number of seconds, the server disconnects and exits. A value of zero
indicates no limit.
.RE

.sp
.ne 2
.mk
.na
.B -h
.I host_key_file
.ad
.sp .6
.RS 4n
Specifies a file from which a host key is read. This option must be given
if
.B sshd
is not run as root (as the normal host key files are normally
not readable by anyone but root). The default is
.B /etc/ssh/ssh_host_key
for protocol version 1, and
.B /etc/ssh/ssh_host_rsa_key
and
.B /etc/ssh/ssh_host_dsa_key
for protocol version 2. It is possible to
have multiple host key files for the different protocol versions and host
key algorithms.
.RE

.sp
.ne 2
.mk
.na
.B -i
.ad
.sp .6
.RS 4n
Specifies that
.B sshd
is being run from
.BR inetd .
.B sshd
is
normally not run from
.B inetd
because it needs to generate the server
key before it can respond to the client, and this may take tens of seconds.
Clients would have to wait too long if the key was regenerated every time.
However, with small key sizes (for example, 512) using
.B sshd
from
.B inetd
may be reasonable.
.RE

.sp
.ne 2
.mk
.na
.B -k
.I key_gen_time
.ad
.sp .6
.RS 4n
(SSHv1-specific) Specifies how often the server key is regenerated (the
default is 3600 seconds, or one hour). The motivation for regenerating the
key fairly often is that the key is not stored anywhere, and after about an
hour, it becomes impossible to recover the key for decrypting intercepted
communications even if the machine is cracked into or physically seized. A
value of zero indicates that the key will never be regenerated.
.RE

.sp
.ne 2
.mk
.na
.B -o
.I option
.ad
.sp .6
.RS 4n
Can be used to specify options in the format used in the configuration
file. This is useful for specifying options for which there are no separate
command-line flags.
.RE

.sp
.ne 2
.mk
.na
.B -p
.I port
.ad
.sp .6
.RS 4n
Specifies the port on which the server listens for connections (the default
is 22).
.RE

.sp
.ne 2
.mk
.na
.B -q
.ad
.sp .6
.RS 4n
Quiet mode. Nothing is sent to the system log. Normally the beginning,
authentication, and termination of each connection is logged.
.RE

.sp
.ne 2
.mk
.na
.B -t
.ad
.sp .6
.RS 4n
Test mode. Check only the validity of the configuration file and the sanity
of the keys. This is useful for updating sshd reliably as configuration
options might change.
.RE

.sp
.ne 2
.mk
.na
.B -D
.ad
.sp .6
.RS 4n
When this option is specified
.B sshd
does not detach and does not
become a daemon. This allows easy monitoring of
.BR sshd .
.RE

.sp
.ne 2
.mk
.na
.B -4
.ad
.sp .6
.RS 4n
Forces
.B sshd
to use IPv4 addresses only.
.RE

.sp
.ne 2
.mk
.na
.B -6
.ad
.sp .6
.RS 4n
Forces
.B sshd
to use IPv6 addresses only.
.RE

.SH EXTENDED DESCRIPTION
.SS "\fBauthorized_keys\fR File Format"
.sp
.LP
The
.B $HOME/.ssh/authorized_keys
file lists the public keys that are
permitted for RSA authentication in protocol version 1 and for public key
authentication
.RB ( PubkeyAuthentication )
in protocol version 2. The
.B AuthorizedKeysFile
configuration option can be used to specify an
alternative file.
.sp
.LP
Each line of the file contains one key (empty lines and lines starting with
a hash mark
.RB [ # ]
are ignored as comments).
.sp
.LP
For each RSA key for protocol version 1, the file consists of the following
space-separated fields:
.sp
.in +2
.nf
\fIoptions\fR  \fIbits\fR  \fIexponent\fR  \fImodulus\fR  \fIcomment\fR
.fi
.in -2
.sp

.sp
.LP
For the public key for protocol version 2, the file consists of the
following space-separated fields:
.sp
.in +2
.nf
\fIoptions\fR \fIkey-type\fR \fIbase64-encoding-key\fR \fIcomment\fR
.fi
.in -2
.sp

.sp
.LP
For protocol version 2,
.I key-type
is one of
.B ssh-rsa
or
.BR ssh-dsa .
.sp
.LP
The options field is optional; its presence is determined by whether the
line starts with a number. (The option field never starts with a number.)
The bits, exponent, and modulus fields give the RSA key; the comment field
is a convenient place for you to identify the key.
.sp
.LP
Lines in this file are usually several hundred bytes long (because of the
size of the key modulus). You will find it very inconvenient to type them
in; instead, copy the public key file and edit it.
.sp
.LP
Permissions of this file must be set so that it is not world or group
writable. See the
.B StrictModes
option of
.BR sshd_config (4).
.sp
.LP
The options (if present) consist of comma-separated option specifications.
No spaces are permitted, except within double quotes. The following option
specifications are supported:
.sp
.ne 2
.mk
.na
\fBfrom="\fIpattern-list\fR"\fR
.ad
.sp .6
.RS 4n
Specifies that, in addition to public key authentication, the canonical
name of the remote host must be present in the comma-separated list of
.RB "patterns (`" * "' and `" ? '
serve as wildcards). The list can also
contain negated patterns by prefixing the patterns with
.RB ` ! '.
If the
canonical host name matches a negated pattern, the key is not accepted.
.sp
The purpose of this option is to give you the option of increasing
security: public key authentication by itself does not trust the network or
name servers or anything but the key. However, if someone manages to steal
the key, possession of the key would permit the intruder to log in from
anywhere in the world. This option makes using a stolen key more difficult,
because name servers and routers would have to be compromised, in addition
to just the key.
.RE

.sp
.ne 2
.mk
.na
\fBcommand="\fIcommand\fR"\fR
.ad
.sp .6
.RS 4n
Specifies that the
.I command
is executed whenever this key is used for
authentication. The command supplied by the user (if any) is ignored. The
command is run on a
.B pty
if the client requests a
.BR pty ;
otherwise
it is run without a
.BR tty .
If an 8-bit clean channel is required, one
must not request a
.B pty
or should specify
.BR no-pty .
You can include
a quote in the command by escaping it with a backslash. This option might be
useful to restrict certain public keys from performing a specific operation.
An example is a key that permits remote backups but nothing else. Note that
the client can specify TCP/IP and/or X11 forwarding unless they are
explicitly prohibited from doing so. Also note that this option applies to
shell, command, or subsystem execution.
.RE

.sp
.ne 2
.mk
.na
\fBenvironment="\fINAME\fR=\fIvalue\fR"\fR
.ad
.sp .6
.RS 4n
.RI "Specifies that the string " NAME = value " is to be added to the"
environment when logging in using this key. Environment variables set this
way override other default environment values. Multiple options of this type
are permitted. Environment processing is disabled by default and is
controlled via the
.B PermitUserEnvironment
option.
.RE

.sp
.ne 2
.mk
.na
.B no-port-forwarding
.ad
.sp .6
.RS 4n
Forbids TCP/IP forwarding when this key is used for authentication. Any
port forward requests by the client will return an error. This might be
used, for example, in connection with the
.B command
option.
.RE

.sp
.ne 2
.mk
.na
.B no-X11-forwarding
.ad
.sp .6
.RS 4n
Forbids X11 forwarding when this key is used for authentication. Any X11
forward requests by the client will return an error.
.RE

.sp
.ne 2
.mk
.na
.B no-agent-forwarding
.ad
.sp .6
.RS 4n
Forbids authentication agent forwarding when this key is used for
authentication.
.RE

.sp
.ne 2
.mk
.na
.B no-pty
.ad
.sp .6
.RS 4n
Prevents
.B tty
allocation (a request to allocate a
.B pty
will
fail).
.RE

.sp
.ne 2
.mk
.na
\fBpermitopen="\fIhost\fR:\fIport\fR"\fR
.ad
.sp .6
.RS 4n
Limit local
.B "ssh -L"
port forwarding such that it can connect
only to the specified host and port. IPv6 addresses can be specified with an
.RI "alternative syntax: " host / port .
You can invoke multiple
.B permitopen
options, with each instance separated by a comma. No
pattern matching is performed on the specified hostnames. They must be
literal domains or addresses.
.RE

.SS "\fBssh_known_hosts\fR File Format"
.sp
.LP
The
.B /etc/ssh/ssh_known_hosts
and
.B $HOME/.ssh/known_hosts
files
contain host public keys for all known hosts. The global file should be
prepared by the administrator (optional), and the per-user file is
maintained automatically: whenever the user connects from an unknown host
its key is added to the per-user file.
.sp
.LP
For the RSA key for protocol version 1, these files consist of the
following space-separated fields:
.sp
.in +2
.nf
\fIhostnames\fR  \fIbits\fR  \fIexponent\fR  \fImodulus\fR  \fIcomment\fR
.fi
.in -2
.sp

.sp
.LP
For the public key for protocol version 2, these files consist of the
following space-separated fields:
.sp
.in +2
.nf
\fIhostnames\fR \fIkey-type\fR \fIbase64-encoding-key\fR \fIcomment\fR
.fi
.in -2
.sp

.sp
.LP
For protocol version 2,
.I key-type
is one of
.B ssh-rsa
or
.BR ssh-dsa .
.sp
.LP
Hostnames is a comma-separated list of patterns (\fB*\fR and
.B ?
act as
wildcards); each pattern in turn is matched against the canonical host name
(when authenticating a client) or against the user-supplied name (when
authenticating a server). A pattern can also be preceded by
.B !
to
indicate negation: if the host name matches a negated pattern, it is not
accepted (by that line) even if it matched another pattern on the line.
.sp
.LP
Alternately, hostnames can be stored in a hashed form, which hides host
names and addresses should the file's contents be disclosed. Hashed
hostnames start with a vertical bar
.RB ( | )
character. Only one hashed
hostname can appear on a single line and none of the above negation or
wildcard operators may be applied.
.sp
.LP
Bits, exponent, and modulus are taken directly from the RSA host key; they
can be obtained, for example, from
.BR /etc/ssh/ssh_host_rsa_key.pub .
The
optional comment field continues to the end of the line, and is not used.
.sp
.LP
Lines starting with a hash mark
.RB ( # )
and empty lines are ignored as
comments.
.sp
.LP
When performing host authentication, authentication is accepted if any
matching line has the proper key. It is thus permissible (but not
recommended) to have several lines or different host keys for the same
names. This will inevitably happen when short forms of host names from
different domains are put in the file. It is possible that the files contain
conflicting information; authentication is accepted if valid information can
be found from either file.
.sp
.LP
The lines in these files are typically hundreds of characters long. You
should definitely not type in the host keys by hand. Rather, generate them
by a script or by taking
.B /etc/ssh/ssh_host_rsa_key.pub
and adding the
host names at the front.
.SH ENVIRONMENT VARIABLES
.sp
.LP
.B sshd
sets the following environment variables for commands executed
by
.B ssh
users:
.sp
.ne 2
.mk
.na
.B DISPLAY
.ad
.sp .6
.RS 4n
Indicates the location of the X11 server. It is automatically set by
\fBsshd\fR to point to a value of the form \fIhostname\fR:\fIn\fR, where
.I hostname
indicates the host where the shell runs, and
.I n
is an
integer greater than or equal to 1.
.B ssh
uses this special value to
forward X11 connections over the secure channel. Unless you have important
reasons to do otherwise, you should not set
.B DISPLAY
explicitly, as
that will render the X11 connection insecure and will require you to
manually copy any required authorization cookies.
.RE

.sp
.ne 2
.mk
.na
.B HOME
.ad
.sp .6
.RS 4n
Set to the path of the user's home directory.
.RE

.sp
.ne 2
.mk
.na
.BR LANG ,
.BR LC_ALL ,
.BR LC_COLLATE ,
.BR LC_CTYPE ,
.BR LC_MESSAGES ,
.BR LC_MONETARY ,
.BR LC_NUMERIC ,
.B LC_TIME
.ad
.sp .6
.RS 4n
A locale setting. The locale defaults to that of
.B sshd
(usually the
system-wide default locale), or is negotiated between the client and server
during initial key exchange (as per RFC 4253).
.sp
Following initial key exchange, each of the variables can be overriden in
the following sequence:
.RS +4
.TP
1.
If a locale setting is set in a client's environment and that client
supports "Environment Variable Passing" (see RFC 4254), then the setting
will be passed over to the server side.
.RE
.RS +4
.TP
2.
If the public key authentication method was used to authenticate the server
and the
.B PermitUserEnvironment
variable in
.BR sshd_config (4)
is set
to
.B yes
on the server side, then the setting can be changed through the
use of the
.B environment
.RB "option in the client's" " AuthorizedKeysFile"
file.
.RE
.RS +4
.TP
3.
The setting can be change in the client's
.B ~/.ssh/environment
file on
the server.
.RE
See
.B PermitUserEnvironment
in
.BR sshd_config (4)
as to when the
.B AuthorizedKeysFile
and
.B ~/.ssh/environment
files are processed
and used for setting the user environment.
.RE

.sp
.ne 2
.mk
.na
.B LOGNAME
.ad
.sp .6
.RS 4n
Synonym for
.BR USER .
Set for compatibility with systems that use this
variable.
.RE

.sp
.ne 2
.mk
.na
.B MAIL
.ad
.sp .6
.RS 4n
Set to point to the user's mailbox.
.RE

.sp
.ne 2
.mk
.na
.B SSH_AUTH_SOCK
.ad
.sp .6
.RS 4n
Indicates the path of a
.B unix-domain
socket used to communicate with
the agent.
.RE

.sp
.ne 2
.mk
.na
.B SSH_CONNECTION
.ad
.sp .6
.RS 4n
Identifies the client and server ends of the connection. The variable
contains four space-separated values: client IP address, client port number,
server IP address and server port number.
.RE

.sp
.ne 2
.mk
.na
.B SSH_CLIENT
.ad
.sp .6
.RS 4n
Identifies the client end of the connection. The variable contains three
space-separated values: client IP address, client port number, and server
port number.
.RE

.sp
.ne 2
.mk
.na
.B SSH_TTY
.ad
.sp .6
.RS 4n
Set to the name of the
.B tty
(path to the device) associated with the
current shell or command. If the current session has no
.BR tty ,
this
variable is not set.
.RE

.sp
.ne 2
.mk
.na
.B TZ
.ad
.sp .6
.RS 4n
Indicates the present timezone, if
.B TIMEZONE
is set in
.B /etc/default/login
or if
.B TZ
was set when the daemon was
started.
.RE

.sp
.ne 2
.mk
.na
.B HZ
.ad
.sp .6
.RS 4n
If set in
.BR /etc/default/login ,
the daemon sets it to the same value.

.RE

.sp
.ne 2
.mk
.na
.B SHELL
.ad
.sp .6
.RS 4n
The user's shell, if
.B ALTSHELL=YES
in
.BR /etc/default/login .
.RE

.sp
.ne 2
.mk
.na
.B PATH
.ad
.sp .6
.RS 4n
Set to the value of
.B PATH
or
.B SUPATH
(see
.BR login (1))
in
.BR /etc/default/login ,
or, if not set, to
.BR /usr/bin:/bin .
.RE

.sp
.ne 2
.mk
.na
.B USER
.ad
.sp .6
.RS 4n
Set to the name of the user logging in.
.RE

.sp
.LP
Additionally,
.B sshd
reads
.B $HOME/.ssh/environment
and adds lines
of the format
.BI VARNAME= value
to the environment.
.SH EXAMPLES
.sp
.LP
In the following examples, certain lines might wrap due to line length
limits in your display. You should nevertheless consider the wrapped line as
a single line.
.LP
.B Example 1 authorized_key
File Entries
.sp
.LP
The following are examples of
.B authorized_key
file entries for
protocol 1:

.sp
.in +2
.nf
1024 33 12121.\|.\|.312314325 ylo@foo.bar

from="*.niksula.hut.fi,!pc.niksula.hut.fi" 1024 35 23.\|.\|.2334 ylo@niksula

command="dump /home",no-pty,no-port-forwarding 1024 33 23.\|.\|.2323 backup.hut.fi
.fi
.in -2
.sp

.LP
.B Example 2 authorized_key
File Entries for Protocol 2
.sp
.LP
The following are examples of
.B authorized_key
file entries for
protocol 2:

.sp
.in +2
.nf
ssh-rsa AAAAB3NzaC1y.....EU88ovYKg4GfclWGCFYTuw8= ylo@foo.bar
from="*.niksula.hut.fi" ssh-rsa AAAAB3NzaC.\|.\|.uw8= ylo@niksula
command="dump /home",no-pty,no-port-forwarding ssh-rsa AA..8= backup.hut.fi
.fi
.in -2
.sp

.LP
.B Example 3 ssh_known_hosts
File Entries for Protocol 1
.sp
.LP
The following are examples of
.B ssh_known_hosts
file entries for
protocol 1:

.sp
.in +2
.nf
closenet,closenet.hut.fi,.\|.\|.,130.233.208.41 1024 37 159.\|.\|.93 closenet.hut.fi
.fi
.in -2
.sp

.LP
.B Example 4 ssh_known_hosts
File Entries for Protocol 2
.sp
.LP
The following are examples of
.B ssh_known_hosts
file entries for
protocol 2:

.sp
.in +2
.nf
closenet,closenet.hut.fi,.\|.\|.,130.233.208.41 ssh-rsa AA..8= closenet.hut.fi
.fi
.in -2
.sp

.SH EXIT STATUS
.sp
.LP
The following exit values are returned:
.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 13n
.rt
Successful completion.
.RE

.sp
.ne 2
.mk
.na
.B >0
.ad
.RS 13n
.rt
An error occurred.
.RE

.SH FILES
.sp
.ne 2
.mk
.na
.B /etc/default/login
.ad
.sp .6
.RS 4n
Contains defaults for several
.B sshd_config
parameters, environment
variables, and other environmental factors.
.sp
The following parameters affect environment variables (see
.BR login (1)
and descriptions of these variables, above):
.RS +4
.TP
.ie t \(bu
.el o
.B TIMEZONE
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B HZ
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B ALTSHELL
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B PATH
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B SUPATH
.RE
The following
.B /etc/default/login
parameters supply default values for
corresponding
.BR sshd_config (4)
parameters:
.RS +4
.TP
.ie t \(bu
.el o
.B CONSOLE
(see
.B PermitRootLogin
in
.BR sshd_config (4))
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B PASSREQ
(see
.B PermitEmptyPasswords
in
.BR sshd_config (4))
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B TIMEOUT
(see
.B LoginGraceTime
in
.BR sshd_config (4))
.RE
The following
.B /etc/default/login
parameters:
.RS +4
.TP
.ie t \(bu
.el o
.B UMASK
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B ULIMIT
.RE
\&.\|.\|.set the
.BR umask (2)
and file size limit of, respectively, the
shells and commands spawned by
.BR sshd .
.sp
Finally, two
.B /etc/default/login
parameters affect the maximum allowed
login attempts per-connection using interactive user authentication methods
(for example,
.B keyboard-interactive
but not
.BR publickey ),
as per
.BR login (1):
.RS +4
.TP
.ie t \(bu
.el o
.B RETRIES
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B SYSLOG_FAILED_LOGINS
.RE
.RE

.sp
.ne 2
.mk
.na
.B /etc/ssh/sshd_config
.ad
.sp .6
.RS 4n
Contains configuration data for
.BR sshd .
This file should be writable by
root only, but it is recommended (though not necessary) that it be
world-readable.
.RE

.sp
.ne 2
.mk
.na
.B /etc/ssh/ssh_host_key
.ad
.br
.na
.B /etc/ssh/ssh_host_dsa_key
.ad
.br
.na
.B /etc/ssh/ssh_host_rsa_key
.ad
.sp .6
.RS 4n
Contains the private part of the host key. This file should only be owned
.RB "by root, readable only by root, and not accessible to others." " sshd"
does not start if this file is group/world-accessible.
.RE

.sp
.ne 2
.mk
.na
.B /etc/ssh/ssh_host_key.pub
.ad
.br
.na
.B /etc/ssh/ssh_host_dsa_key.pub
.ad
.br
.na
.B /etc/ssh/ssh_host_rsa_key.pub
.ad
.sp .6
.RS 4n
Contains the public part of the host key. This file should be
world-readable but writable only by root. Its contents should match the
private part. This file is not used for encryption; it is provided only for
the convenience of the user so its contents can be copied to known hosts
files. These two files are created using
.BR ssh-keygen (1).
.RE

.sp
.ne 2
.mk
.na
.B /var/run/sshd.pid
.ad
.sp .6
.RS 4n
Contains the process ID of the
.B sshd
listening for connections. If
there are several daemons running concurrently for different ports, this
contains the pid of the one started last. The content of this file is not
sensitive; it can be world-readable. You can use the
.B PidFile
keyword
in
.B sshd_config
to specify a file other than
.BR /var/run/sshd.pid .
See
.BR sshd_config (4).
.RE

.sp
.ne 2
.mk
.na
.B /etc/ssh/ssh_known_hosts
and
.BR $HOME/.ssh/known_hosts
.ad
.sp .6
.RS 4n
These files are consulted when using
.B rhosts
with public key host
authentication to check the public key of the host. The key must be listed
in one of these files to be accepted. The client uses the same files to
verify that the remote host is the one it intended to connect. These files
.RB "should be writable only by root or the owner." " /etc/ssh/ssh_known_hosts"
should be world-readable, and
.B $HOME/.ssh/known_hosts
can but need not
be world-readable.
.RE

.sp
.ne 2
.mk
.na
.B /etc/nologin
.ad
.sp .6
.RS 4n
If this file exists,
.B sshd
refuses to let anyone except root log in.
The contents of the file are displayed to anyone trying to log in, and
non-root connections are refused. The file should be world-readable.
.RE

.sp
.ne 2
.mk
.na
.B $HOME/.ssh/authorized_keys
.ad
.sp .6
.RS 4n
Lists the public keys (RSA or DSA) that can be used to log into the user's
account. This file must be readable by root. This might, on some machines,
imply that it is world-readable if the user's home directory resides on an
NFS volume. It is recommended that it not be accessible by others. The
format of this file is described above. Users will place the contents of
their
.BR identity.pub ,
.B id_dsa.pub
and/or
.B id_rsa.pub
files
into this file, as described in
.BR ssh-keygen (1).
.RE

.sp
.ne 2
.mk
.na
.B $HOME/.rhosts
.ad
.sp .6
.RS 4n
This file contains host-username pairs, separated by a space, one per line.
The given user on the corresponding host is permitted to log in without
password. The same file is used by
.B rlogind
and
.BR rshd .
The file
must be writable only by the user; it is recommended that it not be
accessible by others. It is also possible to use
.B netgroups
in the
file. Either host or user name may be of the form
.BI +@ groupname
to
specify all hosts or all users in the group.
.RE

.sp
.ne 2
.mk
.na
.B $HOME/.shosts
.ad
.sp .6
.RS 4n
For
.BR ssh ,
this file is exactly the same as for
.BR \&.rhosts .
However, this file is not used by
.B rlogin
and
.BR rshd ,
so using this
permits access using SSH only.
.RE

.sp
.ne 2
.mk
.na
.B /etc/hosts.equiv
.ad
.sp .6
.RS 4n
This file is used during \fB\&.rhosts\fR authentication. In its simplest
form, this file contains host names, one per line. Users on these hosts are
permitted to log in without a password, provided they have the same user
name on both machines. The host name can also be followed by a user name;
such users are permitted to log in as any user on this machine (except
root). Additionally, the syntax
.BI +@ group
can be used to specify
netgroups. Negated entries start with a hyphen
.RB ( - ).
.sp
If the client host/user is successfully matched in this file, login is
automatically permitted, provided the client and server user names are the
same. Additionally, successful RSA host authentication is normally required.
This file must be writable only by root; it is recommended that it be
world-readable.
.sp
Warning: It is almost never a good idea to use user names in
.BR hosts.equiv .
Beware that it really means that the named user(s) can
log in as anybody, which includes
.BR bin ,
.BR daemon ,
.BR adm ,
and
other accounts that own critical binaries and directories. For practical
purposes, using a user name grants the user root access. Probably the only
valid use for user names is in negative entries. This warning also applies
to
.BR rsh /\fBrlogin\fR.
.RE

.sp
.ne 2
.mk
.na
.B /etc/ssh/moduli
.ad
.sp .6
.RS 4n
A private file.
.RE

.sp
.ne 2
.mk
.na
.B /etc/ssh/shosts.equiv
.ad
.sp .6
.RS 4n
This file is processed exactly as
.BR /etc/hosts.equiv .
However, this
file might be useful in environments that want to run both
\fBrsh\fR/\fBrlogin\fR and \fBssh\fR.
.RE

.sp
.ne 2
.mk
.na
.B $HOME/.ssh/environment
.ad
.sp .6
.RS 4n
This file is read into the environment at login (if it exists). It can
contain only empty lines, comment lines (that start with
.BR # ),
and
.RI "assignment lines of the form " name = value .
The file should
be writable only by the user; it need not be readable by anyone else.
Environment processing is disabled by default and is controlled by means of
the
.B PermitUserEnvironment
option.
.RE

.sp
.ne 2
.mk
.na
.B $HOME/.ssh/rc
.ad
.sp .6
.RS 4n
If this file exists, it is run with
.B /bin/sh
after reading the
environment files but before starting the user's shell or command. If X11
spoofing is in use, this will receive the
.B "proto cookie"
pair in
standard input (and
.B DISPLAY
in environment). This must call
.B xauth
in that case.
.sp
The primary purpose of
.B $HOME/.ssh/rc
is to run any initialization
routines that might be needed before the user's home directory becomes
accessible; AFS is a particular example of such an environment. If this file
exists, it is run with
.B /bin/sh
after reading the environment files,
but before starting the user's shell or command. It must not produce any
output on stdout; stderr must be used instead. If X11 forwarding is in use,
it will receive the
.B "proto cookie"
pair in its standard input and
.B DISPLAY
in its environment. The script must call
.B xauth
because
.B sshd
will not run
.B xauth
automatically to add X11 cookies.
.sp
This file will probably contain some initialization code followed by
something similar to:
.sp
.in +2
.nf
if read proto cookie && [ -n "$DISPLAY" ]
then
  if [ `echo $DISPLAY | cut -c1-10`  =  'localhost:' ]
  then
    # X11UseLocalhost=yes
    echo add unix:`echo $DISPLAY |
    cut -c11-` $proto $cookie
  else
    # X11UseLocalhost=no
    echo add $DISPLAY $proto $cookie
  fi | xauth -q -
fi
.fi
.in -2
.sp

If this file does not exist,
.B /etc/ssh/sshrc
is run, and if that does
not exist,
.B xauth
.RB "is used to store the cookie." " $HOME/.ssh/rc"
should be writable only by the user, and need not be readable by anyone
else.
.RE

.sp
.ne 2
.mk
.na
.B /etc/ssh/sshrc
.ad
.sp .6
.RS 4n
Similar to
.BR $HOME/.ssh/rc .
This can be used to specify
machine-specific login-time initializations globally. This file should be
writable only by root, and should be world-readable.
.RE

.SH SECURITY
.sp
.LP
.B sshd
supports the use of several user authentication mechanisms: a
public key system where keys are associated with users (through users'
.B authorized_keys
files), a public key system where keys are associated
with hosts (see the
.B HostbasedAuthentication
configuration parameter),
a GSS-API based method (see the
.B GssAuthentication
and
.BR GssKeyEx
configuration parameters) and three initial authentication methods:
.BR none ,
.BR password ,
and a generic prompt/reply protocol,
.BR keyboard-interactive .
.sp
.LP
.B sshd
negotiates the use of the GSS-API with clients only if it has a
GSS-API acceptor credential for the "host" service. This means that, for
GSS-API based authentication, the server must have a Kerberos V \fBkeytab\fR
entry (see below) or the equivalent for any other GSS-API mechanism that
might be installed.
.sp
.LP
In order for Kerberos authentication to work, a
.BI host/ <FQDN>
Kerberos principal must exist for each Fully Qualified Domain Name
associated with the
.B in.sshd
server. Each of these
.BI host/ <FQDN>
principals must have a \fBkeytab\fR entry in the
.B /etc/krb5/krb5.keytab
file on the
.B in.sshd
server. An example
principal might be:
.sp
.LP
.B host/bigmachine.eng.example.com
.sp
.LP
See
.BR kadmin (1M)
or \fBgkadmin\fR(1M) for instructions on adding a
principal to a
.B krb5.keytab
file. See\fR for a discussion of
Kerberos authentication.
.sp
.LP
GSS-API authorization is covered in \fBgss_auth_rules\fR(5).
.sp
.LP
.B sshd
uses
.BR pam (3PAM)
for the three initial authentication
methods as well as for account management, session management, and password
management for all authentication methods.
.sp
.LP
Specifically, \fBsshd\fR calls \fBpam_authenticate()\fR for the "none,"
"password" and "keyboard-interactive" SSHv2 \fBuserauth\fR types, as well as
for for the null and password authentication methods for SSHv1. Other SSHv2
authentication methods do not call
.BR pam_authenticate() .
.B pam_acct_mgmt()
is called for each authentication method that
succeeds.
.sp
.LP
.B pam_setcred()
and
.B pam_open_session()
are called when
authentication succeeds and
.B pam_close_session()
is called when
connections are closed.
.sp
.LP
.B pam_open_session()
and
.B pam_close_session()
are also called when
SSHv2 channels with \fBpty\fRs are opened and closed.
.sp
.LP
Each SSHv2
.B userauth
type has its own PAM service name:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
SSHv2 UserauthPAM Service Name
_
nonesshd-none
_
passwordsshd-password
_
keyboard-interactivesshd-kbdint
_
pubkeysshd-pubkey
_
hostbasedsshd-hostbased
_
gssapi-with-micsshd-gssapi
_
gssapi-keyexsshd-gssapi
.TE

.sp
.LP
For SSHv1,
.B sshd-v1
is always used.
.sp
.LP
If
.B pam_acct_mgmt()
returns
.B PAM_NEW_AUTHTOK_REQD
(indicating
that the user's authentication tokens have expired), then
.B sshd
forces
the use of "keyboard-interactive" \fBuserauth\fR, if version 2 of the
protocol is in use. The "keyboard-interactive" \fBuserauth\fR will call
.B pam_chauthtok()
if
.B pam_acct_mgmt()
once again returns
.BR PAM_NEW_AUTHTOK_REQD .
By this means, administrators are able to
control what authentication methods are allowed for SSHv2 on a per-user
basis.
.SS "Setting up Host-based Authentication"
.sp
.LP
To establish host-based authentication, you must perform the following
steps:
.RS +4
.TP
.ie t \(bu
.el o
Configure the client.
.RE
.RS +4
.TP
.ie t \(bu
.el o
Configure the server.
.RE
.RS +4
.TP
.ie t \(bu
.el o
Publish known hosts.
.RE
.RS +4
.TP
.ie t \(bu
.el o
Make appropriate entries in
.B /etc/ssh/shosts.equiv
and
.BR ~/.shosts .
.RE
.sp
.LP
These steps are expanded in the following paragraphs.
.RS +4
.TP
.ie t \(bu
.el o
On a client machine, in the system-wide client configuration file,
.BR /etc/ssh/ssh_config ,
you must have the entry:
.sp
.in +2
.nf
HostbasedAuthentication yes
.fi
.in -2

See
.BR ssh_config (4)
and
.BR ssh-keysign (1M).
.RE
.RS +4
.TP
.ie t \(bu
.el o
On the server, in the system-wide server configuration file,
.BR /etc/ssh/sshd_config ,
you must have the entry:
.sp
.in +2
.nf
HostbasedAuthentication yes
.fi
.in -2

If per-user \fB\&.shost\fR files are to be allowed (see last step), in the
same file, you must have:
.sp
.in +2
.nf
IgnoreRhosts no
.fi
.in -2

See
.BR sshd_config (4)
for a description of these keywords.
.RE
.RS +4
.TP
.ie t \(bu
.el o
To publish known hosts, you must have entries for the clients from which
users will be allowed host-based authentication. Make these entries in
either or both of the system-wide file
.RB ( /etc/ssh/ssh_known_hosts )
or
the per-user file
.RB ( ~/.ssh/known_hosts ).
.RE
.RS +4
.TP
.ie t \(bu
.el o
Note that
.B sshd
uses \fB\&.shosts\fR, not \fB\&.rhosts\fR. If you want
the functionality provided by \fB\&.rhosts\fR, but do not want to use
.B rlogin
or
.B rsh
because of their security shortcomings, you can
use \fB\&.shosts\fR in conjunction with
.BR sshd .
To use this feature,
make appropriate entries in
.B /etc/ssh/shosts.equiv
and
.BR ~/.shosts ,
in the format specified in
.BR rhosts (4).
.sp
For the vast majority of network environments, \fB\&.shosts\fR is preferred
over
.BR \&.rhosts .
.RE
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWsshdu
_
Interface StabilityEvolving
.TE

.sp
.LP
The interface stability of
.B /etc/ssh/moduli
is Private.
.SH SEE ALSO
.sp
.LP
.BR login (1),
.BR scp (1),
.BR ssh (1),
.BR ssh-add (1),
.BR ssh-agent (1),
.BR ssh-keygen (1),
.BR svcs (1),
.BR gkadmin (1M),
.BR kadmin (1M),
.BR sftp-server (1M),
.BR ssh-keysign (1M),
.BR svcadm (1M),
.BR pam (3PAM),
.BR rhosts (4),
.BR ssh_config (4),
.BR sshd_config (4),
.BR attributes (5),
.BR gss_auth_rules (5),
.BR kerberos (5),
.BR pam_roles (5),
.BR smf (5)
.sp
.LP
\fR
.SH NOTES
.sp
.LP
The
.B sshd
service is managed by the service management facility,
.BR smf (5),
under the service identifier:
.sp
.in +2
.nf
svc:/network/ssh:default
.fi
.in -2
.sp

.sp
.LP
Administrative actions on this service, such as enabling, disabling, or
requesting restart, can be performed using
.BR svcadm (1M).
The service's
status can be queried using the
.BR svcs (1)
command.
.sp
.LP
.B sshd
always sets
.B PAM_RHOST
and sets
.B PAM_AUSER
in the case
of host-based
.BR userauth .
This behavior allows for remote logins to
roles using host-based authentication. See
.BR pam_roles (5).
