'\" te
.\" Copyright (c) 2009, Sun Microsystems, Inc. All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH cfgadm_shp 1M "25 Aug 2009" "SunOS 5.11" "System Administration Commands"
.SH NAME
cfgadm_shp \- PCI Express and Standard PCI Hotplug hardware-specific
commands for cfgadm
.SH SYNOPSIS
.LP
.nf
\fB/usr/sbin/cfgadm\fR [\fB-f\fR] [\fB-y\fR | \fB-n\fR] [\fB-v\fR]
     [\fB-o\fR \fIhardware_options\fR] \fB-c\fR \fIfunction\fR \fIap_id\fR [\fIap_id\fR]
.fi

.LP
.nf
\fB/usr/sbin/cfgadm\fR [\fB-f\fR] [\fB-y\fR | \fB-n\fR] [\fB-v\fR]
     [\fB-o\fR \fIhardware_options\fR] \fB-x\fR \fIhardware_function\fR \fIap_id\fR [\fIap_id\fR]
.fi

.LP
.nf
\fB/usr/sbin/cfgadm\fR [\fB-v\fR] [\fB-s\fR \fIlisting_options]\fR]
     [\fB-o\fR \fIhardware_options\fR] \fB-x\fR \fIhardware_function\fR \fIap_id\fR [\fIap_id\fR]
.fi

.LP
.nf
\fB/usr/sbin/cfgadm\fR [\fB-v\fR] [\fB-o\fR \fIhardware_options\fR] \fB-t\fIap_id\fR [\fIap_id\fR]
.fi

.LP
.nf
\fB/usr/sbin/cfgadm\fR [\fB-v\fR] [\fB-o\fR \fIhardware_function\fR]\fB-h\fR [\fIap_id\fR | \fIap_type\fR]
.fi

.SH DESCRIPTION
.sp
.LP
The PCI Express and Standard PCI Hotplug hardware-specific library,
.BR /usr/lib/cfgadm/shp.so.1 ,
provides support for hotplugging PCI Express
and Standard PCI Hotplug adapter cards into the respective hotpluggable
slots in a system that is hotplug-capable, through the
.B cfgadm
command
(see
.BR cfgadm (1M)).
Support for the rest PCI Hotplug adapter cards
(other than PCI Express and Standard PCI Hotplug cards) are provided by
.B cfgadm_pci
library (see
.BR cfgadm_pci (1M)).
Hotplug administrative
models between PCI Express Hotplug and Standard PCI Hotplug remain the same
except where noted in this man page.
.sp
.LP
For PCI hotplug, each hotplug slot on a specific PCI bus is represented by
an attachment point of that PCI bus.
.sp
.LP
An attachment point consist of two parts: a receptacle and an occupant. The
receptacle under PCI hotplug is usually referred to as the physical hot
pluggable slot; and the occupant is usually referred to as the PCI adapter
card that plugs into the slot.
.sp
.LP
Attachment points are named through
.BR ap_id s.
There are two types of
\fBap_id\fRs: logical and physical. The physical
.B ap_id
is based on the
physical pathname, for example:
.sp
.in +2
.nf
/devices/pci@7c,0/pci10de,5d@d:pcie2
.fi
.in -2
.sp

.sp
.LP
Whereas the logical
.B ap_id
is a shorter, more user-friendly name, for
example,
.BR pcie2 .
The
.B ap_type
for Hotplug PCI is
.BR pci .
.sp
.LP
Note that the
.B ap_type
is not the same as the information in the
.B Type
field.
.SS "PCI Express ap_id Naming"
.sp
.LP
For attachment points located in a PCI Express hierarchy (that is, the
parent or an ancestor is a PCI Express device),  including attachment points
that are not PCI Express devices themselves, the naming scheme shown below
is used.
.sp
.LP
Grammar:
.sp
.ne 2
.mk
.na
.B APID
:
.I absolute-slot-path
.ad
.sp .6
.RS 4n
Fundamental term.
.RE

.sp
.ne 2
.mk
.na
.I absolute-slot-path
:
\fIslot-path\fR[:\fIslot-path\fR[:\fIslotpath\fR .\|.\|.]]\fR
.ad
.sp .6
.RS 4n
\&.\|.\|.where
.I fru-id
indicates the chassis FRU, if any, containing the
.IR slot-id .
.RE

.sp
.ne 2
.mk
.na
\fIfru-id\fR : \fIfru-type\fR[\fIserialid#\fR]\fR
.ad
.sp .6
.RS 4n
\&.\|.\|.where \fIfru-type\fR is "iob" for a PCI Express expansion chassis,
followed by its serial number
.IR serialid# ,
if available
.RE

.sp
.ne 2
.mk
.na
.I slot-id
:
.I slot-name
|
.I "device-type physical-slot#"
| \e\fR
.ad
.br
.na
.IR "nexus-driver-name nexus-driver-instance" .\e\fR
.ad
.br
.na
.I device-type pci-device-number
.ad
.sp .6
.RS 4n
\&.\|.\|.where
.I slot-name
is a name assigned by the platform or hardware
itself.
.I device-type
is either
.B pcie
for PCI Express devices or
.B pci
for PCI devices.
.I nexus-driver-name
is the driver name for
the device component;
.I physical-slot#
is the hardware slot number; and
.I pci-device-number
is the PCI  device number in standard PCI
nomenclature.
.RE

.sp
.LP
First, an
.I absolute-slot-path
is constructed that attempts to describe
the attachment point's topological location in more physically identifiable
terms for the user. This
.I absolute-slot-path
consists of
.I slot-path
components each separated by a
.B :
(colon). The leaf or
leftmost
.I slot-path
component describes the device of the attachment
point itself, while its right-adjacent
.I slot-path
component up to the
rightmost or topmost
.I slot-path
component describes the parent up to
the root devices, respectively.
.sp
.LP
Each
.I slot-path
consists of a
.I slot-id
optionally preceded by a
.IR fru-id ,
which identifies an expansion chassis containing the device
described by
.I slot-id
(detailed below).
.I fru-id
consists of
.I fru-type
followed by an optional
.IR serialid# .
.I fru-type
is
"iob" for PCI Express expansion chassis types, while \fIserialid#\fR is
either a 64-bit hexadecimal number indicating a raw serial number obtained
from the expansion chassis hardware, or an upper-case, ASCII four-character
sequence for a Sun-branded expansion chassis.
.sp
.LP
Each slot-id consists of one of three possible forms:
.sp
.ne 2
.mk
.na
.I slot-id
form (1)\fR
.ad
.sp .6
.RS 4n
.I slot-names
.RE

.sp
.ne 2
.mk
.na
.I slot-id
form (2)\fR
.ad
.sp .6
.RS 4n
.I device-type physical-slot#
.RE

.sp
.ne 2
.mk
.na
.I slot-id
form (3)\fR
.ad
.sp .6
.RS 4n
.I "nexus-driver-name nexus-driver-instance" device-type
.I pci-device-number
.RE

.sp
.LP
The precedence of which form to select flows from the lowest form number to
the highest form number, or from top to bottom as described above. If a form
cannot be successfully constructed, then the next numerically higher form is
attempted.
.sp
.LP
The
.I slot-names
in
.I slot-id
form (1) is taken from the
.B slot-names
property of the corresponding node in the  evice tree and
is a name assigned by hardware or the platform. This format is not
predefined or established.
.sp
.LP
In
.I slot-id
form (2),
.I device-type
indicates the device type of
the component's slot, and is either
.B pcie
for PCI Express or
.BR pci
for PCI, while
.IR physical-slot# ,
taken from the
.BR physical-slot#
property of its corresponding device node, indicates the hardware slot
number of the component.
.sp
.LP
.I slot-id
form (3) is used when all other forms cannot be successfully
constructed, and is considered to be the default form.
.I nexus-driver-name
is the component's driver name;
.I nexus-driver-instance
is this driver's instance;
.I device-type
is
the same as described in form (2);
.I pci-device-number
is the PCI
device number as described and used for device configuration cycles in
standard PCI nomenclature.
.sp
.LP
In summary of the
.I slot-path
component, expanding the optional FRU
component that might precede it,
.I slot-path
will consist one of the
following forms in order:
.sp
.ne 2
.mk
.na
\fB(1) [ iob[\fIserialid#\fR]. ]\fR
.ad
.sp .6
.RS 4n
.I slot-names
.RE

.sp
.ne 2
.mk
.na
\fB(2) [ iob[\fIserialid#\fR]. ]\fR
.ad
.sp .6
.RS 4n
.I device_type physical_slot#
.RE

.sp
.ne 2
.mk
.na
\fB(2) [ iob[\fIserialid#\fR]. ]\fR
.ad
.sp .6
.RS 4n
.IR "nexus-driver-name nexus-driver-instance" .
.sp
.I device_type pci-device-number
.RE

.sp
.LP
Lastly, the final form of the actual
.B ap_id
name used in
.B cfgadm
is decided as follows, specified in order of precedence:
.sp
.ne 2
.mk
.na
.B ap_id
form (1)\fR
.ad
.sp .6
.RS 4n
If the
.I absolute-slot-path
can fit within the fixed length limit of
\fBcfgadm\fR's \fBap_id\fR field, then
.I absolute-slot-path
itself is
used
.RE

.sp
.ne 2
.mk
.na
.B ap_id
form (2)\fR
.ad
.sp .6
.RS 4n
(\fIabsolute-slot-path\fR exceeds the
.B ap_id
length limit) If the last
.I slot_path
component is contained within an expansion chassis, and it
contains a
.IR serialid# ,
then the last
.I slot_path
component is used.
The requirement for a
.I serialid#
in this form is to ensure a globally
unique
.BR ap_id .
.RE

.sp
.ne 2
.mk
.na
.B ap_id
form (3)\fR
.ad
.sp .6
.RS 4n
(\fIabsolute-slot-path\fR exceeds the
.B ap_id
length limit) The default
form,
.I slot-id
form (3), of the last
.I slot_path
component is
used.
.RE

.sp
.LP
Whichever final
.B ap_id
name is used, the
.I absolute-slot-path
is
stored in the Information
.RB ( info )
field which can be displayed using
the
.B -s
or
.B -v
options. This information can be used to physically
locate any
.BR ap_id s
named using \fBap_id\fR form (2) or \fBap_id\fR form
(3). The
.I absolute-slot-path
is  transformed slightly when stored in
the information field, by the replacement of a colon
.RB ( : )
with forward
slashes
.RB ( / )
to more closely denote a topological context. The
.I absolute-slot-path
can include
.I slot-path
components that are not
hotpluggable above the leaf or rightmost
.I slot-path
component up to the
onboard host slot.
.sp
.LP
See the Examples section for a list of hotpluggable examples.
.SH OPTIONS
.sp
.LP
The following options are supported:
.sp
.ne 2
.mk
.na
.B -c
.I function
.ad
.sp .6
.RS 4n
The following functions are supported for PCI hotpluggable slots:
.sp
.ne 2
.mk
.na
.B configure
.ad
.sp .6
.RS 4n
Configure the PCI device in the slot to be used by Solaris.
.RE

.sp
.ne 2
.mk
.na
.B connect
.ad
.sp .6
.RS 4n
Connect the slot to PCI bus.
.RE

.sp
.ne 2
.mk
.na
.B disconnect
.ad
.sp .6
.RS 4n
Disconnect the slot from the PCI bus.
.RE

.sp
.ne 2
.mk
.na
.B insert
.ad
.sp .6
.RS 4n
Not supported.
.RE

.sp
.ne 2
.mk
.na
.B remove
.ad
.sp .6
.RS 4n
Not supported.
.RE

.sp
.ne 2
.mk
.na
.B unconfigure
.ad
.sp .6
.RS 4n
Logically remove the PCI device's resources from the system.
.RE

.RE

.sp
.ne 2
.mk
.na
.B -f
.ad
.sp .6
.RS 4n
Not supported.
.RE

.sp
.ne 2
.mk
.na
.B -h
.I ap_id
.RI | " ap_type"
.ad
.sp .6
.RS 4n
Display PCI hotplug-specific help message.
.RE

.sp
.ne 2
.mk
.na
.B -l
.I list
.ad
.sp .6
.RS 4n
List the values of PCI Hot Plug slots.
.RE

.sp
.ne 2
.mk
.na
.B -o
.I hardware_options
.ad
.sp .6
.RS 4n
No hardware specific options are currently defined.
.RE

.sp
.ne 2
.mk
.na
.B -s
.I listing_options
.ad
.sp .6
.RS 4n
Same as the generic
.BR cfgadm (1M).
.RE

.sp
.ne 2
.mk
.na
.B -t
.I ap_id
.ad
.sp .6
.RS 4n
This command is only supported on platforms that support testing capability
on the slot.
.RE

.sp
.ne 2
.mk
.na
.B -v
.ad
.sp .6
.RS 4n
Execute in verbose mode.
.sp
When the
.B -v
option is used with the
.B -l
option, the
.B cfgadm
command outputs information about the attachment point. For attachment
points located in a PCI Express hierarchy, the Information field will
contain the attachment point's absolute slot path location, including any
hardware- or platform-specific labeling information for each component in
the slot path. Each component in the slot path will be separated by a
\fB/\fR (forward slash). See "PCI Express \fBap_id\fR Naming," above. For
PCI Hot Plug attachment points not located in a PCI Express hierarchy, see
.BR cfgadm_pci (1M).
The information in the
.B Type
field is printed
with or without the
.B -v
option. The occupant
.B Type
field will
describe the contents of the slot. There are two possible values:
.sp
.ne 2
.mk
.na
.B unknown
.ad
.sp .6
.RS 4n
The slot is empty. If a card is in the slot, the card is not configured or
there is no driver for the device on the card.
.RE

.sp
.ne 2
.mk
.na
\fIsubclass\fR/\fIboard\fR
.ad
.sp .6
.RS 4n
The card in the slot is either a single-function or multi-function
device.
.sp
.I subclass
is a string representing the subclass code of the device,
for example,
.BR SCSI ,
.BR ethernet ,
.BR pci-isa ,
and so forth. If the
card is a multi-functional device,
.B MULT
will get displayed instead.
.sp
.I board
is a string representing the board type of the device. For
example,
.B hp
is the string used for a PCI Hot Plug adapter.
.RE

.RE

.sp
.ne 2
.mk
.na
.B -x
.I hardware_function
.ad
.sp .6
.RS 4n
Perform hardware-specific function. These hardware-specific functions
should not normally change the state of a receptacle or occupant.
.sp
The following
.I hardware_function
is supported:
.sp
.ne 2
.mk
.na
\fBled\fR=[\fIled_sub_arg\fR],\fBmode\fR=[\fImode_sub_arg\fR]\fR
.ad
.sp .6
.RS 4n
Without subarguments, display a list of the current LED settings. With
subarguments, set the mode of a specific LED for a slot.
.sp
Specify
.I led_sub_arg
as
.BR fault ,
.BR power ,
.BR attn ,
or
.BR active .
.sp
Specify
.I mode_sub_arg
as
.BR on ,
.BR off ,
or
.BR blink .
.sp
For PCI Express, only the
.B power
and
.B attn
LEDs are valid and
only the state of the
.B attn
LED can be changed.
.sp
Changing the state of the LED does not change the state of the receptacle
or occupant. Normally, the LEDs are controlled by the hotplug controller, no
user intervention is necessary. Use this command for testing purposes.
.LP
Caution -
.sp
.RS 2
Changing the state of the LED can misrepresent the state of occupant or
receptacle.
.RE
The following command displays the values of LEDs:
.sp
.in +2
.nf
example# \fBcfgadm -x led pcie2\fR
Ap_Id             Led
pcie2     power=on,fault=off,active=off,attn=off
.fi
.in -2
.sp

The following command sets the
.B attn
LED to blink to indicate the
location of the slot:
.sp
.in +2
.nf
example# \fBcfgadm -x led=attn,mode=blink pcie2\fR
.fi
.in -2
.sp

.RE

.RE

.SH EXAMPLES
.LP
.B Example 1
Displaying the Value of Each Slot
.sp
.LP
The following command displays the values of each slot:

.sp
.in +2
.nf
example# \fBcfgadm -l\fR
Ap_Id            Type         Receptacle   Occupant       Condition
c0               scsi-bus     connected    configured     unknown
c1               scsi-bus     connected    unconfigured   unknown
c2               scsi-bus     connected    unconfigured   unknown
pcie7            etherne/hp   connected    configured     ok
pcie8            unknown      empty        unconfigured   unknown
pcie9            fibre/hp     connected    configured     ok
.fi
.in -2
.sp

.LP
.B Example 2
Replacing a Card
.sp
.LP
The following command lists all DR-capable attachment points:

.sp
.in +2
.nf
example# \fBcfgadm\fR
Type             Receptacle   Occupant     Condition
c0               scsi-bus     connected    configured     unknown
c1               scsi-bus     connected    unconfigured   unknown
c2               scsi-bus     connected    unconfigured   unknown
pcie7            etherne/hp   connected    configured     ok
pcie8            unknown      empty        unconfigured   unknown
pcie9            fibre/hp     connected    configured     ok
.fi
.in -2
.sp

.sp
.LP
The following command unconfigures and electrically disconnects the card
identified by
.BR pcie7 :

.sp
.in +2
.nf
example# \fBcfgadm -c disconnect pcie7\fR
.fi
.in -2
.sp

.sp
.LP
The change can be verified by entering the following command:

.sp
.in +2
.nf
example# \fBcfgadm pcie7\fR
Ap_Id     Type         Receptacle   Occupant     Condition
pcie7     unknown      disconnected unconfigured unknown
.fi
.in -2
.sp

.sp
.LP
At this point the card can be swapped. The following command electrically
connects and configures the replacement card:

.sp
.in +2
.nf
example# \fBcfgadm -c configure pcie7\fR
.fi
.in -2
.sp

.sp
.LP
The change can be verified by entering the following command:

.sp
.in +2
.nf
example# \fBcfgadm pcie7\fR
Ap_Id     Type         Receptacle   Occupant     Condition
pcie7     etherne/hp   connected    configured   ok
.fi
.in -2
.sp

.LP
.B Example 3
Interpreting ApIds in a PCI Express Topology
.sp
.LP
The following command shows a listing for a topology with both PCI Express
and PCI attachment points in an I/O expansion chassis connected to
hotpluggable slots at the host level:

.sp
.in +2
.nf
example# \fBcfgadm -s cols=ap_id:info\fR
Ap_Id                          Information
iou#0-pci#0                    Location: iou#0-pci#0
iou#0-pci#1                    Location: iou#0-pci#1
iou#0-pci#1:iob.pci3           Location: iou#0-pci#1/iob.pci3
iou#0-pci#1:iob.pci4           Location: iou#0-pci#1/iob.pci4
iou#0-pci#2                    Location: iou#0-pci#2
iou#0-pci#2:iob58071.pcie1     Location: iou#0-pci#2/iob58071.pcie1
iou#0-pci#2:iob58071.special   Location: iou#0-pci#2/iob58071.special
iou#0-pci#3                    Location: iou#0-pci#3
iou#0-pci#3:iobBADF.pcie1      Location: iou#0-pci#3/iobBADF.pcie1
iou#0-pci#3:iobBADF.pcie2      Location: iou#0-pci#3/iobBADF.pcie2
iou#0-pci#3:iobBADF.pcie3      Location: iou#0-pci#3/iobBADF.pcie3
iou#0-pci#3:iobBADF.pci1       Location: iou#0-pci#3/iobBADF.pci1
iou#0-pci#3:iobBADF.pci2       Location: iou#0-pci#3/iobBADF.pci2
.fi
.in -2
.sp

.sp
.LP
In this example, the
.B iou#0-pci#[0-3]
entries represents the topmost
hotpluggable slots in the system. Because the
\fBiou#\fIn\fR-\fBpci#\fIn\fR form does not match any of the forms
stated in the grammar specification section described above, we can infer
that such a name for the base component in this  hotplug topology is derived
from the platform through the
.B slot-names
property.

.sp
.LP
The slots in the preceding output are described as follows:

.sp
.ne 2
.mk
.na
.B Slot iou#0-pci#0
.ad
.sp .6
.RS 4n
This slot is empty or its occupant is unconfigured.
.RE

.sp
.ne 2
.mk
.na
.B Slot iou#0-pci#1
.ad
.sp .6
.RS 4n
This slot contains an expansion chassis with two  hotpluggable slots,
.B pci3
and
.BR pci4 .
.B pci3
and
.B pci4
represent two PCI slots
contained within that expansion chassis with physical slot numbers
.BR 3
and
.BR 4 ,
respectively. The expansion chassis in this case does not have
or export a serial-id.
.RE

.sp
.ne 2
.mk
.na
.B Slot iou#0-pci#2
.ad
.sp .6
.RS 4n
This slot contains a third-party expansion chassis with a hexadecimal
serial-id of
.BR 58071 .
Within that expansion chassis are two hotpluggable
slots,
.B pcie1
and
.BR special .
.B pcie1
represents a PCI Express
slot with physical slot number
.BR 1 .
The slot
.B special
has a label
which is derived from the platform, hardware, or firmware.
.RE

.sp
.ne 2
.mk
.na
.B Slot iou#0-pci#3
.ad
.sp .6
.RS 4n
This slot contains a Sun expansion chassis with an FRU identifier of
.BR BADF .
This expansion chassis contains three PCI Express slots,
.BR pcie1 ,
.BR pcie2 ,
and
.B pcie3
with physical slot numbers
.BR 1 ,
.BR 2 ,
and
.BR 3 ,
.RB "respectively; and two PCI slots," " pci1"
and
.BR pci2 ,
with physical slot numbers 1 and 2, respectively.
.RE

.sp
.LP
The following command shows a listing for a topology with both PCI Express
and PCI attachment points in an I/O expansion chassis with connected
hotpluggable and non-hotpluggable host slots:

.sp
.in +2
.nf
example# \fBcfgadm -s cols=ap_id:info\fR
Ap_Id                          Information
Slot1                          Location: Slot1
Slot2:iob4ffa56.pcie1          Location: Slot2/iob4ffa56.pcie1
Slot2:iob4ffa56.pcie2          Location: Slot2/iob4ffa56.pcie2
Slot5:iob3901.pci1             Location: Slot2/iob3901.pci1
Slot5:iob3901.pci2             Location: Slot2/iob3901.pci2
.fi
.in -2
.sp

.sp
.LP
In this example, the host system only has one hotpluggable slot,
.BR Slot1 .
We can infer that
.B Slot2
and
.B Slot5
are not
hotpluggable slots because they do not appear as attachment points
themselves in
.BR cfgadm .
However,
.B Slot2
and
.B Slot5
each
contains a third party expansion chassis with hotpluggable slots.

.sp
.LP
The following command shows a listing for a topology with attachment points
that are lacking in certain device properties:

.sp
.in +2
.nf
example# \fBcfgadm -s cols=ap_id:info\fR
Ap_Id                          Information
px_pci7.pcie0                  Location: px_pci7.pcie0
px_pci11.pcie0                 Location: px_pci11.pcie0
px_pci11.pcie0:iob.pcie1       Location: px_pci11.pcie0/iob.pcie1
px_pci11.pcie0:iob.pcie2       Location: px_pci11.pcie0/iob.pcie2
px_pci11.pcie0:iob.pcie3       Location: px_pci11.pcie0/iob.pcie3
.fi
.in -2
.sp

.sp
.LP
In this example, the host system contains two hotpluggable slots,
.B px_pci7.pcie0
and
.BR px_pci11.pcie0 .
In this case, it uses
.B slot-id
form (3) ( the default form) for the base
.I slot-path
component in the
.IR absolute-slot-path ,
because the framework could not
obtain enough information to produce other more descriptive forms of higher
precedence.

.sp
.LP
Interpreting right-to-left, attachment point
.B px_pci7.pcie0
represents
a PCI Express slot with PCIdevice number
.B 0
(which does not imply a
physical slot number of the same number), bound  to  nexus driver
.BR px_pci ,
instance
.BR 7 .
Likewise, attachment point
.B px_pci11.pcie0
represents a PCI Express slot with PCI device number
.B 0
bound to driver instance
.B 11
of
.BR px_pci .

.sp
.LP
Under
.B px_pci11.pcie0
is a third-party expansion chassis without a
serial-id and with three hotpluggable PCI Express slots.

.sp
.LP
The following command shows a listing for a topology with attachment point
paths exceeding the
.B ApId
field length limit:

.sp
.in +2
.nf
example# \fBcfgadm -s cols=ap_id:info\fR
Ap_Id                          Information
pcie4                          Location: pcie4
pcie4:iobSUNW.pcie1            Location: pcie4/iobSUNW.pcie1
pcie4:iobSUNW.pcie2            Location: pcie4/iobSUNW.pcie2
iob8879c3f3.pci1
                 Location: pcie4/iobSUNW.pcie2/iob8879c3f3.pci1
iob8879c3f3.pci2
                 Location: pcie4/iobSUNW.pcie2/iob8879c3f3.pci2
iob8879c3f3.pci3
                 Location: pcie4/iobSUNW.pcie2/iob8879c3f3.pci3
.fi
.in -2
.sp

.sp
.LP
In this example, there is only one hotpluggable slot,
.B pcie4
in the
host. Connected under
.B pcie4
is a Sun  expansion chassis with FRU
identifier
.BR SUNW .
Nested under PCI Express slot
.B pcie2
of that
expansion chassis
.RB ( "ApId pcie4:iobSUNW.pcie2" )
lies another
expansion chassis with three hotpluggable PCI slots.

.sp
.LP
Because the length of the absolute-slot-path form of:

.sp
.in +2
.nf
pcie4/iobSUNW.pcie2/iob8879c3f3.pci1.\|.\|.3
.fi
.in -2
.sp

.sp
.LP
\&.\|.\|.exceeds the
.B ApId
field length limit, and the leaf slot-path
component is  globally unique,
.B ap_id
form (2) is used, where the leaf
.I slot-path
component in the
.I absolute-slot-path
is used as the
final
.BR ApId .

.sp
.LP
The following command shows a listing for a topology with attachment point
paths exceeding the
.B ApId
field-length limit and lacking enough
information to uniquely identify the leaf
.I slot-id
on its own (for
example, missing the serial-id):

.sp
.in +2
.nf
example# \fBcfgadm -s cols=ap_id:info\fR
Ap_Id                          Information
pcie4                          Location: pcie4
pcie4:iob4567812345678.pcie3   Location: pcie4/iob4567812345678.pcie3
px_pci20.pcie0
                Location: pcie4/iob4567812345678.pcie3/iob.pcie1
px_pci21.pcie0
                Location: pcie4/iob4567812345678.pcie3/iob.pcie2
.fi
.in -2
.sp

.sp
.LP
In this example, there is only one hotpluggable slot,
.B pcie4
in the
host. Connected under
.B pcie4
is a third-party expansion chassis with
hexadecimal serial-id
.BR 4567812345678 .
Nested under the PCI Express slot
.B pcie3
of that expansion chassis (\fBApId\fR
.BR pcie4:iob4567812345678.pcie3 ),
lies another third-party expansion
chassis without a serial- id and with two hotpluggable PCI Express slots.

.sp
.LP
Because the length of the absolute-slot-path form of:

.sp
.in +2
.nf
pcie4/iob4567812345678.pcie3/iob.pcie1.\|.\|.2
.fi
.in -2
.sp

.sp
.LP
exceeds the
.B ApId
field length limit, and the leaf
.I slot-path
component is not globally unique,
.B ap_id
form (3) is used.
.B ap_id
form (2) is where
.I slot-id
form (3) (the default form) of the leaf
.I slot-path
component in the
.I absolute-slot-path
is used as the
final
.BR ApId .

.sp
.LP
The default form or
.B slot-id
form (3) of the leaf component
\fB\&.\|.\|./iob.pcie1\fR represents a PCI Express slot with device number
.BR 0 ,
bound to driver instance
.B 20
of
.BR px_pci .
Likewise, the
default form of the leaf component \fB\&.\|.\|./iob.pcie2\fR represents a PCI
Express slot with device number
.BR 0 ,
bound to driver instance
.BR 21
of
.BR px_pci .

.SH FILES
.sp
.ne 2
.mk
.na
.B /usr/lib/cfgadm/shp.so.1
.ad
.sp .6
.RS 4n
Hardware-specific library for PCI Express and Standard PCI hotplugging.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcsl
_
Interface StabilityUncommitted
.TE

.SH SEE ALSO
.sp
.LP
.BR cfgadm (1M),
.BR cfgadm_pci (1M),
.BR hotplugd (1M),
.BR config_admin (3CFGADM),
.BR libcfgadm (3LIB),
.BR attributes (5),
.BR smf (5)
.SH NOTES
.sp
.LP
The
.B cfgadm_shp
library is dependent on the
.B hotplug
service,
which is managed by
.BR smf (5)
under FMRI:
.sp
.in +2
.nf
svc:/system/hotplug:default
.fi
.in -2
.sp

.sp
.LP
The service must be enabled for the
.B cfgadm_shp
library to function
properly. See
.BR hotplugd (1M)
for details.
