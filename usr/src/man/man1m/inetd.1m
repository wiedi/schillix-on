'\" te
.\" Copyright (c) 2006, Sun Microsystems, Inc. All Rights Reserved
.\" Copyright 1989 AT&T
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH inetd 1M "5 Jul 2007" "SunOS 5.11" "System Administration Commands"
.SH NAME
inetd \- Solaris Management Facility delegated restarter for inet
services
.SH SYNOPSIS
.LP
.nf
\fBinetd\fR  [\fIconfiguration-file\fR] start |  stop |  refresh
.fi

.LP
.nf
 svc:/network/inetd:default
.fi

.SH DESCRIPTION
.sp
.LP
.B inetd
is the delegated restarter for internet services for the
Service Management Facility (SMF). Its basic responsibilities are to manage
service states in response to administrative requests, system failures, and
service failures; and, when appropriate, to listen for network requests for
services.
.sp
.LP
Services are no longer managed by editing the inetd configuration file,
.BR inetd.conf (4).
Instead, you use
.BR inetconv (1M)
to convert the
configuration file content into SMF format services, then manage these
services using
.BR inetadm "(1M) and"
.BR svcadm (1M).
Once a service has
been converted by
.BR inetconv ,
any changes to the legacy data in the
.B inetd
config file will not become effective. However,
.B inetd
does
alert the administrator when it notices change in the configuration file.
See the start description under the "inetd Methods" section for further
information.
.sp
.LP
Also note that the current
.B inetd
cannot be run from outside the SMF.
This means it cannot be run from the command line, as was supported by the
previous
.BR inetd .
If you attempt to do this, a message is sent to stderr
displaying mappings between the options supported by the previous
.B inetd
to the SMF version of
.BR inetd .
.sp
.LP
.B inetd
listens for connections on behalf of all services that are in
either the
.B online
or
.B degraded
state. A service enters one of
these states when the service is enabled by the user and
.B inetd
manages
to listen on its behalf. A listen attempt can fail if another server
(whether standalone or a third-party internet service) is already listening
on the same port. When this occurs,
.B inetd
logs this condition and
continues trying to bind to the port at configured intervals a configured
number of times. See the property \fBbind_fail_max\fR under "Service
Properties," below, for more details.
.sp
.LP
The configuration of all
.BR inetd "'s managed SMF services is read when it"
is started. It is reread when
.B inetd
is refreshed, which occurs in
response to an SMF request, or when it receives a SIGHUP signal. See the
\fBrefresh\fR description under "inetd Methods" for the behavior on
configuration refresh.
.sp
.LP
You can use the \fBinetadm\fR(1M) or \fBsvccfg\fR(1M) utilities to make
configuration changes to Internet services within the SMF repository.
.B inetadm
has the advantage over
.B svccfg
in that it provides an
Internet/RPC service context.
.SS "Service States"
.sp
.LP
As part of its service management duties,
.B inetd
implements a state
machine for each of its managed services. The states in this machine are
made up of the
.BR smf (5)
set of states. The semantics of these states are
as follows:
.sp
.ne 2
.mk
.na
.B uninitialized
.ad
.sp .6
.RS 4n
.B inetd
has yet to process this service.
.RE

.sp
.ne 2
.mk
.na
.B online
.ad
.sp .6
.RS 4n
The service is handling new network requests and might have existing
connections active.
.RE

.sp
.ne 2
.mk
.na
.B degraded
.ad
.sp .6
.RS 4n
The service has entered this state because it was able to listen and
process requests for some, but not all, of the protocols specified for the
service, having exhausted its listen retries. Existing network connections
might be active.
.RE

.sp
.ne 2
.mk
.na
.B offline
.ad
.sp .6
.RS 4n
Connections might be active, but no new requests are being handled. This is
a transient state. A service might be
.B offline
for any of the following
reasons:
.RS +4
.TP
.ie t \(bu
.el o
The service's dependencies are unmet. When its dependencies become met the
service's state will be re-evaluated.
.RE
.RS +4
.TP
.ie t \(bu
.el o
The service has exceeded its configured connection rate limit,
.BR max_con_rate .
The service's state is re-evaluated when its connection
offline timer,
.BR con_rate_offline ,
expires.
.RE
.RS +4
.TP
.ie t \(bu
.el o
The service has reached its allowed number of active connections,
.BR max_copies .
The service's state is re-evaluated when the number of
active connections drops below
.BR max_copies .
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B inetd
failed to listen on behalf of the service on all its protocols.
As mentioned above,
.B inetd
retries up to a configured maximum number of
times, at configured intervals.The service's state is re-evaluated when
either a listen attempt is successful or the retry limit is reached.
.RE
.RE

.sp
.ne 2
.mk
.na
.B disabled
.ad
.sp .6
.RS 4n
The service has been turned off by an administrator, is not accepting new
connections, and has none active. Administrator intervention is required to
exit this state.
.RE

.sp
.ne 2
.mk
.na
.B maintenance
.ad
.sp .6
.RS 4n
A service is in this state because it is either malfunctioning and needs
adminstrator attention or because an administrator has requested it.
.sp
Events constituting malfunctioning include: \fBinetd\fR's inability to
listen on behalf on any of the service's protocols before exceeding the
service's bind retry limit, non-start methods returning with non-success
return values, and the service exceeding its failure rate.
.sp
You request the maintenance state to perform maintenance on the service,
such as applying a patch. No new requests are handled in this state, but
existing connections might be active. Administrator intervention is required
to exit this state.
.RE

.sp
.LP
Use \fBinetadm\fR(1M) to obtain the current state of a managed service.
.SS "Service Methods"
.sp
.LP
As part of certain state transitions
.B inetd
will execute, if supplied,
one of a set of methods provided by the service. The set of supported
methods are:
.sp
.ne 2
.mk
.na
.B inetd_start
.ad
.sp .6
.RS 4n
Executed to handle a request for an
.B online
or
.B degraded
service.
Since there is no separate state to distinguish a service with active
connections, this method is not executed as part of a state transition.
.RE

.sp
.ne 2
.mk
.na
.B inetd_offline
.ad
.sp .6
.RS 4n
Executed when a service is taken from the
.B online
or
.BR degraded
state to the \fBoffline\fR state. For a \fBwait\fR-type service that at the
time of execution is performing its own listening, this method should result
in it ceasing listening. This method will be executed before the
\fBdisable\fR method in the case an \fBonline\fR/\fBdegraded\fR service is
disabled. This method is required to be implemented for a \fBwait\fR-type
service.
.RE

.sp
.ne 2
.mk
.na
.B inetd_online
.ad
.sp .6
.RS 4n
Executed when a service transitions from the
.B offline
state to the
.B online
state. This method allows a service author to carry out some
preparation prior to a service starting to handle requests.
.RE

.sp
.ne 2
.mk
.na
.B inetd_disable
.ad
.sp .6
.RS 4n
Executed when a service transitions from the
.B offline
state to the
.B disabled
state. It should result in any active connections for a
service being terminated.
.RE

.sp
.ne 2
.mk
.na
.B inetd_refresh
.ad
.sp .6
.RS 4n
Executed when both of the following conditions are met:
.RS +4
.TP
.ie t \(bu
.el o
.B inetd
is refreshed, by means of the framework or a SIGHUP, or a
request comes in to refresh the service, and
.RE
.RS +4
.TP
.ie t \(bu
.el o
the service is currently in the
.B online
state and there are no
configuration changes that would result in the service needing to be taken
.B offline
and brought back again.
.RE
.RE

.sp
.LP
The only compulsory method is the
.B inetd_start
method. In the absence
of any of the others,
.B inetd
runs no method but behaves as if one was
run successfully.
.SS "Service Properties"
.sp
.LP
Configuration for SMF-managed services is stored in the SMF repository. The
configuration is made up of the basic configuration of a service, the
configuration for each of the service's methods, and the default
configuration applicable to all
.BR inetd "-managed services."
.sp
.LP
For details on viewing and modifying the configuration of a service and the
defaults, refer to
.BR inetadm (1M).
.sp
.LP
The basic configuration of a service is stored in a property group named
.B inetd
in the service. The properties comprising the basic
configuration are as follows:
.sp
.ne 2
.mk
.na
.B bind_addr
.ad
.sp .6
.RS 4n
The address of the network interface to which the service should be bound.
An empty string value causes the service to accept connections on any
network interface.
.RE

.sp
.ne 2
.mk
.na
.B bind_fail_interval
.ad
.sp .6
.RS 4n
The time interval in seconds between a failed bind attempt and a retry. The
values
.B 0
and
.B -1
specify that no retries are attempted and the
first failure is handled the same as exceeding
.BR bind_fail_max .
.RE

.sp
.ne 2
.mk
.na
.B bind_fail_max
.ad
.sp .6
.RS 4n
The maximum number of times
.B inetd
retries binding to a service's
associated port before giving up. The value
.B -1
specifies that no retry
limit is imposed. If none of the service's protocols were bound to before
.RB "any imposed limit is reached, the service goes to the" " maintenance"
state; otherwise, if not all of the protocols were bound to, the service
goes to the
.B degraded
state.
.RE

.sp
.ne 2
.mk
.na
.B con_rate_offline
.ad
.sp .6
.RS 4n
The time in seconds a service will remain offline if it exceeds its
configured maximum connection rate,
.BR max_con_rate .
The values
.BR 0
and
.B -1
specify that connection rate limiting is disabled.
.RE

.sp
.ne 2
.mk
.na
.B connection_backlog
.ad
.sp .6
.RS 4n
The backlog queue size. Represents a limit on the number of incoming client
requests that can be queued at the listening endpoints for servers.
.RE

.sp
.ne 2
.mk
.na
.B endpoint_type
.ad
.sp .6
.RS 4n
The type of the socket used by the service or the value
.B tli
to
signify a TLI-based service. Valid socket type values are:
.BR stream ,
.BR dgram ,
.BR raw ,
.BR seqpacket .
.RE

.sp
.ne 2
.mk
.na
.B failrate_cnt
.ad
.sp .6
.RS 4n
The count portion of the service's failure rate limit. The failure rate
limit applies to \fBwait\fR-type services and is reached when \fIcount\fR
instances of the service are started within a given time. Exceeding the rate
results in the service being transitioned to the
.B maintenance
state.
This is different from the behavior of the previous
.BR inetd ,
which
continued to retry every 10 minutes, indefinitely. The \fBfailrate_cnt\fR
check accounts for badly behaving servers that fail before consuming the
service request and which would otherwise be continually restarted, taxing
system resources. Failure rate is equivalent to the
.B -r
option of the
previous
.BR inetd .
The values
.B 0
and
.B -1
specify that this
feature is disabled.
.RE

.sp
.ne 2
.mk
.na
.B failrate_interval
.ad
.sp .6
.RS 4n
The time portion in seconds of the service's failure rate. The values
.B 0
and
.B -1
specify that the failure rate limit feature is
disabled.
.RE

.sp
.ne 2
.mk
.na
.B inherit_env
.ad
.sp .6
.RS 4n
If true, pass \fBinetd\fR's environment on to the service's start method.
Regardless of this setting,
.B inetd
will set the variables
.BR SMF_FMRI ,
.BR SMF_METHOD ,
and
.B SMF_RESTARTER
in the start
method's environment, as well as any environment variables set in the method
context. These variables are described in
.BR smf_method (5).
.RE

.sp
.ne 2
.mk
.na
.B isrpc
.ad
.sp .6
.RS 4n
If true, this is an RPC service.
.RE

.sp
.ne 2
.mk
.na
.B max_con_rate
.ad
.sp .6
.RS 4n
The maximum allowed connection rate, in connections per second, for a
\fBnowait\fR-type service. The values \fB0\fR and \fB-1\fR specify that that
connection rate limiting is disabled.
.RE

.sp
.ne 2
.mk
.na
.B max_copies
.ad
.sp .6
.RS 4n
The maximum number of copies of a
.B nowait
service that can run
concurrently. The values
.B 0
and
.B -1
specify that copies limiting
is disabled.
.RE

.sp
.ne 2
.mk
.na
.B name
.ad
.sp .6
.RS 4n
Can be set to one of the following values:
.RS +4
.TP
.ie t \(bu
.el o
a service name understood by
.BR getservbyname (3SOCKET);
.RE
.RS +4
.TP
.ie t \(bu
.el o
if
.B isrpc
is set to
.BR true ,
a service name understood by
.BR getrpcbyname (3NSL);
.RE
.RS +4
.TP
.ie t \(bu
.el o
if
.B isrpc
is set to
.BR true ,
a valid RPC program number.
.RE
.RE

.sp
.ne 2
.mk
.na
.B proto
.ad
.sp .6
.RS 4n
In the case of socket-based services, this is a list of protocols supported
by the service. Valid protocols are:
.BR tcp ,
.BR tcp6 ,
.BR tcp6only ,
.BR udp ,
.BR udp6 ,
and
.BR udp6only .
In the case of TLI services, this
is a list of netids recognized by \fBgetnetconfigent\fR(3NSL) supported by
the service, plus the values
.B tcp6only
and
.BR udp6only .
RPC/TLI
services also support nettypes in this list, and
.B inetd
first tries to
interpret the list member as a nettype for these service types. The values
.B tcp6only
and
.B udp6only
are new to
.BR inetd ;
these values
request that
.B inetd
listen only for and pass on true
.BR IPv6
requests (not IPv4 mapped ones). See "Configuring Protocols for
Sockets-Based Services," below.
.RE

.sp
.ne 2
.mk
.na
.B rpc_low_version
.ad
.sp .6
.RS 4n
Lowest supported RPC version. Required when
.B isrpc
is set to
.BR true .
.RE

.sp
.ne 2
.mk
.na
.B rpc_high_version
.ad
.sp .6
.RS 4n
Highest supported RPC version. Required when
.B isrpc
is set to
.BR true .
.RE

.sp
.ne 2
.mk
.na
.B tcp_trace
.ad
.sp .6
.RS 4n
If true, and this is a \fBnowait\fR-type service,
.B inetd
logs the
client's IP address and TCP port number, along with the name of the service,
for each incoming connection, using the \fBsyslog\fR(3C) facility.
.B inetd
uses the
.B syslog
facility
.B code
daemon and
.B notice
priority level. See
.BR syslog.conf (4)
for a description of
.B syslog
codes and severity levels. This logging is separate from the
logging done by the TCP wrappers facility.
.sp
.B tcp_trace
is equivalent to the previous
.BR inetd 's
.B -t
option
(and the
.B /etc/default/inetd
property
.BR ENABLE_CONNECTION_LOGGING ).
.RE

.sp
.ne 2
.mk
.na
.B tcp_wrappers
.ad
.sp .6
.RS 4n
If
.BR true ,
enable TCP wrappers access control. This applies only to
services with
.B endpoint_type
set to
.B streams
and
.B wait
set to
.BR false .
The
.B syslog
facility
.B code
daemon is used to log
allowed connections (using the
.B notice
severity level) and denied
traffic (using the
.B warning
severity level). See
.BR syslog.conf (4)
for a description of
.B syslog
codes and severity levels. The stability
level of the TCP wrappers facility and its configuration files is External.
As the TCP wrappers facility is not controlled by Sun, intra-release
incompatibilities are not uncommon. See
.BR attributes (5).
.sp
For more information about configuring TCP wrappers, you can refer to the
.B tcpd(1M)
and
.B hosts_access(4)
man pages, which are delivered as
part of the Solaris operating system at
.BR /usr/sfw/man .
These pages are
not part of the standard Solaris man pages, available at
.BR /usr/man .
.sp
.B tcp_wrappers
is equivalent to the previous inetd's
.B /etc/default/inetd
property
.BR ENABLE_TCPWRAPPERS .
.RE

.sp
.ne 2
.mk
.na
.B wait
.ad
.sp .6
.RS 4n
If
.B true
this is a
.BR wait "-type service, otherwise it is a"
\fBnowait\fR-type service. A \fBwait\fR-type service has the following
characteristics:
.RS +4
.TP
.ie t \(bu
.el o
Its
.B inetd_start
method will take over listening duties on the
service's bound endpoint when it is executed.
.RE
.RS +4
.TP
.ie t \(bu
.el o
.B inetd
will wait for it to exit after it is executed before it resumes
listening duties.
.RE
Datagram servers must be configured as being of type
.BR wait ,
as they
are always invoked with the original datagram endpoint that will participate
in delivering the service bound to the specified service. They do not have
separate "listening" and "accepting" sockets. Connection-oriented services,
such as TCP stream services can be designed to be either of type
.BR wait
or
.BR nowait .
.RE

.sp
.LP
A number of the basic properties are optional for a service. In their
absence, their values are taken from the set of default values present in
the
.B defaults
property group in the
.B inetd
service. These
properties, with their seed values, are listed below. Note that these values
are configurable through
.BR inetadm (1M).
.sp
.in +2
.nf
bind_fail_interval  -1
bind_fail_max       -1
con_rate_offline    -1
connection_backlog  10
failrate_count      40
failrate_time       60
inherit_env         true
max_con_rate        -1
max_copies          -1
tcp_trace           false
tcp_wrappers        false
.fi
.in -2

.sp
.LP
Each method specified for a service will have its configuration stored in
the SMF repository, within a property group of the same name as the method.
The set of properties allowable for these methods includes those specified
for the services managed by
.BR svc.startd "(1M). (See"
.BR svc.startd (1M)
for further details.) Additionally, for the
.B inetd_start
method, you
can set the
.B arg0
property.
.sp
.LP
The
.B arg0
property allows external wrapper programs to be used with
.B inetd
services. Specifically, it allows the first argument,
.BR argv[0] ,
of the service's start method to be something other than the
path of the server program.
.sp
.LP
In the case where you want to use an external wrapper program and pass
arguments to the service's daemon, the arguments should be incorporated as
arguments to the wrapper program in the
.B exec
property. For example:
.sp
.in +2
.nf
exec='/path/to/wrapper/prog service_daemon_args'
arg0='/path/to/service/daemon'
.fi
.in -2

.sp
.LP
In addition to the special method tokens mentioned in
.BR smf_method (5),
.B inetd
also supports the
.B :kill_process
token for
.BR wait -type
services. This results in behavior identical to that if the \fB:kill\fR
token were supplied, except that the
.B kill
signal is sent only to the
parent process of the
.BR wait "-type service's"
.B start
method, not to
all members of its encompassing process contract (see
.BR process (4)).
.SS "Configuring Protocols for Sockets-Based Services"
.sp
.LP
When configuring
.B inetd
for a sockets-based service, you have the
choice, depending on what is supported by the service, of the alternatives
described under the
.B proto
property, above. The following are
guidelines for which
.B proto
values to use:
.RS +4
.TP
.ie t \(bu
.el o
For a service that supports only IPv4:
.B tcp
and
.BR udp
.RE
.RS +4
.TP
.ie t \(bu
.el o
For a service that supports only IPv6:
.B tcp6only
and
.BR udp6only
.RE
.RS +4
.TP
.ie t \(bu
.el o
For a service that supports both IPv4 and IPv6:
.RS +4
.TP
.ie t \(bu
.el o
Obsolete and not recommended:
.B tcp6
and
.BR udp6
.RE
.RS +4
.TP
.ie t \(bu
.el o
Recommended: use two separate entries that differ only in the proto field.
One entry has
.B tcp
and the other has
.BR tcp6only ,
or
.B udp
plus
.BR udp6only .
.RE
.RE
.sp
.LP
See EXAMPLES for an example of a configuration of a service that supports
both IPv4 and IPv6.
.SS "\fBinetd\fR Methods"
.sp
.LP
.B inetd
provides the methods listed below for consumption by the master
restarter,
.BR svc.startd (1M).
.sp
.ne 2
.mk
.na
.B start
.ad
.sp .6
.RS 4n
Causes
.B inetd
.RB "to start providing service. This results in" " inetd"
beginning to handle
.B smf
requests for its managed services and network
requests for those services that are in either the
.B online
or
.B degraded
state.
.sp
In addition,
.B inetd
also checks if the \fBinetd.conf\fR(4)-format
configuration file it is monitoring has changed since the last
.BR inetconv (1M)
conversion was carried out. If it has, then a message
telling the administrator to re-run
.B inetconv
to effect the changes
made is logged in
.BR syslog .
.RE

.sp
.ne 2
.mk
.na
.B stop
.ad
.sp .6
.RS 4n
Causes
.B inetd
.RB "to stop providing service. At this point," " inetd"
transitions each of its services that are not in either the
.B maintenance
or
.B disabled
states to the
.B offline
state,
running any appropriate methods in the process.
.RE

.sp
.ne 2
.mk
.na
.B refresh
.ad
.sp .6
.RS 4n
Results in a refresh being performed for each of its managed services and
the
.BR inetd.conf (4)
format configuration file being checked for change,
as in the
.B start
method. When a service is refreshed, its behavior
depends on its current state:
.RS +4
.TP
.ie t \(bu
.el o
if it is in the
.B maintenance
or
.B disabled
states, no action is
performed because the configuration will be read and consumed when the
service leaves the state;
.RE
.RS +4
.TP
.ie t \(bu
.el o
if it is in the
.B offline
state, the configuration will be read and any
changes consumed immediately;
.RE
.RS +4
.TP
.ie t \(bu
.el o
if it is in the
.B online
or
.B degraded
state and the configuration
has changed such that a re-binding is necessary to conform to it, then the
service will be transitioned to the
.B offline
state and back again,
using the new configuration for the bind;
.RE
.RS +4
.TP
.ie t \(bu
.el o
if it is in the
.B online
state and a re-binding is not necessary, then
the
.B inetd_refresh
method of the service, if provided, will be run to
allow
.BR "online wait" "-type services to consume any other changes."
.RE
.RE

.SH OPTIONS
.sp
.LP
No options are supported.
.SH OPERANDS
.sp
.ne 2
.mk
.na
.I configuration-file
.ad
.sp .6
.RS 4n
Specifies an alternate location for the legacy service file
(\fBinetd.conf\fR(4)).
.RE

.sp
.ne 2
.mk
.na
\fBstart\fR|\fBstop\fR|\fBrefresh\fR
.ad
.sp .6
.RS 4n
Specifies which of
.BR inetd "'s methods should be run."
.RE

.SH EXAMPLES
.LP
.B Example 1
Configuring a Service that Supports Both IPv4 and IPv6
.sp
.LP
The following commands illustrate the existence of services that support
both IPv4 and IPv6 and assign
.B proto
properties to those services.

.sp
.in +2
.nf
example# \fBsvcs -a | grep mysvc\fR
online         15:48:29 svc:/network/mysvc:dgram4
online         15:48:29 svc:/network/mysvc:dgram6
online         15:51:47 svc:/network/mysvc:stream4
online         15:52:10 svc:/network/mysvc:stream6

# \fBinetadm -M network/rpc/mysvc:dgram4 proto=udp\fR
# \fBinetadm -M network/rpc/mysvc:dgram6 proto=udp6only\fR
# \fBinetadm -M network/rpc/mysvc:stream4 proto=tcp\fR
# \fBinetadm -M network/rpc/mysvc:stream6 proto=tcp6only\fR
.fi
.in -2
.sp

.sp
.LP
See
.BR svcs (1)
and \fBinetadm\fR(1M) for descriptions of those
commands.

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcsu
_
Interface StabilityEvolving
.TE

.SH SEE ALSO
.sp
.LP
.BR fmd (1M),
.BR inetadm (1M),
.BR inetconv (1M),
.BR svcadm (1M),
.BR svccfg (1M),
.BR svcs (1),
.BR svc.startd (1M),
.BR syslog (3C),
.BR getnetconfigent (3NSL),
.BR getrpcbyname (3NSL),
.BR getservbyname (3SOCKET),
.BR inetd.conf (4),
.BR process (4),
.BR syslog.conf (4),
.BR attributes (5),
.BR smf (5),
.BR smf_method (5)
.SH NOTES
.sp
.LP
The
.B inetd
daemon performs the same function as, but is implemented
significantly differently from, the daemon of the same name in Solaris 9 and
prior Solaris operating system releases. In the current Solaris release,
.B inetd
is part of the Solaris Management Facility (see \fBsmf\fR(5))
and will run only within that facility.
.sp
.LP
The
.B /etc/default/inetd
file has been deprecated. The functionality
represented by the properties
.B ENABLE_CONNECTION_LOGGING
and
.B ENABLE_TCP_WRAPPERS
are now available as the
.B tcp_trace
and
.B tcp_wrappers
properties, respectively. These properties are described
above, under "Service Properties".
