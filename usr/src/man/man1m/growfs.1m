'\" te
.\" Copyright (c) 2009, Sun Microsystems, Inc.
.\"  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH growfs 1M "20 Apr 2009" "SunOS 5.11" "System Administration Commands"
.SH NAME
growfs \- non-destructively expand a UFS file system
.SH SYNOPSIS
.LP
.nf
\fB/usr/sbin/growfs\fR [\fB-M\fR \fImount-point\fR] [\fInewfs-options\fR]
     [\fIraw-device\fR]
.fi

.SH DESCRIPTION
.sp
.LP
\fBgrowfs\fR non-destructively expands a mounted or unmounted UNIX file
system (UFS) to the size of the file system's slice(s).
.sp
.LP
Typically, disk space is expanded by first adding a slice to a metadevice,
then running the \fBgrowfs\fR command. When adding space to a mirror, you
expand each submirror before expanding the file system.
.sp
.LP
\fBgrowfs\fR will ``write-lock'' (see \fBlockfs\fR(1M)) a mounted file
system when expanding. The length of time the file system is write-locked
can be shortened by expanding the file system in stages. For instance, to
expand a 1 Gbyte file system to 2 Gbytes, the file system can be grown in 16
Mbyte stages using the
.B -s
option to specify the total size of the new
file system at each stage. The argument for
.B -s
is the number of
sectors, and must be a multiple of the cylinder size. Note: The file system
cannot be grown if a cylinder size of less than 2 is specified. Refer to the
\fBnewfs\fR(1M) man page for information on the options available when
growing a file system.
.sp
.LP
\fBgrowfs\fR displays the same information as \fBmkfs\fR during the
expansion of the file system.
.sp
.LP
If \fBgrowfs\fR is aborted, recover any lost free space by unmounting the
file system and running the \fBfsck\fR command, or run the \fBgrowfs\fR
command again.
.sp
.LP
\fBNote:\fR If \fBgrowfs\fR is aborted and the file system is used before
\fBfsck\fR is run on it, UFS metadata might be left in an incomplete state,
with the result that the file system would be corrupted. In such a
circumstance, you would have to restore the file system from backups.
.SH OPTIONS
.sp
.LP
Root privileges are required for all of the following options.
.sp
.ne 2
.mk
.na
\fB-M\fR \fImount-point\fR
.ad
.RS 18n
.rt
The file system to be expanded is mounted on
.IR mount-point .
File system
locking (\fBlockfs\fR) will be used.
.RE

.sp
.ne 2
.mk
.na
\fInewfs-options\fR
.ad
.RS 18n
.rt
The options are documented in the \fBnewfs\fR man page.
.RE

.sp
.ne 2
.mk
.na
.I raw-device
.ad
.RS 18n
.rt
Specifies the name of a raw metadevice or raw special device, residing in
.BR /dev/md/rdsk ,
or
.BR /dev/rdsk ,
respectively, including the disk
slice, where you want the file system to be grown.
.RE

.SH EXAMPLES
.LP
\fBExample 1\fR Expanding nonmetadevice slice for \fB/export\fR file
system
.sp
.LP
The following example expands a nonmetadevice slice for the
.BR /export
file system. In this example, the existing slice,
.BR /dev/dsk/c1t0d0s3 ,
is converted to a metadevice so additional slices can be concatenated.

.sp
.in +2
.nf
# metainit -f d8 2 1 c1t0d0s3 1 c2t0d0s3
# umount /export
.fi
.in -2
.sp

.LP
\fBExample 2\fR Associate \fB/export\fR with new metadevice
.sp
.LP
Edit the \fB/etc/vfstab\fR file to change the entry for
.B /export
to
the newly defined metadevice,
.BR d8 .

.sp
.in +2
.nf
# mount /export
# growfs -M /export /dev/md/rdsk/d8
.fi
.in -2
.sp

.sp
.LP
The first example starts by running the
.B metainit
command with the
\fB-f\fR option to force the creation of a new concatenated metadevice
.BR d8 ,
which consists of the existing slice
.B /dev/dsk/c1t0d0s3
and a
new slice
.BR /dev/dsk/c2t0d0s3 .
Next, the file system on \fB/export\fR
must be unmounted. The \fB/etc/vfstab\fR file is edited to change the entry
for
.B /export
to the newly defined metadevice name, rather than the
slice name. After the file system is remounted, the \fBgrowfs\fR command is
run to expand the file system. The file system will span the entire
metadevice when \fBgrowfs\fR completes. The
.B -M
option enables the
\fBgrowfs\fR command to expand a mounted file system. During the expansion,
write access for
.B /export
is suspended until \fBgrowfs\fR unlocks the
file system. Read access is not affected, though access times are not kept
when the lock is in effect.

.LP
\fBExample 3\fR Dynamic Expansion of \fB/export\fR file system
.sp
.LP
The following example picks up from the previous one. Here, the
\fB/export\fR file system mounted on metadevice \fBd8\fR is dynamically
expanded.

.sp
.in +2
.nf
# metattach d8 c0t1d0s2
# growfs -M /export /dev/md/rdsk/d8
.fi
.in -2
.sp

.sp
.LP
This example begins by using the
.B metattach
command to dynamically
concatenate a new slice,
.BR /dev/dsk/c0t1d0s2 ,
to the end of an existing
metadevice,
.BR d8 .
Next, the \fBgrowfs\fR command specifies that the
mount-point is
.B /export
and that it is to be expanded onto the raw
metadevice
.BR /dev/md/rdsk/d8 .
The file system will span the entire
metadevice when \fBgrowfs\fR completes. During the expansion, write access
for
.B /export
is suspended until \fBgrowfs\fR unlocks the file system.
Read access is not affected, though access times are not kept when the lock
is in effect.

.LP
\fBExample 4\fR Expanding mounted file system to existing mirror
.sp
.LP
The following example expands a mounted file system
.BR /files ,
to an
existing mirror,
.BR d80 ,
which contains two submirrors,
.B d9
and
.BR d10 .

.sp
.in +2
.nf
# metattach d9 c0t2d0s5
# metattach d10 c0t3d0s5
# growfs -M /files /dev/md/rdsk/d80
.fi
.in -2
.sp

.sp
.LP
In this example, the
.B metattach
command dynamically concatenates the
new slices to each submirror. The
.B metattach
command must be run for
each submirror. The mirror will automatically grow when the last submirror
is dynamically concatenated. The mirror will grow to the size of the
smallest submirror. The \fBgrowfs\fR command then expands the file system.
The \fBgrowfs\fR command specifies that the mount-point is \fB/files\fR and
that it is to be expanded onto the raw metadevice
.BR /dev/md/rdsk/d80 .
The file system will span the entire mirror when the \fBgrowfs\fR command
completes. During the expansion, write access for the file system is
suspended until \fBgrowfs\fR unlocks the file system. Read access is not
affected, though access times are not kept when the lock is in effect.

.SH EXIT STATUS
.sp
.LP
The following exit values are returned:
.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 6n
.rt
Successful completion.
.RE

.sp
.ne 2
.mk
.na
.B >0
.ad
.RS 6n
.rt
An error occurred.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWmdu
.TE

.SH SEE ALSO
.sp
.LP
\fBfsck\fR(1M), \fBlockfs\fR(1M), \fBmkfs\fR(1M), \fBmetattach\fR(1M),
\fBnewfs\fR(1M), \fBattributes\fR(5)
.sp
.LP
.I Solaris Volume Manager Administration Guide
.SH LIMITATIONS
.sp
.LP
Only UFS file systems (either mounted or unmounted) can be expanded using
the \fBgrowfs\fR command. Once a file system is expanded, it cannot be
decreased in size. The following conditions prevent you from expanding file
systems: When
.B acct
is activated and the accounting file is on the
target device. When C2 security is activated and the logging file is on the
target file system. When there is a local
.B swap
file in the target file
system. When the file system is root
.RB ( / ),
.BR /usr ,
or
.BR swap .
