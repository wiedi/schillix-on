'\" te
.\" Copyright (c) 2003, Sun Microsystems, Inc. All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH pkgadm 1M "20 Mar 2009" "SunOS 5.11" "System Administration Commands"
.SH NAME
pkgadm \- manage packaging and patching system
.SH SYNOPSIS
.LP
.nf
\fBpkgadm addcert\fR [\fB-ty\fR] [\fB-a\fR \fIapp\fR] [\fB-k\fR \fIkeystore\fR] [\fB-e\fR \fIkeyfile\fR]
     [\fB-f\fR \fIformat\fR] [\fB-n\fR \fIname\fR] [\fB-P\fR \fIpassarg\fR]
     [\fB-p\fR \fIimport_passarg\fR] [\fB-R\fR \fIrootpath\fR] certfile
.fi

.LP
.nf
\fBpkgadm removecert\fR [\fB-a\fR \fIapp\fR] [\fB-k\fR \fIkeystore\fR] \fB-n\fR \fIname\fR
     [\fB-P\fR \fIpassarg\fR] [\fB-R\fR \fIrootpath\fR]
.fi

.LP
.nf
\fBpkgadm listcert\fR [\fB-a\fR \fIapp\fR] [\fB-f\fR \fIformat\fR] [\fB-k\fR \fIkeystore\fR] \fB-n\fR \fIname\fR
     [\fB-P\fR \fIpassarg\fR] [\fB-o\fR \fIoutfile\fR] [\fB-R\fR \fIrootpath\fR]
.fi

.LP
.nf
\fBpkgadm dbstatus\fR [\fB-R\fR \fIrootpath\fR]
.fi

.LP
.nf
\fBpkgadm sync\fR [\fB-R\fR \fIrootpath\fR] [\fB-q\fR]
.fi

.LP
.nf
\fBpkgadm\fR \fB-V\fR
.fi

.LP
.nf
\fBpkgadm\fR \fB-?\fR
.fi

.SH DESCRIPTION
.sp
.LP
The
.B pkgadm
utility is used for managing the packaging and patching
system. It has several subcommands that perform various operations relating
to packaging. The
.B pkgadm
command includes subcommands for managing
certificates and keys used.
.SS "Managing Keys and Certificates"
.sp
.LP
.B pkgadm
maintains the packaging-system-wide keystore in
.BR /var/sadm/security ,
and individual user's certificates in
.BR ~/.pkg/security .
The following subcommands operate on the package
keystore database:
.sp
.ne 2
.mk
.na
.B addcert
.ad
.sp .6
.RS 4n
Add (import) a certificate into the database, with optional trust. Once
added, trusted certificates can be used to verify signed packages and
patches. Non-trusted user certificates and their associated keys can be used
to sign packages and patches. Added user certificates are
.B not
used to
build certificate chains during certificate verification.
.RE

.sp
.ne 2
.mk
.na
.B removecert
.ad
.sp .6
.RS 4n
Removes a user certificate/private key pair, or a trusted certificate
authority certificate from the keystore. Once removed, the certificate and
keys cannot be used.
.RE

.sp
.ne 2
.mk
.na
.B listcert
.ad
.sp .6
.RS 4n
Print details of one or more certificates in the keystore.
.RE

.sp
.ne 2
.mk
.na
.B sync
.ad
.sp .6
.RS 4n
Writes the contents file and rolls the contents log file. With use of the
.B -q
option, forces the contents file server to quit.
.RE

.SS "Internal Install Database"
.sp
.LP
The Solaris operating system relies upon enhanced System V revision 4 (SVr4)
packages as the basis for its software installation and revision management.
The package maintenance software stores information about installed packages
in an internal database. The
.B pkgadm
subcomand
.B dbstatus
is used to
determine how the package internal database is implemented. The
.B dbstatus
command returns a string that indicates the type of internal
database in use. In the current implementation, the
.B dbstatus
command
always returns the string
.BR text ,
which indicates that the
.BR contents (4)
package database is inuse. Future releases of Solaris might
supply alternative database implementations.
.SH OPTIONS
.sp
.LP
The following options are supported:
.sp
.ne 2
.mk
.na
.B -a
.I app
.ad
.sp .6
.RS 4n
If this option is used, then the command only affects the keystore
associated with a particular application. Otherwise, the global keystore is
affected.
.RE

.sp
.ne 2
.mk
.na
.B -e
.I keyfile
.ad
.sp .6
.RS 4n
When adding a non-trusted certificate/key combination, this option can be
used to specify the file that contains the private key. If this option is not
used, the private key must be in the same file as the certificate being
added.
.RE

.sp
.ne 2
.mk
.na
.B -f
.I format
.ad
.sp .6
.RS 4n
When adding certificates, this specifies the format to expect certificates
and private keys in. Possible values when adding are:
.sp
.ne 2
.mk
.na
.B pem
.ad
.sp .6
.RS 4n
Certificate and any private key uses PEM encoding.
.RE

.sp
.ne 2
.mk
.na
.B der
.ad
.sp .6
.RS 4n
Certificate and any private key uses DER encoding.
.RE

When printing certificates, this specifies the output format used when
printing. Acceptable values for format are:
.sp
.ne 2
.mk
.na
.B pem
.ad
.sp .6
.RS 4n
Output each certificate using PEM encoding.
.RE

.sp
.ne 2
.mk
.na
.B der
.ad
.sp .6
.RS 4n
Output each certificate using DER encoding.
.RE

.sp
.ne 2
.mk
.na
.B text
.ad
.sp .6
.RS 4n
Output each certificate in human-readable format.
.RE

.RE

.sp
.ne 2
.mk
.na
.B -k
.I keystore
.ad
.sp .6
.RS 4n
Overrides the default location used when accessing the keystore.
.RE

.sp
.ne 2
.mk
.na
.B -n
.I name
.ad
.sp .6
.RS 4n
Identifies the entity in the store on which you want to operate. When adding
a user certificate, or removing certificates, this name is required. The name
is associated with the certificate/key combination, and when adding, can be
used later to reference the entity. When printing certificates, if no alias
is supplied, then all keystore entities are printed.
.RE

.sp
.ne 2
.mk
.na
.B -o
.I outfile
.ad
.sp .6
.RS 4n
Output the result of the command to
.IR outfile .
Only used when examining
(printing) certificates from the key store. Standard out is the default.
.RE

.sp
.ne 2
.mk
.na
.B -P
.I passarg
.ad
.sp .6
.RS 4n
Password retrieval method to use to decrypt keystore specified with
.BR -k ,
if required. See
.B "PASS PHRASE ARGUMENTS"
in
.BR pkgadd (1M)
for more information about the format of this option's argument.
.B console
is the default.
.RE

.sp
.ne 2
.mk
.na
.B -p
.I import_passarg
.ad
.sp .6
.RS 4n
This option's argument is identical to
.BR -P ,
but is used for supplying
the password used to decrypt the certificate and/or private key being added.
.B console
is the default.
.RE

.sp
.ne 2
.mk
.na
.B -q
.ad
.sp .6
.RS 4n
(Applies to
.B sync
subcommand.) Shuts down the contents file cache
daemon.
.RE

.sp
.ne 2
.mk
.na
.B -R
.I rootpath
.ad
.sp .6
.RS 4n
Defines the full name of a directory to use as the root
.RB ( / )
path. The
default user location of the certificate operations is
.BR ${HOME}/.pkg .
If
the
.B -R
option is supplied, the certificates and keys will be stored
under \fI<altroot>\fR/var/sadm/security\fR. Note that this operation fails
if the user does not have sufficient permissions to access this directory.
The
.B listcert
command requires read permission, while
.B addcert
and
.B removecert
require both read and write permission.
.LP
Note -
.sp
.RS 2
The root file system of any non-global zones must not be referenced with the
.B -R
option. Doing so might damage the global zone's file system, might
compromise the security of the global zone, and might damage the non-global
zone's file system. See
.BR zones (5).
.RE
.RE

.sp
.ne 2
.mk
.na
.B -t
.ad
.sp .6
.RS 4n
Indicates the certificate being added is a trusted CA certificate. The
details of the certificate (including the Subject Name, Validity Dates, and
Fingerprints) are printed and the user is asked to verify the data. This
verification step can be skipped with
.BR -y .
When importing a trusted
certificate, a private key should not be supplied, and will be rejected if
supplied. Once a certificate is trusted, it can be used as a trust anchor
when verifying future untrusted certificates.
.RE

.sp
.ne 2
.mk
.na
.B -V
.ad
.sp .6
.RS 4n
Print version associated with packaging tools.
.RE

.sp
.ne 2
.mk
.na
.B -y
.ad
.sp .6
.RS 4n
When adding a trusted certificate, the details of the certificate (Subject
name, Issuer name, Validity dates, Fingerprints) are shown to the user and
the user is asked to verify the correctness before proceeding. With
.BR -y ,
this additional verification step is skipped.
.RE

.sp
.ne 2
.mk
.na
.B -?
.ad
.sp .6
.RS 4n
Print help message.
.RE

.SH OPERANDS
.sp
.LP
The following operand is supported:
.sp
.ne 2
.mk
.na
.B certfile
.ad
.sp .6
.RS 4n
File containing the certificate and optional private key, used when adding a
trust anchor or certificate/key combination. Certificates must be encoded
using PEM or binary DER.
.RE

.SH KEYSTORE ALIASES
.sp
.LP
All keystore entries (user cert/key and trusted certificate entries) are
accessed via unique aliases. Aliases are case-sensitive.
.sp
.LP
An alias is specified when you add an entity to a keystore using the
.B addcert
or
.B trustcert
subcommand. If an alias is not supplied for
a trust anchor, the trust anchor's Common Name is used as the alias. An alias
is required when adding a signing certificate or chain certificate.
Subsequent
.B pkgcert
or other package tool commands must use this same
alias to refer to the entity.
.SH KEYSTORE PASSWORDS
.sp
.LP
See the
.BR pkgadd (1M)
man page for a description of the passwords
supplied to the
.B pkgadm
utility.
.SH EXAMPLES
.LP
.B Example 1
Adding a Trust Anchor
.sp
.LP
The following example adds a well-known and trusted certificate to be used
when verifying signatures on packages.

.sp
.in +2
.nf
example% pkgadm addcert -t /tmp/certfile.pem
.fi
.in -2
.sp

.LP
.B Example 2
Adding a Signing Certificate
.sp
.LP
The following example adds a signing certificate and associated private key,
each of which is in a separate file, which can then be used to sign
packages.

.sp
.in +2
.nf
example% pkgadm addcert -a pkgtrans -e /tmp/keyfile.pem \e
/tmp/certfile.pem
.fi
.in -2
.sp

.LP
.B Example 3
Printing Certificates
.sp
.LP
The following example prints all certificates in the root keystore.

.sp
.in +2
.nf
example% pkgadm listcert
.fi
.in -2
.sp

.SH EXIT STATUS
.sp
.ne 2
.mk
.na
.B 0
.ad
.sp .6
.RS 4n
successful completion
.RE

.sp
.ne 2
.mk
.na
.B non-zero
.ad
.sp .6
.RS 4n
fatal error
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWpkgcmdsu
_
Interface StabilityEvolving
.TE

.SH SEE ALSO
.sp
.LP
.BR pkginfo (1),
.BR pkgmk (1),
.BR pkgparam (1),
.BR pkgproto (1),
.BR pkgtrans (1),
.BR svcs (1),
.BR installf (1M),
.BR pkgadd (1M),
.BR pkgask (1M),
.BR pkgrm (1M),
.BR removef (1M),
.BR svcadm (1M),
.BR admin (4),
.BR contents (4),
.BR exec_attr (4),
.BR pkginfo (4),
.BR attributes (5),
.BR rbac (5),
.BR smf (5)
.sp
.LP
\fR
.SH NOTES
.sp
.LP
The service for
.B pkgadm
is managed by the service management facility,
.BR smf (5),
under the service identifier:
.sp
.in +2
.nf
svc:/system/pkgserv
.fi
.in -2
.sp

.sp
.LP
Administrative actions on this service, such as enabling, disabling, or
requesting restart, can be performed using
.BR svcadm (1M).
The service's
status can be queried using the
.BR svcs (1)
command.
