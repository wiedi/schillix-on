'\" te
.\" Copyright 1989 AT&T
.\" Portions Copyright (c) 2001, Sun Microsystems, Inc.  All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH curses 3CURSES "23 Oct 2001" "SunOS 5.11" "Curses Library Functions"
.SH NAME
curses \- CRT screen handling and optimization package
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR.\|.\|. ] \fIfile\fR.. .-lcurses [ \fIlibrary\fR.\|.\|. ]
#include <curses.h>
.fi

.SH DESCRIPTION
.sp
.LP
The
.B curses
library routines give the user a terminal-independent method
of updating character screens with reasonable optimization.
.sp
.LP
The
.B curses
package allows:  overall screen, window and pad manipulation;
output to windows and pads; reading terminal input; control over terminal and
.B curses
input and output options; environment query routines; color
manipulation; use of soft label keys; terminfo access; and access to low-level
.B curses
routines.
.sp
.LP
To initialize the routines, the routine
.B initscr()
or
.BR newterm()
must be called before any of the other routines that deal with windows and
screens are used. The routine
.B endwin()
must be called before exiting. To
get character-at-a-time input without echoing (most interactive, screen
oriented programs want this), the following sequence should be used:
.sp
.LP
.B initscr,cbreak,noecho;
.sp
.LP
Most programs would additionally use the sequence:
.sp
.LP
.B nonl,intrflush(stdscr,FALSE),keypad(stdscr,TRUE);
.sp
.LP
Before a
.B curses
program is run, the tab stops of the terminal should be
set and its initialization strings, if defined, must be output. This can be
done by executing the
.B "tput init"
command after the shell environment
variable
.B TERM
has been exported. (See
.BR terminfo (4)
for further
details.)
.sp
.LP
The
.B curses
library permits manipulation of data structures, called
.IR windows ,
which can be thought of as two-dimensional arrays of characters
representing all or part of a
.B CRT
screen. A default window called
.BR stdscr ,
which is the size of the terminal screen, is supplied. Others may
be created with
.BR newwin (3CURSES).
.sp
.LP
Windows are referred to by variables declared as
.BR "WINDOW *" .
These data
structures are manipulated with routines described on 3CURSES pages (whose
names begin "curs_"). Among which the most basic routines are
.BR move (3CURSES)
and \fBaddch\fR(3CURSES). More general versions of these
routines are included with names beginning with
.BR w ,
allowing the user to
specify a window. The routines not beginning with
.B w
affect
.BR stdscr .
.sp
.LP
After using routines to manipulate a window, \fBrefresh\fR(3CURSES) is called,
telling
.B curses
to make the user's
.B CRT
screen look like
.BR stdscr .
The characters in a window are actually of type
.BR chtype ,
(character and attribute data) so that other information about the character
may also be stored with each character.
.sp
.LP
Special windows called
.I pads
may also be manipulated. These are windows
which are not constrained to the size of the screen and whose contents need not
be completely displayed. See \fBcurs_pad\fR(3CURSES) for more information.
.sp
.LP
In addition to drawing characters on the screen, video attributes and colors
may be included, causing the characters to show up in such modes as underlined,
in reverse video, or in color on terminals that support such display
enhancements. Line drawing characters may be specified to be output. On input,
.B curses
is also able to translate arrow and function keys that transmit
escape sequences into single values. The video attributes, line drawing
characters, and input values use names, defined in <\fBcurses.h\fR>,  such as
.BR A_REVERSE ,
.BR ACS_HLINE ,
and
.BR KEY_LEFT .
.sp
.LP
If the environment variables
.B LINES
and
.B COLUMNS
are set, or if the
program is executing in a window environment, line and column information in
the environment will override information read by
.IR terminfo .
This would
effect a program running in an AT&T 630 layer, for example, where the size of a
screen is changeable.
.sp
.LP
If the environment variable
.B TERMINFO
is defined, any program using
.B curses
checks for a local terminal definition before checking in the
standard place. For example, if
.B TERM
is set to
.BR att4424 ,
then the
compiled terminal definition is found in
.sp
.LP
.BR /usr/share/lib/terminfo/a/att4424 .
.sp
.LP
(The `\fBa\fR' is copied from the first letter of \fBatt4424\fR to avoid
creation of huge directories.) However, if
.B TERMINFO
is set to
.BR $HOME/myterms ,
.B curses
first checks
.sp
.LP
.BR $HOME/myterms/a/att4424 ,
.sp
.LP
and if that fails, it then checks
.sp
.LP
.BR /usr/share/lib/terminfo/a/att4424 .
.sp
.LP
This is useful for developing experimental definitions or when write
permission in
.B /usr/share/lib/terminfo
is not available.
.sp
.LP
The integer variables
.B LINES
and
.B COLS
are defined in
.B <curses.h>
and will be filled in by
.B initscr
with the size of the
screen. The constants
.B TRUE
and
.B FALSE
have the values
.B 1
and
.BR 0 ,
respectively.
.sp
.LP
The
.B curses
routines also define the
.B "WINDOW *"
variable
.BR curscr
which is used for certain low-level operations like clearing and redrawing a
screen containing garbage. The
.B curscr
can be used in only a few
routines.
.SS "International Functions"
.sp
.LP
The number of bytes and the number of columns to hold a character from the
supplementary character set is locale-specific (locale category
.BR LC_CTYPE )
and can be specified in the character class table.
.sp
.LP
For editing, operating at the character level is entirely appropriate. For
screen formatting, arbitrary movement of characters on screen is not
desirable.
.sp
.LP
Overwriting characters (\fBaddch\fR, for example) operates on a screen level.
Overwriting a character by a character that requires a different number of
columns may produce
.IR "orphaned columns" .
These orphaned columns are filled
with background characters.
.sp
.LP
Inserting characters (\fBinsch\fR, for example) operates on a character level
(that is, at the character boundaries). The specified character is inserted
right before the character, regardless of which column of a character the
cursor points to. Before insertion, the cursor position is adjusted to the
first column of the character.
.sp
.LP
As with inserting characters, deleting characters (\fBdelch\fR, for example)
operates on a character level (that is, at the character boundaries). The
character at the cursor is deleted whichever column of the character the cursor
points to. Before deletion, the cursor position is adjusted to the first column
of the character.
.sp
.LP
A
.I multi-column
character cannot be put on the last column of a line.
When such attempts are made, the last column is set to the background
character. In addition, when such an operation creates orphaned columns, the
orphaned columns are filled with background characters.
.sp
.LP
Overlapping and overwriting a window follows the operation of overwriting
characters around its edge. The orphaned columns, if any, are handled as in the
character operations.
.sp
.LP
The cursor is allowed to be placed anywhere in a window. If the insertion or
deletion is made when the cursor points to the second or later column position
of a character that holds multiple columns, the cursor is adjusted to the first
column of the character before the insertion or deletion.
.SS "Routine and Argument Names"
.sp
.LP
Many
.B curses
routines have two or more versions. The routines prefixed
with
.B w
require a window argument. The routines prefixed with \fBp\fR
require a pad argument. Those without a prefix generally use
.BR stdscr .
.sp
.LP
The routines prefixed with
.B mv
require an
.I x
and
.I y
coordinate
to move to before performing the appropriate action. The
.B mv
routines
imply a call to \fBmove\fR(3CURSES) before the call to the other routine. The
coordinate
.I y
always refers to the row (of the window), and
.I x
always
refers to the column. The upper left-hand corner is always (0,0), not (1,1).
.sp
.LP
The routines prefixed with
.B mvw
take both a window argument and
.IR x
and
.I y
coordinates. The window argument is always specified before the
coordinates.
.sp
.LP
In each case,
.I win
is the window affected, and
.I pad
is the pad
affected;
.I win
and
.I pad
are always pointers to type
.BR WINDOW
.sp
.LP
Option setting routines require a Boolean flag
.I bf
with the value
.B TRUE
or
.BR FALSE ;
.I bf
is always of type
.BR bool .
The variables
.I ch
and
.I attrs
below are always of type
.BR chtype .
The types
.BR WINDOW ,
.BR SCREEN ,
.BR bool ,
and
.B chtype
are defined in
\fB<curses.h>\fR\&. The type \fBTERMINAL\fR is defined in
.BR <term.h> \&.
All
other arguments are integers.
.SS "Routine Name Index"
.sp
.LP
The following table lists each
.B curses
routine and the name of the manual
page on which it is described.
.sp
.ne 2
.mk
.na
.B curses Routine Name
.ad
.RS 23n
.rt
Manual Page Name
.RE

.sp
.ne 2
.mk
.na
.B addch
.ad
.RS 23n
.rt
.BR curs_addch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B addchnstr
.ad
.RS 23n
.rt
.BR curs_addchstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B addchstr
.ad
.RS 23n
.rt
.BR curs_addchstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B addnstr
.ad
.RS 23n
.rt
.BR curs_addstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B addnwstr
.ad
.RS 23n
.rt
.BR curs_addwstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B addstr
.ad
.RS 23n
.rt
.BR curs_addstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B addwch
.ad
.RS 23n
.rt
.BR curs_addwch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B addwchnstr
.ad
.RS 23n
.rt
.BR curs_addwchstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B addwchstr
.ad
.RS 23n
.rt
.BR curs_addwchstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B addwstr
.ad
.RS 23n
.rt
.BR curs_addwstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B adjcurspos
.ad
.RS 23n
.rt
.BR curs_alecompat (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B attroff
.ad
.RS 23n
.rt
.BR curs_attr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B attron
.ad
.RS 23n
.rt
.BR curs_attr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B attrset
.ad
.RS 23n
.rt
.BR curs_attr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B baudrate
.ad
.RS 23n
.rt
.BR curs_termattrs (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B beep
.ad
.RS 23n
.rt
.BR curs_beep (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B bkgd
.ad
.RS 23n
.rt
.BR curs_bkgd (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B bkgdset
.ad
.RS 23n
.rt
.BR curs_bkgd (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B border
.ad
.RS 23n
.rt
.BR curs_border (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B box
.ad
.RS 23n
.rt
.BR curs_border (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B can_change_color
.ad
.RS 23n
.rt
.BR curs_color (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B cbreak
.ad
.RS 23n
.rt
.BR curs_inopts (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B clear
.ad
.RS 23n
.rt
.BR curs_clear (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B clearok
.ad
.RS 23n
.rt
.BR curs_outopts (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B clrtobot
.ad
.RS 23n
.rt
.BR curs_clear (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B clrtoeol
.ad
.RS 23n
.rt
.BR curs_clear (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B color_content
.ad
.RS 23n
.rt
.BR curs_color (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B copywin
.ad
.RS 23n
.rt
.BR curs_overlay (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B curs_set
.ad
.RS 23n
.rt
.BR curs_kernel (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B def_prog_mode
.ad
.RS 23n
.rt
.BR curs_kernel (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B def_shell_mode
.ad
.RS 23n
.rt
.BR curs_kernel (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B del_curterm
.ad
.RS 23n
.rt
.BR curs_terminfo (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B delay_output
.ad
.RS 23n
.rt
.BR curs_util (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B delch
.ad
.RS 23n
.rt
.BR curs_delch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B deleteln
.ad
.RS 23n
.rt
.BR curs_deleteln (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B delscreen
.ad
.RS 23n
.rt
.BR curs_initscr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B delwin
.ad
.RS 23n
.rt
.BR curs_window (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B derwin
.ad
.RS 23n
.rt
.BR curs_window (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B doupdate
.ad
.RS 23n
.rt
.BR curs_refresh (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B dupwin
.ad
.RS 23n
.rt
.BR curs_window (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B echo
.ad
.RS 23n
.rt
.BR curs_inopts (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B echochar
.ad
.RS 23n
.rt
.BR curs_addch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B echowchar
.ad
.RS 23n
.rt
.BR curs_addwch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B endwin
.ad
.RS 23n
.rt
.BR curs_initscr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B erase
.ad
.RS 23n
.rt
.BR curs_clear (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B erasechar
.ad
.RS 23n
.rt
.BR curs_termattrs (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B filter
.ad
.RS 23n
.rt
.BR curs_util (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B flash
.ad
.RS 23n
.rt
.BR curs_beep (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B flushinp
.ad
.RS 23n
.rt
.BR curs_util (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B getbegyx
.ad
.RS 23n
.rt
.BR curs_getyx (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B getch
.ad
.RS 23n
.rt
.BR curs_getch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B getmaxyx
.ad
.RS 23n
.rt
.BR curs_getyx (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B getnwstr
.ad
.RS 23n
.rt
.BR curs_getwstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B getparyx
.ad
.RS 23n
.rt
.BR curs_getyx (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B getstr
.ad
.RS 23n
.rt
.BR curs_getstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B getsyx
.ad
.RS 23n
.rt
.BR curs_kernel (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B getwch
.ad
.RS 23n
.rt
.BR curs_getwch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B getwin
.ad
.RS 23n
.rt
.BR curs_util (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B getwstr
.ad
.RS 23n
.rt
.BR curs_getwstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B getyx
.ad
.RS 23n
.rt
.BR curs_getyx (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B halfdelay
.ad
.RS 23n
.rt
.BR curs_inopts (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B has_colors
.ad
.RS 23n
.rt
.BR curs_color (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B has_ic
.ad
.RS 23n
.rt
.BR curs_termattrs (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B has_il
.ad
.RS 23n
.rt
.BR curs_termattrs (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B idcok
.ad
.RS 23n
.rt
.BR curs_outopts (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B idlok
.ad
.RS 23n
.rt
.BR curs_outopts (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B immedok
.ad
.RS 23n
.rt
.BR curs_outopts (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B inch
.ad
.RS 23n
.rt
.BR curs_inch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B inchnstr
.ad
.RS 23n
.rt
.BR curs_inchstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B inchstr
.ad
.RS 23n
.rt
.BR curs_inchstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B init_color
.ad
.RS 23n
.rt
.BR curs_color (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B init_pair
.ad
.RS 23n
.rt
.BR curs_color (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B initscr
.ad
.RS 23n
.rt
.BR curs_initscr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B innstr
.ad
.RS 23n
.rt
.BR curs_instr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B innwstr
.ad
.RS 23n
.rt
.BR curs_inwstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B insch
.ad
.RS 23n
.rt
.BR curs_insch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B insdelln
.ad
.RS 23n
.rt
.BR curs_deleteln (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B insertln
.ad
.RS 23n
.rt
.BR curs_deleteln (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B insnstr
.ad
.RS 23n
.rt
.BR curs_insstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B insnwstr
.ad
.RS 23n
.rt
.BR curs_inswstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B insstr
.ad
.RS 23n
.rt
.BR curs_insstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B instr
.ad
.RS 23n
.rt
.BR curs_instr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B inswch
.ad
.RS 23n
.rt
.BR curs_inswch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B inswstr
.ad
.RS 23n
.rt
.BR curs_inswstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B intrflush
.ad
.RS 23n
.rt
.BR curs_inopts (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B inwch
.ad
.RS 23n
.rt
.BR curs_inwch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B inwchnstr
.ad
.RS 23n
.rt
.BR curs_inwchstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B inwchstr
.ad
.RS 23n
.rt
.BR curs_inwchstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B inwstr
.ad
.RS 23n
.rt
.BR curs_inwstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B is_linetouched
.ad
.RS 23n
.rt
.BR curs_touch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B is_wintouched
.ad
.RS 23n
.rt
.BR curs_touch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B isendwin
.ad
.RS 23n
.rt
.BR curs_initscr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B keyname
.ad
.RS 23n
.rt
.BR curs_util (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B keypad
.ad
.RS 23n
.rt
.BR curs_inopts (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B killchar
.ad
.RS 23n
.rt
.BR curs_termattrs (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B leaveok
.ad
.RS 23n
.rt
.BR curs_outopts (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B longname
.ad
.RS 23n
.rt
.BR curs_termattrs (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B meta
.ad
.RS 23n
.rt
.BR curs_inopts (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B move
.ad
.RS 23n
.rt
.BR curs_move (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B movenextch
.ad
.RS 23n
.rt
.BR curs_alecompat (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B moveprevch
.ad
.RS 23n
.rt
.BR curs_alecompat (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvaddch
.ad
.RS 23n
.rt
.BR curs_addch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvaddchnstr
.ad
.RS 23n
.rt
.BR curs_addchstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvaddchstr
.ad
.RS 23n
.rt
.BR curs_addchstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvaddnstr
.ad
.RS 23n
.rt
.BR curs_addstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvaddnwstr
.ad
.RS 23n
.rt
.BR curs_addwstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvaddstr
.ad
.RS 23n
.rt
.BR curs_addstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvaddwch
.ad
.RS 23n
.rt
.BR curs_addwch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvaddwchnstr
.ad
.RS 23n
.rt
.BR curs_addwchstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvaddwchstr
.ad
.RS 23n
.rt
.BR curs_addwchstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvaddwstr
.ad
.RS 23n
.rt
.BR curs_addwstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvcur
.ad
.RS 23n
.rt
.BR curs_terminfo (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvdelch
.ad
.RS 23n
.rt
.BR curs_delch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvderwin
.ad
.RS 23n
.rt
.BR curs_window (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvgetch
.ad
.RS 23n
.rt
.BR curs_getch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvgetnwstr
.ad
.RS 23n
.rt
.BR curs_getwstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvgetstr
.ad
.RS 23n
.rt
.BR curs_getstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvgetwch
.ad
.RS 23n
.rt
.BR curs_getwch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvgetwstr
.ad
.RS 23n
.rt
.BR curs_getwstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvinch
.ad
.RS 23n
.rt
.BR curs_inch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvinchnstr
.ad
.RS 23n
.rt
.BR curs_inchstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvinchstr
.ad
.RS 23n
.rt
.BR curs_inchstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvinnstr
.ad
.RS 23n
.rt
.BR curs_instr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvinnwstr
.ad
.RS 23n
.rt
.BR curs_inwstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvinsch
.ad
.RS 23n
.rt
.BR curs_insch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvinsnstr
.ad
.RS 23n
.rt
.BR curs_insstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvinsnwstr
.ad
.RS 23n
.rt
.BR curs_inswstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvinsstr
.ad
.RS 23n
.rt
.BR curs_insstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvinstr
.ad
.RS 23n
.rt
.BR curs_instr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvinswch
.ad
.RS 23n
.rt
.BR curs_inswch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvinswstr
.ad
.RS 23n
.rt
.BR curs_inswstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvinwch
.ad
.RS 23n
.rt
.BR curs_inwch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvinwchnstr
.ad
.RS 23n
.rt
.BR curs_inwchstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvinwchstr
.ad
.RS 23n
.rt
.BR curs_inwchstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvinwstr
.ad
.RS 23n
.rt
.BR curs_inwstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvprintw
.ad
.RS 23n
.rt
.BR curs_printw (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvscanw
.ad
.RS 23n
.rt
.BR curs_scanw (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvwaddch
.ad
.RS 23n
.rt
.BR curs_addch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvwaddchnstr
.ad
.RS 23n
.rt
.BR curs_addchstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvwaddchstr
.ad
.RS 23n
.rt
.BR curs_addchstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvwaddnstr
.ad
.RS 23n
.rt
.BR curs_addstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvwaddnwstr
.ad
.RS 23n
.rt
.BR curs_addwstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvwaddstr
.ad
.RS 23n
.rt
.BR curs_addstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvwaddwch
.ad
.RS 23n
.rt
.BR curs_addwch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvwaddwchnstr
.ad
.RS 23n
.rt
.BR curs_addwchstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvwaddwchstr
.ad
.RS 23n
.rt
.BR curs_addwchstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvwaddwstr
.ad
.RS 23n
.rt
.BR curs_addwstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvwdelch
.ad
.RS 23n
.rt
.BR curs_delch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvwgetch
.ad
.RS 23n
.rt
.BR curs_getch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvwgetnwstr
.ad
.RS 23n
.rt
.BR curs_getwstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvwgetstr
.ad
.RS 23n
.rt
.BR curs_getstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvwgetwch
.ad
.RS 23n
.rt
.BR curs_getwch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvwgetwstr
.ad
.RS 23n
.rt
.BR curs_getwstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvwin
.ad
.RS 23n
.rt
.BR curs_window (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvwinch
.ad
.RS 23n
.rt
.BR curs_inch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvwinchnstr
.ad
.RS 23n
.rt
.BR curs_inchstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvwinchstr
.ad
.RS 23n
.rt
.BR curs_inchstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvwinnstr
.ad
.RS 23n
.rt
.BR curs_instr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvwinnwstr
.ad
.RS 23n
.rt
.BR curs_inwstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvwinsch
.ad
.RS 23n
.rt
.BR curs_insch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvwinsnstr
.ad
.RS 23n
.rt
.BR curs_insstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvwinsstr
.ad
.RS 23n
.rt
.BR curs_insstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvwinstr
.ad
.RS 23n
.rt
.BR curs_instr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvwinswch
.ad
.RS 23n
.rt
.BR curs_inswch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvwinswstr
.ad
.RS 23n
.rt
.BR curs_inswstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvwinwch
.ad
.RS 23n
.rt
.BR curs_inwch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvwinwchnstr
.ad
.RS 23n
.rt
.BR curs_inwchstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvwinwchstr
.ad
.RS 23n
.rt
.BR curs_inwchstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvwinwstr
.ad
.RS 23n
.rt
.BR curs_inwstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvwprintw
.ad
.RS 23n
.rt
.BR curs_printw (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B mvwscanw
.ad
.RS 23n
.rt
.BR curs_scanw (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B napms
.ad
.RS 23n
.rt
.BR curs_kernel (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B newpad
.ad
.RS 23n
.rt
.BR curs_pad (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B newterm
.ad
.RS 23n
.rt
.BR curs_initscr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B newwin
.ad
.RS 23n
.rt
.BR curs_window (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B nl
.ad
.RS 23n
.rt
.BR curs_outopts (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B nocbreak
.ad
.RS 23n
.rt
.BR curs_inopts (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B nodelay
.ad
.RS 23n
.rt
.BR curs_inopts (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B noecho
.ad
.RS 23n
.rt
.BR curs_inopts (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B nonl
.ad
.RS 23n
.rt
.BR curs_outopts (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B noqiflush
.ad
.RS 23n
.rt
.BR curs_inopts (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B noraw
.ad
.RS 23n
.rt
.BR curs_inopts (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B notimeout
.ad
.RS 23n
.rt
.BR curs_inopts (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B overlay
.ad
.RS 23n
.rt
.BR curs_overlay (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B overwrite
.ad
.RS 23n
.rt
.BR curs_overlay (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B pair_content
.ad
.RS 23n
.rt
.BR curs_color (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B pechochar
.ad
.RS 23n
.rt
.BR curs_pad (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B pechowchar
.ad
.RS 23n
.rt
.BR curs_pad (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B pnoutrefresh
.ad
.RS 23n
.rt
.BR curs_pad (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B prefresh
.ad
.RS 23n
.rt
.BR curs_pad (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B printw
.ad
.RS 23n
.rt
.BR curs_printw (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B putp
.ad
.RS 23n
.rt
.BR curs_terminfo (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B putwin
.ad
.RS 23n
.rt
.BR curs_util (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B qiflush
.ad
.RS 23n
.rt
.BR curs_inopts (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B raw
.ad
.RS 23n
.rt
.BR curs_inopts (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B redrawwin
.ad
.RS 23n
.rt
.BR curs_refresh (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B refresh
.ad
.RS 23n
.rt
.BR curs_refresh (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B reset_prog_mode
.ad
.RS 23n
.rt
.BR curs_kernel (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B reset_shell_mode
.ad
.RS 23n
.rt
.BR curs_kernel (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B resetty
.ad
.RS 23n
.rt
.BR curs_kernel (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B restartterm
.ad
.RS 23n
.rt
.BR curs_terminfo (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B ripoffline
.ad
.RS 23n
.rt
.BR curs_kernel (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B savetty
.ad
.RS 23n
.rt
.BR curs_kernel (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B scanw
.ad
.RS 23n
.rt
.BR curs_scanw (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B scr_dump
.ad
.RS 23n
.rt
.BR curs_scr_dump (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B scr_init
.ad
.RS 23n
.rt
.BR curs_scr_dump (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B scr_restore
.ad
.RS 23n
.rt
.BR curs_scr_dump (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B scr_set
.ad
.RS 23n
.rt
.BR curs_scr_dump (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B scroll
.ad
.RS 23n
.rt
.BR curs_scroll (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B scrollok
.ad
.RS 23n
.rt
.BR curs_outopts (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B set_curterm
.ad
.RS 23n
.rt
.BR curs_terminfo (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B set_term
.ad
.RS 23n
.rt
.BR curs_initscr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B setscrreg
.ad
.RS 23n
.rt
.BR curs_outopts (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B setsyx
.ad
.RS 23n
.rt
.BR curs_kernel (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B setterm
.ad
.RS 23n
.rt
.BR curs_terminfo (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B setupterm
.ad
.RS 23n
.rt
.BR curs_terminfo (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B slk_attroff
.ad
.RS 23n
.rt
.BR curs_slk (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B slk_attron
.ad
.RS 23n
.rt
.BR curs_slk (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B slk_attrset
.ad
.RS 23n
.rt
.BR curs_slk (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B slk_clear
.ad
.RS 23n
.rt
.BR curs_slk (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B slk_init
.ad
.RS 23n
.rt
.BR curs_slk (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B slk_label
.ad
.RS 23n
.rt
.BR curs_slk (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B slk_noutrefresh
.ad
.RS 23n
.rt
.BR curs_slk (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B slk_refresh
.ad
.RS 23n
.rt
.BR curs_slk (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B slk_restore
.ad
.RS 23n
.rt
.BR curs_slk (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B slk_set
.ad
.RS 23n
.rt
.BR curs_slk (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B slk_touch
.ad
.RS 23n
.rt
.BR curs_slk (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B srcl
.ad
.RS 23n
.rt
.BR curs_scroll (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B standend
.ad
.RS 23n
.rt
.BR curs_attr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B standout
.ad
.RS 23n
.rt
.BR curs_attr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B start_color
.ad
.RS 23n
.rt
.BR curs_color (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B subpad
.ad
.RS 23n
.rt
.BR curs_pad (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B subwin
.ad
.RS 23n
.rt
.BR curs_window (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B syncok
.ad
.RS 23n
.rt
.BR curs_window (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B termattrs
.ad
.RS 23n
.rt
.BR curs_termattrs (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B termname
.ad
.RS 23n
.rt
.BR curs_termattrs (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B tgetent
.ad
.RS 23n
.rt
.BR curs_termcap (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B tgetflag
.ad
.RS 23n
.rt
.BR curs_termcap (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B tgetnum
.ad
.RS 23n
.rt
.BR curs_termcap (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B tgetstr
.ad
.RS 23n
.rt
.BR curs_termcap (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B tgoto
.ad
.RS 23n
.rt
.BR curs_termcap (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B tigetflag
.ad
.RS 23n
.rt
.BR curs_terminfo (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B tigetnum
.ad
.RS 23n
.rt
.BR curs_terminfo (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B tigetstr
.ad
.RS 23n
.rt
.BR curs_terminfo (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B timeout
.ad
.RS 23n
.rt
.BR curs_inopts (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B touchline
.ad
.RS 23n
.rt
.BR curs_touch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B touchwin
.ad
.RS 23n
.rt
.BR curs_touch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B tparm
.ad
.RS 23n
.rt
.BR curs_terminfo (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B tputs
.ad
.RS 23n
.rt
.BR curs_terminfo (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B typeahead
.ad
.RS 23n
.rt
.BR curs_inopts (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B unctrl
.ad
.RS 23n
.rt
.BR curs_util (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B ungetch
.ad
.RS 23n
.rt
.BR curs_getch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B ungetwch
.ad
.RS 23n
.rt
.BR curs_getwch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B untouchwin
.ad
.RS 23n
.rt
.BR curs_touch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B use_env
.ad
.RS 23n
.rt
.BR curs_util (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B vidattr
.ad
.RS 23n
.rt
.BR curs_terminfo (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B vidputs
.ad
.RS 23n
.rt
.BR curs_terminfo (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B vwprintw
.ad
.RS 23n
.rt
.BR curs_printw (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B vwscanw
.ad
.RS 23n
.rt
.BR curs_scanw (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B waddch
.ad
.RS 23n
.rt
.BR curs_addch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B waddchnstr
.ad
.RS 23n
.rt
.BR curs_addchstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B waddchstr
.ad
.RS 23n
.rt
.BR curs_addchstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B waddnstr
.ad
.RS 23n
.rt
.BR curs_addstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B waddnwstr
.ad
.RS 23n
.rt
.BR curs_addwstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B waddstr
.ad
.RS 23n
.rt
.BR curs_addstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B waddwch
.ad
.RS 23n
.rt
.BR curs_addwch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B waddwchnstr
.ad
.RS 23n
.rt
.BR curs_addwchstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B waddwchstr
.ad
.RS 23n
.rt
.BR curs_addwchstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B waddwstr
.ad
.RS 23n
.rt
.BR curs_addwstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B wadjcurspos
.ad
.RS 23n
.rt
.BR curs_alecompat (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B wattroff
.ad
.RS 23n
.rt
.BR curs_attr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B wattron
.ad
.RS 23n
.rt
.BR curs_attr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B wattrset
.ad
.RS 23n
.rt
.BR curs_attr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B wbkgd
.ad
.RS 23n
.rt
.BR curs_bkgd (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B wbkgdset
.ad
.RS 23n
.rt
.BR curs_bkgd (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B wborder
.ad
.RS 23n
.rt
.BR curs_border (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B wclear
.ad
.RS 23n
.rt
.BR curs_clear (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B wclrtobot
.ad
.RS 23n
.rt
.BR curs_clear (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B wclrtoeol
.ad
.RS 23n
.rt
.BR curs_clear (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B wcursyncup
.ad
.RS 23n
.rt
.BR curs_window (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B wdelch
.ad
.RS 23n
.rt
.BR curs_delch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B wdeleteln
.ad
.RS 23n
.rt
.BR curs_deleteln (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B wechochar
.ad
.RS 23n
.rt
.BR curs_addch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B wechowchar
.ad
.RS 23n
.rt
.BR curs_addwch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B werase
.ad
.RS 23n
.rt
.BR curs_clear (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B wgetch
.ad
.RS 23n
.rt
.BR curs_getch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B wgetnstr
.ad
.RS 23n
.rt
.BR curs_getstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B wgetnwstr
.ad
.RS 23n
.rt
.BR curs_getwstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B wgetstr
.ad
.RS 23n
.rt
.BR curs_getstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B wgetwch
.ad
.RS 23n
.rt
.BR curs_getwch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B wgetwstr
.ad
.RS 23n
.rt
.BR curs_getwstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B whline
.ad
.RS 23n
.rt
.BR curs_border (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B winch
.ad
.RS 23n
.rt
.BR curs_inch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B winchnstr
.ad
.RS 23n
.rt
.BR curs_inchstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B winchstr
.ad
.RS 23n
.rt
.BR curs_inchstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B winnstr
.ad
.RS 23n
.rt
.BR curs_instr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B winnwstr
.ad
.RS 23n
.rt
.BR curs_inwstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B winsch
.ad
.RS 23n
.rt
.BR curs_insch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B winsdelln
.ad
.RS 23n
.rt
.BR curs_deleteln (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B winsertln
.ad
.RS 23n
.rt
.BR curs_deleteln (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B winsnstr
.ad
.RS 23n
.rt
.BR curs_insstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B winsnwstr
.ad
.RS 23n
.rt
.BR curs_inswstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B winsstr
.ad
.RS 23n
.rt
.BR curs_insstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B winstr
.ad
.RS 23n
.rt
.BR curs_instr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B winswch
.ad
.RS 23n
.rt
.BR curs_inswch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B winswstr
.ad
.RS 23n
.rt
.BR curs_inswstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B winwch
.ad
.RS 23n
.rt
.BR curs_inwch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B winwchnstr
.ad
.RS 23n
.rt
.BR curs_inwchstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B winwchstr
.ad
.RS 23n
.rt
.BR curs_inwchstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B winwstr
.ad
.RS 23n
.rt
.BR curs_inwstr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B wmove
.ad
.RS 23n
.rt
.BR curs_move (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B wmovenextch
.ad
.RS 23n
.rt
.BR curs_alecompat (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B wmoveprevch
.ad
.RS 23n
.rt
.BR curs_alecompat (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B wnoutrefresh
.ad
.RS 23n
.rt
.BR curs_refresh (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B wprintw
.ad
.RS 23n
.rt
.BR curs_printw (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B wredrawln
.ad
.RS 23n
.rt
.BR curs_refresh (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B wrefresh
.ad
.RS 23n
.rt
.BR curs_refresh (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B wscanw
.ad
.RS 23n
.rt
.BR curs_scanw (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B wscrl
.ad
.RS 23n
.rt
.BR curs_scroll (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B wsetscrreg
.ad
.RS 23n
.rt
.BR curs_outopts (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B wstandend
.ad
.RS 23n
.rt
.BR curs_attr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B wstandout
.ad
.RS 23n
.rt
.BR curs_attr (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B wsyncdown
.ad
.RS 23n
.rt
.BR curs_window (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B wsyncup
.ad
.RS 23n
.rt
.BR curs_window (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B wtimeout
.ad
.RS 23n
.rt
.BR curs_inopts (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B wtouchln
.ad
.RS 23n
.rt
.BR curs_touch (3CURSES)
.RE

.sp
.ne 2
.mk
.na
.B wvline
.ad
.RS 23n
.rt
.BR curs_border (3CURSES)
.RE

.SH RETURN VALUES
.sp
.LP
Routines that return an integer return
.B ERR
upon failure and an integer
value other than
.B ERR
upon successful completion, unless otherwise noted
in the routine descriptions.
.sp
.LP
All macros return the value of the
.B w
version, except
.BR setscrreg() ,
.BR wsetscrreg() ,
.BR getyx() ,
.BR getbegyx() ,
and
.BR getmaxyx() .
The
return values of
.BR setscrreg() ,
.BR wsetscrreg() ,
.BR getyx() ,
.BR getbegyx() ,
and
.B getmaxyx()
are undefined (that is, these should not
be used as the right-hand side of assignment statements).
.sp
.LP
Routines that return pointers return
.I NULL
on error.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelUnsafe
.TE

.SH SEE ALSO
.sp
.LP
.BR curses (3XCURSES),
.BR libcurses (3LIB),
.BR libcurses (3XCURSES),
.BR terminfo (4),
.BR attributes (5)
.SH NOTES
.sp
.LP
The header <\fBcurses.h\fR> automatically includes the headers <\fBstdio.h\fR>
and <\fBunctrl.h\fR>.
