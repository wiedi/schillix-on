'\" te
.\" Copyright 1989 AT&T
.\" Portions Copyright (c) 1996, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH curs_addwch 3CURSES "31 Dec 1996" "SunOS 5.11" "Curses Library Functions"
.SH NAME
curs_addwch, addwch, waddwch, mvaddwch, mvwaddwch, echowchar, wechowchar \-
add a wchar_t character (with attributes) to a curses window and advance
cursor
.SH SYNOPSIS
.LP
.nf
\fBcc\fR  [\fIflag\fR].\|.\|. \fIfile\fR.\|.\|. \fB-lcurses\fR [\fIlibrary\fR].\|.\|.
.fi

.LP
.nf
#include<curses.h>

\fBint\fR \fBaddwch\fR(\fBchtype\fR \fIwch\fR);
.fi

.LP
.nf
\fBint\fR \fBwaddwch\fR(\fBWINDOW *\fIwin\fR, \fBchtype\fR \fIwch\fR);
.fi

.LP
.nf
\fBint\fR \fBmvaddwch\fR(\fBint\fR \fIy\fR, \fBint\fR \fIx\fR, \fBchtype\fR \fIwch\fR);
.fi

.LP
.nf
\fBint\fR \fBmvwaddwch\fR(\fBWINDOW *\fIwin\fR, \fBint\fR \fIy\fR, \fBint\fR \fIx\fR, \fBchtype\fR \fIwch\fR);
.fi

.LP
.nf
\fBint\fR \fBechowchar\fR(\fBchtype\fR \fIwch\fR);
.fi

.LP
.nf
\fBint\fR \fBwechowchar\fR(\fBWINDOW *\fIwin\fR, \fBchtype\fR \fIwch\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The  \fBaddwch()\fR,\fBwaddwch()\fR,\fBmvaddwch()\fR, and \fBmvwaddwch()\fR
routines put the character
.IR wch ,
holding a
.B wchar_t
character,
into the window at the current cursor position of the window and advance the
position of the window cursor. Their function is similar to that of
.BR putwchar (3C)
in the C multibyte library. At the right margin, an
automatic newline is performed. At the bottom of the scrolling region, if
.B scrollok
is enabled, the scrolling region is scrolled up one line.
.sp
.LP
If
.I wch
is a tab, newline, or backspace, the cursor is moved
appropriately within the window. A newline also does a
.BR clrtoeol (3CURSES)
before moving. Tabs are considered to be at every
eighth column. If
.I wch
is another control character, it is drawn in
the \fB^\fIX\fR notation. Calling  \fBwinwch\fR(3CURSES) after adding a
control character does not return the control character, but instead returns
the representation of the control character.
.sp
.LP
Video attributes can be combined with a
.B wchar_t
character by OR-ing
them into the parameter. This results in these attributes also being set.
(The intent here is that text, including attributes, can be copied from one
place to another using
.B inwch()
and
.BR addwch() .)
See
.BR standout (3CURSES),
predefined video attribute constants.
.sp
.LP
The
.B echowchar()
and
.B wechowchar()
routines are functionally
equivalent to a call to
.B addwch()
followed by a call to
.BR refresh (3CURSES),
or a call to
.B waddwch()
followed by a call to
.BR wrefresh (3CURSES).
The knowledge that only a single character is being
output is taken into consideration and, for non-control characters, a
considerable performance gain might be seen by using these routines instead
of their equivalents.
.SS "Line Graphics"
.sp
.LP
The following variables may be used to add line drawing characters to the
screen with routines of the
.B addwch()
family. When variables are
defined for the terminal, the
.B A_ALTCHARSET
bit is turned on. (See
.BR curs_attr (3CURSES)).
Otherwise, the default character listed below is
stored in the variable. The names chosen are consistent with the VT100
nomenclature.
.sp

.sp
.TS
tab() box;
cw(1.83i) |cw(1.83i) |cw(1.83i)
lw(1.83i) |lw(1.83i) |lw(1.83i)
.
NameDefaultGlyph Description
_
ACS_ULCORNER+upper left-hand corner
_
ACS_LLCORNER+lower left-hand corner
_
ACS_URCORNER+upper right-hand corner
_
ACS_LRCORNER+lower right-hand corner
_
ACS_RTEE+right tee
_
ACS_LTEE+left tee
_
ACS_BTEE+bottom tee
_
ACS_TTEE+top tee
_
ACS_HLINE-horizontal line
_
ACS_VLINE|vertical line
_
ACS_PLUS+plus
_
ACS_S1-scan line 1
_
ACS_S9-scan line 9
_
ACS_DIAMOND+diamond
_
ACS_CKBOARD:checker board (stipple)
_
ACS_DEGREE\&'degree symbol
_
ACS_PLMINUS#plus/minus
_
ACS_BULLETobullet
_
ACS_LARROW<arrow pointing left
_
ACS_RARRROW>arrow pointing right
_
ACS_DARROWvarrow pointing down
_
ACS_UARROW^arrow pointing up
_
ACS_BOARD#board of squares
_
ACS_LANTERN#lantern symbol
_
ACS_BLOCK#solid square block
.TE

.SH RETURN VALUE
.sp
.LP
All routines return the integer
.B ERR
upon failure and an integer value
other than
.B ERR
upon successful completion, unless otherwise noted in
the preceding routine descriptions.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelUnsafe
.TE

.SH SEE ALSO
.sp
.LP
.BR putwchar (3C),
.BR clrtoeol (3CURSES),
.BR curses (3CURSES),
.BR curs_attr (3CURSES),
.BR curs_inwch (3CURSES),
.BR curs_outopts (3CURSES),
.BR refresh (3CURSES),
.BR standout (3CURSES),
.BR winwch (3CURSES),
.BR wrefresh (3CURSES),
.BR attributes (5)
.SH NOTES
.sp
.LP
The header file <\fBcurses.h\fR> automatically includes the header files
<\fBstdio.h\fR>, <\fBunctrl.h\fR> and <\fBwidec.h\fR>.
.sp
.LP
Note that  \fBaddwch()\fR,\fB mvaddwch()\fR, \fBmvwaddwch()\fR, and
.B echowchar()
may be macros.
.sp
.LP
None of these routines can use the color attribute in
.BR chtype .
