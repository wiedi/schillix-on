'\" te
.\" Copyright 1989 AT&T
.\" Portions Copyright (c) 1996, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH curs_scanw 3CURSES "31 Dec 1996" "SunOS 5.11" "Curses Library Functions"
.SH NAME
curs_scanw, scanw, wscanw, mvscanw, mvwscanw, vwscanw \- convert formatted
input from a curses widow
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR .\|.\|. ] \fIfile\fR .\|.\|. \fB-lcurses\fR [ \fIlibrary\fR .\|.\|. ]
#include <curses.h>

\fBint\fR \fBscanw\fR(\fBchar *\fIfmt\fR, \fB/*\fR \fIarg\fR */ .\|.\|.);
.fi

.LP
.nf
\fBint\fR \fBwscanw\fR(\fBWINDOW *\fIwin\fR, \fBchar *\fIfmt\fR, \fB/*\fR \fIarg\fR */ .\|.\|.);
.fi

.LP
.nf
\fBint\fR \fBmvscanw\fR(\fBint\fR \fIy\fR, \fBint\fR \fIx\fR, \fBchar *\fIfmt\fR, \fB/*\fR \fIarg\fR */ .\|.\|.);
.fi

.LP
.nf
\fBint\fR \fBmvwscanw\fR(\fBWINDOW *\fIwin\fR, \fBint\fR \fIy\fR, \fBint\fR \fIx\fR, \fBchar *\fIfmt\fR, \fB/*\fR \fIarg\fR */.\|.\|.);
.fi

.LP
.nf
\fBint\fR \fBvwscanw\fR(\fBWINDOW *\fIwin\fR, \fBchar *\fIfmt\fR, \fBva_list\fR \fIvarglist\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.BR scanw() ,
.BR wscanw() ,
and
.B mvscanw()
routines correspond
.RB "to " scanf() " (see " scanf (3C)).
The effect of these routines is as
though
.B wgetstr()
were called on the window, and the resulting line
used as input for the scan. Fields which do not map to a variable in the
.B fmt
field are lost.
.sp
.LP
The
.B vwscanw()
routine is similar to
.BR "vwprintw() in"
.B that
it performs a
.B wscanw()
using a variable argument list. The
third argument is a
.IR va_list ,
a pointer to a list of arguments, as
defined in
.BR <varargs.h> \&.
.SH RETURN VALUES
.sp
.LP
.B vwscanw()
returns
.B ERR
on failure and an integer equal to the
number of fields scanned on success.
.sp
.LP
Applications may interrogate the return value from the
.BR scanw ,
.BR wscanw() ,
.BR mvscanw() ,
and
.B mvwscanw()
routines to determine
the number of fields which were mapped in the call.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelUnsafe
.TE

.SH SEE ALSO
.sp
.LP
.BR curs_getstr (3CURSES),
.BR curs_printw (3CURSES),
.BR curses (3CURSES),
.BR scanf (3C),
.BR attributes (5)
.SH NOTES
.sp
.LP
The header
.RB < curses.h >
automatically includes the headers
.RB < stdio.h "> and <" unctrl.h >.
