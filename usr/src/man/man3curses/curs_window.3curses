'\" te
.\" Copyright 1989 AT&T
.\" Portions Copyright (c) 1996, Sun Microsystems, Inc. All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH curs_window 3CURSES "31 Dec 1996" "SunOS 5.11" "Curses Library Functions"
.SH NAME
curs_window, newwin, delwin, mvwin, subwin, derwin, mvderwin, dupwin,
wsyncup, syncok, wcursyncup, wsyncdown \- create curses windows
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR .\|.\|. ] \fIfile\fR .\|.\|. \fB-lcurses\fR [ \fIlibrary\fR .\|.\|. ]
#include <curses.h>

\fBWINDOW *\fBnewwin\fR(\fBint\fR \fInlines\fR, \fBint\fR \fIncols\fR, \fBint\fR \fIbegin_y\fR, \fBint\fR \fIbegin_x\fR);
.fi

.LP
.nf
\fBint\fR \fBdelwin\fR(\fBWINDOW *\fIwin\fR);
.fi

.LP
.nf
\fBint\fR \fBmvwin\fR(\fBWINDOW *\fIwin\fR, \fBint\fR \fIy\fR, \fBint\fR \fIx\fR);
.fi

.LP
.nf
\fBWINDOW *\fBsubwin\fR(\fBWINDOW *\fIorig\fR, \fBint\fR \fInlines\fR, \fBint\fR \fIncols\fR,
     \fBint\fR \fIbegin_y\fR, \fBint\fR \fIbegin_x\fR);
.fi

.LP
.nf
\fBWINDOW *\fBderwin\fR(\fBWINDOW *\fIorig\fR, \fBint\fR \fInlines\fR, \fBint\fR \fIncols\fR,
     \fBint\fR \fIbegin_y\fR, \fBint\fR \fIbegin_x\fR);
.fi

.LP
.nf
\fBint\fR \fBmvderwin\fR(\fBWINDOW *\fIwin\fR, \fBint\fR \fIpar_y\fR, \fBint\fR \fIpar_x\fR);
.fi

.LP
.nf
\fBWINDOW *\fBdupwin\fR(\fBWINDOW *\fIwin\fR);
.fi

.LP
.nf
\fBvoid\fR \fBwsyncup\fR(\fBWINDOW *\fIwin\fR);
.fi

.LP
.nf
\fBint\fR \fBsyncok\fR(\fBWINDOW *\fIwin\fR, \fBbool\fR \fIbf\fR);
.fi

.LP
.nf
\fBvoid\fR \fBwcursyncup\fR(\fBWINDOW *\fIwin\fR);
.fi

.LP
.nf
\fBvoid\fR \fBwsyncdown\fR(\fBWINDOW *\fIwin\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B newwin()
routine creates and returns a pointer to a new window
with the given number of lines,
.IR nlines ,
and columns,
.IR ncols .
The
upper left-hand corner of the window is at line
.IR begin_y ,
column
.IR begin_x .
If either
.I nlines
or
.I ncols
is zero, they default
to
.B LINES
\(em \fIbegin_y\fR and \fBCOLS\fR \(em
.IR begin_x .
A new
full-screen window is created by calling
.BR newwin(0,0,0,0) .
.sp
.LP
The
.B delwin()
routine deletes the named window, freeing all memory
associated with it. Subwindows must be deleted before the main window can be
deleted.
.sp
.LP
The
.B mvwin()
routine moves the window so that the upper left-hand
corner is at position (\fIx\fR,
.IR y ).
If the move would cause the window
to be off the screen, it is an error and the window is not moved. Moving
subwindows is allowed, but should be avoided.
.sp
.LP
The
.B subwin()
routine creates and returns a pointer to a new window
with the given number of lines,
.IR nlines ,
and columns,
.IR ncols .
The
window is at position (\fIbegin_y\fR,
.IR begin_x )
on the screen. (This
position is relative to the screen, and not to the window
.IR orig .)
The
window is made in the middle of the window
.IR orig ,
so that changes made
to one window will affect both windows. The subwindow shares memory with the
window
.IR orig .
When using this routine, it is necessary to call
\fBtouchwin()\fR or \fBtouchline()\fR on \fIorig\fR before calling
\fBwrefresh()\fR on the subwindow.
.sp
.LP
The
.B derwin()
routine is the same as
.BR subwin() ,
except that
\fIbegin_y\fR and \fIbegin_x\fR are relative to the origin of the window
\fIorig\fR rather than the screen. There is no difference between the
subwindows and the derived windows.
.sp
.LP
The
.B mvderwin()
routine moves a derived window (or subwindow) inside
its parent window. The screen-relative parameters of the window are not
changed. This routine is used to display different parts of the parent
window at the same physical position on the screen.
.sp
.LP
The
.B dupwin()
routine creates an exact duplicate of the window
.IR win .
.sp
.LP
Each
.B curses
window maintains two data structures: the character image
structure and the status structure. The character image structure is shared
among all windows in the window hierarchy (that is, the window with all
subwindows). The status structure, which contains information about
individual line changes in the window, is private to each window. The
routine \fBwrefresh()\fR uses the status data structure when performing
screen updating. Since status structures are not shared, changes made to one
window in the hierarchy may not be properly reflected on the screen.
.sp
.LP
The routine
.B wsyncup()
causes the changes in the status structure of a
window to be reflected in the status structures of its ancestors. If
\fBsyncok()\fR is called with second argument \fBTRUE\fR then
\fBwsyncup()\fR is called automatically whenever there is a change in the
window.
.sp
.LP
The routine
.B wcursyncup()
updates the current cursor position of all
the ancestors of the window to reflect the current cursor position of the
window.
.sp
.LP
The routine
.B wsyncdown()
updates the status structure of the window to
reflect the changes in the status structures of its ancestors. Applications
seldom call this routine because it is called automatically by
.BR wrefresh() .
.SH RETURN VALUES
.sp
.LP
Routines that return an integer return the integer
.B ERR
upon failure
and an integer value other than
.B ERR
upon successful completion.
.sp
.LP
\fBdelwin()\fR returns the integer \fBERR\fR upon failure and \fBOK\fR upon
successful completion.
.sp
.LP
Routines that return pointers return
.I NULL
on error.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelUnsafe
.TE

.SH SEE ALSO
.sp
.LP
.BR curs_refresh (3CURSES),
.BR curs_touch (3CURSES),
.BR curses (3CURSES),
.BR attributes (5)
.SH NOTES
.sp
.LP
The header <\fBcurses.h\fR> automatically includes the headers
<\fBstdio.h\fR> and <\fBunctrl.h\fR>.
.sp
.LP
If many small changes are made to the window, the
.B wsyncup()
option
could degrade performance.
.sp
.LP
Note that
.B syncok()
may be a macro.
