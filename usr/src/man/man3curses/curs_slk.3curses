'\" te
.\" Copyright 1989 AT&T
.\" Portions Copyright (c) 1996, Sun Microsystems, Inc. All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH curs_slk 3CURSES "31 Dec 1996" "SunOS 5.11" "Curses Library Functions"
.SH NAME
curs_slk, slk_init, slk_set, slk_refresh, slk_noutrefresh, slk_label,
slk_clear, slk_restore, slk_touch, slk_attron, slk_attrset, slk_attroff \-
curses soft label routines
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR .\|.\|. ] \fIfile\fR .\|.\|. \fB-lcurses\fR [ \fIlibrary\fR .\|.\|. ]
#include <curses.h>

\fBint\fR \fBslk_init\fR(\fBint\fR \fIfmt\fR);
.fi

.LP
.nf
\fBint\fR \fBslk_set\fR(\fBint\fR \fIlabnum\fR, \fBchar *\fIlabel\fR, \fBint\fR \fIfmt\fR);
.fi

.LP
.nf
\fBint\fR \fBslk_refresh\fR(\fBvoid\fR);
.fi

.LP
.nf
\fBint\fR \fBslk_noutrefresh\fR(\fBvoid\fR);
.fi

.LP
.nf
\fBchar *\fBslk_label\fR(\fBint\fR \fIlabnum\fR);
.fi

.LP
.nf
\fBint\fR \fBslk_clear\fR(\fBvoid\fR);
.fi

.LP
.nf
\fBint\fR \fBslk_restore\fR(\fBvoid\fR);
.fi

.LP
.nf
\fBint\fR \fBslk_touch\fR(\fBvoid\fR);
.fi

.LP
.nf
\fBint\fR \fBslk_attron\fR(\fBchtype\fR \fIattrs\fR);
.fi

.LP
.nf
\fBint\fR \fBslk_attrset\fR(\fBchtype\fR \fIattrs\fR);
.fi

.LP
.nf
\fBint\fR \fBslk_attroff\fR(\fBchtype\fR \fIattrs\fR);
.fi

.SH DESCRIPTION
.sp
.LP
.B curses
manipulates the set of soft function-key labels that exist on
many terminals. For those terminals that do not have soft labels,
.B curses
takes over the bottom line of
.BR stdscr ,
reducing the size
of
.B stdscr
and the variable
.BR LINES .
.B curses
standardizes on
eight labels of up to eight characters each.
.sp
.LP
To use soft labels, the
.B slk_init()
routine must be called before
.B initscr()
or
.B newterm()
is called. If
.B initscr()
eventually
uses a line from
.B stdscr
to emulate the soft labels, then \fBfmt\fR
determines how the labels are arranged on the screen. Setting
.B fmt
to
.B 0
indicates a 3-2-3 arrangement of the labels;
.B 1
indicates a 4-4
arrangement.
.sp
.LP
With the
.B slk_set()
routine,
.I labnum
is the label number, from
.B 1
to
.BR 8 .
.I label
is the string to be put on the label, up to
eight characters in length. A null string or a null pointer sets up a blank
label.
.B fmt
is either
.BR 0 ,
.BR 1 ,
or
.BR 2 ,
indicating whether
the label is to be left-justified, centered, or right-justified,
respectively, within the label.
.sp
.LP
The \fBslk_refresh()\fR and \fBslk_noutrefresh()\fR routines correspond to
the \fBwrefresh()\fR and \fBwnoutrefresh()\fR routines.
.sp
.LP
With the
.B slk_label()
routine, the current label for label number
.I labnum
is returned with leading and trailing blanks stripped.
.sp
.LP
With the
.B slk_clear()
routine, the soft labels are cleared from the
screen.
.sp
.LP
With the
.B slk_restore()
routine, the soft labels are restored to the
screen after a
.B slk_clear()
is performed.
.sp
.LP
With the
.B slk_touch()
routine, all the soft labels are forced to be
output the next time a
.B slk_noutrefresh()
is performed.
.sp
.LP
The
.BR slk_attron() ,
.BR slk_attrset() ,
and \fBslk_attroff()\fR
routines correspond to
.BR attron() ,
.BR attrset() ,
and
.BR attroff() .
They have an effect only if soft labels are simulated on the bottom line of
the screen.
.SH RETURN VALUES
.sp
.LP
Routines that return an integer return
.B ERR
upon failure and an
integer value other than
.B ERR
upon successful completion.
.sp
.LP
.B slk_label()
returns
.I NULL
on error.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelUnsafe
.TE

.SH SEE ALSO
.sp
.LP
.BR curs_attr (3CURSES),
.BR curs_initscr (3CURSES),
.BR curs_refresh (3CURSES),
.BR curses (3CURSES),
.BR attributes (5)
.SH NOTES
.sp
.LP
The header <\fBcurses.h\fR> automatically includes the headers
<\fBstdio.h\fR> and <\fBunctrl.h\fR>.
.sp
.LP
Most applications would use
.B slk_noutrefresh()
because a
.B wrefresh()
is likely to follow soon.
