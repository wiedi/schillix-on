'\" te
.\" Copyright 1989 AT&T
.\" Portions Copyright (c) 1996, Sun Microsystems, Inc. All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH forms 3CURSES "31 Dec 1996" "SunOS 5.11" "Curses Library Functions"
.SH NAME
forms \- character based forms package
.SH SYNOPSIS
.LP
.nf
\fB#include <form.h>\fR
.fi

.SH DESCRIPTION
.sp
.LP
The
.B form
library is built using the
.B curses
library, and any
program using \fBforms\fR routines must call one of the \fBcurses\fR
initialization routines such as
.BR initscr .
A program using these
routines must be compiled with
.B -lform
and
.B -lcurses
on the
.B cc
command line.
.sp
.LP
The
.B forms
package gives the applications programmer a
terminal-independent method of creating and customizing forms for
user-interaction. The
.B forms
package includes: field routines, which
are used to create and customize fields, link fields and assign field types;
fieldtype routines, which are used to create new field types for validating
fields; and form routines, which are used to create and customize forms,
assign pre/post processing functions, and display and interact with forms.
.SS "Current Default Values for Field Attributes"
.sp
.LP
The
.B forms
package establishes initial current default values for
field attributes. During field initialization, each field attribute is
assigned the current default value for that attribute. An application can
change or retrieve a current default attribute value by calling the
appropriate set or retrieve routine with a
.I NULL
field pointer. If an
application changes a current default field attribute value, subsequent
fields created using
.B new_field()
will have the new default attribute
value. (The attributes of previously created fields are not changed if a
current default attribute value is changed.)
.SS "Routine Name Index"
.sp
.LP
The following table lists each
.B forms
routine and the name of the
manual page on which it is described.
.sp
.ne 2
.mk
.na
.B forms Routine Name
.ad
.RS 25n
.rt
.B Manual Page Name
.RE

.sp
.ne 2
.mk
.na
.B current_field
.ad
.RS 25n
.rt
form_page(3X)
.RE

.sp
.ne 2
.mk
.na
.B data_ahead
.ad
.RS 25n
.rt
form_data(3X)
.RE

.sp
.ne 2
.mk
.na
.B data_behind
.ad
.RS 25n
.rt
form_data(3X)
.RE

.sp
.ne 2
.mk
.na
.B dup_field
.ad
.RS 25n
.rt
form_field_new(3X)
.RE

.sp
.ne 2
.mk
.na
.B dynamic_field_info
.ad
.RS 25n
.rt
form_field_info(3X)
.RE

.sp
.ne 2
.mk
.na
.B field_arg
.ad
.RS 25n
.rt
form_field_validation(3X)
.RE

.sp
.ne 2
.mk
.na
.B field_back
.ad
.RS 25n
.rt
form_field_attributes(3X)
.RE

.sp
.ne 2
.mk
.na
.B field_buffer
.ad
.RS 25n
.rt
form_field_buffer(3X)
.RE

.sp
.ne 2
.mk
.na
.B field_count
.ad
.RS 25n
.rt
form_field(3X)
.RE

.sp
.ne 2
.mk
.na
.B field_fore
.ad
.RS 25n
.rt
form_field_attributes(3X)
.RE

.sp
.ne 2
.mk
.na
.B field_index
.ad
.RS 25n
.rt
form_page(3X)
.RE

.sp
.ne 2
.mk
.na
.B field_info
.ad
.RS 25n
.rt
	form_field_info(3X)
.RE

.sp
.ne 2
.mk
.na
.B field_init
.ad
.RS 25n
.rt
	form_hook(3X)
.RE

.sp
.ne 2
.mk
.na
.B field_just
.ad
.RS 25n
.rt
	form_field_just(3X)
.RE

.sp
.ne 2
.mk
.na
.B field_opts
.ad
.RS 25n
.rt
form_field_opts(3X)
.RE

.sp
.ne 2
.mk
.na
.B field_opts_off
.ad
.RS 25n
.rt
form_field_opts(3X)
.RE

.sp
.ne 2
.mk
.na
.B field_opts_on
.ad
.RS 25n
.rt
form_field_opts(3X)
.RE

.sp
.ne 2
.mk
.na
.B field_pad
.ad
.RS 25n
.rt
form_field_attributes(3X)
.RE

.sp
.ne 2
.mk
.na
.B field_status
.ad
.RS 25n
.rt
form_field_buffer(3X)
.RE

.sp
.ne 2
.mk
.na
.B field_term
.ad
.RS 25n
.rt
form_hook(3X)
.RE

.sp
.ne 2
.mk
.na
.B field_type
.ad
.RS 25n
.rt
form_field_validation(3X)
.RE

.sp
.ne 2
.mk
.na
.B field_userptr
.ad
.RS 25n
.rt
form_field_userptr(3X)
.RE

.sp
.ne 2
.mk
.na
.B form_driver
.ad
.RS 25n
.rt
form_driver(3X)
.RE

.sp
.ne 2
.mk
.na
.B form_fields
.ad
.RS 25n
.rt
form_field(3X)
.RE

.sp
.ne 2
.mk
.na
.B form_init
.ad
.RS 25n
.rt
	form_hook(3X)
.RE

.sp
.ne 2
.mk
.na
.B form_opts
.ad
.RS 25n
.rt
form_opts(3X)
.RE

.sp
.ne 2
.mk
.na
.B form_opts_off
.ad
.RS 25n
.rt
form_opts(3X)
.RE

.sp
.ne 2
.mk
.na
.B form_opts_on
.ad
.RS 25n
.rt
form_opts(3X)
.RE

.sp
.ne 2
.mk
.na
.B form_page
.ad
.RS 25n
.rt
form_page(3X)
.RE

.sp
.ne 2
.mk
.na
.B form_sub
.ad
.RS 25n
.rt
form_win(3X)
.RE

.sp
.ne 2
.mk
.na
.B form_term
.ad
.RS 25n
.rt
form_hook(3X)
.RE

.sp
.ne 2
.mk
.na
.B form_userptr
.ad
.RS 25n
.rt
form_userptr(3X)
.RE

.sp
.ne 2
.mk
.na
.B form_win
.ad
.RS 25n
.rt
	form_win(3X)
.RE

.sp
.ne 2
.mk
.na
.B free_field	
.ad
.RS 25n
.rt
form_field_new(3X)
.RE

.sp
.ne 2
.mk
.na
.B free_fieldtype
.ad
.RS 25n
.rt
form_fieldtype(3X)
.RE

.sp
.ne 2
.mk
.na
.B free_form
.ad
.RS 25n
.rt
form_new(3X)
.RE

.sp
.ne 2
.mk
.na
.B link_field
.ad
.RS 25n
.rt
	form_field_new(3X)
.RE

.sp
.ne 2
.mk
.na
.B link_fieldtype
.ad
.RS 25n
.rt
form_fieldtype(3X)
.RE

.sp
.ne 2
.mk
.na
.B move_field
.ad
.RS 25n
.rt
form_field(3X)
.RE

.sp
.ne 2
.mk
.na
.B new_field
.ad
.RS 25n
.rt
	form_field_new(3X)
.RE

.sp
.ne 2
.mk
.na
.B new_fieldtype
.ad
.RS 25n
.rt
	form_fieldtype(3X)
.RE

.sp
.ne 2
.mk
.na
.B new_form
.ad
.RS 25n
.rt
	form_new(3X)
.RE

.sp
.ne 2
.mk
.na
.B new_page
.ad
.RS 25n
.rt
form_new_page(3X)
.RE

.sp
.ne 2
.mk
.na
.B pos_form_cursor
.ad
.RS 25n
.rt
form_cursor(3X)
.RE

.sp
.ne 2
.mk
.na
.B post_form
.ad
.RS 25n
.rt
form_post(3X)
.RE

.sp
.ne 2
.mk
.na
.B scale_form	
.ad
.RS 25n
.rt
form_win(3X)
.RE

.sp
.ne 2
.mk
.na
.B set_current_field
.ad
.RS 25n
.rt
form_page(3X)
.RE

.sp
.ne 2
.mk
.na
.B set_field_back
.ad
.RS 25n
.rt
form_field_attributes(3X)
.RE

.sp
.ne 2
.mk
.na
.B set_field_buffer
.ad
.RS 25n
.rt
 	form_field_buffer(3X)
.RE

.sp
.ne 2
.mk
.na
.B set_field_fore
.ad
.RS 25n
.rt
form_field_attributes(3X)
.RE

.sp
.ne 2
.mk
.na
.B set_field_init
.ad
.RS 25n
.rt
form_hook(3X)
.RE

.sp
.ne 2
.mk
.na
.B  set_field_just
.ad
.RS 25n
.rt
form_field_just(3X)
.RE

.sp
.ne 2
.mk
.na
.B set_field_opts
.ad
.RS 25n
.rt
form_field_opts(3X)
.RE

.sp
.ne 2
.mk
.na
.B set_field_pad
.ad
.RS 25n
.rt
form_field_attributes(3X)
.RE

.sp
.ne 2
.mk
.na
.B set_field_status
.ad
.RS 25n
.rt
form_field_buffer(3X)
.RE

.sp
.ne 2
.mk
.na
.B set_field_term
.ad
.RS 25n
.rt
form_hook(3X)
.RE

.sp
.ne 2
.mk
.na
.B set_field_type
.ad
.RS 25n
.rt
form_field_validation(3X)
.RE

.sp
.ne 2
.mk
.na
.B set_field_userptr
.ad
.RS 25n
.rt
form_field_userptr(3X)
.RE

.sp
.ne 2
.mk
.na
.B set_fieldtype_arg
.ad
.RS 25n
.rt
form_fieldtype(3X)
.RE

.sp
.ne 2
.mk
.na
.B set_fieldtype_choice	
.ad
.RS 25n
.rt
form_fieldtype(3X)
.RE

.sp
.ne 2
.mk
.na
.B set_form_fields
.ad
.RS 25n
.rt
form_field(3X)
.RE

.sp
.ne 2
.mk
.na
.B set_form_init
.ad
.RS 25n
.rt
form_hook(3X)
.RE

.sp
.ne 2
.mk
.na
.B set_form_opts
.ad
.RS 25n
.rt
form_opts(3X)
.RE

.sp
.ne 2
.mk
.na
.B set_form_page
.ad
.RS 25n
.rt
form_page(3X)
.RE

.sp
.ne 2
.mk
.na
.B set_form_sub
.ad
.RS 25n
.rt
form_win(3X)
.RE

.sp
.ne 2
.mk
.na
.B set_form_term
.ad
.RS 25n
.rt
form_hook(3X)
.RE

.sp
.ne 2
.mk
.na
.B set_form_userptr
.ad
.RS 25n
.rt
form_userptr(3X)
.RE

.sp
.ne 2
.mk
.na
.B set_form_win
.ad
.RS 25n
.rt
form_win(3X)
.RE

.sp
.ne 2
.mk
.na
.B set_max_field
.ad
.RS 25n
.rt
form_field_buffer(3X)
.RE

.sp
.ne 2
.mk
.na
.B set_new_page
.ad
.RS 25n
.rt
form_new_page(3X)
.RE

.sp
.ne 2
.mk
.na
.B unpost_form
.ad
.RS 25n
.rt
form_post(3X)
.RE

.SH RETURN VALUES
.sp
.LP
Routines that return a pointer always return
.I NULL
on error. Routines
that return an integer return one of the following:
.sp
.ne 2
.mk
.na
.B E_OK
.ad
.RS 21n
.rt
The function returned successfully.
.RE

.sp
.ne 2
.mk
.na
.B E_CONNECTED
.ad
.RS 21n
.rt
The field is already connected to a form.
.RE

.sp
.ne 2
.mk
.na
.B E_SYSTEM_ERROR
.ad
.RS 21n
.rt
System error.
.RE

.sp
.ne 2
.mk
.na
.B E_BAD_ARGUMENT
.ad
.RS 21n
.rt
An argument is incorrect.
.RE

.sp
.ne 2
.mk
.na
.B E_CURRENT
.ad
.RS 21n
.rt
The field is the current field.
.RE

.sp
.ne 2
.mk
.na
.B E_POSTED
.ad
.RS 21n
.rt
The form is posted.
.RE

.sp
.ne 2
.mk
.na
.B E_NOT_POSTED
.ad
.RS 21n
.rt
The form is not posted.
.RE

.sp
.ne 2
.mk
.na
.B E_INVALID_FIELD
.ad
.RS 21n
.rt
The field contents are invalid.
.RE

.sp
.ne 2
.mk
.na
.B E_NOT_CONNECTED
.ad
.RS 21n
.rt
The field is not connected to a form.
.RE

.sp
.ne 2
.mk
.na
.B E_NO_ROOM
.ad
.RS 21n
.rt
The form does not fit in the subwindow.
.RE

.sp
.ne 2
.mk
.na
.B E_BAD_STATE
.ad
.RS 21n
.rt
The routine was called from an initialization or termination function.
.RE

.sp
.ne 2
.mk
.na
.B E_REQUEST_DENIED
.ad
.RS 21n
.rt
The form driver request failed.
.RE

.sp
.ne 2
.mk
.na
.B E_UNKNOWN_COMMAND
.ad
.RS 21n
.rt
An unknown request was passed to the form driver.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelUnsafe
.TE

.SH SEE ALSO
.sp
.LP
.BR curses (3CURSES),
.BR attributes (5)
.SH NOTES
.sp
.LP
The header \fB<form.h>\fR automatically includes the headers  \fB<eti.h>\fR
and \fB<curses.h>\fR\&.
