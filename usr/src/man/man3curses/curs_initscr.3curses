'\" te
.\" Copyright 1989 AT&T
.\" Portions Copyright (c) 1996, Sun Microsystems, Inc. All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH curs_initscr 3CURSES "31 Dec 1996" "SunOS 5.11" "Curses Library Functions"
.SH NAME
curs_initscr, initscr, newterm, endwin, isendwin, set_term, delscreen \-
curses screen initialization and manipulation routines
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR .\|.\|. ] \fIfile\fR .\|.\|. \fB-lcurses\fR [ \fIlibrary\fR .\|.\|. ]
#include <curses.h>

\fBWINDOW *\fBinitscr\fR(\fBvoid\fR);
.fi

.LP
.nf
\fBint\fR \fBendwin\fR(\fBvoid\fR);
.fi

.LP
.nf
\fBint\fR \fBisendwin\fR(\fBvoid\fR);
.fi

.LP
.nf
\fBSCREEN *\fBnewterm\fR(\fBchar *\fItype\fR, \fBFILE *\fIoutfd\fR, \fBFILE *\fIinfd\fR);
.fi

.LP
.nf
\fBSCREEN *\fBset_term\fR(\fBSCREEN *\fInew\fR);
.fi

.LP
.nf
\fBvoid\fR \fBdelscreen\fR(\fBSCREEN *\fR \fIsp\fR);
.fi

.SH DESCRIPTION
.sp
.LP
.B initscr()
is almost always the first routine that should be called
(the exceptions are
.BR slk_init() ,
.BR filter() ,
.BR ripoffline() ,
.B use_env()
and, for multiple-terminal applications,
.BR newterm() .)
This determines the terminal type and initializes all
.B curses
data
structures.
.B initscr()
also causes the first call to
.B refresh()
to
clear the screen. If errors occur,
.B initscr()
writes an appropriate
error message to standard error and exits; otherwise, a pointer is returned
to
.BR stdscr() .
If the program needs an indication of error conditions,
.B newterm()
should be used instead of
.BR " initscr()" ;
.B initscr()
should only be called once per application.
.sp
.LP
A program that outputs to more than one terminal should use the
.B newterm()
routine for each terminal instead of
.BR initscr() .
A
program that needs an indication of error conditions, so it can continue to
run in a line-oriented mode if the terminal cannot support a screen-oriented
program, would also use this routine. The routine
.B newterm()
should be
called once for each terminal. It returns a variable of type \fBSCREEN\fR
.B *
which should be saved as a reference to that terminal. The arguments
are the
.I type
of the terminal to be used in place of $\fBTERM\fR, a
file pointer for output to the terminal, and another file pointer for input
from the terminal (if
.I type
is
.IR NULL ,
$\fBTERM\fR will be used).
The program must also call
.B endwin()
for each terminal being used
before exiting from curses. If
.B newterm()
is called more than once for
the same terminal, the first terminal referred to must be the last one for
which
.B endwin()
is called.
.sp
.LP
A program should always call
.B endwin()
before exiting or escaping from
.B curses
mode temporarily. This routine restores tty modes, moves the
cursor to the lower left-hand corner of the screen and resets the terminal
into the proper non-visual mode. Calling \fBrefresh()\fR or \fBdoupdate()\fR
after a temporary escape causes the program to resume visual mode.
.sp
.LP
The
.B isendwin()
routine returns
.B TRUE
if
.B endwin()
has been
called without any subsequent calls to
.BR wrefresh() ,
and
.BR FALSE
otherwise.
.sp
.LP
The
.B set_term()
routine is used to switch between different terminals.
The screen reference
.B new
becomes the new current terminal. The
previous terminal is returned by the routine. This is the only routine which
manipulates
.B SCREEN
pointers; all other routines affect only the
current terminal.
.sp
.LP
The
.B delscreen()
routine frees storage associated with the
.B SCREEN
data structure.  The
.B endwin()
routine does not do this,
so
.B delscreen()
should be called after
.B endwin()
if a particular
.B SCREEN
is no longer needed.
.SH RETURN VALUES
.sp
.LP
.B endwin()
returns the integer
.B ERR
upon failure and
.B OK
upon
successful completion.
.sp
.LP
Routines that return pointers always return
.I NULL
on error.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelUnsafe
.TE

.SH SEE ALSO
.sp
.LP
.BR curs_kernel (3CURSES),
.BR curs_refresh (3CURSES),
.BR curs_slk (3CURSES),
.BR curs_util (3CURSES),
.BR curses (3CURSES),
.BR attributes (5)
.SH NOTES
.sp
.LP
The header <\fBcurses.h\fR> automatically includes the headers
<\fBstdio.h\fR> and <\fBunctrl.h\fR>.
.sp
.LP
Note that
.B initscr()
and
.B newterm()
may be macros.
