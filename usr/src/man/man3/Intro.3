'\" te
.\" Copyright (c) 2009, Sun Microsystems, Inc. All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH Intro 3 "1 Apr 2009" "SunOS 5.11" "Introduction to Library Functions"
.SH NAME
Intro, intro \- introduction to functions and libraries
.SH DESCRIPTION
.sp
.LP
This section describes functions found in various Solaris libraries, other
than those functions described in Section 2 of this manual that directly
invoke UNIX system primitives. Function declarations can be obtained from
the
.B #include
files indicated on each page. Pages are grouped by
library and are identified by the library name (or an abbreviation of the
library name) after the section number. Collections of related libraries are
grouped into volumes as described below. The first volume contains pages
describing the contents of each shared library and each header used by the
functions, macros, and external variables described in the remaining
volumes.
.SS "Library Interfaces and Headers"
.sp
.LP
This volume describes the contents of each shared library and each header
used by functions, macros, and external variables described in the remaining
volumes.
.sp
.ne 2
.mk
.na
.B (3LIB)
.ad
.sp .6
.RS 4n
The libraries described in this section are implemented as shared
objects.
.sp
Descriptions of shared objects can include a definition of the global
symbols that define the shared objects' public interface, for example
.BR SUNW_1.1 .
Other interfaces can exist within the shared object, for
example
.BR SUNWprivate.1.1 .
The public interface provides a stable,
committed set of symbols for application development. The private interfaces
are for internal use only, and could change at any time.
.RE

.sp
.ne 2
.mk
.na
.B (3LIBUCB)
.ad
.sp .6
.RS 4n
The SunOS/BSD Compatibility libraries described in this section are
implemented as a shared object. See (3LIB) above.
.RE

.sp
.ne 2
.mk
.na
.B (3HEAD)
.ad
.sp .6
.RS 4n
The headers described in this section are used by functions, macros, and
external variables. Headers contain function prototypes, definitions of
symbolic constants, common structures, preprocessor macros, and defined
types. Each function described in the remaining five volumes specifies the
headers that an application must include in order to use that function. In
most cases only one header is required. These headers are present on an
application development system; they do have to be present on the target
execution system.
.RE

.SS "Basic Library Functions"
.sp
.LP
The functions described in this volume are the core C library functions
that are basic to application development.
.sp
.ne 2
.mk
.na
.B (3C)
.ad
.sp .6
.RS 4n
These functions, together with those of Section 2, constitute the standard
C library,
.BR libc ,
which is automatically linked by the C compilation
system. The standard C library is implemented as a shared object,
\fBlibc.so\fR. See \fBlibc\fR(3LIB) and the "C Compilation System" chapter
of the
.I "ANSI C Programmer's Guide"
for a discussion. Some functions
behave differently in standard-conforming environments. This behavior is
noted on the individual manual pages. See
.BR standards (5).
.sp
The
.B libpthread
and
.B libthread
libraries are filter libraries on
\fBlibc\fR that are used for building multithreaded applications:
\fBlibpthread\fR implements the POSIX (see
.BR standards (5))
threads
interface, whereas
.B libthread
implements the Solaris threads interface.
See
.BR "MULTITHREADED APPLICATIONS" ,
below.
.RE

.sp
.ne 2
.mk
.na
.B (3C_DB)
.ad
.sp .6
.RS 4n
These functions constitute the threads debugging library,
.BR libc_db .
This library is implemented as a shared object,
.BR libc_db.so ,
but is not
automatically linked by the C compilation system. Specify
.B -lc_db
on
the
.B cc
command line to link with this library. See
.BR libc_db (3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3MALLOC)
.ad
.sp .6
.RS 4n
These functions constitute the various memory allocation libraries:
.BR libmalloc ,
.BR libbsdmalloc ,
.BR libmapmalloc ,
.BR libmtmalloc ,
and
.BR libumem .
Each of these libraries is implemented as a shared object
(\fBlibmalloc.so\fR,
.BR libbsdmalloc.so ,
.BR libmapmalloc.so ,
.BR libmtmalloc.so ,
and
.BR libumem.so ).
These libraries are not
automatically linked by the C compilation system. Specify
.BR -lmalloc ,
.BR -lbsdmalloc ,
.BR -lmapmalloc ,
.BR -lmtmalloc ,
and
.B -lumem
to
link with, respectively,
.BR libmalloc ,
.BR libbsdmalloc ,
.BR libmapmalloc ,
.BR libmtmalloc ,
and
.BR libumem .
See
.BR libmalloc (3LIB),
.BR libbsdmalloc (3LIB),
.BR libmapmalloc (3LIB),
.BR libmtmalloc (3LIB),
and
.BR libumem (3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3UCB)
.ad
.sp .6
.RS 4n
These functions constitute the source compatibility (with BSD functions)
library. It is implemented as a shared object,
.BR libucb.so ,
but is not
automatically linked by the C compilation system. Specify
.B -lucb
on the
\fBcc\fR command line to link with this library, which is located in the
\fB/usr/ucb\fR subdirectory. Headers for this library are located within
.BR /usr/ucbinclude .
See
.BR libucb (3LIBUCB).
.RE

.SS "Networking Library Functions"
.sp
.LP
The functions described in this volume comprise the various networking
libraries.
.sp
.ne 2
.mk
.na
.B (3COMMPUTIL)
.ad
.sp .6
.RS 4n
These functions constitute the communication protocol parser utilities
library,
.BR libcommputil .
This library is implemented as a shared object,
.BR libcommputil.so ,
but it is not automatically linked by the C
compilation system. Specify
.B -lcommputil
on the
.B cc
command line
to link with this library. See \fBlibcommputil\fR(3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3DLPI)
.ad
.sp .6
.RS 4n
These functions constitute the data link provider interface library,
.BR libdlpi .
This library is implemented as a shared object,
.BR libdlpi.so ,
but it is not automatically linked by the C compilation
system. Specify
.B -ldlpi
on the
.B cc
command line to link with this
library. See \fBlibdlpi\fR(3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3DNS_SD)
.ad
.sp .6
.RS 4n
These functions constitute the DNS service discovery library,
.BR libdns_sd .
This library is implemented as a shared object,
.BR libdns_sd.so ,
but it is not automatically linked by the C compilation
system. Specify
.B -ldns_sd
on the
.B cc
command line to link with
this library. See \fBlibdns_sd\fR(3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3GSS)
.ad
.sp .6
.RS 4n
These functions constitute the generic security services library. This
library is implemented as a shared object,
.BR libgss.so ,
but it is not
automatically linked by the C compilation system. Specify
.B -lgss
on the
\fBcc\fR command line to link with this library. See \fBlibgss\fR(3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3LDAP)
.ad
.sp .6
.RS 4n
These functions constitute the lightweight directory access protocol
library,
.BR libldap .
This library is implemented as a shared object,
.BR libldap.so ,
but is not automatically linked by the C compilation
system. Specify
.B -lldap
on the
.B cc
command line to link with this
library. See \fBldap\fR(3LDAP).
.RE

.sp
.ne 2
.mk
.na
.B (3NSL)
.ad
.sp .6
.RS 4n
These functions constitute the network service library,
.BR libnsl .
This
library is implemented as a shared object,
.BR libnsl.so ,
but is not
automatically linked by the C compilation system. Specify
.B -lnsl
on the
\fBcc\fR command line to link with this library. See \fBlibnsl\fR(3LIB).
.sp
Many base networking functions are also available in the X/Open networking
interfaces library,
.BR libxnet .
See section (3XNET) below for more
information on the
.B libxnet
interfaces.
.RE

.sp
.ne 2
.mk
.na
.B (3RESOLV)
.ad
.sp .6
.RS 4n
These functions constitute the resolver library,
.BR libresolv .
This
library is implemented as a shared object,
.BR libresolv.so ,
but is not
automatically linked by the C compilation system. Specify
.B -lresolv
on
the
.B cc
command line to link with this library. See
.BR libresolv (3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3RPC)
.ad
.sp .6
.RS 4n
These functions constitute the remote procedure call libraries,
\fBlibrpcsvc\fR and
.BR librpcsoc .
The latter is provided for
compatibility only; new applications should not link to it. Both libraries
are implemented as shared objects,
.B librpcsvc.so
and
.BR librpcsoc.so ,
respectively. Neither library is automatically linked by
the C compilation system. Specify
.B -lrpcsvc
or
.B -lrpcsoc
on the
\fBcc\fR command line to link with these libraries. See
.BR librpcsvc (3LIB)
and
.BR librpcsoc (3LIBUCB).
.RE

.sp
.ne 2
.mk
.na
.B (3SASL)
.ad
.sp .6
.RS 4n
These functions constitute the simple authentication and security layer
library,
.BR libsasl .
This library is implemented as a shared object,
.BR libsasl.so ,
but it is not automatically linked by the C compilation
system. Specify
.B -lsasl
on the
.B cc
command line to link with this
library. See \fBlibsasl\fR(3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3SIP)
.ad
.sp .6
.RS 4n
These functions constitute the session initiation protocol library,
.BR libsip .
This library is implemented as a shared object,
.BR libsip.so ,
but it is not automatically linked by the C compilation
system. Specify
.B -lsip
on the
.B cc
command line to link with this
library. See \fBlibsip\fR(3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3SLP)
.ad
.sp .6
.RS 4n
These functions constitute the service location protocol library,
.BR libslp .
This library is implemented as a shared object,
.BR libslp.so ,
but it is not automatically linked by the C compilation
system. Specify
.B -lslp
on the
.B cc
command line to link with this
library. See \fBlibslp\fR(3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3SOCKET)
.ad
.sp .6
.RS 4n
These functions constitute the sockets library,
.BR libsocket .
This
library is implemented as a shared object,
.BR libsocket.so ,
but is not
automatically linked by the C compilation system. Specify
.B -lsocket
on
the
.B cc
command line to link with this library. See
.BR libsocket (3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3XNET)
.ad
.sp .6
.RS 4n
These functions constitute X/Open networking interfaces which comply with
the X/Open CAE Specification, Networking Services, Issue 4 (September,
1994). This library is implemented as a shared object,
.BR libxnet.so ,
but
is not automatically linked by the C compilation system. Specify
\fB-lxnet\fR on the \fBcc\fR command line to link with this library. See
.BR libxnet (3LIB)
and
.BR standards (5)
for compilation information.
.RE

.sp
.LP
Under all circumstances, the use of the Sockets API is recommended over the
XTI and TLI APIs. If portability to other XPGV4v2 (see
.BR standards (5))
.RB "systems is a requirement, the application must use the" " libxnet"
interfaces. If portability is not required, the sockets interfaces in
\fBlibsocket\fR and \fBlibnsl\fR are recommended over those in
.BR libxnet .
Between the XTI and TLI APIs, the
.B XTI
interfaces
(available with
.BR libxnet )
are recommended over the
.B TLI
interfaces
(available with
.BR libnsl ).
.SS "Curses Library Functions"
.sp
.LP
The functions described in this volume comprise the libraries that provide
graphics and character screen updating capabilities.
.sp
.ne 2
.mk
.na
.B (3CURSES)
.ad
.sp .6
.RS 4n
The functions constitute the following libraries:
.sp
.ne 2
.mk
.na
.B libcurses
.ad
.sp .6
.RS 4n
These functions constitute the curses library,
.BR libcurses .
This
library is implemented as a shared object,
.BR libcurses.so ,
but is not
automatically linked by the C compilation system. Specify
.B -lcurses
on
the
.B cc
command line to link with this library. See
.BR libcurses (3LIB).
.RE

.sp
.ne 2
.mk
.na
\fBlibform\fR
.ad
.sp .6
.RS 4n
These functions constitute the forms library,
.BR libform .
This library
is implemented as a shared object,
.BR libform.so ,
but is not
automatically linked by the C compilation system. Specify \fB-lform\fR on
the
.B cc
command line to link with this library. See
.BR libform (3LIB).
.RE

.sp
.ne 2
.mk
.na
.B libmenu
.ad
.sp .6
.RS 4n
These functions constitute the menus library,
.BR libmenu .
This library
is implemented as a shared object,
.BR libmenu.so ,
but is not
automatically linked by the C compilation system. Specify
.B -lmenu
on
the
.B cc
command line to link with this library. See
.BR libmenu (3LIB).
.RE

.sp
.ne 2
.mk
.na
.B libpanel
.ad
.sp .6
.RS 4n
These functions constitute the panels library,
.BR libpanel .
This library
is implemented as a shared object,
.BR libpanel.so ,
but is not
automatically linked by the C compilation system. Specify
.B -lpanel
on
the
.B cc
command line to link with this library. See
.BR libpanel (3LIB).
.RE

.RE

.sp
.ne 2
.mk
.na
.B (3PLOT)
.ad
.sp .6
.RS 4n
These functions constitute the grapnics library,
.BR libplot .
This
library is implemented as a shared object,
.BR libplot.so ,
but is not
automatically linked by the C compilation system. Specify
.B -lplot
on
the
.B cc
command line to link with this library. See
.BR libplot (3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3XCURSES)
.ad
.sp .6
.RS 4n
These functions constitute the X/Open curses library, located in
.BR /usr/xpg4/lib/libcurses.so .
This library provides a set of
internationalized functions and macros for creating and modifying input and
output to a terminal screen. Included in this library are functions for
creating windows, highlighting text, writing to the screen, reading from
user input, and moving the cursor. X/Open Curses is designed to optimize
screen update activities. The X/Open Curses library conforms fully with
Issue 4 of the X/Open Extended Curses specification. See
.BR libcurses (3XCURSES).
.RE

.SS "Extended Library Functions, Vol. 1"
.sp
.LP
The functions described in this volume comprise the following specialized
libraries:
.sp
.ne 2
.mk
.na
.B (3BSM)
.ad
.sp .6
.RS 4n
These functions constitute the Solaris auditing library,
.BR libbsm .
This
library is implemented as a shared object,
.BR libbsm.so ,
but is not
automatically linked by the C compilation system. Specify
.B -lbsm
on the
\fBcc\fR command line to link with this library. See \fBlibbsm\fR(3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3CFGADM)
.ad
.sp .6
.RS 4n
These functions constitute the configuration administration library,
\fBlibcfgadm\fR. This library is implemented as a shared object,
\fBlibcfgadm.so\fR, but is not automatically linked by the C compilation
system. Specify \fB-lcfgadm\fR on the
.B cc
command line to link with
this library. See \fBlibcfgadm\fR(3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3CONTRACT)
.ad
.sp .6
.RS 4n
These functions constitute the contract management library,
.BR libcontract .
This library is implemented as a shared object,
.BR libcontract.so ,
but is not automatically linked by the C compilation
system. Specify
.B -lcontract
on the
.B cc
command line to link with
this library. See \fBlibcontract\fR(3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3CPC)
.ad
.sp .6
.RS 4n
These functions constitute the CPU performance counter library,
.BR libcpc ,
and the process context library,
.BR libpctx .
These
libraries are implemented as shared objects,
.B libcpc.so
and
.BR libpctx.so ,
respectively, but are not automatically linked by the C
compilation system. Specify
.B -lcpc
or
.B -lpctx
on the
.BR cc
command line to link with these libraries. See
.BR libcpc (3LIB)
and
.BR libpctx (3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3DAT)
.ad
.sp .6
.RS 4n
These functions constitute the direct access transport library,
.BR libdat .
This library is implemented as a shared object,
.BR libdat.so ,
but is not automatically linked by the C compilation
system. Specify
.B -ldat
on the
.B cc
command line to link with this
library. See \fBlibdat\fR(3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3DEVID)
.ad
.sp .6
.RS 4n
These functions constitute the device
.B ID
library,
.BR libdevid .
This library is implemented as a shared object,
.BR libdevid.so ,
but is
not automatically linked by the C compilation system. Specify \fB-ldevid\fR
on the
.B cc
command line to link with this library. See
.BR libdevid (3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3DEVINFO)
.ad
.sp .6
.RS 4n
These functions constitute the device information library,
\fBlibdevinfo\fR. This library is implemented as a shared object,
\fBlibdevinfo.so\fR, but is not automatically linked by the C compilation
system. Specify \fB-ldevinfo\fR on the
.B cc
command line to link with
this library. See \fBlibdevinfo\fR(3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3ELF)
.ad
.sp .6
.RS 4n
These functions constitute the ELF access library,
.BR libelf ,
(Extensible Linking Format). This library provides the interface for the
creation and analyses of "elf" files; executables, objects, and shared
objects. \fBlibelf\fR is implemented as a shared object, \fBlibelf.so\fR,
but is not automatically linked by the C compilation system. Specify
\fB-lelf\fR on the \fBcc\fR command line to link with this library. See
.BR libelf (3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3EXACCT)
.ad
.sp .6
.RS 4n
These functions constitute the extended accounting access library,
.BR libexacct ,
and the project database access library,
.BR libproject .
These libraries are implemented as shared objects,
.B libexacct.so
and
.BR libproject.so ,
respectively, but are not automatically linked by the C
compilation system. Specify
.B -lexacct
or
.B -lproject
on the
\fBcc\fR command line to link with these libraries. See
.BR libexacct (3LIB)
and
.BR libproject (3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3FCOE)
.ad
.sp .6
.RS 4n
These functions constitute the Fibre  Channel  over Ethernet port
management library. This library is implemented as a shared object,
\fBlibfcoe.so\fR, but is not automatically linked by the C compilation
system. Specify \fB-lfcoe\fR on the
.B cc
command line to link with this
library. See \fBlibfcoe\fR(3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3FSTYP)
.ad
.sp .6
.RS 4n
These functions constitute the file system type identification library.
This library is implemented as a shared object,
.BR libfstyp.so ,
but is
not automatically linked by the C compilation system. Specify \fB-lfstyp\fR
on the
.B cc
command line to link with this library. See
.BR libfstyp (3LIB).
.RE

.SS "Extended Library Functions, Vol. 2"
.sp
.LP
The functions described in this volume comprise the following specialized
libraries:
.sp
.ne 2
.mk
.na
.B (3GEN)
.ad
.sp .6
.RS 4n
These functions constitute the string pattern-matching and pathname
manipulation library,
.BR libgen .
This library is implemented as a shared
object,
.BR libgen.so ,
but is not automatically linked by the C
compilation system. Specify
.B -lgen
on the
.B cc
command line to link
with this library. See \fBlibgen\fR(3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3HBAAPI)
.ad
.sp .6
.RS 4n
These functions constitute the common fibre channel HBA information
library,
.BR libhbaapi .
This library is implemented as a shared object,
.BR libhbaapi.so ,
but is not automatically linked by the C compilation
system. Specify
.B -lhbaapi
on the
.B cc
command line to link with
this library. See \fBlibhbaapi\fR(3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3ISCSIT)
.ad
.sp .6
.RS 4n
These functions constitute the iSCSI Management library,
.BR libiscsit .
This library is implemented as a shared object,
.BR libiscsit.so ,
but is
not automatically linked by the C compilation system. Specify \fB-liscsit\fR
on the
.B cc
command line to link with this library. See
.BR libiscsit (3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3KSTAT)
.ad
.sp .6
.RS 4n
These functions constitute the kernel statistics library, which is
implemented as a shared object,
.BR libkstat.so ,
but is not automatically
linked by the C compilation system. Specify
.B -lkstat
on the
.BR cc
command line to link with this library. See \fBlibkstat\fR(3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3KVM)
.ad
.sp .6
.RS 4n
These functions allow access to the kernel's virtual memory library, which
is implemented as a shared object,
.BR libkvm.so ,
but is not automatically
linked by the C compilation system. Specify
.B -lkvm
on the
.BR cc
command line to link with this library. See \fBlibkvm\fR(3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3LAYOUT)
.ad
.sp .6
.RS 4n
These functions constitute the layout service library, which is implemented
as a shared object,
.BR liblayout.so ,
but is not automatically linked by
the C compilation system. Specify
.B -llayout
on the
.B cc
command
line to link with this library. See \fBliblayout\fR(3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3LGRP)
.ad
.sp .6
.RS 4n
These functions constitute the locality group library, which is implemented
as a shared object,
.BR liblgrp.so ,
but is not automatically linked by the
C compilation system. Specify
.B -llgrp
on the
.B cc
command line to
link with this library. See \fBliblgrp\fR(3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3M)
.ad
.sp .6
.RS 4n
These functions constitute the mathematical library,
.BR libm .
This
library is implemented as a shared object,
.BR libm.so ,
but is not
automatically linked by the C compilation system. Specify
.B -lm
on the
\fBcc\fR command line to link with this library. See \fBlibm\fR(3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3MAIL)
.ad
.sp .6
.RS 4n
These functions constitute the user mailbox management library,
.BR libmail .
This library is implemented as a shared object,
.BR libmail.so ,
but is not automatically linked by the C compilation
system. Specify
.B -lmail
on the
.B cc
command line to link with this
library. See \fBlibmail\fR(3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3MP)
.ad
.sp .6
.RS 4n
These functions constitute the integer mathematical library,
.BR libmp .
This library is implemented as a shared object,
.BR libmp.so ,
but is not
automatically linked by the C compilation system. Specify
.B -lmp
on the
\fBcc\fR command line to link with this library. See \fBlibmp\fR(3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3MPAPI)
.ad
.sp .6
.RS 4n
These functions constitute the Common Mulitipath Management library,
.BR libMPAPI .
This library is implemented as a shared object,
.BR libMPAPI.so ,
but is not automatically linked by the C compilation
system. Specify
.B -lMPAPI
on the
.B cc
command line to link with this
library. See \fBlibMPAPI\fR(3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3MVEC)
.ad
.sp .6
.RS 4n
These functions constitute the vector mathematical library,
.BR libmvec .
This library is implemented as a shared object,
.BR libmvec.so ,
but is not
automatically linked by the C compilation system. Specify
.B -lmvec
on
the
.B cc
command line to link with this library. See
.BR libmvec (3LIB).
.RE

.SS "Extended Library Functions, Vol. 3"
.sp
.LP
The functions described in this volume comprise the following specialized
libraries:
.sp
.ne 2
.mk
.na
.B (3NVPAIR)
.ad
.sp .6
.RS 4n
These functions constitute the name-value pair library,
.BR libnvpair .
This library is implemented as a shared object,
.BR libnvpair.so ,
but is
not automatically linked by the C compilation system. Specify \fB-lnvpair\fR
on the
.B cc
command line to link with this library. See
.BR libnvpair (3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3PAM)
.ad
.sp .6
.RS 4n
These functions constitute the pluggable uuthentication module library,
.BR libpam .
This library is implemented as a shared object,
.BR libpam.so ,
but is not automatically linked by the C compilation
system. Specify
.B -lpam
on the
.B cc
command line to link with this
library. See \fBlibpam\fR(3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3PAPI)
.ad
.sp .6
.RS 4n
These functions constitute the Free Standards Group Open Printing API
(PAPI) library,
.BR libpapi .
This library is implemented as a shared
object,
.BR libpapi.so ,
but is not automatically linked by the C
compilation system. Specify
.B -lpapi
on the
.B cc
command line to
link with this library. See \fBlibpapi\fR(3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3PICL)
.ad
.sp .6
.RS 4n
These functions constitute the PICL library,
.BR libpicl .
This library is
implemented as a shared object,
.BR libpicl.so ,
but is not automatically
linked by the C compilation system. Specify
.B -lpicl
on the
.BR cc
command line to link with this library. See
.BR libpicl (3LIB)
and
.BR libpicl (3PICL).
.RE

.sp
.ne 2
.mk
.na
.B (3PICLTREE)
.ad
.sp .6
.RS 4n
These functions constitute the PICL plug-in library,
.BR libpicltree .
This library is implemented as a shared object,
.BR libpicltree.so ,
but is
not automatically linked by the C compilation system. Specify
\fB-lpicltree\fR on the \fBcc\fR command line to link with this library. See
.BR libpicltree (3LIB)
and
.BR libpicltree (3PICLTREE).
.RE

.sp
.ne 2
.mk
.na
.B (3POOL)
.ad
.sp .6
.RS 4n
These functions constitute the pool configuration manipulation library,
.BR libpool .
This library is implemented as a shared object,
.BR libpool.so ,
but is not automatically linked by the C compilation
system. Specify
.B -lpool
on the
.B cc
command line to link with this
library. See \fBlibpool\fR(3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3PROJECT)
.ad
.sp .6
.RS 4n
These functions constitute the project database access library,
.BR libproject .
This library is implemented as a shared object,
.BR libproject.so ,
but is not automatically linked by the C compilation
system. Specify
.B -lproject
on the
.B cc
command line to link with
this library. See \fBlibproject\fR(3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3RSM)
.ad
.sp .6
.RS 4n
These functions constitute the remote shared memory library,
.BR librsm .
This library is implemented as a shared object,
.BR librsm.so ,
but is not
automatically linked by the C compilation system. Specify
.B -lrsm
on the
\fBcc\fR command line to link with this library. See \fBlibrsm\fR(3LIB).
.RE

.SS "Extended Library Functions, Vol. 4"
.sp
.LP
The functions described in this volume comprise the following specialized
libraries:
.sp
.ne 2
.mk
.na
.B (3SCF)
.ad
.sp .6
.RS 4n
These functions constitute the object-caching memory allocation library,
\fBlibscf\fR. This library is implemented as a shared object,
\fBlibscf.so\fR, but is not automatically linked by the C compilation
system. Specify \fB-lscf\fR on the
.B cc
command line to link with this
library. See \fBlibscf\fR(3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3SEC)
.ad
.sp .6
.RS 4n
These functions constitute the file access control library,
.BR libsec .
This library is implemented as a shared object,
.BR libsec.so ,
but is not
automatically linked by the C compilation system. Specify
.B -lsec
on the
\fBcc\fR command line to link with this library. See \fBlibsec\fR(3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3SECDB)
.ad
.sp .6
.RS 4n
These functions constitute the security attributes database library,
.BR libsecdb .
This library is implemented as a shared object,
.BR libsecdb.so ,
but is not automatically linked by the C compilation
system. Specify
.B -lsecdb
on the
.B cc
command line to link with this
library. See \fBlibsecdb\fR(3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3SMARTCARD)
.ad
.sp .6
.RS 4n
These functions constitute the smartcard library,
.BR libsmartcard .
This
library is implemented as a shared object,
.BR libsmartcard.so ,
but is not
automatically linked by the C compilation system. Specify \fB-lsmartcard\fR
on the
.B cc
command line to link with this library. See
.BR libsmartcard (3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3SNMP)
.ad
.sp .6
.RS 4n
These functions constitute the SNMP libraries,
.B libssagent
and
.BR libssasnmp .
These libraries are implemented as shared objects,
\fBlibssagent.so\fR and
.BR libssasnmp.so ,
respectively, but are not
automatically linked by the C compilation system. Specify
.B -lssagent
or
\fB-lssasnmp\fR on the \fBcc\fR command line to link with these libraries.
See \fBlibssagent\fR(3LIB) and \fBlibssasnmp\fR(3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3STMF)
.ad
.sp .6
.RS 4n
These functions constitute the SCSI Target Mode Framework library,
\fBlibstmf\fR. This library is implemented as a shared object,
\fBlibstmf.so\fR, but is not automatically linked by the C compilation
system. Specify \fB-lstmf\fR on the
.B cc
command line to link with this
library. See \fBlibstmf\fR(3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3SYSEVENT)
.ad
.sp .6
.RS 4n
These functions constitute the system event library,
.BR libsysevent .
This library is implemented as a shared object,
.BR libsysevent.so ,
but is
not automatically linked by the C compilation system. Specify
\fB-lsysevent\fR on the \fBcc\fR command line to link with this library. See
.BR libsysevent (3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3TECLA)
.ad
.sp .6
.RS 4n
These functions constitute the interactive command-line input library,
.BR libtecla .
This library is implemented as a shared object,
.BR libtecla.so ,
but is not automatically linked by the C compilation
system. Specify
.B -ltecla
on the
.B cc
command line to link with this
library. See \fBlibtecla\fR(3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3TNF)
.ad
.sp .6
.RS 4n
These functions constitute the TNF libraries,
.BR libtnf ,
.BR libtnfctl ,
and
.BR libtnfprobe .
These libraries are implemented as
shared objects,
.BR libtnf.so ,
.BR libtnfctl.so ,
and
\fBlibtnfprobe.so\fR, respectively, but are not automatically linked by the
C compilation system. Specify
.BR -ltnf ,
.BR -ltnfctl ,
or
\fB-ltnfprobe\fR on the \fBcc\fR command line to link with these libraries.
See \fBlibtnfctl\fR(3TNF) and \fBlibtnfctl\fR(3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3TSOL)
.ad
.sp .6
.RS 4n
These functions constitute the Trusted Extensions library,
.BR libtsol ,
and the Trusted Extensions network library,
.BR libtsnet .
These libraries
are implemented as shared objects,
.B libtsol.so
and
.BR libtsnet.so ,
but are not automatically linked by the C compilation system. Specify
\fB-ltsol\fR or \fB-ltsnet\fR on the \fBcc\fR command line to link with
these libraries. See \fBlibtsol\fR(3LIB) and \fBlibtsnet\fR(3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3UUID)
.ad
.sp .6
.RS 4n
These functions constitute the universally unique identifier library,
.BR libuuid .
This library is implemented as a shared object,
.BR libuuid.so ,
but is not automatically linked by the C compilation
system. Specify
.B -luuid
on the
.B cc
command line to link with this
library. See \fBlibuuid\fR(3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3VOLMGT)
.ad
.sp .6
.RS 4n
These functions constitute the volume management library,
.BR libvolmgt .
This library is implemented as a shared object,
.BR libvolmgt.so ,
but is
not automatically linked by the C compilation system. Specify \fB-lvolmgt\fR
on the
.B cc
command line to link with this library. See
.BR libvolmgt (3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3WSREG)
.ad
.sp .6
.RS 4n
These functions constitute the product install registry library,
.BR libwsreg .
This library is implemented as a shared object,
.BR libwsreg.so ,
but is not automatically linked by the C compilation
system. Specify
.B -lwsreg
on the
.B cc
command line to link with this
library. See \fBlibwsreg\fR(3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3XTSOL)
.ad
.sp .6
.RS 4n
These functions constitute the Trusted Extensions to the X windows library,
.BR libXtsol .
This library is implemented as a shared object,
.BR libXtsol.so ,
but is not automatically linked by the C compilation
system. Specify
.B -lX11
and then
.B -lXtsol
on the
.B cc
command
line to link with this library. See \fBlibXtsol\fR(3LIB).
.RE

.SS "Multimedia Library Functions"
.sp
.ne 2
.mk
.na
.B (3MLIB)
.ad
.sp .6
.RS 4n
These functions constitute the mediaLib library,
.BR libmlib .
This
library is implemented as a shared object,
.BR libmlib.so ,
but is not
automatically linked by the C compilation system. Specify
.B -lmlib
on
the
.B cc
command line to link with this library. See
.BR libmlib (3LIB).
.RE

.sp
.ne 2
.mk
.na
.B (3MMS)
.ad
.sp .6
.RS 4n
These functions constitute the Media Management System library,
.BR libmms .
This library is implemented as a shared object,
.BR libmms.so ,
but is not automatically linked by the C compilation
system. Specify
.B -lmms
on the
.B cc
command line to link with this
library. See \fBlibmms\fR(3LIB).
.RE

.SH DEFINITIONS
.sp
.LP
A character is any bit pattern able to fit into a byte on the machine. In
some international languages, however, a "character" might require more than
one byte, and is represented in multi-bytes.
.sp
.LP
The null character is a character with value 0, conventionally represented
in the C language as \fB\e\|0\fR\&. A character array is a sequence of
characters. A null-terminated character array
.RI "(a " string )
is a sequence
of characters, the last of which is the null character. The null string is a
character array containing only the terminating null character. A null
pointer is the value that is obtained by casting
.B 0
into a pointer. C
guarantees that this value will not match that of any legitimate pointer, so
many functions that return pointers return
.I NULL
to indicate an error.
The macro
.I NULL
is defined in <\fBstdio.h\fR>. Types of the form
\fBsize_t\fR are defined in the appropriate headers.
.SH MULTITHREADED APPLICATIONS
.sp
.LP
Both POSIX threads and Solaris threads can be used within the same
application. Their implementations are completely compatible with each
other; however, only POSIX threads guarantee portability to other
POSIX-conforming environments.
.sp
.LP
The
.BR libpthread "(3LIB) and"
.BR libthread (3LIB)
libraries are
implemented as filters on
.BR libc (3LIB).
.sp
.LP
When compiling a multithreaded application, the
.B -mt
option must be
specified on the command line.
.sp
.LP
There is no need for a multithreaded application to link with
.BR -lthread .
An application must link with
.B -lpthread
only when
POSIX semantics for
.BR fork (2)
are desired. When an application is linked
with
.BR -lpthread ,
a call to \fBfork()\fR assumes the behavior
\fBfork1\fR(2) rather than the default behavior that forks all threads.
.sp
.LP
When compiling a POSIX-conforming application, either the
\fB_POSIX_C_SOURCE\fR or \fB_POSIX_PTHREAD_SEMANTICS\fR option must be
specified on the command line. For POSIX.1c-conforming applications, define
the
.B _POSIX_C_SOURCE
flag to be >= 199506L:
.sp
.in +2
.nf
\fBcc\fR \fB-mt\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-D_POSIX_C_SOURCE=199506L\fR \fB-lpthread\fR
.fi
.in -2

.sp
.LP
For POSIX behavior with the Solaris \fBfork()\fR and \fBfork1()\fR
distinction, compile as follows:
.sp
.in +2
.nf
\fBcc\fR \fB-mt\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-D_POSIX_PTHREAD_SEMANTICS\fR
.fi
.in -2

.sp
.LP
For Solaris threads behavior, compile as follows:
.sp
.in +2
.nf
\fBcc\fR \fB-mt\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|.
.fi
.in -2

.sp
.LP
Unsafe interfaces should be called only from the main thread to ensure the
application's safety.
.sp
.LP
MT-Safe interfaces are denoted in the
.B ATTRIBUTES
section of the
functions and libraries manual pages (see
.BR attributes (5)).
If a manual
page does not state explicitly that an interface is MT-Safe, the user should
assume that the interface is unsafe.
.SH REALTIME APPLICATIONS
.sp
.LP
The environment variable
.B LD_BIND_NOW
must be set to a non-null value
to enable early binding. Refer to the "When Relocations are Processed"
chapter in
.I "Linker and Libraries Guide"
for additional information.
.SH FILES
.sp
.ne 2
.mk
.na
.I INCDIR
.ad
.RS 15n
.rt
usually
.BR /usr/include
.RE

.sp
.ne 2
.mk
.na
.I LIBDIR
.ad
.RS 15n
.rt
usually either
.B /lib
or
.B /usr/lib
(32-bit) or either
\fB/lib/64\fR or \fB/usr/lib/64\fR (64-bit)
.RE

.sp
.ne 2
.mk
.na
\fILIBDIR\fB/*.so\fR
.ad
.RS 15n
.rt
shared libraries
.RE

.SH ACKNOWLEDGMENTS
.sp
.LP
Sun Microsystems, Inc. gratefully acknowledges The Open Group for
permission to reproduce portions of its copyrighted documentation. Original
documentation from The Open Group can be obtained online at
http://www.opengroup.org/bookstore/\&.
.sp
.LP
The Institute of Electrical and Electronics Engineers and The Open Group,
have given us permission to reprint portions of their documentation.
.sp
.LP
In the following statement, the phrase ``this text'' refers to portions of
the system documentation.
.sp
.LP
Portions of this text are reprinted and reproduced in electronic form in
the SunOS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard for
Information Technology -- Portable Operating System Interface (POSIX), The
Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
Institute of Electrical and Electronics Engineers, Inc and The Open Group.
In the event of any discrepancy between these versions and the original IEEE
and The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document.  The original Standard can be obtained online at
http://www.opengroup.org/unix/online.html\&.
.sp
.LP
This notice shall appear on any product containing this material.
.SH SEE ALSO
.sp
.LP
.BR ar (1),
.BR ld (1),
\fBfork\fR(2), \fBstdio\fR(3C),
.BR attributes (5),
.BR standards (5)
.sp
.LP
.I Linker and Libraries Guide
.sp
.LP
\fIPerformance Profiling Tools\fR
.sp
.LP
.I ANSI C Programmer's Guide
.SH DIAGNOSTICS
.sp
.LP
For functions that return floating-point values, error handling varies
according to compilation mode. Under the
.B -Xt
(default) option to
.BR cc ,
these functions return the conventional values
.BR 0 ,
\fB\(+-HUGE\fR, or \fBNaN\fR when the function is undefined for the given
arguments or when the value is not representable. In the
.B -Xa
and
\fB-Xc\fR compilation modes, \fB\(+-HUGE_VAL\fR is returned instead of
\fB\(+-HUGE\fR\&. (\fBHUGE_VAL\fR and \fBHUGE\fR are defined in \fBmath.h\fR
to be infinity and the largest-magnitude single-precision number,
respectively.)
.SH NOTES
.sp
.LP
None of the functions, external variables, or macros should be redefined in
the user's programs. Any other name can be redefined without affecting the
behavior of other library functions, but such redefinition might conflict
with a declaration in an included header.
.sp
.LP
The headers in
.I INCDIR
provide function prototypes (function
declarations including the types of arguments) for most of the functions
listed in this manual. Function prototypes allow the compiler to check for
correct usage of these functions in the user's program. The \fBlint\fR
program checker can also be used and will report discrepancies even if the
headers are not included with
.B #include
statements. Definitions for
Sections 2 and 3C are checked automatically. Other definitions can be
included by using the
.B -l
option to
.BR lint .
.RB "(For example," " -lm"
includes definitions for
.BR libm .)
Use of
.B lint
is highly
recommended. See the
.B lint
chapter in \fIPerformance Profiling
Tools\fR
.sp
.LP
Users should carefully note the difference between STREAMS and
.IR stream .
STREAMS is a set of kernel mechanisms that support the
development of network services and data communication drivers. It is
composed of utility routines, kernel facilities, and a set of data
structures. A
.I stream
is a file with its associated buffering. It is
declared to be a pointer to a type
.B FILE
defined in
.BR <stdio.h> .
.sp
.LP
In detailed definitions of components, it is sometimes necessary to refer
to symbolic names that are implementation-specific, but which are not
necessarily expected to be accessible to an application program. Many of
these symbolic names describe boundary conditions and system limits.
.sp
.LP
In this section, for readability, these implementation-specific values are
given symbolic names. These names always appear enclosed in curly brackets
to distinguish them from symbolic names of other implementation-specific
constants that are accessible to application programs by headers. These
names are not necessarily accessible to an application program through a
header, although they can be defined in the documentation for a particular
system.
.sp
.LP
In general, a portable application program should not refer to these
symbolic names in its code. For example, an application program would not be
expected to test the length of an argument list given to a routine to
determine if it was greater than {\fBARG_MAX\fR}.
