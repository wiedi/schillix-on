'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH DNSServiceRegister 3DNS_SD "20 Aug 2007" "SunOS 5.11" "DNS Service Discovery Library Functions"
.SH NAME
DNSServiceRegister \- register service with DNS
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR .\|.\|. ] \fIfile\fR .\|.\|. \fB-ldns_sd\fR [ \fIlibrary\fR .\|.\|. ]
#include <dns_sd.h>

\fBDNSServiceErrorType\fR \fIDNSServiceRegister\fR(\fBDNSServiceRef\fR *\fIsdRef\fR,
     \fBDNSServiceFlags\fR \fIflags\fR, \fBuint32_t\fR \fIinterfaceIndex\fR,
     \fBconst char\fR *\fIname\fR, \fBconst char\fR *\fIregtype\fR,
     \fBconst char\fR *\fIdomain\fR, \fBconst char\fR *\fIhost\fR,
     \fBuint16_t\fR \fIport\fR, \fBuint16_t\fR *\fItxtLen\fR, \fBconst void\fR *\fItxtRecord\fR
     \fBDNSServiceServiceRegisterReply\fR \fIcallBack\fR
     \fBvoid\fR *\fIcontext\fR);
.fi

.LP
.nf
\fBtypedef\fR \fIvoid\fR(*\fBDNSServiceRegisterReply\fR)(\fBDNSServiceRef\fR \fIsdRef\fR,
     \fBDNSServiceFlags\fR \fIflags\fR, \fBDNSServiceErrorType\fR \fIerrorCode\fR,
     \fBconst char\fR *\fIname\fR, \fBconst char\fR *\fIregtype\fR,
     \fBconst char\fR *\fIdomain\fR, \fBvoid\fR *\fIcontext\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B DNSServiceRegister
function is used by clients to advertise a
service that uses
.BR DNS .
The service is registered with multicast
.B DNS
if the domain name is
.B \&.local
or the interface requested is
local only. Otherwise, the service registration is attempted with the unicast
.B DNS
server. The callback argument should point to a function of type
.B DNSServiceRegisterReply
listed above.
.sp
.LP
The
.I sdRef
parameter points to an uninitialized
.B
DNSServiceRef
instance. If the
.B DNSServiceRegister()
call succeeds,
.I sdRef
is
initialized and
.B kDNSServiceErr_NoError
is returned. The service
registration remains active until the client terminates the registration by
passing the initialized
.I sdRef
to
.BR DNSServiceRefDeallocate() .
The
.I interfaceIndex
when non-zero specifies the interface on which the
service should be registered. Most applications pass
.B 0
to register the
service on all interfaces. See the section "Constants for specifying an
interface index" in
.B <dns_sd.h>
for more details. The
.I
flags
parameter determines the renaming behavior on a service name conflict. Most
applications pass
.B 0
to allow auto-rename of the service name in case of
a name conflict. Applications can pass the flag
.B kDNSServiceFlagsNoAutoRename
defined in
.B <dns_sd.h>
to disable
auto-rename.
.sp
.LP
The
.I regtype
indicates the service type followed by the protocol,
separated by a dot, for example "\fB_ftp._tcp.\fR". The service type must be
an underscore that is followed by 1 to 14 characters that can be letters,
digits, or hyphens. The transport protocol must be
.B _tcp
or
.BR _udp .
New service types should be registered at
http://www.dns-sd.org/ServiceTypes.html\&. The
.I domain
parameter
specifies the domain on which a service is advertised. Most applications
leave the
.I domain
parameter
.I NULL
to register the service in
default domains. The
.I host
parameter specifies the
.B SRV
target host
name. Most applications do not specify the host parameter value. Instead, the
default host name of the machine is used. The port value on which the service
accepts connections must be passed in network byte order. A value of
.B 0
for a port is passed to register
.I placeholder
services. Placeholder
services are not found when browsing, but other clients cannot register with
the same name as the placeholder service.
.sp
.LP
The
.I txtLen
parameter specifies the length of the passed
.I txtRecord
in bytes. The value must be zero if the
.I txtRecord
passed is
.IR NULL .
The
.I txtRecord
points to the
.B TXT
record
rdata. A
.RI non- "NULL txtRecord"
must be a properly formatted
.B DNSTXT
record. For more details see the
.B DNSServiceRegister
call defined in
.BR <dns_sd.h> \&.
The callback argument points to a
function to be called when registration completes or when the call
asynchronously fails. The client can pass
.I NULL
for the callback and not
be notified of the registration results or asynchronous errors. The client
may not pass the
.B NoAutoRename
flag if the callback is
.IR NULL .
The
client can unregister the service at any time via
.BR DNSServiceRefDeallocate() .
.sp
.LP
The callback function argument
.I sdRef
is initialized by
.BR DNSServiceRegister() .
The
.I flags
argument in the callback function
is currently unused and reserved for future use. The error code returned to
the callback is
.B kDNSServiceErr_NoError
on success. Otherwise, an error
code defined in
.B <dns_sd.h>
is returned to indicate an error condition
such as a name conflict in
.B kDNSServiceFlagsNoAutoRename
mode. The
.I name
argument holds the registered service name and the
.IR regtype
argument is the registered service type passed to
.BR DNSServiceRegister() .
The domain argument returned in the callback indicates the domain on which
the service was registered.
.SH RETURN VALUES
.sp
.LP
The
.B DNSServiceRegister
function returns
.BR kDNSServiceErr_NoError
on success. Otherwise, an error code defined in
.B <dns_sd.h>
is returned.
Upon registration, any subsequent asynchronous errors are delivered to the
callback.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for description of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
\fBDNSServiceRefDeallocate\fR(3DNS_SD),
.BR attributes (5)
