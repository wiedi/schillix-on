'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH DNSServiceBrowse 3DNS_SD "20 Aug 2007" "SunOS 5.11" "DNS Service Discovery Library Functions"
.SH NAME
DNSServiceBrowse \- browse service instances with DNS
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR .\|.\|. ] \fIfile\fR .\|.\|. \fB-ldns_sd\fR [ \fIlibrary\fR .\|.\|. ]
#include <dns_sd.h>

\fBDNSServiceErrorType\fR \fIDNSServiceBrowse\fR(\fBDNSServiceRef\fR *\fIsdRef\fR,
     \fBDNSServiceFlags\fR \fIflags\fR, \fBuint32_t\fR \fIinterfaceIndex\fR,
     \fBconst char\fR *\fIregtype\fR, \fBconst char\fR *\fIdomain\fR,
     \fBDNSServiceServiceBrowseReply\fR \fIcallBack\fR, \fBvoid\fR *\fIcontext\fR);
.fi

.LP
.nf
\fBtypedef\fR \fIvoid\fR(*\fBDNSServiceBrowseReply\fR)(\fBDNSServiceRef\fR \fIsdRef\fR,
     \fBDNSServiceFlags\fR \fIflags\fR, \fBuint32_t\fR \fIinterfaceIndex\fR,
     \fBDNSServiceErrorType\fR \fIerrorCode\fR, \fBconst char\fR *\fIserviceName\fR,
     \fBconst char\fR *\fIregtype\fR, \fBconst char\fR *\fIreplyDomain\fR,
     \fBvoid\fR *\fIcontext\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B DNSServiceBrowse()
function is used to browse for service
instances of a particular service and protocol type. The \fIsdRef\fR
argument points to an uninitialized
.IR DNSServiceRef .
If the call to
.B DNSServiceBrowse
succeeds \fIsdRef\fR is initialized. The \fIflags\fR
argument to
.B DNSServiceBrowse()
is currently unused and reserved for
future use. A nonzero value to
.I interfaceIndex
indicates
.B DNSServiceBrowse()
should do a browse on all interfaces. Most
applications will use an \fIinterfaceIndex\fR value of \fB0\fR to perform a
browse on all interfaces. See the section "Constants for specifying an
interface index" in \fB<dns_sd.h>\fR for more details.
.sp
.LP
The callback function is invoked for every service instance found matching
the service type and protocol. The
.I callback
argument points to a
function of type
.B DNSServiceBrowseReply
listed above. The
.B DNSServiceBrowse()
call returns browse results asynchronously. The
service browse call can be terminated by applications with a call to
.BR DNSServiceRefDeallocate() .
.sp
.LP
The
.I regtype
parameter is used to specify the service type and
protocol (e.g. \fB_ftp\fR.\fB_tcp\fR). The protocol type must be \fBTCP\fR
or
.BR UDP .
The
.I domain
argument to
.BR DNSServiceBrowse()
specifies the domain on which to browse for services. Most applications will
not specify a domain and will perform a browse on the default domain(s). The
.I context
argument can be
.I NULL
and points to a value passed to the
callback function.
.sp
.LP
The
.I sdRef
argument passed to the callback function is initialized by
.B DNSServiceBrowse()
call. The possible values passed to
.I flags
in
the callback function are:
.B kDNSServiceFlagsMoreComing
and
.BR kDNSServiceFlagsAdd .
The
.B kDNSServiceFlagsMoreComing
value
indicates to a callback that at least one more result is immediately
available. The
.B kDNSServiceFlagsAdd
value indicates that a service
instance was found. The
.I errorCode
argument will be
.B kDNSServiceErr_NoError
on success. Otherwise, failure is indicated.
The discovered service name is returned to the
.I callback
via the
.I serviceName
argument. The
.I regtype
argument in the callback holds
the service type of the found service instance. The discovered service type
can be different from the requested service type in the browse request when
the discovered service type has subtypes. The domain argument to the
callback holds the domain name of the discovered service instance. The
service type and the domain name must be stored and passed along with the
service name to resolve a service instance using
.BR DNSServiceResolve() .
.SH RETURN VALUES
.sp
.LP
The
.B DNSServiceBrowse
function returns
.B kDNSServiceErr_NoError
on
success. Otherwise, an error code defined in
.B <dns_sd.h>
is returned to
indicate an error has occurred. When an error is returned by
.BR DNSServiceBrowse ,
the callback function is not invoked and the
.I DNSServiceRef
argument is not initialized.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for description of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
\fBDNSServiceRefDeallocate\fR(3DNS_SD), \fBDNSServiceResolve\fR(3DNS_SD),
.BR attributes (5)
