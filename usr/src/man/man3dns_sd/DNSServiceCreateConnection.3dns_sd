'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH DNSServiceCreateConnection 3DNS_SD "20 Aug 2007" "SunOS 5.11" "DNS Service Discovery Library Functions"
.SH NAME
DNSServiceCreateConnection, DNSServiceRegisterRecord, DNSServiceAddRecord,
DNSServiceUpdateRecord, DNSServiceRemoveRecord \- registering multiple
records
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR .\|.\|. ] \fIfile\fR .\|.\|. \fB-ldns_sd\fR [ \fIlibrary\fR .\|.\|. ]
#include <dns_sd.h>

\fBDNSServiceErrorType\fR \fIDNSServiceCreateConnection\fR(\fBDNSServiceRef\fR *\fIsdRef\fR);
.fi

.LP
.nf
\fBDNSServiceErrorType\fR \fIDNSServiceRegisterRecord\fR(\fBDNSServiceRef\fR \fIsdRef\fR,
     \fBDNSRecordRef\fR *\fIRecordRef\fR, \fBDNSServiceFlags\fR \fIflags\fR,
     \fBuint32_t\fR \fIinterfaceIndex\fR, \fBconst char\fR *\fIfullname\fR,
     \fBuint16_t\fR \fIrrtype\fR, \fBuint16_t\fR \fIrrclass\fR, \fBuint16_t\fR \fIrdlen\fR,
     \fBconst void\fR *\fIrdata\fR, \fBuint32_t\fR \fIttl\fR,
     \fBDNSServiceServiceRegisterRecordReply\fR \fIcallBack\fR,
     \fBvoid\fR *\fIcontext\fR);
.fi

.LP
.nf
\fBtypedef\fR \fIvoid\fR(*\fBDNSServiceRegisterRecordReply\fR)(\fBDNSServiceRef\fR \fIsdRef\fR,
     \fBDNSServiceRecordRef\fR \fIRecordRef\fR, \fBDNSServiceFlags\fR \fIflags\fR,
     \fBDNSServiceErrorType\fR \fIerrorCode\fR, \fBvoid\fR *\fIcontext\fR);
.fi

.LP
.nf
\fBDNSServiceErrorType\fR \fIDNSServiceAddRecord\fR(\fBDNSServiceRef\fR \fIsdRef\fR,
     \fBDNSRecordRef\fR *\fIRecordRef\fR, \fBDNSServiceFlags\fR \fIflags\fR,
     \fBuint16_t\fR \fIrrtype\fR, \fBuint16_t\fR \fIrdlen\fR, \fBconst void\fR *\fIrdata\fR,
     \fBuint32_t\fR \fIttl\fR);
.fi

.LP
.nf
\fBDNSServiceErrorType\fR \fIDNSServiceUpdateRecord\fR(\fBDNSServiceRef\fR \fIsdRef\fR,
     \fBDNSRecordRef\fR \fIRecordRef\fR, \fBDNSServiceFlags\fR \fIflags\fR,
     \fBuint16_t\fR \fIrdlen\fR, \fBconst void\fR *\fIrdata\fR,
     \fBuint32_t\fR \fIttl\fR);
.fi

.LP
.nf
\fBDNSServiceErrorType\fR \fIDNSServiceRemoveRecord\fR(\fBDNSServiceRef\fR \fIsdRef\fR,
     \fBDNSRecordRef\fR \fIRecordRef\fR, \fBDNSServiceFlags\fR \fIflags\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B DNSServiceCreateConnection()
function allows the creation of a
connection to the
.B mDNS
daemon in order to register multiple individual
records.
.sp
.LP
The
.B DNSServiceRegisterRecord()
function uses the connection created
by
.B DNSServiceCreateConnection()
to register a record. Name conflicts
that occur from this function should be handled by the client in the
callback.
.sp
.LP
The
.B DNSServiceAddRecord()
call adds a
.B DNS
record to a
registered service. The name of the record is the same as registered service
name. The
.I RecordRef
argument to
.B DNSServiceAddRecord()
points to
an uninitialized
.BR DNSRecordRef .
After successful completion of
.BR DNSServiceAddRecord() ,
the
.B DNS
record can be updated or
deregistered by passing the
.B DNSRecordRef
initialized by
.B DNSServiceAddRecord()
to
.B DNSServiceUpdateRecord()
or to
.BR DNSServiceRemoveRecord() .
.sp
.LP
The
.B DNSServiceUpdateRecords()
call updates the
.B DNS
record of
the registered service. The
.B DNS
record must be the primary resource
record registered using
.B DNSServiceRegister()
or a record added to a
registered service using
.B DNSServiceAddRecord()
or an individual record
added via
.BR DNSServiceRegisterRecord() .
.sp
.LP
The
.B DNSServiceRemoveRecord()
call removes a record that was added
using
.B DNSServiceAddRecord()
or
.BR DNSServiceRegisterRecord() .
.sp
.LP
The \fIsdRef\fR argument points to \fBDNSServiceRef\fR initialized from a
call to
.BR DNSServiceRegister() .
If the
.I sdRef
argument is passed to
.B DNSServiceRefDeallocate()
and the service is deregistered
.BR DNS
records added via
.B DNSServiceAddRecord()
are invalidated and cannot be
further used. The
.I flags
argument is currently ignored and reserved for
future use. The
.I rrtype
parameter value indicates the type of the
.B DNS
record. Suitable values for the
.I rrtype
parameter are defined
in
.BR <dns_sd.h> :
.BR kDNSServiceType_TXT ,
for example. The \fIrdata\fR
argument points to the raw rdata to be contained in the resource record. The
.I ttl
value indicates the time to live of the resource record in
seconds. A
.I ttl
value of
.B 0
should be passed to use a default
value.
.SH RETURN VALUES
.sp
.LP
The
.B DNSServiceCreateConnection
function returns
.B kDNSServiceErr_NoError
on success. Otherwise, an error code defined in
.B <dns_sd.h>
is returned to indicate the specific failure that
occurred.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for description of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
\fBDNSServiceRefDeallocate\fR(3DNS_SD), \fBDNSServiceRegister\fR(3DNS_SD),
.BR attributes (5)
