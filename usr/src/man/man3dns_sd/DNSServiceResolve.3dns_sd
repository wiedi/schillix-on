'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc. All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH DNSServiceResolve 3DNS_SD "20 Aug 2007" "SunOS 5.11" "DNS Service Discovery Library Functions"
.SH NAME
DNSServiceResolve \- resolve service instances with DNS
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR .\|.\|. ] \fIfile\fR .\|.\|. \fB-ldns_sd\fR [ \fIlibrary\fR .\|.\|. ]
#include <dns_sd.h>

\fBDNSServiceErrorType\fR \fIDNSServiceResolve\fR(\fBDNSServiceRef\fR *\fIsdRef\fR,
     \fBDNSServiceFlags\fR \fIflags\fR, \fBuint32_t\fR \fIinterfaceIndex\fR, \fBconst char\fR *\fIname\fR,
     \fBconst char\fR *\fIregtype\fR, \fBconst char\fR *\fIdomain\fR,
     \fBDNSServiceServiceResolveReply\fR \fIcallBack\fR, \fBvoid\fR *\fIcontext\fR);
.fi

.LP
.nf
\fBtypedef\fR \fIvoid\fR(*\fBDNSServiceResolveReply\fR)(\fBDNSServiceRef\fR \fIsdRef\fR,
     \fBDNSServiceFlags\fR \fIflags\fR, \fBuint32_t\fR \fIinterfaceIndex\fR,
     \fBDNSServiceErrorType\fR \fIerrorCode\fR, \fBconst char\fR *\fIfullname\fR,
     \fBconst char\fR *\fIhosttarget\fR, \fBuint16_t\fR \fIport\fR, \fBuint16_t\fR \fItxtLen\fR,
     \fBconst char\fR *\fItxtRecord\fR, \fBvoid\fR *\fIcontext\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B DNSServiceResolve()
function is used to resolve a service name
returned by
.B DNSServiceBrowse()
to host IP address, port number, and
.B TXT
record. The
.B DNSServiceResolve()
function returns results
asynchronously. A
.B DNSServiceResolve()
call to resolve service name can
be ended by calling
.BR DNSServiceRefDeallocate() .
The
.IR callback
argument points to a function of type
.I DNSServiceResolveReply
as listed
above. The callback function is invoked on finding a result or when the
asynch resolve call fails. The
.I sdRef
argument to
.B DNSServiceResolve()
points to an uninitialized
.IR DNSServiceRef .
If
the call to
.B DNSServiceResolve()
succeeds,
.I sdRef
is initialized
and
.B kDNSServiceErr_NoError
is returned.
.sp
.LP
The
.I flags
argument to
.B DNSServiceResolve()
is currently unused
and reserved for future use. The
.I interfaceIndex
argument indicates the
interface on which to resolve the service. If the \fBDNSServiceResolve()\fR
call is the result of an earlier
.B DNSServiceBrowse()
operation, pass
the
.I interfaceIndex
to perform a resolve on all interfaces. See the
section "Constants for specifying an interface index" in \fB<dns_sd.h>\fR
for more details. The
.I name
parameter is the service instance name to
be resolved, as returned from a
.B DNSServiceBrowse()
call. The
.I regtype
holds the service type and the
.I domain
parameter
indicates the domain in which the service instance was found. The
.I context
parameter points to a value that is passed to the callback
function.
.sp
.LP
The
.I sdRef
argument passed to the callback function is initialized by
.B DNSServiceResolve()
call. The
.I flags
parameter in the callback
function is currently unused and reserved for future use. The
.I errorCode
parameter is
.B kDNSServiceErr_NoError
on success.
Otherwise, it will hold the error defined in
.B <dns_sd.h>
and other
parameters are undefined when
.I errorCode
is nonzero. The \fIfullname\fR
parameter in the callback holds the full service domain name in the format
<\fIservicename\fR>.<\fIprotocol\fR>.<\fIdomain\fR>. The full service domain
name is escaped to follow standard
.B DNS
.RI "rules. The" " hosttarget"
parameter holds the target hostname of the machine providing the service.
The
.I port
parameter indicates the port in network byte order on which
the service accepts connections. The
.I txtLen
and
.IR txtRecord
parameters hold the length and the
.B TXT
record of the service's primary
.B TXT
record. The
.I context
parameter points to the value that was
passed as
.B context
to the
.B DNSServiceResolve()
call.
.SH RETURN VALUES
.sp
.LP
The
.B DNSServiceResolve
function returns
.BR kDNSServiceErr_NoError
on success. Otherwise, an error code defined in
.B <dns_sd.h>
is returned
to indicate an error has occurred. When an error is returned by
.BR DNSServiceResolve ,
the callback function is not invoked and the
.I DNSServiceRef
argument is not initialized.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for description of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
\fBDNSServiceBrowse\fR(3DNS_SD), \fBDNSServiceRefDeallocate\fR(3DNS_SD),
.BR attributes (5)
