'\" te
.\" Copyright (c) 2008, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH ecb_crypt 3EXT "3 Mar 2008" "SunOS 5.11" "Extended Library Functions"
.SH NAME
ecb_crypt, cbc_crypt, des_setparity, DES_FAILED \- fast DES encryption
.SH SYNOPSIS
.LP
.nf
#include <rpc/des_crypt.h>

\fBint\fR \fBecb_crypt\fR(\fBchar *\fIkey\fR, \fBchar *\fIdata\fR, \fBunsigned\fR \fIdatalen\fR,
     \fBunsigned\fR \fImode\fR);
.fi

.LP
.nf
\fBint\fR \fBcbc_crypt\fR(\fBchar *\fIkey\fR, \fBchar *\fIdata\fR, \fBunsigned\fR \fIdatalen\fR,
     \fBunsigned\fR \fImode\fR, \fBchar *\fIivec\fR);
.fi

.LP
.nf
\fBvoid\fR \fBdes_setparity\fR(\fBchar *\fIkey\fR);
.fi

.LP
.nf
\fBint\fR \fBDES_FAILED\fR(\fBint\fR \fIstat\fR);
.fi

.SH DESCRIPTION
.sp
.LP
.B ecb_crypt()
and
.B cbc_crypt()
implement the
.BR "NBS DES"
(Data Encryption Standard). These routines are faster and more general
purpose than
.BR crypt (3C).
They also are able to utilize \fBDES\fR
hardware if it is available.
.B ecb_crypt()
encrypts in
.BR ECB
(Electronic Code Book) mode, which encrypts blocks of data independently.
.B cbc_crypt()
encrypts in
.B CBC
(Cipher Block Chaining) mode, which
chains together successive blocks.
.B CBC
mode protects against
insertions, deletions, and substitutions of blocks. Also, regularities in the
clear text will not appear in the cipher text.
.sp
.LP
The first parameter,
.IR key ,
is the 8-byte encryption key with parity. To
set the key's parity, which for
.B DES
is in the low bit of each byte, use
.BR des_setparity() .
The second parameter,
.IR data ,
contains the data to
be encrypted or decrypted. The third parameter,
.IR datalen ,
is the length
in bytes of
.IR data ,
which must be a multiple of 8. The fourth parameter,
.IR mode ,
is formed by
.B OR'ing
together the
.B DES_ENCRYPT
or
.B DES_DECRYPT
to specify the encryption direction and
.B DES_HW
or
.B DES_SW
to specify software or hardware encryption. If
.B DES_HW
is
specified, and there is no hardware, then the encryption is performed in
software and the routine returns
.BR DESERR_NOHWDEVICE.
.sp
.LP
For
.BR cbc_crypt() ,
the parameter
.I ivec
is the 8-byte initialization
vector for the chaining.  It is updated to the next initialization vector
upon successful return.
.SH RETURN VALUES
.sp
.LP
Given a result status
.IR stat ,
the macro
.B DES_FAILED
is false only
for the first two statuses.
.sp
.ne 2
.mk
.na
.B DESERR_NONE
.ad
.RS 21n
.rt
No error.
.RE

.sp
.ne 2
.mk
.na
.B DESERR_NOHWDEVICE
.ad
.RS 21n
.rt
Encryption succeeded, but done in software instead of the requested
hardware.
.RE

.sp
.ne 2
.mk
.na
.B DESERR_HWERROR
.ad
.RS 21n
.rt
An error occurred in the hardware or driver.
.RE

.sp
.ne 2
.mk
.na
.B DESERR_BADPARAM
.ad
.RS 21n
.rt
Bad parameter to routine.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR crypt (3C),
.BR attributes (5)
.SH NOTES
.sp
.LP
When compiling multi-thread applications, the
.B _REENTRANT
flag must be
defined on the compile line.  This flag should only be used in multi-thread
applications.
