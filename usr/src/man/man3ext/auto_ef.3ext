'\" te
.\" Copyright (c) 1983 Regents of the University of California. All rights reserved.
.\" The Berkeley software License Agreement specifies the terms and conditions for redistribution.
.\" Copyright (c) 2003, Sun Microsystems, Inc. All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.TH auto_ef 3EXT "22 Sep 2003" "SunOS 5.11" "Extended Library Functions"
.SH NAME
auto_ef, auto_ef_file, auto_ef_str, auto_ef_free, auto_ef_get_encoding,
auto_ef_get_score \- auto encoding finder functions
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag \fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lauto_ef\fR [ \fIlibrary\fR.\|.\|. ]
#include <auto_ef.h>

\fBsize_t\fR \fBauto_ef_file\fR(\fBauto_ef_t **\fIinfo\fR, \fBconst char *\fIfilename\fR, \fBint\fR \fIflags\fR);
.fi

.LP
.nf
\fBsize_t\fR \fBauto_ef_str\fR(\fBauto_ef_t **\fIinfo\fR, \fBconst char *\fIbuffer\fR, \fBsize_t\fR \fIbufsize\fR,
     \fBint\fR \fIflags\fR);
.fi

.LP
.nf
\fBvoid\fR \fBauto_ef_free\fR(\fBauto_ef_t *\fIinfo\fR);
.fi

.LP
.nf
\fBchar *\fBauto_ef_get_encoding\fR(\fBauto_ef_t\fR \fIinfo\fR);
.fi

.LP
.nf
\fBdouble\fR \fBauto_ef_get_score\fR(\fBauto_ef_t\fR \fIinfo\fR);
.fi

.SH DESCRIPTION
.sp
.LP
Auto encoding finder provides functions that find the encoding of given file or
string.
.sp
.LP
The
.B auto_ef_file()
function examines text in the file specified with
.I filename
and returns information on possible encodings.
.sp
.LP
The
.I info
argument is a pointer to a pointer to an
.BR auto_ef_t ,
the
location at which the pointer to the
.B auto_ef_t
array is stored upon
return.
.sp
.LP
The
.I flags
argument specifies the level of examination. Currently only one
set of flags, exclusive each other, is available:
.BR AE_LEVEL_0 ,
.BR AE_LEVEL_1 ,
.BR AE_LEVEL_2 ,
and
.BR AE_LEVEL_3 .
The
.BR AE_LEVEL_0
level is fastest but the result can be less accurate. The
.B AE_LEVEL_3
level
produces best result but can be slow. If the
.I flags
argument is
unspecified, the default is
.BR AE_LEVEL_0 .
When another flag or set of flags
are defined in the future, use the inclusive-bitwise OR operation to specify
multiple flags.
.sp
.LP
Information about encodings are stored in data type\fBauto_ef_t\fR in the order
of possibility with the most possible encoding stored first. To examine the
.RB "information, use the " auto_ef_get_encoding() " and " auto_ef_get_score() 
access functions. For a list of encodings with which
.B auto_ef_file()
can
examine text, see
.BR auto_ef (1).
.sp
.LP
If
.B auto_ef_file()
cannot determine the encoding of text, it returns 0 and
stores
.I NULL
at the location pointed by
.IR info .
.sp
.LP
The
.B auto_ef_get_encoding()
function returns the name of the encoding. The
returned string is vaild until until the location pointed to by
.I info
is
freed with
.BR auto_ef_free() .
Applications should not use
.BR free (3C)
to
free the pointer returned by
.BR auto_ef_get_encoding() .
.sp
.LP
The
.B auto_ef_get_score()
function returns the score of this encoding in
the range between 0.0 and 1.0.
.sp
.LP
The
.B auto_ef_str()
function is identical to
.BR auto_ef_file() ,
except
that it examines text in the buffer specified by
.I buffer
with a maximum
size of
.I bufsize
bytes, instead of text in a file.
.sp
.LP
The
.B auto_ef_free()
function frees the area allocated by
.B auto_ef_file()
or by
.BR auto_ef_str() ,
taking as its argument the
pointer stored at the location pointed to by
.IR info .
.SH RETURN VALUES
.sp
.LP
.RB "Upon successful completion, the " auto_ef_file() " and " auto_ef_str() 
functions return the number of possible encodings for which information is
stored. Otherwise, \(mi1 is returned.
.sp
.LP
The
.B auto_ef_get_encoding()
function returns the string that stores the
encoding name.
.sp
.LP
the
.B auto_ef_get_score()
function returns the score value for encoding the
name with the examined text data.
.SH ERRORS
.sp
.LP
The
.BR auto_ef_file() " and "
.B auto_ef_str()
will fail if:
.sp
.ne 2
.mk
.na
.B EACCES
.ad
.RS 10n
.rt
Search permission is denied on a component of the path prefix, the file exists
and the permissions specified by mode are denied, the file does not exist and
write permission is denied for the parent directory of the file to be created,
or
.B libauto_ef
cannot find the internal hashtable.
.RE

.sp
.ne 2
.mk
.na
.B EINTR
.ad
.RS 10n
.rt
A signal was caught during the execution.
.RE

.sp
.ne 2
.mk
.na
.B ENOMEM
.ad
.RS 10n
.rt
Failed to allocate area to store the result.
.RE

.sp
.ne 2
.mk
.na
.B EMFILE
.ad
.RS 10n
.rt
Too many files descriptors are currently open in the calling process.
.RE

.sp
.ne 2
.mk
.na
.B ENFILE
.ad
.RS 10n
.rt
Too many files are currently open in the system.
.RE

.SH EXAMPLES
.LP
.B Example 1
Specify the array index to examine stored information.
.sp
.LP
Since
.B auto_ef_file()
stores the array whose elements hold information on
each possible encoding, the following example specifies the array index to
examine the stored information.

.sp
.in +2
.nf
#include <auto_ef.h>
auto_ef_t       *array_info;
size_t          number;
char            *encoding;

number = auto_ef_file(&array_info, filename, flags);
encoding = auto_ef_get_encoding(array_info[0]);
auto_ef_free(array_info);
.fi
.in -2

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStable
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR auto_ef (1),
.BR libauto_ef (3LIB),
.BR attributes (5)
