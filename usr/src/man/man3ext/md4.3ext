'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH md4 3EXT "13 Nov 2007" "SunOS 5.11" "Extended Library Functions"
.SH NAME
md4, MD4Init, MD4Update, MD4Final \- MD4 digest functions
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR .\|.\|. ] \fIfile\fR .\|.\|. \fB-lmd\fR [ \fIlibrary\fR .\|.\|. ]
#include <md4.h>

\fBvoid\fR \fBMD4Init\fR(\fBMD4_CTX *\fIcontext\fR);
.fi

.LP
.nf
\fBvoid\fR \fBMD4Update\fR(\fBMD4_CTX *\fIcontext\fR, \fBunsigned char *\fIinput\fR,
     \fBunsigned int\fR \fIinlen\fR);
.fi

.LP
.nf
\fBvoid\fR \fBMD4Final\fR(\fBunsigned char *\fIoutput\fR, \fBMD4_CTX *\fIcontext\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B MD4
functions implement the
.B MD4
message-digest algorithm.
The algorithm takes as input a message of arbitrary length and produces a
"fingerprint" or "message digest" as output. The \fBMD4\fR message-digest
algorithm is intended for digital signature applications in which large files
are "compressed" in a secure manner before being encrypted with a private
(secret) key under a public-key cryptosystem such as RSA.
.SS "\fBMD4Init()\fR, \fBMD4Update()\fR, \fBMD4Final()\fR"
.sp
.LP
The
.BR MD4Init() ,
.BR MD4Update() ,
and
.B MD4Final()
functions allow
an
.B MD4
digest to be computed over multiple message blocks. Between
blocks, the state of the
.B MD4
computation is held in an
.BR MD4
context structure allocated by the caller. A complete digest computation
consists of calls to
.B MD4
functions in the following order: one call to
.BR MD4Init() ,
one or more calls to
.BR MD4Update() ,
and one call to
.BR MD4Final() .
.sp
.LP
The
.B MD4Init()
function initializes the
.B MD4
context structure
pointed to by
.IR context .
.sp
.LP
The
.B MD4Update()
function computes a partial
.B MD4
digest on the
\fIinlen\fR-byte message block pointed to by
.IR input ,
and updates the
.B MD4
context structure pointed to by
.I context
accordingly.
.sp
.LP
The
.B MD4Final()
function generates the final
.B MD4
digest, using
the
.B MD4
context structure pointed to by
.IR context .
The
.BR MD4
digest is written to output. After a call to
.BR MD4Final() ,
the state of
the context structure is undefined. It must be reinitialized with
.B MD4Init()
before it can be used again.
.SH RETURN VALUES
.sp
.LP
These functions do not return a value.
.SH SECURITY
.sp
.LP
The
.B MD4
digest algorithm is not currently considered cryptographically
secure. It is included in
.BR libmd (3LIB)
for use by legacy protocols and
systems only. It should not be used by new systems or protocols.
.SH EXAMPLES
.LP
.B Example 1
Authenticate a message found in multiple buffers
.sp
.LP
The following is a sample function that must authenticate a message that is
found in multiple buffers. The calling function provides an authentication
buffer that will contain the result of the
.B MD4
digest.

.sp
.in +2
.nf
#include <sys/types.h>
#include <sys/uio.h>
#include <md4.h>

int
AuthenticateMsg(unsigned char *auth_buffer, struct iovec
                *messageIov, unsigned int num_buffers)
{
    MD4_CTX ctx;
    unsigned int i;

    MD4Init(&ctx);

    for(i=0; i<num_buffers; i++)
    {
         MD4Update(&ctx, messageIov->iov_base,
                   messageIov->iov_len);
         messageIov += sizeof(struct iovec);
    }

    MD4Final(auth_buffer, &ctx);

    return 0;
}
.fi
.in -2

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityCommitted
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR libmd (3LIB)
.sp
.LP
RFC 1320
