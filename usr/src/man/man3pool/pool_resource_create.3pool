'\" te
.\" Copyright (c) 2003, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH pool_resource_create 3POOL "23 Sep 2003" "SunOS 5.11" "Pool Configuration Manipulation Library Functions"
.SH NAME
pool_resource_create, pool_resource_destroy, pool_resource_info,
pool_query_resource_components, pool_resource_transfer,
pool_resource_xtransfer \- resource pool resource manipulation functions
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR\&.\|.\|. ] \fIfile\fR\&.\|.\|. \fB-lpool\fR [ \fIlibrary\fR\&.\|.\|. ]
#include <pool.h>

\fBpool_resource_t *\fBpool_resource_create\fR(\fBpool_conf_t *\fIconf\fR,
     \fBconst char *\fItype\fR, \fBconst char *\fIname\fR);
.fi

.LP
.nf
\fBint\fR \fBpool_resource_destroy\fR(\fBpool_conf_t *\fIconf\fR,
     \fBpool_resource_t *\fIresource\fR);
.fi

.LP
.nf
\fBconst char *\fBpool_resource_info\fR(\fBpool_conf_t *\fIconf\fR
     \fBpool_resource_t *\fIresource\fR, \fBint\fR \fIflags\fR);
.fi

.LP
.nf
\fBpool_component_t **\fBpool_query_resource_components\fR(
     \fBpool_conf_t *\fIconf\fR, \fBpool_resource_t *\fIresource\fR,
     \fBuint_t *\fInelem\fR, \fBpool_value_t **\fIprops\fR);
.fi

.LP
.nf
\fBint\fR \fBpool_resource_transfer\fR(\fBpool_conf_t *\fIconf\fR,
     \fBpool_resource_t *\fIsource\fR, \fBpool_resource_t *\fItarget\fR,
     \fBuint64_t\fR \fIsize\fR);
.fi

.LP
.nf
\fBint\fR \fBpool_resource_xtransfer\fR(\fBpool_conf_t *\fIconf\fR,
     \fBpool_resource_t *\fIsource\fR, \fBpool_resource_t *\fItarget\fR,
     \fBpool_component_t **\fIcomponents\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B pool_resource_create()
function creates and returns a new
resource of the given
.I name
and
.I type
in the provided
configuration. If there is already a resource of the given name, the
operation will fail.
.sp
.LP
The
.B pool_resource_destroy()
function removes the specified
.I resource
from its configuration file.
.sp
.LP
The
.B pool_resource_info()
function returns a string describing the
given
.IR resource .
The string is allocated with
.BR malloc "(3C). The"
caller is reponsible for freeing the returned string. If the
.I flags
argument is non-zero, the string returned also describes the components (if
any) contained in the resource.
.sp
.LP
The
.B pool_query_resource_components()
function returns a
null-terminated array of the components (if any) that comprise the given
resource.
.sp
.LP
The
.B pool_resource_transfer()
function transfers
.I size
basic
units from the
.I source
resource to the
.IR target .
Both resources
must be of the same type for the operation to succeed. Transferring
component resources, such as processors, is always performed as series of
.B pool_resource_xtransfer()
operations, since discrete resources must be
identified for transfer.
.sp
.LP
The
.B pool_resource_xtransfer()
function transfers the specific
.I components
from the
.I source
resource to the
.IR target .
Both
resources must be of the same type, and of a type that contains components
(such as processor sets). The
.I components
argument is a null-terminated
list of
.BR pool_component_t .
.sp
.LP
The
.I conf
argument for each function refers to the target
configuration to which the operation applies.
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B pool_resource_create()
returns a new
.B pool_resource_t
with default properties initialized. Otherwise,
.I NULL
is returned and
.BR pool_error (3POOL)
returns the pool-specific
error value.
.sp
.LP
Upon successful completion,
.B pool_resource_destroy()
returns 0.
Otherwise, -1 is returned and
.B pool_error()
returns the pool-specific
error value.
.sp
.LP
Upon successful completion,
.B pool_resource_info()
returns a string
describing the given resource (and optionally its components). Otherwise,
.I NULL
is returned and
.B pool_error()
returns the pool-specific
error value.
.sp
.LP
 Upon successful completion,
.B pool_query_resource_components()
returns a null-terminated array of
.B "pool_component_t *"
that match the provided null-terminated property list and are contained in the
given resource. Otherwise,
.I NULL
is returned and
.B pool_error()
returns the pool-specific error value.
.sp
.LP
 Upon successful completion,
.B pool_resource_transfer()
and
.B
pool_resource_xtransfer()
return 0. Otherwise -1 is returned and
.B pool_error()
returns the pool-specific error value.
.SH ERRORS
.sp
.LP
The
.B pool_resource_create()
function will fail if:
.sp
.ne 2
.mk
.na
.B POE_BADPARAM
.ad
.RS 20n
.rt
The supplied configuration's status is not
.B POF_VALID
or
.I name
is
in use for this resource type.
.RE

.sp
.ne 2
.mk
.na
.B POE_INVALID_CONF
.ad
.RS 20n
.rt
The resource element could not be created because the configuration would
be invalid.
.RE

.sp
.ne 2
.mk
.na
.B POE_PUTPROP
.ad
.RS 20n
.rt
One of the supplied properties could not be set.
.RE

.sp
.ne 2
.mk
.na
.B POE_SYSTEM
.ad
.RS 20n
.rt
 A system error has occurred. Check the system error code for more details.
.RE

.sp
.LP
The
.B pool_resource_destroy()
function will fail if:
.sp
.ne 2
.mk
.na
.B POE_BADPARAM
.ad
.RS 16n
.rt
The supplied configuration's status is not
.BR POF_VALID .
.RE

.sp
.LP
The
.B pool_resource_info()
function will fail if:
.sp
.ne 2
.mk
.na
.B POE_BADPARAM
.ad
.RS 20n
.rt
The supplied configuration's status is not
.B POF_VALID
or the
.I flags
paramter is neither 0 nor 1.
.RE

.sp
.ne 2
.mk
.na
.B POE_INVALID_CONF
.ad
.RS 20n
.rt
The configuration is invalid.
.RE

.sp
.ne 2
.mk
.na
.B POE_SYSTEM
.ad
.RS 20n
.rt
A system error has occurred. Check the system error code for more
details.
.RE

.sp
.LP
The
.B pool_query_resource_components()
function will fail if:
.sp
.ne 2
.mk
.na
.B POE_BADPARAM
.ad
.RS 20n
.rt
The supplied configuration's status is not
.BR POF_VALID .
.RE

.sp
.ne 2
.mk
.na
.B POE_INVALID_CONF
.ad
.RS 20n
.rt
The configuration is invalid.
.RE

.sp
.ne 2
.mk
.na
.B POE_SYSTEM
.ad
.RS 20n
.rt
A system error has occurred. Check the system error code for more
details.
.RE

.sp
.LP
The
.B pool_resource_transfer()
function will fail if:
.sp
.ne 2
.mk
.na
.B POE_BADPARAM
.ad
.RS 16n
.rt
The supplied configuration's status is not
.BR POF_VALID ,
the two
resources are not of the same type, or the transfer would cause either of
the resources to exceed their
.B min
and
.B max
properties.
.RE

.sp
.ne 2
.mk
.na
.B POE_SYSTEM
.ad
.RS 16n
.rt
A system error has occurred. Check the system error code for more
details.
.RE

.sp
.LP
The
.B pool_resource_xtransfer()
function will fail if:
.sp
.ne 2
.mk
.na
.B POE_BADPARAM
.ad
.RS 20n
.rt
The supplied configuration's status is not
.BR POF_VALID ,
the two
resources are not of the same type, or the supplied resources do not belong
to the source.
.RE

.sp
.ne 2
.mk
.na
.B POE_INVALID_CONF
.ad
.RS 20n
.rt
The transfer operation failed and the configuration may be invalid.
.RE

.sp
.ne 2
.mk
.na
.B POE_SYSTEM
.ad
.RS 20n
.rt
A system error has occurred. Check the system error code for more
details.
.RE

.SH EXAMPLES
.LP
.B Example 1
Create a new resource of type
.B pset
named
.BR foo .
.sp
.in +2
.nf
#include <pool.h>
#include <stdio.h>

\&...

pool_conf_t *conf;
pool_resource_t *resource;
\&...

if ((resource = pool_resource_create(conf, "pset",
    "foo")) == NULL) {
    (void) fprintf(stderr, "Cannot create resource\B{}n");
    ...
}
.fi
.in -2

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
CSIEnabled
_
Interface StabilityUnstable
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR libpool (3LIB),
.BR pool_error (3POOL),
.BR attributes (5)
