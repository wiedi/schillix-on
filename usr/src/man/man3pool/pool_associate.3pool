'\" te
.\" Copyright (c) 2005, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH pool_associate 3POOL "18 Jul 2005" "SunOS 5.11" "Pool Configuration Manipulation Library Functions"
.SH NAME
pool_associate, pool_create, pool_destroy, pool_dissociate, pool_info,
pool_query_pool_resources \- resource pool manipulation functions
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR\&.\|.\|. ] \fIfile\fR\&.\|.\|. \fB-lpool\fR [ \fIlibrary\fR\&.\|.\|. ]
#include <pool.h>

\fBint\fR \fBpool_associate\fR(\fBpool_conf_t *\fIconf\fR, \fB pool_t *\fIpool\fR,
     \fBpool_resource_t *\fIresource\fR);
.fi

.LP
.nf
\fBpool_t *\fBpool_create\fR(\fBpool_conf_t *\fIconf\fR, \fBconst char *\fIname\fR);
.fi

.LP
.nf
\fBint\fR \fBpool_destroy\fR(\fBpool_conf_t *\fIconf\fR, \fBpool_t *\fIpool\fR);
.fi

.LP
.nf
\fBint\fR \fBpool_dissociate\fR(\fBpool_conf_t *\fIconf\fR, \fBpool_t *\fIpool\fR,
     \fBpool_resource_t *\fIresource\fR);
.fi

.LP
.nf
\fBconst char *\fBpool_info\fR(\fBpool_conf_t *\fIconf\fR, \fBpool_t *\fIpool\fR,
     \fBint\fR \fIflags\fR);
.fi

.LP
.nf
\fBpool_resource_t **\fBpool_query_pool_resources\fR(\fBpool_conf_t *\fIconf\fR,
     \fBpool_t *\fIpool\fR, \fBuint_t *\fInelem\fR, \fBpool_value_t **\fIproperties\fR);
.fi

.SH DESCRIPTION
.sp
.LP
These functions provide mechanisms for constructing and modifying pools
entries within a target pools configuration.  The
.I conf
argument for
each function refers to the target configuration to which the operation
applies.
.sp
.LP
The
.B pool_associate()
function associates the specified resource with
.IR pool .
A resource can be associated with multiple pools at the same
time. Any resource of this type that was formerly associated with this pool
is no longer associated with the pool. The new association replaces the
earlier one.
.sp
.LP
The
.B pool_create()
function creates a new pool with the supplied name
with its default properties initialized, and associated with the default
resource of each type.
.sp
.LP
The
.B "pool_destroy function()"
destroys the given pool association.
Associated resources are not modified.
.sp
.LP
The
.B pool_dissociate()
function removes the association between the
given resource and pool. On successful completion, the pool is associated
with the default resource of the same type.
.sp
.LP
The
.B pool_info()
function returns a string describing the given pool.
The string is allocated with
.BR malloc (3C).
The caller is reponsible for
freeing the returned string. If the
.I flags
option is non-zero, the
string returned also describes the associated resources of the pool.
.sp
.LP
The
.B pool_query_pool_resources()
function returns a null-terminated
array of resources currently associated with the pool that match the given
list of properties. The return value must be freed by the caller. The
.I nelem
argument is set to be the length of the array returned.
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B pool_create()
returns a new initialized
pool. Otherwise it returns
.I NULL
and
.BR pool_error "(3POOL) returns"
the pool-specific error value.
.sp
.LP
Upon successful completion,
.BR pool_associate() ,
.BR pool_destroy() ,
and
.B pool_dissociate()
return 0. Otherwise, they return -1 and
.B pool_error()
returns the pool-specific error value.
.sp
.LP
Upon successful completion,
.B pool_info()
returns a string describing
the given pool. Otherwise it returns
.I NULL
and
.BR pool_error()
returns the pool-specific error value.
.sp
.LP
Upon successful completion,
.B pool_query_pool_resources()
returns a
null-terminated array of resources. Otherwise it returns
.I NULL
and
.B pool_error()
returns the pool-specific error value.
.SH ERRORS
.sp
.LP
The
.B pool_create()
function will fail if:
.sp
.ne 2
.mk
.na
.B POE_BADPARAM
.ad
.RS 20n
.rt
The supplied configuration's status is not
.B POF_VALID
or
.I name
is
already in use.
.RE

.sp
.ne 2
.mk
.na
.B POE_SYSTEM
.ad
.RS 20n
.rt
A system error has occurred. Check the system error code for more
details.
.RE

.sp
.ne 2
.mk
.na
.B POE_INVALID_CONF
.ad
.RS 20n
.rt
The pool element could not be created because the configuration would be
invalid.
.RE

.sp
.ne 2
.mk
.na
.B POE_PUTPROP
.ad
.RS 20n
.rt
One of the supplied properties could not be set.
.RE

.sp
.LP
The
.B pool_destroy()
function will fail if:
.sp
.ne 2
.mk
.na
.B POE_BADPARAM
.ad
.RS 16n
.rt
The supplied configuration's status is not
.BR POF_VALID .
.RE

.sp
.LP
The
.B pool_associate()
function will fail if:
.sp
.ne 2
.mk
.na
.B POE_BADPARAM
.ad
.RS 16n
.rt
The supplied configuration's status is not
.B POF_VALID
or the
parameters are supplied from a different configuration.
.RE

.sp
.ne 2
.mk
.na
.B POE_SYSTEM
.ad
.RS 16n
.rt
A system error has occurred. Check the system error code for more
details.
.RE

.sp
.LP
The
.B pool_disassociate()
function will fail if:
.sp
.ne 2
.mk
.na
.B POE_BADPARAM
.ad
.RS 20n
.rt
The supplied configuration's status is not
.B POF_VALID
or the
parameters are supplied from a different configuration.
.RE

.sp
.ne 2
.mk
.na
.B POE_INVALID_CONF
.ad
.RS 20n
.rt
No resources could be located for the supplied configuration or the
supplied configuration is not valid (for example, more than one default for
a resource type was found.)
.RE

.sp
.ne 2
.mk
.na
.B POE_SYSTEM
.ad
.RS 20n
.rt
A system error has occurred. Check the system error code for more
details.
.RE

.sp
.LP
The
.B pool_info()
function will fail if:
.sp
.ne 2
.mk
.na
.B POE_BADPARAM
.ad
.RS 20n
.rt
The supplied configuration's status is not
.B POF_VALID
or the
.I flags
paramter is neither 0 or 1.
.RE

.sp
.ne 2
.mk
.na
.B POE_INVALID_CONF
.ad
.RS 20n
.rt
The configuration is invalid.
.RE

.sp
.ne 2
.mk
.na
.B POE_SYSTEM
.ad
.RS 20n
.rt
A system error has occurred. Check the system error code for more
details.
.RE

.sp
.LP
The
.B pool_query_pool_resources()
function will fail if:
.sp
.ne 2
.mk
.na
.B POE_BADPARAM
.ad
.RS 20n
.rt
The supplied configuration's status is not
.BR POF_VALID .
.RE

.sp
.ne 2
.mk
.na
.B POE_INVALID_CONF
.ad
.RS 20n
.rt
The configuration is invalid.
.RE

.sp
.ne 2
.mk
.na
.B POE_SYSTEM
.ad
.RS 20n
.rt
A system error has occurred. Check the system error code for more
details.
.RE

.SH USAGE
.sp
.LP
Pool names are unique across pools in a given configuration file. It is an
error to attempt to create a pool with a name that is currently used by
another pool within the same configuration.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
CSIEnabled
_
Interface StabilityUnstable
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR libpool (3LIB),
.BR pool_error (3POOL),
.BR attributes (5)
