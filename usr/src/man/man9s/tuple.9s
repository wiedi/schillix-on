'\" te
.\" Copyright (c) 2000, Sun Microsystems, Inc.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" , All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH tuple 9S "20 Dec 1996" "SunOS 5.11" "Data Structures for Drivers"
.SH NAME
tuple \- card information structure (CIS) access structure
.SH SYNOPSIS
.LP
.nf
#include <sys/pccard.h>
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris DDI Specific (Solaris DDI)
.SH DESCRIPTION
.sp
.LP
The
.B tuple_t
structure is the basic data structure provided by card
services to manage
.B PC
card information. A
.B PC
card provides
identification and configuration information through its card information
structure
.RB ( CIS ).
A
.B PC
card driver accesses a
.B PC
card's
.B CIS
through various card services functions.
.sp
.LP
The
.B CIS
information allows
.B PC
cards to be self-identifying: the
.B CIS
provides information to the system so that it can identify the
proper
.B PC
card driver for the
.B PC
card, and provides
configuration information so that the driver can allocate appropriate
resources to configure the
.B PC
card for proper operation in the
system.
.sp
.LP
The
.B CIS
information is contained on the
.B PC
card in a linked
list of tuple data structures called a
.B CIS
chain. Each tuple has a
one-byte type and a one-byte link, an offset to the next tuple in the list.
A
.B PC
card can have one or more
.B CIS
chains.
.sp
.LP
A multi-function
.B PC
card that complies with the
.B PC
Card 95
MultiFunction Metaformat specification will have one or more global
.B CIS
chains that collectively are referred to as the global
.BR CIS .
These
.B PC
Cards will also have one or more per-function \fBCIS\fR
chains. Each per-function collection of
.B CIS
chains is referred to as a
function-specific
.BR CIS .
.sp
.LP
To examine a
.B PC
card's
.BR CIS ,
first a
.B PC
card driver must
locate the desired tuple by calling
.BR csx_GetFirstTuple "(9F). Once the"
first tuple is located, subsequent tuples may be located by calling
.BR csx_GetNextTuple (9F).
See
.BR csx_GetFirstTuple "(9F). The linked list"
of tuples may be inspected one by one, or the driver may narrow the search
by requesting only tuples of a particular type.
.sp
.LP
Once a tuple has been located, the
.B PC
card driver may inspect the
tuple data. The most convenient way to do this for standard tuples is by
calling one of the number of tuple-parsing utility functions; for custom
tuples, the driver may get access to the raw tuple data by calling
.BR csx_GetTupleData (9F).
.sp
.LP
Solaris
.B PC
card drivers do not need to be concerned with which \fBCIS
\fRchain a tuple appears in. On a multi-function \fBPC\fR card, the client
will get the tuples from the global
.B CIS
followed by the tuples in the
function-specific
.BR CIS .
The caller will not get any tuples from a
function-specific
.B CIS
that does not belong to the caller's function.
.SH STRUCTURE MEMBERS
.sp
.LP
The structure members of
.B tuple_t
are:
.sp
.in +2
.nf
uint32_t      Socket;          /* socket number */
uint32_t      Attributes;      /* tuple attributes */
cisdata_t     DesiredTuple;    /* tuple to search for */
cisdata_t     TupleOffset;     /* tuple data offset */
cisdata_t     TupleDataMax;    /* max tuple data size */
cisdata_t     TupleDataLen;    /* actual tuple data length */
cisdata_t     TupleData[CIS_MAX_TUPLE_DATA_LEN];
                               /* body tuple data */
cisdata_t     TupleCode;       /* tuple type code */
cisdata_t     TupleLink;       /* tuple link */
.fi
.in -2

.sp
.LP
The fields are defined as follows:
.sp
.ne 2
.mk
.na
.B Socket
.ad
.RS 17n
.rt
Not used in Solaris, but for portability with other card services
implementations, it should be set to the logical socket number.
.RE

.sp
.ne 2
.mk
.na
.B Attributes
.ad
.RS 17n
.rt
This field is bit-mapped. The following bits are defined:
.sp
.ne 2
.mk
.na
.B TUPLE_RETURN_LINK
.ad
.sp .6
.RS 4n
Return link tuples if set.
.RE

.sp
.ne 2
.mk
.na
.B TUPLE_RETURN_IGNORED_TUPLES
.ad
.sp .6
.RS 4n
Return ignored tuples if set. Ignored tuples are those tuples in a
multi-function
.B PC
card's global
.B CIS
chain that are duplicates of
the same tuples in a function-specific
.B CIS
chain.
.RE

.sp
.ne 2
.mk
.na
.B TUPLE_RETURN_NAME
.ad
.sp .6
.RS 4n
Return tuple name string using the \fBcsx_ParseTuple\fR(9F) function if
set.
.RE

.RE

.sp
.ne 2
.mk
.na
.B DesiredTuple
.ad
.RS 17n
.rt
This field is the requested tuple type code to be returned when calling
.BR csx_GetFirstTuple (9F)
or
.BR csx_GetNextTuple (9F).
.B RETURN_FIRST_TUPLE
is used to return the first tuple regardless of
tuple type.
.B RETURN_NEXT_TUPLE
is used to return the next tuple
regardless of tuple type.
.RE

.sp
.ne 2
.mk
.na
.B TupleOffset
.ad
.RS 17n
.rt
This field allows partial tuple information to be retrieved, starting at
the specified offset within the tuple. This field must only be set before
calling
.BR csx_GetTupleData (9F).
.RE

.sp
.ne 2
.mk
.na
.B TupleDataMax
.ad
.RS 17n
.rt
This field is the size of the tuple data buffer that card services uses to
return raw tuple data from
.BR csx_GetTupleData "(9F). It can be larger than"
the number of bytes in the tuple data body. Card services ignores any value
placed here by the client.
.RE

.sp
.ne 2
.mk
.na
.B TupleDataLen
.ad
.RS 17n
.rt
This field is the actual size of the tuple data body. It represents the
number of tuple data body bytes returned by
.BR csx_GetTupleData (9F).
.RE

.sp
.ne 2
.mk
.na
.B TupleData
.ad
.RS 17n
.rt
This field is an array of bytes containing the raw tuple data body contents
returned by
.BR csx_GetTupleData (9F).
.RE

.sp
.ne 2
.mk
.na
.B TupleCode
.ad
.RS 17n
.rt
This field is the tuple type code and is returned by
.BR csx_GetFirstTuple (9F)
or
.BR csx_GetNextTuple "(9F) when a tuple"
matching the
.B DesiredTuple
field is returned.
.RE

.sp
.ne 2
.mk
.na
.B TupleLink
.ad
.RS 17n
.rt
This field is the tuple link, the offset to the next tuple, and is returned
by
.BR csx_GetFirstTuple "(9F) or"
.BR csx_GetNextTuple (9F)
when a tuple
matching the
.B DesiredTuple
field is returned.
.RE

.SH SEE ALSO
.sp
.LP
.BR csx_GetFirstTuple (9F),
.BR csx_GetTupleData (9F),
.BR csx_ParseTuple (9F),
.BR csx_Parse_CISTPL_BATTERY (9F),
.BR csx_Parse_CISTPL_BYTEORDER (9F),
.BR csx_Parse_CISTPL_CFTABLE_ENTRY (9F),
.BR csx_Parse_CISTPL_CONFIG (9F),
.BR csx_Parse_CISTPL_DATE (9F),
.BR csx_Parse_CISTPL_DEVICE (9F),
.BR csx_Parse_CISTPL_FUNCE (9F),
.BR csx_Parse_CISTPL_FUNCID (9F),
.BR csx_Parse_CISTPL_JEDEC_C (9F),
.BR csx_Parse_CISTPL_MANFID (9F),
.BR csx_Parse_CISTPL_SPCL (9F),
.BR csx_Parse_CISTPL_VERS_1 (9F),
.BR csx_Parse_CISTPL_VERS_2 (9F)
.sp
.LP
.IR "PC Card 95 Standard" ,
PCMCIA/JEIDA
