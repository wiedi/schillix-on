'\" te
.\" Copyright (c) 2005, Sun Microsystems, Inc.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH ddi_dma_lim_x86 9S "12 Oct 2005" "SunOS 5.11" "Data Structures for Drivers"
.SH NAME
ddi_dma_lim_x86 \- x86 DMA limits structure
.SH SYNOPSIS
.LP
.nf
#include <sys/ddidmareq.h>
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris x86 DDI specific (Solaris x86 DDI). This interface is obsolete.
.SH DESCRIPTION
.sp
.LP
A
.B ddi_dma_lim
structure describes in a generic fashion the possible
limitations of a device or its
.B DMA
engine. This information is used by
the system when it attempts to set up
.B DMA
resources for a device.
When the system is requested to perform a
.B DMA
transfer to or from an
object, the request is broken up, if necessary, into multiple sub-requests.
Each sub-request conforms to the limitations expressed in the
.B ddi_dma_lim
structure.
.sp
.LP
This structure should be filled in by calling the routine
.BR ddi_dmae_getlim (9F).
This routine sets the values of the structure
members appropriately based on the characteristics of the
.B DMA
engine
on the driver's parent bus.  If the driver has additional limitations, it
can
.I "further restrict"
some of the values in the structure members.  A
driver should
.I "not relax"
any restrictions imposed by
.BR ddi_dmae_getlim() .
.SH STRUCTURE MEMBERS
.sp
.in +2
.nf
uint_t  dlim_addr_lo;  /* low range of 32 bit
                                        addressing capability */
uint_t  dlim_addr_hi;  /* inclusive upper bound of
                          addressing capability */
uint_t  dlim_minxfer;  /* minimum effective dma transfer size */
uint_t  dlim_version;  /* version number of structure */
uint_t  dlim_adreg_max; /* inclusive upper bound of
                            incrementing addr reg */
uint_t  dlim_ctreg_max; /* maximum transfer count minus one */
uint_t  dlim_granular; /* granularity (and min size) of
                          transfer count */
short  dlim_sgllen;    /* length of DMA scatter/gather list */
uint_t  dlim_reqsize;  /* maximum transfer size in bytes of
                          a single I/O */
.fi
.in -2

.sp
.LP
The
.B dlim_addr_lo
and
.B dlim_addr_hi
fields specify the address
range that the device's
.B DMA
.RB "engine can access. The" " dlim_addr_lo"
field describes the lower 32-bit boundary of the device's
.B DMA
engine.
The
.B dlim_addr_hi
member describes the inclusive, upper 32-bit
boundary. The system allocates
.B DMA
resources in a way that the address
for programming the device's
.B DMA
engine will be within this range. For
example, if your device can access the whole 32-bit address range, you can
use [\fB0,0xFFFFFFFF\fR]. See
.BR ddi_dma_cookie (9S)
or
.BR ddi_dma_segtocookie (9F).
.sp
.LP
The \fBdlim_minxfer\fR field describes the minimum effective \fBDMA\fR
transfer size (in units of bytes), which must be a power of two. This value
specifies the minimum effective granularity of the
.B DMA
engine and
describes the minimum amount of memory that can be touched by the
.BR DMA
transfer. As a resource request is handled by the system, the
.B dlim_minxfer
value can be modified. This modification is contingent
upon the presence (and use) of \fBI/O\fRcaches and \fBDMA\fR write buffers
between the
.B DMA
engine and the object that
.B DMA
is being
performed on. After
.B DMA
resources have been allocated, you can
retrieve the resultant minimum transfer value using
.BR ddi_dma_devalign (9F).
.sp
.LP
The
.B dlim_version
field specifies the version number of this
structure. Set this field to
.BR DMALIM_VER0 .
.sp
.LP
The
.B dlim_adreg_max
field describes an inclusive upper bound for the
device's
.B DMA
engine address register. This bound handles a fairly
common case where a portion of the address register is simply a latch rather
than a full register. For example, the upper 16 bits of a 32-bit address
register might be a latch. This splits the address register into a portion
that acts as a true address register (lower 16 bits) for a 64-kilobyte
segment and a latch (upper 16 bits) to hold a segment number. To describe
these limits, you specify
.B 0xFFFF
in the
.B dlim_adreg_max
structure
member.
.sp
.LP
The
.B dlim_ctreg_max
field specifies the maximum transfer count that
the
.B DMA
engine can handle in one segment or cookie.  The limit is
expressed as the maximum count minus one. This transfer count limitation is
a per-segment limitation.  Because the limitation is used as a bit mask, it
must be one less than a power of two.
.sp
.LP
The
.B dlim_granular
field describes the granularity of the device's
.B DMA
transfer ability, in units of bytes. This value is used to
specify, for example, the sector size of a mass storage device. \fBDMA\fR
requests are broken into multiples of this value. If there is no
scatter/gather capability, then the size of each
.B DMA
transfer will be
a multiple of this value. If there is scatter/gather capability, then a
single segment cannot be smaller than the minimum transfer value, but can be
less than the granularity. However, the total transfer length of the
scatter/gather list is a multiple of the granularity value.
.sp
.LP
The
.B dlim_sgllen
field specifies the maximum number of entries in the
scatter/gather list. This value is the number of segments or cookies that
the
.B DMA
engine can consume in one I/O request to the device. If the
.B DMA
engine has no scatter/gather list, set this field to one.
.sp
.LP
The
.B dlim_reqsize
field describes the maximum number of bytes that the
.B DMA
engine can transmit or receive in one I/O command. This limitation
is only significant if it is less than (
.B dlim_ctreg_max
+1) *
.BR dlim_sgllen .
If the
.B DMA
engine has no particular limitation, set
this field to
.BR 0xFFFFFFFF .
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityObsolete
.TE

.SH SEE ALSO
.sp
.LP
.BR ddi_dmae (9F),
.BR ddi_dma_addr_setup (9F),
.BR ddi_dma_buf_setup (9F),
.BR ddi_dma_devalign (9F),
.BR ddi_dma_segtocookie (9F),
.BR ddi_dma_setup (9F),
.BR ddi_dma_cookie (9S),
.BR ddi_dma_lim_sparc (9S),
.BR ddi_dma_req (9S)

