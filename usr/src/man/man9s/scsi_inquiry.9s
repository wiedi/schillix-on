'\" te
.\" Copyright (c) 2008, Sun Microsystems, Inc. , All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH scsi_inquiry 9S "5 Nov 2008" "SunOS 5.11" "Data Structures for Drivers"
.SH NAME
scsi_inquiry \- SCSI inquiry structure
.SH SYNOPSIS
.LP
.nf
#include <sys/scsi/scsi.h>
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris DDI specific (Solaris DDI).
.SH DESCRIPTION
.sp
.LP
The
.B scsi_inquiry
structure contains 36 required bytes, followed by a
variable number of vendor-specific parameters. Bytes 59 through 95, if
returned, are reserved for future standardization. This structure is part of
.BR scsi_device (9S)
structure and typically filled in by
.BR scsi_probe (9F).
.SH STRUCTURE MEMBERS
.sp
.in +2
.nf
Lines that start with an 'X' will be deleted before submission;
they are being classified as unstable at this time.

uchar_t  inq_dtype;         /* Periph. qualifier, dev. type */
uchar_t  inq_rmb      :1;   /* Removable media */
uchar_t  inq_qual     :7;   /* Dev. type qualifier */
uchar_t  inq_iso      :2;   /* ISO version */
uchar_t  inq_ecma     :3;   /* EMCA version */
uchar_t  inq_ansi     :3;   /* ANSII version */
uchar_t  inq_aenc     :1;   /* Async event notif. cap. */
uchar_t  inq_trmiop   :1;   /* Supports TERMINATE I/O PROC msg */
uchar_t  inq_normaca  :1;   /* setting NACA bit supported */
uchar_t  inq_hisup    :1;   /* hierarchical addressing model */
uchar_t  inq_rdf      :4;   /* Response data format */
uchar_t  inq_len            /* Additional length */
uchar_t  inq_sccs     :1;   /* embedded storage array */
Xuchar_t inq_acc      :1;   /* access controls coordinator */
uchar_t  inq_tpgse    :1;   /* explicit asymmetric lun access */
uchar_t  inq_tpgsi    :1;   /* implicit asymmetric lun access */
Xuchar_t inq_3pc      :1;   /* third-party copy */
Xuchar_t inq_protect  :1;   /* supports protection information */
uchar_t  inq_bque     :1;   /* basic queueing */
uchar_t  inq_encserv  :1;   /* embedded enclosure services */
uchar_t  inq_dualp    :1;   /* dual port device */
uchar_t  inq_mchngr   :1;   /* embedded/attached to medium chngr */
uchar_t  inq_addr16   :1;   /* SPI: supports 16 bit wide SCSI addr */
uchar_t  inq_wbus16   :1;   /* SPI: Supports 16 bit wide data xfers */
uchar_t  inq_sync     :1;   /* SPI: Supports synchronous data xfers */
uchar_t  inq_linked   :1;   /* Supports linked commands */
uchar_t  inq_cmd_que  :1;   /* Supports command queueing */
uchar_t  inq_sftre    :1;   /* Supports Soft Reset option */
char     inq_vid[8];        /* Vendor ID */
char     inq_pid[16];       /* Product ID */
char     inq_revision[4];   /* Revision level */
uchar_t  inq_clk      :2;   /* SPI3 clocking */
uchar_t  inq_qas      :1;   /* SPI3: quick arb sel */
uchar_t  inq_ius      :1;   /* SPI3: information units */
.fi
.in -2

.sp
.LP
.B inq_dtype
identifies the type of device. Bits 0 - 4 represent the
Peripheral Device Type and bits 5 - 7 represent the Peripheral Qualifier. The
following values are appropriate for Peripheral Device Type field:
.sp
.ne 2
.mk
.na
.B DTYPE_DIRECT
.ad
.RS 20n
.rt
Direct-access device (for example, magnetic disk).
.RE

.sp
.ne 2
.mk
.na
.B DTYPE_SEQUENTIAL
.ad
.RS 20n
.rt
Sequential-access device (for example, magnetic tape).
.RE

.sp
.ne 2
.mk
.na
.B DTYPE_PRINTER
.ad
.RS 20n
.rt
Printer device.
.RE

.sp
.ne 2
.mk
.na
.B DTYPE_PROCESSOR
.ad
.RS 20n
.rt
Processor device.
.RE

.sp
.ne 2
.mk
.na
.B DTYPE_WORM
.ad
.RS 20n
.rt
Write-once device (for example, some optical disks).
.RE

.sp
.ne 2
.mk
.na
.B DTYPE_RODIRECT
.ad
.RS 20n
.rt
CD-ROM device.
.RE

.sp
.ne 2
.mk
.na
.B DTYPE_SCANNER
.ad
.RS 20n
.rt
Scanner device.
.RE

.sp
.ne 2
.mk
.na
.B DTYPE_OPTICAL
.ad
.RS 20n
.rt
Optical memory device (for example, some optical disks).
.RE

.sp
.ne 2
.mk
.na
.B DTYPE_CHANGER
.ad
.RS 20n
.rt
Medium Changer device (for example, jukeboxes).
.RE

.sp
.ne 2
.mk
.na
.B DTYPE_COMM
.ad
.RS 20n
.rt
Communications device.
.RE

.sp
.ne 2
.mk
.na
.B DTYPE_ARRAY_CTRL
.ad
.RS 20n
.rt
Array controller device (for example,
.BR RAID ).
.RE

.sp
.ne 2
.mk
.na
.B DTYPE_ESI
.ad
.RS 20n
.rt
Enclosure services device.
.RE

.sp
.ne 2
.mk
.na
.B DTYPE_RBC
.ad
.RS 20n
.rt
Simplified direct-access device.
.RE

.sp
.ne 2
.mk
.na
.B DTYPE_OCRW
.ad
.RS 20n
.rt
Optical card reader/writer device.
.RE

.sp
.ne 2
.mk
.na
.B DTYPE_BRIDGE
.ad
.RS 20n
.rt
Bridge.
.RE

.sp
.ne 2
.mk
.na
.B DTYPE_OSD
.ad
.RS 20n
.rt
Object-based storage device.
.RE

.sp
.ne 2
.mk
.na
.B DTYPE_UNKNOWN
.ad
.RS 20n
.rt
Unknown or no device type.
.RE

.sp
.ne 2
.mk
.na
.B DTYPE_MASK
.ad
.RS 20n
.rt
Mask to isolate Peripheral Device Type field.
.RE

.sp
.LP
The following values are appropriate for the Peripheral Qualifier field:
.sp
.ne 2
.mk
.na
.B DPQ_POSSIBLE
.ad
.RS 17n
.rt
The specified peripheral device type is currently connected to this logical
unit. If the target cannot determine whether or not a physical device is
currently connected, it uses this peripheral qualifier when returning the
.B INQUIRY
data. This peripheral qualifier does not imply that the device
is ready for access by the initiator.
.RE

.sp
.ne 2
.mk
.na
.B DPQ_SUPPORTED
.ad
.RS 17n
.rt
The target is capable of supporting the specified peripheral device type on
this logical unit. However, the physical device is not currently connected to
this logical unit.
.RE

.sp
.ne 2
.mk
.na
.B DPQ_NEVER
.ad
.RS 17n
.rt
The target is not capable of supporting a physical device on this logical
unit. For this peripheral qualifier, the peripheral device type shall be set
to
.B DTYPE_UNKNOWN
to provide compatibility with previous versions of
.BR SCSI .
For all other peripheral device type values, this peripheral
qualifier is reserved.
.RE

.sp
.ne 2
.mk
.na
.B DPQ_VUNIQ
.ad
.RS 17n
.rt
This is a vendor-unique qualifier.
.RE

.sp
.ne 2
.mk
.na
.B DPQ_MASK
.ad
.RS 17n
.rt
Mask to isolate Peripheral Qualifier field.
.RE

.sp
.LP
.B DTYPE_NOTPRESENT
is the peripheral qualifier
.B DPQ_NEVER
and the
peripheral device type
.B DTYPE_UNKNOWN
combined.
.sp
.LP
.BR inq_rmb ,
if set, indicates that the medium is removable.
.sp
.LP
.B inq_qual
is a device type qualifier.
.sp
.LP
.B inq_iso
indicates
.B ISO
version.
.sp
.LP
.B inq_ecma
indicates
.B ECMA
version.
.sp
.LP
.B inq_ansi
indicates
.B ANSI
version.
.sp
.LP
.BR inq_aenc ,
if set, indicates that the device supports asynchronous
event notification capability as defined in
.B SCSI-2
specification.
.sp
.LP
.BR inq_trmiop ,
if set, indicates that the device supports the
.BR "TERMINATE I/O PROCESS" message.
.sp
.LP
.BR inq_normaca ,
if set, indicates that the device supports setting the
.B NACA
bit to 1 in
.BR CDB .
.sp
.LP
.BR inq_hisip ,
if set, indicates the
.B SCSI
target device uses the
hierarchical addressing model to assign
.BR LUN "s to logical units."
.sp
.LP
.BR inq_rdf ,
if set, indicates the
.B INQUIRY
data response data
format: "\fBRDF_LEVEL0\fR" means that this structure complies with the
\fBSCSI-1\fR spec, "\fBRDF_CCS\fR" means that this structure complies with
the \fBCCS\fR pseudo-spec, and "\fBRDF_SCSI2\fR" means that the structure
complies with the
.BR SCSI-2 "/3 spec."
.sp
.LP
.BR inq_len ,
if set, is the additional length field that specifies the
length in bytes of the parameters.
.sp
.LP
.BR inq_sccs ,
if set, indicates the target device contains an embedded
storage array controller component.
.sp
.LP
.BR inq_acc ,
if set, indicates that the logical unit contains an access
controls coordinator (this structure member will be deleted before
submission. It is being classified as unstable at this time).
.sp
.LP
.BR inq_tpgse ,
if set, indicates that implicit asymmetric logical unit
access is supported.
.sp
.LP
.BR inq_tpgsi ,
if set, indicates that explicit asymmetric logical unit
access is supported.
.sp
.LP
.BR inq_3pc ,
if set, indicates that the
.B SCSI
target device supports
third-party copy commands (this structure member will be deleted before
submission. It is being classified as unstable at this time).
.sp
.LP
.BR inq_protect ,
if set, indicates that the logical unit supports
protection information (this structure member will be deleted before
submission. It is being classified as unstable at this time).
.sp
.LP
.BR inq_bque ,
if set, indicates that the logical unit supports basic task
management.
.sp
.LP
.BR inq_encserv ,
if set, indicates that the device contains an embedded
enclosure services component (\fBses\fR(7D)).
.sp
.LP
.BR inq_dualp ,
if set, indicates that the
.B SCSI
target device
supports two or more ports.
.sp
.LP
.BR inq_mchngr ,
if set, indicates that the
.B SCSI
target device
supports commands to control an attached media changer.
.sp
.LP
.BR inq_addr16 ,
if set, indicates that the device supports 16-bit wide
.B SCSI
addresses.
.sp
.LP
.BR inq_wbus16 ,
if set, indicates that the device supports 16-bit wide
data transfers.
.sp
.LP
.BR inq_sync ,
if set, indicates that the device supports synchronous data
transfers.
.sp
.LP
.BR inq_linked ,
if set, indicates that the device supports linked commands
for this logical unit.
.sp
.LP
.BR inq_cmdque ,
if set, indicates that the device supports tagged command
queueing.
.sp
.LP
.BR inq_sftre ,
if reset, indicates that the device responds to the
.B RESET
condition with the hard
.B RESET
alternative. If this bit is
set, this indicates that the device responds with the soft \fBRESET\fR
alternative.
.sp
.LP
.B inq_vid
contains eight bytes of
.B ASCII
data identifying the
vendor of the product.
.sp
.LP
.B inq_pid
contains sixteen bytes of
.B ASCII
data as defined by the
vendor.
.sp
.LP
.B inq_revision
contains four bytes of
.B ASCII
data as defined by the
vendor.
.sp
.LP
.B inq_clk
clocking of the
.B SPI3
target port.
.sp
.LP
.B inq_gas
the
.B SPI3
target port supports quick arbitration and
selection.
.sp
.LP
.B inq_ius
the
.B SPI3
target device supports information unit
transfers.
.SH SEE ALSO
.sp
.LP
.BR scsi_probe (9F),
.BR scsi_device (9S)
.sp
.LP
.I "ANSI Small Computer System Interface-2 (SCSI-2)
.sp
.LP
.I ANSI SCSI Primary Commands-3 (SPC-3)
.sp
.LP
http://t10.org/drafts.htm#spc3
.sp
.LP
.I Writing Device Drivers
