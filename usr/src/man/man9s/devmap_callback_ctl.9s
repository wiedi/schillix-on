'\" te
.\" Copyright (c) 2000, Sun Microsystems, Inc.,  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH devmap_callback_ctl 9S "24 Jul 1996" "SunOS 5.11" "Data Structures for Drivers"
.SH NAME
devmap_callback_ctl \- device mapping-control structure
.SH SYNOPSIS
.LP
.nf
#include <sys/ddidevmap.h>
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris DDI specific (Solaris DDI).
.SH DESCRIPTION
.sp
.LP
A
.B devmap_callback_ctl
structure describes a set of callback routines
that are called by  the system to notify a device driver to manage events on
the device mappings created by
.BR devmap_setup "(9F) or"
.BR ddi_devmap_segmap (9F).
.sp
.LP
Device drivers pass the initialized
.B devmap_callback_ctl
structure to
either
.BR devmap_devmem_setup "(9F) or"
.BR devmap_umem_setup (9F)
in the
.BR devmap (9E)
entry point during the mapping setup.  The system makes a
private copy of the structure for later use. Device drivers can specify
different
.B devmap_callback_ctl
for different mappings.
.sp
.LP
A device driver should allocate the device mapping control structure and
initialize the following fields, if the driver wants the entry points to be
called by the system:
.sp
.ne 2
.mk
.na
.B devmap_rev
.ad
.RS 18n
.rt
Version number. Set this to
.BR DEVMAP_OPS_REV .
.RE

.sp
.ne 2
.mk
.na
.B devmap_map
.ad
.RS 18n
.rt
Set to the address of the
.BR devmap_map "(9E) entry point or to"
\fINULL\fR if the driver does not support this callback. If set, the system
calls the
.BR devmap_map "(9E) entry point during the"
.BR mmap (2)
system
call. The drivers typically allocate driver private data structure in this
function and return the pointer to the private data structure to the system
for later use.
.RE

.sp
.ne 2
.mk
.na
.B devmap_access
.ad
.RS 18n
.rt
Set to the address of the
.BR devmap_access "(9E) entry point or to"
\fINULL\fR if the driver does not support this callback. If set, the system
calls the driver's
.BR devmap_access (9E)
entry point during memory access.
The system expects
.BR devmap_access "(9E) to call either"
.BR devmap_do_ctxmgt (9F)
or \fBdevmap_default_access\fR(9F) to load the
memory address translations before it returns to the system.
.RE

.sp
.ne 2
.mk
.na
.B devmap_dup
.ad
.RS 18n
.rt
Set to the address of the
.BR devmap_dup "(9E) entry point or to"
\fINULL\fR if the driver does not support this call. If set, the system
calls the
.BR devmap_dup "(9E) entry point during the"
.BR fork (2)
system
call.
.RE

.sp
.ne 2
.mk
.na
.B devmap_unmap
.ad
.RS 18n
.rt
Set to the address of the
.BR devmap_unmap "(9E) entry point or to"
\fINULL\fR if the driver does not support this call. If set, the system will
call the
.BR devmap_unmap "(9E) entry point during the"
.BR munmap (2)
or
.BR exit (2)
system calls.
.RE

.SH STRUCTURE MEMBERS
.sp
.in +2
.nf
int	devmap_rev;
int	(*devmap_map)(devmap_cookie_t dhp, dev_t dev,
     uint_t flags,offset_t off, size_t len, void **pvtp);
int	(*devmap_access)(devmap_cookie_t dhp, void *pvtp,
     offset_t off, size_t len, uint_t type, uint_t rw);
int	(*devmap_dup)(devmap_cookie_t dhp, void *pvtp,
		   devmap_cookie_t new_dhp, void **new_pvtp);
void	(*devmap_unmap)(devmap_cookie_t dhp, void *pvtp,
     offset_t off, size_t len, devmap_cookie_t new_dhp1,
     void **new_pvtp1, devmap_cookie_t new_dhp2, void **new_pvtp2);
.fi
.in -2

.SH SEE ALSO
.sp
.LP
.BR exit (2),
.BR fork (2),
.BR mmap (2),
.BR munmap (2),
.BR devmap (9E),
.BR devmap_access (9E),
.BR devmap_dup (9E),
.BR devmap_map (9E),
.BR devmap_unmap (9E),
.BR ddi_devmap_segmap (9F),
.BR devmap_default_access (9F),
.BR devmap_devmem_setup (9F),
.BR devmap_do_ctxmgt (9F),
.BR devmap_setup (9F),
.BR devmap_umem_setup (9F)
.sp
.LP
.I Writing Device Drivers
