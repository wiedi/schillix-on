'\" te
.\" Copyright (c) 2000 Sun Microsystems, Inc., All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH ddi_dma_cookie 9S "30 Sep 1996" "SunOS 5.11" "Data Structures for Drivers"
.SH NAME
ddi_dma_cookie \- DMA address cookie
.SH SYNOPSIS
.LP
.nf
#include <sys/sunddi.h>
.fi

.SH INTERFACE LEVEL
.sp
.LP
Solaris DDI specific (Solaris DDI).
.SH DESCRIPTION
.sp
.LP
The
.B ddi_dma_cookie_t
structure contains
.B DMA
address information
required to program a
.B DMA
engine. The structure is filled in by a call
to
.BR ddi_dma_getwin (9F),
.BR ddi_dma_addr_bind_handle (9F),
or
.BR ddi_dma_buf_bind_handle (9F),
to get device-specific
.B DMA
transfer
information for a
.B DMA
request or a
.B DMA
window.
.SH STRUCTURE MEMBERS
.sp
.in +2
.nf
typedef struct {
    union {
            uint64_t        _dmac_ll;    /* 64 bit DMA add. */
            uint32_t        _dmac_la[2]; /* 2 x 32 bit add. */
    } _dmu;
    size_t          dmac_size;   /* DMA cookie size */
    uint_t          dmac_type;   /* bus spec. type bits */
} ddi_dma_cookie_t;
.fi
.in -2

.sp
.LP
You can access the DMA address through the \fB#define\fRs:
.B dmac_address
for 32-bit addresses and
.B dmac_laddress
for 64-bit
addresses. These macros are defined as follows:
.sp
.in +2
.nf
#define dmac_laddress   _dmu._dmac_ll
#ifdef _LONG_LONG_HTOL
#define dmac_notused    _dmu._dmac_la[0]
#define dmac_address    _dmu._dmac_la[1]
#else
#define dmac_address    _dmu._dmac_la[0]
#define dmac_notused    _dmu._dmac_la[1]
#endif
.fi
.in -2

.sp
.LP
.B dmac_laddress
specifies a 64-bit
.B I/O
address appropriate for
programming the device's
.B DMA
engine. If a device has a 64-bit
.B DMA
address register a driver should use this field to program the
.B DMA
engine.
.B dmac_address
specifies a 32-bit
.B I/O
address.
It should be used for devices that have a 32-bit
.B DMA
address register.
The
.B I/O
address range that the device can address and other
.BR DMA
attributes have to be specified in a
.BR ddi_dma_attr "(9S) structure."
.sp
.LP
.B dmac_size
describes the length of the transfer in bytes.
.sp
.LP
.B dmac_type
contains bus-specific type bits, if appropriate. For
example, a device on a
.B PCI
bus has
.B PCI
address modifier bits
placed here.
.SH SEE ALSO
.sp
.LP
.BR pci (4),
.BR sbus (4),
.BR sysbus (4),
.BR ddi_dma_addr_bind_handle (9F),
.BR ddi_dma_buf_bind_handle (9F),
.BR ddi_dma_getwin (9F),
.BR ddi_dma_nextcookie (9F),
.BR ddi_dma_attr (9S)
.sp
.LP
.I Writing Device Drivers
