'\" te
.\" Copyright 1989 AT&T  Copyright (c) 2005, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH ckrange 1 "4 Nov 2005" "SunOS 5.11" "User Commands"
.SH NAME
ckrange, errange, helprange, valrange \- prompts for and validates an
integer
.SH SYNOPSIS
.LP
.nf
\fBckrange\fR [\fB-Q\fR] [\fB-W\fR \fIwidth\fR] [\fB-l\fR \fIlower\fR] [\fB-u\fR \fIupper\fR] [\fB-b\fR \fIbase\fR]
     [\fB-d\fR \fIdefault\fR] [\fB-h\fR \fIhelp\fR] [\fB-e\fR \fIerror\fR] [\fB-p\fR \fIprompt\fR]
     [\fB-k\fR \fIpid\fR [\fB-s\fR \fIsignal\fR]]
.fi

.LP
.nf
\fB/usr/sadm/bin/errange\fR [\fB-W\fR \fIwidth\fR] [\fB-e\fR \fIerror\fR] [\fB-l\fR \fIlower\fR]
     [\fB-u\fR \fIupper\fR] [\fB-b\fR \fIbase\fR]
.fi

.LP
.nf
\fB/usr/sadm/bin/helprange\fR [\fB-W\fR \fIwidth\fR] [\fB-h\fR \fIhelp\fR] [\fB-l\fR \fIlower\fR]
     [\fB-u\fR \fIupper\fR] [\fB-b\fR \fIbase\fR]
.fi

.LP
.nf
\fB/usr/sadm/bin/valrange\fR [\fB-l\fR \fIlower\fR] [\fB-u\fR \fIupper\fR] [\fB-b\fR \fIbase\fR] \fIinput\fR
.fi

.SH DESCRIPTION
.sp
.LP
The
.B ckrange
utility prompts a user for an integer between a specified
range and determines whether this response is valid. It defines, among other
things, a prompt message whose response should be an integer in the range
specified, text for help and error messages, and a default value (which is
returned if the user responds with a RETURN).
.sp
.LP
This command also defines a range for valid input. If either the lower or
upper limit is left undefined, then the range is bounded on only one end.
.sp
.LP
All messages are limited in length to 79 characters and are formatted
automatically. Tabs and newlines are removed after a single whitespace
character in a message definition, but spaces are not removed. When a tilde
is placed at the beginning or end of a message definition, the default text
will be inserted at that point, allowing both custom text and the default
text to be displayed.
.sp
.LP
If the prompt, help or error message is not defined, the default message
(as defined under EXAMPLES) is displayed.
.sp
.LP
Three visual tool modules are linked to the
.B ckrange
command. They are
.B errange
(which formats and displays an error message on the standard
output),
.B helprange
(which formats and displays a help message on the
standard output), and
.B valrange
(which validates a response).
.sp
.LP
\fBNote:\fR Negative "input" arguments confuse \fBgetopt\fR in
\fBvalrange\fR. By inserting a "\(mi" before the argument, \fBgetopt\fR
processing will stop. See
.BR getopt (1)
and
.BR Intro (1)
about
.B getopt
parameter handling.
.B getopt
is used to parse positional
parameters and to check for legal options.
.SH OPTIONS
.sp
.LP
The following options are supported:
.sp
.ne 2
.mk
.na
.B -b
.I base
.ad
.RS 14n
.rt
Defines the base for input. Must be 2 to 36, default is 10. Base conversion
uses
.BR strtol "(3C). Output is always base 10."
.RE

.sp
.ne 2
.mk
.na
.B -d
.I default
.ad
.RS 14n
.rt
Defines the default value as
.IR default .
.I default
is converted
using
.BR strtol "(3C) in the desired base. Any characters invalid in the"
specified base will terminate the
.B strtol
conversion without error.
.RE

.sp
.ne 2
.mk
.na
.B -e
.I error
.ad
.RS 14n
.rt
Defines the error message as
.IR " error" .
.RE

.sp
.ne 2
.mk
.na
.B -h
.I help
.ad
.RS 14n
.rt
Defines the help message as
.IR " help" .
.RE

.sp
.ne 2
.mk
.na
.B -k
.I pid
.ad
.RS 14n
.rt
Specifies that process
.B ID
.I pid
is to be sent a signal if the
user chooses to quit.
.RE

.sp
.ne 2
.mk
.na
.B -l
.I lower
.ad
.RS 14n
.rt
Defines the lower limit of the range as
.IR lower .
Default is the
machine's largest negative long.
.RE

.sp
.ne 2
.mk
.na
.B -p
.I prompt
.ad
.RS 14n
.rt
Defines the prompt message as
.IR prompt .
.RE

.sp
.ne 2
.mk
.na
.B -Q
.ad
.RS 14n
.rt
Specifies that quit will not be allowed as a valid response.
.RE

.sp
.ne 2
.mk
.na
.B -s
.I signal
.ad
.RS 14n
.rt
Specifies that the process
.B ID
.I pid
defined with the
.BR -k
option is to be sent signal
.I signal
when quit is chosen. If no signal
is specified,
.B SIGTERM
is used.
.RE

.sp
.ne 2
.mk
.na
.B -u
.I upper
.ad
.RS 14n
.rt
Defines the upper limit of the range as
.IR upper .
Default is the
machine's largest positive long.
.RE

.sp
.ne 2
.mk
.na
.B -W
.I width
.ad
.RS 14n
.rt
Specifies that prompt, help and error messages will be formatted to a line
length of
.IR width .
.RE

.SH OPERANDS
.sp
.LP
The following operand is supported:
.sp
.ne 2
.mk
.na
.I input
.ad
.RS 9n
.rt
Input to be verified against upper and lower limits and base.
.RE

.SH EXAMPLES
.LP
.B Example 1
Default base 10 prompt
.sp
.LP
The default base 10 prompt for
.B ckrange
is:

.sp
.in +2
.nf
example% \fBckrange\fR
Enter an integer between \fIlower_bound \fRand
\fIupper_bound \fR[\fIlower_bound\(miupper_bound\fR,?,q]:
.fi
.in -2
.sp

.LP
.B Example 2
Default base 10 error message
.sp
.LP
The default base 10 error message is:

.sp
.in +2
.nf
example% \fB/usr/sadm/bin/errange\fR
ERROR: Please enter an integer between \fIlower_bound \e\fR
     and \fIupper_bound\fR.
.fi
.in -2
.sp

.LP
.B Example 3
Default base 10 help message
.sp
.LP
The default base 10 help message is:

.sp
.in +2
.nf
example% \fB/usr/sadm/bin/helprange\fR
Please enter an integer between \fIlower_bound\fR and \fIupper_bound\fR.
.fi
.in -2
.sp

.LP
.B Example 4
Changing messages for a base other than 10
.sp
.LP
The messages are changed from ``integer'' to ``base
.I base
integer'' if
the base is set to a number other than 10. For example,

.sp
.in +2
.nf
example% \fB/usr/sadm/bin/helprange -b 36\fR
.fi
.in -2
.sp

.LP
.B Example 5
Using the quit option
.sp
.LP
When the quit option is chosen (and allowed),
.B q
is returned along
with the return code
.BR 3 .
Quit input gets a trailing newline.

.LP
.B Example 6
Using the valrange module
.sp
.LP
The
.B valrange
module will produce a usage message on stderr. It
returns
.B 0
for success and non-zero for failure.

.sp
.in +2
.nf
example% \fB/usr/sadm/bin/valrange\fR
usage: valrange [-l lower] [-u upper] [-b base] input
.fi
.in -2
.sp

.SH EXIT STATUS
.sp
.LP
The following exit values are returned:
.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 5n
.rt
Successful execution.
.RE

.sp
.ne 2
.mk
.na
.B 1
.ad
.RS 5n
.rt
.B EOF
on input, or negative width on
.B -W
option, or usage error.
.RE

.sp
.ne 2
.mk
.na
.B 2
.ad
.RS 5n
.rt
Usage error.
.RE

.sp
.ne 2
.mk
.na
.B 3
.ad
.RS 5n
.rt
User termination (quit).
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcsu
.TE

.SH SEE ALSO
.sp
.LP
.BR Intro (1),
.BR getopt (1),
.BR strtol (3C),
.BR attributes (5),
.BR signal.h (3HEAD)
