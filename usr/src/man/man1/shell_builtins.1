'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2016, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" Copyright 1989 AT&T
.\" Portions Copyright (c) 1982-2007 AT&T Knowledge Ventures
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH shell_builtins 1 "12 Sept 2016" "SunOS 5.11" "User Commands"
.SH NAME
shell_builtins, case, for, foreach, function, if, repeat, select, switch,
until, while \- shell command interpreter built-in commands
.SH DESCRIPTION
.sp
.LP
The shell command interpreters
.BR bosh (1),
.BR csh (1),
.BR ksh (1),
.BR ksh93 (1),
and
.BR sh (1)
have special built-in commands. The commands
.BR case ,
.BR for ,
.BR foreach ,
.BR function ,
.BR if ,
.BR repeat ,
.BR select ,
.BR switch ,
.BR until ,
and
.B while
are commands in the
.RB "syntax recognized by the shells. They are described in the" " Commands"
section of the manual pages of the respective shells.
In
.BR bosh (1)
and
.BR ksh93 (1),
.B time
(when called without option) is a keyword and allows to time complex commands
instead of just simple commands, so use
.B time \-p
if you like to get the POSIX behavior.
In
.BR ksh93 (1),
.BR fc ,
.BR hash ,
.BR stop ,
.BR suspend ,
.BR times ,
and
.BR type
are aliases by default. In
.BR ksh93 ,
the following built-ins are bound to
the
.B /bin
pathname by default and are invoked if the pathname search
encounters an executable command of that name in the
.B /bin
or
.B /usr/bin
directory:
.BR cat ,
.BR chown ,
.BR getconf ,
.BR head ,
.BR mkdir ,
.BR rmdir ,
.BR tee ,
.BR uniq ,
and
.BR wc .
.sp
.LP
The remaining commands listed in the following table are built into the
shells for reasons such as efficiency or data sharing between command
invocations. They are described on their respective manual pages.
.sp

.sp
.TS
tab();
cw(2.75i) cw(2.75i)
lw(2.75i) lw(2.75i)
.
CommandShell
_
\fB++**alias\fRbosh, csh, ksh, ksh93
\fBbg\fRbosh, csh, ksh, ksh93, sh
\fB+*break\fRbosh, csh, ksh, ksh93, sh
\fBbuiltin\fRbosh, ksh93
\fBcase\fRbosh, csh, ksh, ksh93, sh
\fBcat\fRksh93
\fBcd\fRbosh, csh, ksh, ksh93, sh
\fBchdir\fRbosh, csh, sh
\fBchown\fRksh93
\fBcommand\fRbosh, ksh93
\fB+*continue\fRbosh, csh, ksh, ksh93, sh
\fBdirs\fRbosh, csh
\fBdisown\fRksh93
\fBdosh\fRbosh
\fBecho\fRbosh, csh, ksh, ksh93, sh
\fBerrstr\fRbosh
\fB+*eval\fRbosh, csh, ksh, ksh93, sh
\fB+*exec\fRbosh, csh, ksh, ksh93, sh
\fB+*exit\fRbosh, csh, ksh, ksh93, sh
\fB++**export\fRbosh, ksh, ksh93, sh
\fBfalse\fRbosh, ksh, ksh93
\fBfc\fRksh, ksh93
\fBfg\fRbosh, csh, ksh, ksh93, sh
\fBfind\fRbosh
\fBfor\fRbosh, ksh, ksh93, sh
\fBforeach\fRcsh
\fBfunction\fRksh, ksh93
\fBgetconf\fRksh93
\fBgetopts\fRbosh, ksh, ksh93, sh
\fBglob\fRcsh
\fBgoto\fRcsh
\fBhash\fRbosh, ksh, ksh93, sh
\fBhashstat\fRcsh
\fBhead\fRksh93
\fBhist\fRksh93
\fBhistory\fRbosh, csh
\fBif\fRbosh, csh, ksh, ksh93, sh
\fBjobs\fRbosh, csh, ksh, ksh93, sh
\fBkill\fRbosh, csh, ksh, ksh93, sh
\fBkillpg\fRbosh
\fBlet\fRksh, ksh93,
\fBlimit\fRcsh
\fBlocal\fRbosh, ksh
\fBlogin\fRbosh, csh, ksh, ksh93, sh
\fBlogout\fRcsh
\fBmap\fRbosh
\fBmkdir\fRksh93
\fBnice\fRcsh
\fB+*newgrp\fRbosh, ksh, ksh93, sh
\fBnohup\fRcsh
\fBnotify\fRcsh
\fBonintr\fRcsh
\fBpgrp\fRbosh
\fBpopd\fRbosh, csh
\fBprint\fRksh, ksh93
\fBprintf\fRbosh, ksh93
\fBpushd\fRbosh, csh
\fBpwd\fRbosh, ksh, ksh93, sh
\fBread\fRbosh, ksh, ksh93, sh
\fB++**readonly\fRbosh, ksh, ksh93, sh
\fBrehash\fRcsh
\fBrepeat\fRbosh, csh
\fB+*return\fRbosh, ksh, ksh93, sh
\fBsavehistory\fRbosh
\fBselect\fRbosh, ksh, ksh93
\fB+set\fRbosh, csh, ksh, ksh93, sh
\fBsetenv\fRcsh
\fBshift\fRbosh, csh, ksh, ksh93, sh
\fBsleep\fRksh93
\fBsource\fRcsh
\fBstop\fRbosh, csh, ksh, ksh93, sh
\fBsuspend\fRbosh, csh, ksh, sh
\fBswitch\fRcsh
\fBsync\fRbosh
\fBtee\fRksh93
\fBtest\fRbosh, ksh, ksh93, sh
\fBtime\fRbosh, csh
\fB*times\fRbosh, ksh, ksh93, sh
\fB*+trap\fRbosh, ksh, ksh93, sh
\fBtrue\fRbosh, ksh, ksh93
\fBtype\fRbosh, ksh, ksh93, sh
\fB++**typeset\fRksh, ksh93
\fBulimit\fRbosh, ksh, ksh93, sh
\fBumask\fRbosh, csh, ksh, ksh93, sh
\fB+unalias\fRbosh, csh, ksh, ksh93
\fBunhash\fRcsh
\fBuniq\fRksh93
\fBunlimit\fRcsh
\fB+unset\fRbosh, csh, ksh, ksh93, sh
\fBunsetenv\fRcsh
\fBuntil\fRbosh, ksh, ksh93, sh
\fB*wait\fRbosh, csh, ksh, ksh93, sh
\fBwhence\fRksh, ksh93
\fBwhile\fRbosh, csh, ksh, ksh93, sh
.TE

.SS "Bourne Shell, bosh, sh, Special Commands"
.sp
.LP
Input/output redirection is now permitted for these commands. File
descriptor 1 is the default output location. When Job Control is enabled,
additional
.B "Special Commands"
are added to the shell's environment.
.sp
.LP
In addition to these built-in reserved command words,
.B sh
also uses:
.sp
.ne 2
.mk
.na
.B :
.ad
.RS 15n
.rt
No effect; the command does nothing. A zero exit code is returned.
.RE

.sp
.ne 2
.mk
.na
\fB\&.\ \fIfilename\fR
.ad
.RS 15n
.rt
Read and execute commands from
.I filename
and return. The search path
specified by
.B PATH
is used to find the directory containing
.IR filename .
.RE

.SS "C shell, csh"
.sp
.LP
Built-in commands are executed within the C shell. If a built-in command
occurs as any component of a pipeline except the last, it is executed in a
.RB "subshell. In addition to these built-in reserved command words," " csh"
also uses:
.sp
.ne 2
.mk
.na
.B :
.ad
.RS 5n
.rt
Null command. This command is interpreted, but performs no action.
.RE

.SS "Korn Shell, ksh, Special Commands"
.sp
.LP
Input/Output redirection is permitted. Unless otherwise indicated, the
output is written on file descriptor 1 and the exit status, when there is no
syntax error, is zero.
.sp
.LP
Commands that are preceded by one or two
.B *
(asterisks) are treated
specially in the following ways:
.RS +4
.TP
1.
Variable assignment lists preceding the command remain in effect when the
command completes.
.RE
.RS +4
.TP
2.
.B I/O
redirections are processed after variable assignments.
.RE
.RS +4
.TP
3.
Errors cause a script that contains them to abort.
.RE
.RS +4
.TP
4.
Words, following a command preceded by
.B **
that are in the format of a
variable assignment, are expanded with the same rules as a variable
assignment. This means that tilde substitution is performed after the
.B =
sign and word splitting and file name generation are not
performed.
.RE
.sp
.LP
In addition to these built-in reserved command words,
.B ksh
also
uses:
.sp
.ne 2
.mk
.na
.B * :
[
.I arg
\&.\|.\|. ]\fR
.ad
.RS 29n
.rt
The command only expands parameters.
.RE

.sp
.ne 2
.mk
.na
\fB* \&.\ \fIfile\fR [
.I arg
\&.\|.\|. ]\fR
.ad
.RS 29n
.rt
Read the complete
.I file
then execute the commands. The commands are
executed in the current shell environment. The search path specified by
.B PATH
is used to find the directory containing
.IR file .
If any
arguments
.I arg
are specified, they become the positional parameters.
Otherwise, the positional parameters are unchanged. The exit status is the
exit status of the last command executed. the loop termination test.
.RE

.SS "Korn Shell, ksh93, Special Commands"
.sp
.LP
Input/Output redirection is permitted. Unless otherwise indicated, the
output is written on file descriptor 1 and the exit status, when there is no
syntax error, is zero.
.sp
.LP
Except for
.BR : ,
.BR true ,
.BR false ,
.BR echo ,
.BR newgrp ,
and
.BR login ,
all built-in commands accept
.B --
to indicate end of
options. They also interpret the option
.B --man
as a request to display
the manual page onto standard error and
.B -?
as a help request which
prints a usage message on standard error.
.sp
.LP
Commands that are preceded by one or two
.B +
are treated specially in
the following ways:
.RS +4
.TP
1.
Variable assignment lists preceding the command remain in effect when the
command completes.
.RE
.RS +4
.TP
2.
.B I/O
redirections are processed after variable assignments.
.RE
.RS +4
.TP
3.
Errors cause a script that contains them to abort.
.RE
.RS +4
.TP
4.
They are not valid function names.
.RE
.RS +4
.TP
5.
Words, following a command preceded by
.B ++
that are in the format of a
variable assignment, are expanded with the same rules as a variable
assignment. This means that tilde substitution is performed after the
.B =
sign and field splitting and file name generation are not
performed.
.RE
.sp
.LP
In addition to these built-in reserved command words,
.B ksh93
also
uses:
.sp
.ne 2
.mk
.na
.B :
[
.I arg
\&.\|.\|. ]\fR
.ad
.RS 27n
.rt
The command only expands parameters.
.RE

.sp
.ne 2
.mk
.na
\fB\&.\ \fIname\fR [
.I arg
\&.\|.\|. ]\fR
.ad
.RS 27n
.rt
If
.I name
is a function defined with the function
.I name
reserved
word syntax, the function is executed in the current environment (as if it
had been defined with the
.B name()
syntax.) Otherwise if
.I name
refers to a file, the file is read in its entirety and the commands are
executed in the current shell environment. The search path specified by
.B PATH
is used to find the directory containing the file. If any
arguments
.I arg
are specified, they become the positional parameters
while processing the \fB\&.\fR command and the original positional
parameters are restored upon completion. Otherwise the positional parameters
are unchanged. The exit status is the exit status of the last command
executed.
.RE

.SH SEE ALSO
.sp
.LP
.BR Intro (1),
.BR alias (1),
.BR bosh (1),
.BR bosh-errstr (1),
.BR break (1),
.BR builtin (1),
.BR cd (1),
.BR chmod (1),
.BR csh (1),
.BR disown (1),
.BR dosh (1),
.BR echo (1),
.BR exec (1),
.BR exit (1),
.BR find (1),
.BR getoptcvt (1),
.BR getopts (1),
.BR glob (1),
.BR hash (1),
.BR history (1),
.BR jobs (1),
.BR kill (1),
.BR killpg (1),
.BR ksh (1),
.BR ksh93 (1),
.BR let (1),
.BR limit (1),
.BR login (1),
.BR logout (1),
.BR map (1),
.BR newgrp (1),
.BR nice (1),
.BR nohup (1),
.BR pgrp (1),
.BR print (1),
.BR printf (1),
.BR pwd (1),
.BR read (1),
.BR readonly (1),
.BR savehistory (1),
.BR set (1),
.BR sh (1),
.BR shift (1),
.BR sleep (1),
.BR suspend (1),
.BR sync (1),
.BR test (1), 
.BR test (1B),
.BR time (1),
.BR times (1),
.BR trap (1),
.BR typeset (1),
.BR umask (1),
.BR wait (1),
.BR chdir (2),
.BR chmod (2),
.BR creat (2),
.BR umask (2),
.BR getopt (3C),
.BR profile (4),
.BR environ (5)
