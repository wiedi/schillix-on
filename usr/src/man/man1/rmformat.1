'\" te
.\" Copyright (c) 2009, Sun Microsystems, Inc. All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH rmformat 1 "19 Feb 2009" "SunOS 5.11" "User Commands"
.SH NAME
rmformat \- removable rewritable media format utility
.SH SYNOPSIS
.LP
.nf
\fBrmformat\fR [\fB-DeHUv\fR] [\fB-b\fR \fIlabel\fR] [\fB-c\fR \fIblockno\fR]
     [\fB-F\fRquick | long | force ] [\fB-s\fR \fIfilename\fR] [\fIdevname\fR]
.fi

.LP
.nf
\fBrmformat\fR \fB-V\fR read | write \fIdevname\fR
.fi

.LP
.nf
\fBrmformat\fR \fB-l\fR [\fIdevname\fR]
.fi

.SH DESCRIPTION
.sp
.LP
The
.B rmformat
utility is used to format, label, partition, and perform
other miscellaneous functions on removable, rewritable media that include
floppy drives, and the
.B PCMCIA
memory and
.B ata
cards. The
.B rmformat
utility should also be  used with all USB mass storage
devices, including USB hard drives. This utility can also be used for the
verification and surface analysis and for repair of the bad sectors found
during verification if the drive or the driver supports bad block
management.
.sp
.LP
After formatting,
.B rmformat
writes the label, which covers the full
capacity of the media as one slice on floppy and
.B PCMCIA
memory cards
to maintain compatibility with the behavior of
.BR fdformat .
The partition
information can be changed with the help of other options provided by
.BR rmformat .
.SH OPTIONS
.sp
.LP
The following options are supported:
.sp
.ne 2
.mk
.na
.B -b
.I label
.ad
.sp .6
.RS 4n
Labels the media with a SUNOS label. A SUNOS volume label name is
restricted to 8 characters. For media size greater than 1 TB, an EFI label
is created. For writing a
.B DOS
Volume label, the user should use
.BR mkfs_pcfs (1M).
.RE

.sp
.ne 2
.mk
.na
.B -c
.I blockno
.ad
.sp .6
.RS 4n
Corrects and repairs the given block. This correct and repair option may
not be applicable to all devices supported by
.BR rmformat ,
as some
devices may have a drive with bad block management capability and others may
have this option implemented in the driver. If the drive or driver supports
bad block management, a best effort is made to rectify the bad block. If the
bad block still cannot be rectified, a message is displayed to indicate the
failure to repair. The block number can be provided in decimal, octal, or
hexadecimal format.
.sp
The normal floppy and
.B PCMCIA
memory and ata cards do not support bad
block management.
.RE

.sp
.ne 2
.mk
.na
.B -D
.ad
.sp .6
.RS 4n
Formats a 720KB (3.5 inch) double density diskette. This is the default for
double density type drives. This option is needed if the drive is a high or
extended-density type.
.RE

.sp
.ne 2
.mk
.na
.B -e
.ad
.sp .6
.RS 4n
Ejects the media upon completion. This feature may not be available if the
drive does not support motorized eject.
.RE

.sp
.ne 2
.mk
.na
.B -F
quick | long | force\fR
.ad
.sp .6
.RS 4n
Formats the media.
.sp
The
.B quick
option starts a format without certification or format with
limited certification of certain tracks on the media.
.sp
The
.B long
option starts a complete format. For some devices this might
include the certification of the whole media by the drive itself.
.sp
The
.B force
option to format is provided to start a long format without
user confirmation before the format is started.
.sp
In legacy media such as floppy drives, all options start a long format
depending on the mode (Extended Density mode, High Density mode, or Double
Density mode) with which the floppy drive operates by default. On
.B PCMCIA
memory cards, all options start a long format.
.RE

.sp
.ne 2
.mk
.na
.B -H
.ad
.sp .6
.RS 4n
Formats a 1.44 MB (3.5 inch) high density diskette. This is the default for
high density type drives. It is needed if the drive is the Extended Density
type.
.RE

.sp
.ne 2
.mk
.na
.B -l
.ad
.sp .6
.RS 4n
Lists all removable devices. By default, without any options,
.B rmformat
also lists all removable devices. If the
.B dev_name
is
given,
.B rmformat
lists the device associated with the
.BR dev_name .
The output shows the device pathname, vendor information, and the device
type.
.RE

.sp
.ne 2
.mk
.na
.B -s
.I filename
.ad
.sp .6
.RS 4n
Enables the user to lay out the partition information in the SUNOS label.
.sp
The user should provide a file as input with information about each slice
in a format providing byte offset, size required, tags, and flags, as
follows:
.sp
.in +2
.nf
slices: \fIn\fR = \fIoffset\fR, \fIsize\fR [, \fIflags\fR, \fItags\fR]
.fi
.in -2
.sp

where
.I n
is the slice number,
.I offset
is the byte offset at which
the slice
.I n
starts, and
.I size
is the required size for slice
.IR n .
Both \fIoffset\fR and \fIsize\fR must be a multiple of 512 bytes.
These numbers can be represented as decimal, hexadecimal, or octal numbers.
No floating point numbers are accepted. Details about maximum number of
slices can be obtained from the \fISystem Administration Guide: Basic
Administration\fR.
.sp
To specify the
.I size
or
.I offset
in kilobytes, megabytes, or
gigabytes, add
.BR KB ,
.BR MB ,
.BR GB ,
respectively. A number without
a suffix is assumed to be a byte offset. The flags are represented as
follows:
.sp
.in +2
.nf
\fBwm\fR = read-write, mountable
\fBwu\fR = read-write, unmountable
\fBru\fR = read-only, unmountable
.fi
.in -2
.sp

The tags are represented as follows:
.BR unassigned ,
.BR boot ,
.BR root ,
.BR swap ,
.BR usr ,
.BR backup ,
.BR stand ,
.BR var ,
.BR home ,
.BR alternates .
.sp
The tags and flags can be omitted from the four tuple when finer control on
those values is not required. It is required to omit both or include both.
If the tags and flags are omitted from the four tuple for a particular
slice, a default value for each is assumed. The default value for flags is
.B wm
and for tags is
.BR unassigned .
.sp
Either full tag names can be provided or an abbreviation for the tags can
be used. The abbreviations can be the first two or more letters from the
standard tag names.
.B rmformat
is case insensitive in handling the
defined tags & flags.
.sp
Slice specifications are separated by :
.sp
For example:
.sp
.in +2
.nf
slices: 0 = 0, 30MB, "wm", "home" :
        1 = 30MB, 51MB :
        2 = 0, 100MB, "wm", "backup" :
        6 = 81MB, 19MB
.fi
.in -2
.sp

.B rmformat
does the necessary checking to detect any overlapping
partitions or illegal requests to addresses beyond the capacity of the media
under consideration. There can be only one slice information entry for each
slice
.IR n .
If multiple slice information entries for the same slice
.I n
are provided, an appropriate error message is displayed. The slice
.B 2
is the backup slice covering the whole disk capacity. The pound sign
character,
.BR # ,
can be used to describe a line of comments in the input
file. If the line starts with
.BR # ,
then
.B rmformat
ignores all the
characters following
.B #
until the end of the line.
.sp
Partitioning some of the media with very small capacity is permitted, but
be cautious in using this option on such devices.
.RE

.sp
.ne 2
.mk
.na
.B -U
.ad
.sp .6
.RS 4n
Performs
.B umount
on any file systems and then formats. See
.BR mount (1M).
This option unmounts all the mounted slices and issues a
long format on the device requested.
.RE

.sp
.ne 2
.mk
.na
.B -V
read | write\fR
.ad
.sp .6
.RS 4n
Verifies each block of media after format. The write verification is a
destructive mechanism. The user is queried for confirmation before the
verification is started. The output of this option is a list of block
numbers, which are identified as bad.
.sp
The read verification only verifies the blocks and report the blocks which
are prone to errors.
.sp
The list of block numbers displayed can be used with the
.B -c
option
for repairing.
.RE

.SH OPERANDS
.sp
.LP
The following operand is supported:
.sp
.ne 2
.mk
.na
.I devname
.ad
.sp .6
.RS 4n
.I devname
can be provided as absolute device pathname or relative
pathname for the device from the current working directory or the nickname,
such as
.B cdrom
or
.BR rmdisk .
.sp
For floppy devices, to access the first drive use \fB/dev/rdiskette0\fR
(for systems without volume management) or
.B floppy0
(for systems with
volume management). Specify
.B /dev/rdiskette1
(for systems without
volume management) or
.B floppy1
(for systems with volume management) to
use the second drive.
.sp
For systems without volume management running, the user can also provide
the absolute device pathname as
\fB/dev/rdsk/c\fI?\fRt\fI?\fRd\fI?\fRs\fI?\fR or the appropriate relative
device pathname from the current working directory.
.RE

.SH EXAMPLES
.LP
.B Example 1
Formatting a Diskette
.sp
.in +2
.nf
example$ \fBrmformat -F quick /dev/rdiskette\fR
Formatting will erase all the data on disk.
Do you want to continue? (y/n)\fBy\fR
.fi
.in -2
.sp

.LP
.B Example 2
Formatting a Diskette for a UFS File System
.sp
.LP
The following example formats a diskette and creates a UFS file system:

.sp
.in +2
.nf
example$ \fBrmformat -F quick /dev/aliases/floppy0\fR
Formatting will erase all the data on disk.
Do you want to continue? (y/n)\fBy\fR
example$ \fBsu\fR
# \fB/usr/sbin/newfs /dev/aliases/floppy0\fR
newfs: construct a new file system /dev/rdiskette: (y/n)? \fBy\fR
/dev/rdiskette: 2880 sectors in 80 cylinders of 2 tracks, 18 sectors
         1.4MB in 5 cyl groups (16 c/g, 0.28MB/g, 128 i/g)
 super-block backups (for fsck -F ufs -o b=#) at:
  32, 640, 1184, 1792, 2336,
#
.fi
.in -2
.sp

.LP
.B Example 3
Formatting Removable Media for a PCFS File System
.sp
.LP
The following example shows how to create an alternate \fBfdisk\fR
partition:

.sp
.in +2
.nf
example$ \fBrmformat -F quick /dev/rdsk/c0t4d0s2:c\fR
Formatting will erase all the data on disk.
Do you want to continue? (y/n)\fBy\fR
example$ \fBsu\fR
# \fBfdisk /dev/rdsk/c0t4d0s2:c\fR
# \fBmkfs -F pcfs /dev/rdsk/c0t4d0s2:c\fR
Construct a new FAT file system on /dev/rdsk/c0t4d0s2:c: (y/n)? \fBy\fR
#
.fi
.in -2
.sp

.sp
.LP
The following example describes how to create a
.B PCFS
file system
.B without
an
.B fdisk
partition:

.sp
.in +2
.nf
example$ \fBrmformat -F quick /dev/rdiskette\fR
Formatting will erase all the data on disk.
Do you want to continue? (y/n)\fBy\fR
example$ \fBsu\fR
# \fBmkfs -F pcfs -o nofdisk,size=2 /dev/rdiskette\fR
Construct a new FAT file system on /dev/rdiskette: (y/n)? \fBy\fR
#
.fi
.in -2
.sp

.LP
.B Example 4
Listing All Removable Devices
.sp
.LP
The following example shows how to list removable devices. This output
shows a long listing of such devices.

.sp
.in +2
.nf
example$ rmformat -l
Looking for devices...
Logical Node: /dev/rdsk/c5t0d0s2
Physical Node: /pci@1e,600000/usb@b/hub@2/storage@4/disk@0,0
Connected Device: TEAC    FD-05PUB         1026
Device Type: Floppy drive
Bus: USB
Size: 1.4 MB
Label: floppy
Access permissions: Medium is not write protected.
.fi
.in -2
.sp

.SH FILES
.sp
.ne 2
.mk
.na
.B /dev/diskette0
.ad
.sp .6
.RS 4n
Directory providing block device access for the media in floppy drive 0.
.RE

.sp
.ne 2
.mk
.na
.B /dev/rdiskette0
.ad
.sp .6
.RS 4n
Directory providing character device access for the media in floppy drive
0.
.RE

.sp
.ne 2
.mk
.na
.B /dev/aliases
.ad
.sp .6
.RS 4n
Directory providing symbolic links to the character devices for the
different media under the control of volume management using appropriate
alias.
.RE

.sp
.ne 2
.mk
.na
.B /dev/aliases/floppy0
.ad
.sp .6
.RS 4n
Symbolic link to the character device for the media in floppy drive 0.
.RE

.sp
.ne 2
.mk
.na
.B /dev/rdiskette
.ad
.sp .6
.RS 4n
Symbolic link providing character device access for the media in the
primary floppy drive, usually drive 0.
.RE

.sp
.ne 2
.mk
.na
.B /dev/dsk
.ad
.sp .6
.RS 4n
Directory providing block device access for the
.B PCMCIA
memory and ata
cards and removable media devices.
.RE

.sp
.ne 2
.mk
.na
.B /dev/rdsk
.ad
.sp .6
.RS 4n
Directory providing character device access for the
.B PCMCIA
memory and
ata cards and removable media devices.
.RE

.sp
.ne 2
.mk
.na
.B /dev/aliases/pcmemS
.ad
.sp .6
.RS 4n
Symbolic link to the character device for the
.B PCMCIA
memory card in
socket S, where S represents a
.B PCMCIA
socket number.
.RE

.sp
.ne 2
.mk
.na
.B /dev/aliases/rmdisk0
.ad
.sp .6
.RS 4n
Symbolic link to the generic removable media device that is not a
.BR CD-ROM ,
floppy,
.BR DVD-ROM ,
.B PCMCIA
memory card, and so
forth.
.RE

.sp
.ne 2
.mk
.na
.B /dev/rdsk
.ad
.sp .6
.RS 4n
Directory providing character device access for the
.B PCMCIA
memory and
ata cards and other removable devices.
.RE

.sp
.ne 2
.mk
.na
.B /dev/dsk
.ad
.sp .6
.RS 4n
Directory providing block device access for the
.B PCMCIA
memory and ata
cards and other removable media devices.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWrmvolmgr
.TE

.SH SEE ALSO
.sp
.LP
.BR cpio (1),
.BR eject (1),
.BR fdformat (1),
.BR tar (1),
.BR volcheck (1),
.BR volrmmount (1),
.BR format (1M),
.BR mkfs_pcfs (1M),
.BR mount (1M),
.BR newfs (1M),
.BR prtvtoc (1M),
.BR rmmount (1M),
.BR rpc.smserverd (1M),
.BR attributes (5),
.BR scsa2usb (7D),
.BR sd (7D),
.BR pcfs (7FS),
.BR udfs (7FS)
.sp
.LP
.I System Administration Guide: Basic Administration
.SH NOTES
.sp
.LP
A rewritable media or
.B PCMCIA
memory card or
.B PCMCIA
ata card
containing a
.B ufs
file system created on a SPARC-based system (using
.BR newfs (1M))
is not identical to a rewritable media or
.BR PCMCIA
memory card containing a
.B ufs
file system created on an x86 based
system. Do not interchange any removable media containing
.B ufs
between
these platforms; use
.BR cpio (1)
or
.BR tar (1)
to transfer files on
diskettes or memory cards between them. For interchangeable filesystems
refer to \fBpcfs\fR(7FS) and \fBudfs\fR(7FS).
.sp
.LP
.B rmformat
might not list all removable devices in virtualization
environments.
.SH BUGS
.sp
.LP
Currently, bad sector mapping is not supported on floppy diskettes or
.B PCMCIA
memory cards. Therefore, a diskette or memory card is unusable
if
.B rmformat
finds an error
.RB ( "bad sector" ).
