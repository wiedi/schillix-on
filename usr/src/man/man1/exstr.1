'\" te
.\" Copyright 1989 AT&T  Copyright (c) 1990, Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH exstr 1 "5 Jul 1990" "SunOS 5.11" "User Commands"
.SH NAME
exstr \- extract strings from source files
.SH SYNOPSIS
.LP
.nf
\fBexstr\fR \fIfilename\fR...
.fi

.LP
.nf
\fBexstr\fR \fB-e\fR \fIfilename\fR...
.fi

.LP
.nf
\fBexstr\fR \fB-r\fR [\fB-d\fR] \fIfilename\fR...
.fi

.SH DESCRIPTION
.sp
.LP
The
.B exstr
utility is used to extract strings from C-language source
files and replace them by calls to the message retrieval function (see
.BR gettxt (3C)).
This utility will extract all character strings
surrounded by double quotes, not just strings used as arguments to the
\fBprintf\fR command or the \fBprintf\fR routine. In the first form,
\fBexstr\fR finds all strings in the source files and writes them on the
standard output. Each string is preceded by the source file name and a colon
(\fB:\fR).
.sp
.LP
The first step is to use
.B "exstr -e"
to extract a list of strings
and save it in a file. Next, examine this list and determine which strings
can be translated and subsequently retrieved by the message retrieval
function. Then, modify this file by deleting lines that can't be translated
and, for lines that can be translated, by adding the message file names and
the message numbers as the fourth (\fImsgfile\fR) and fifth (\fImsgnum\fR)
entries on a line. The message files named must have been created by
.BR mkmsgs (1)
and exist in
.BR /usr/lib/locale/locale/LC_MESSAGES .
(The directory
.B locale
corresponds to the language in which the
text strings are written; see
.BR setlocale (3C)).
The message numbers used
must correspond to the sequence numbers of strings in the message files.
.sp
.LP
Now use this modified file as input to
.B "exstr -r"
to produce a
new version of the original C-language source file in which the strings have
been replaced by calls to the message retrieval function
.BR gettxt ().
The
\fImsgfile\fR and \fImsgnum\fR fields are used to construct the first
argument to
.BR gettxt ().
The second argument to
.BR gettxt ()
is printed
if the message retrieval fails at run-time. This argument is the null
string, unless the
.B -d
option is used.
.sp
.LP
This utility cannot replace strings in all instances. For example, a static
initialized character string cannot be replaced by a function call. A second
example is that a string could be in a form of an escape sequence which
could not be translated. In order not to break existing code, the files
created by invoking
.B "exstr -e"
must be examined and lines
containing strings not replaceable by function calls must be deleted. In
some cases the code may require modifications so that strings can be
extracted and replaced by calls to the message retrieval function.
.SH OPTIONS
.sp
.LP
The following options are supported:
.sp
.ne 2
.mk
.na
.B -e
.ad
.RS 7n
.rt
Extract a list of strings from the named C-language source files, with
positional information. This list is produced on standard output in the
following format:
.sp
.ne 2
.mk
.na
\fIfile:line:position:msgfile:msgnum:string\fR
.ad
.sp .6
.RS 4n

.RE

.sp
.ne 2
.mk
.na
\fIfile\fR
.ad
.sp .6
.RS 4n
the name of a C-language source file
.RE

.sp
.ne 2
.mk
.na
.I line
.ad
.sp .6
.RS 4n
line number in the file
.RE

.sp
.ne 2
.mk
.na
.I position
.ad
.sp .6
.RS 4n
character position in the line
.RE

.sp
.ne 2
.mk
.na
\fImsgfile\fR
.ad
.sp .6
.RS 4n
null
.RE

.sp
.ne 2
.mk
.na
.I msgnum
.ad
.sp .6
.RS 4n
null
.RE

.sp
.ne 2
.mk
.na
.I string
.ad
.sp .6
.RS 4n
the extracted text string
.RE

Normally you would redirect this output into a file. Then you would edit
this file to add the values you want to use for \fImsgfile\fR and
.IR msgnum :
.sp
.ne 2
.mk
.na
\fImsgfile\fR
.ad
.RS 12n
.rt
the file that contains the text strings that will replace
.IR string .
A
file with this name must be created and installed in the appropriate place
by the
.BR mkmsgs (1)
utility.
.RE

.sp
.ne 2
.mk
.na
.I msgnum
.ad
.RS 12n
.rt
the sequence number of the string in
.IR msgfile .
.RE

The next step is to use
.B "exstr -r"
to replace
.IR string "s in"
.BR file .
.RE

.sp
.ne 2
.mk
.na
.B -r
.ad
.RS 7n
.rt
Replace strings in a C-language source file with function calls to the
message retrieval function
.BR gettxt ().
.RE

.sp
.ne 2
.mk
.na
.B -d
.ad
.RS 7n
.rt
This option is used together with the
.B -r
option. If the message
retrieval fails when
.BR gettxt ()
is invoked at run-time, then the
extracted string is printed. You would use the capability provided by
\fBexstr\fR on an application program that needs to run in an international
.RB "environment and have messages print in more than one language." " exstr"
replaces text strings with function calls that point at strings in a message
data base. The data base used depends on the run-time value of the
\fBLC_MESSAGES\fR environment variable (see
.BR environ (5)).
.RE

.SH EXAMPLES
.LP
\fBExample 1\fR The following examples show uses of exstr
.sp
.LP
Assume that the file
.B example.c
contains two strings:

.sp
.in +2
.nf
main()

{

        printf("This is an example\en");

        printf("Hello world!\en");

}\fR
.fi
.in -2

.sp
.LP
The
.B exstr
utility, invoked with the argument
.B example.c
extracts
strings from the named file and prints them on the standard output.

.sp
.in +2
.nf
example% \fBexstr example.c\fR
.fi
.in -2
.sp

.sp
.LP
produces the following output:

.sp
.in +2
.nf
example.c:This is an example\en
example.c:Hello world!\en
.fi
.in -2
.sp

.sp
.LP
The
.B exstr
utility, invoked with the
.B -e
option and the argument
.BR example.c ,
and redirecting output to the file
.B example.stringsout

.sp
.in +2
.nf
example% \fBexstr -e example.c > example.stringsout\fR
.fi
.in -2
.sp

.sp
.LP
produces the following output in the file
.BR example.stringsout

.sp
.in +2
.nf
example.c:3:8:::This is an example\en
example.c:4:8:::Hello world!\en
.fi
.in -2
.sp

.sp
.LP
You must edit
.B example.stringsout
to add the values you want to use
for the \fImsgfile\fR and \fImsgnum\fR fields before these strings can be
replaced by calls to the retrieval function. If
.B UX
is the name of the
message file, and the numbers
.B 1
and
.B 2
represent the sequence
number of the strings in the file, here is what \fBexample.stringsout\fR
looks like after you add this information:

.sp
.in +2
.nf
example.c:3:8:UX:1:This is an example\en
example.c:4:8:UX:2:Hello world!\en
.fi
.in -2
.sp

.sp
.LP
The
.B exstr
utility can now be invoked with the
.B -r
option to
replace the strings in the source file by calls to the message retrieval
function
.BR gettxt() .

.sp
.in +2
.nf
example% \fBexstr -r example.c <example.stringsout >intlexample.c\fR
.fi
.in -2
.sp

.sp
.LP
produces the following output:

.sp
.in +2
.nf
\fBextern char *gettxt();

main()

{

	printf(gettxt("UX:1", ""));

	printf(gettxt("UX:2", ""));

}\fR
.fi
.in -2
.sp

.sp
.LP
The following example:

.sp
.in +2
.nf
example% \fBexstr -rd example.c <example.stringsout >intlexample.c\fR
.fi
.in -2
.sp

.sp
.LP
uses the extracted strings as a second argument to
.BR gettxt() :

.sp
.in +2
.nf
extern char *gettxt();

main()

{

        printf(gettxt("UX:1", "This is an example\en"));

        printf(gettxt("UX:2", "Hello world!\en"));

}\fR
.fi
.in -2
.sp

.SH FILES
.sp
.ne 2
.mk
.na
\fB/usr/lib/locale/\fIlocale\fB/LC_MESSAGES/*\fR
.ad
.sp .6
.RS 4n
files created by
.BR mkmsgs (1)
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWtoo
.TE

.SH SEE ALSO
.sp
.LP
.BR gettxt (1),
.BR mkmsgs (1),
.BR printf (1),
.BR srchtxt (1),
.BR gettxt (3C),
.BR printf (3C),
.BR setlocale (3C),
.BR attributes (5),
.BR environ (5)
.SH DIAGNOSTICS
.sp
.LP
The error messages produced by
.B exstr
are intended to be
self-explanatory. They indicate errors in the command line or format errors
encountered within the input file.
