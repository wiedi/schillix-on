'\" te
.\" Copyright 1989 AT&T
.\" Copyright (c) 2007, Sun Microsystems, Inc. All Rights Reserved
.\" Portions Copyright (c) 1982-2007 AT&T Knowledge Ventures
.\" Portions Copyright (c) 1992, X/Open Company Limited All Rights Reserved
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH history 1 "2 Nov 2007" "SunOS 5.11" "User Commands"
.SH NAME
history, fc, hist \- process command history list
.SH SYNOPSIS
.LP
.nf
\fB/usr/bin/fc\fR [\fB-r\fR] [\fB-e\fR \fIeditor\fR] [\fIfirst\fR [\fIlast\fR]]
.fi

.LP
.nf
\fB/usr/bin/fc\fR \fB-l\fR [\fB-nr\fR] [\fIfirst\fR [\fIlast\fR]]
.fi

.LP
.nf
\fB/usr/bin/fc\fR \fB-s\fR [\fIold\fR=\fInew\fR] [\fIfirst\fR]
.fi

.SS "csh"
.LP
.nf
\fBhistory\fR [\fB-hr\fR] [\fIn\fR]
.fi

.SS "ksh"
.LP
.nf
\fBfc\fR \fB-e\fR \fB-\fR [\fIold\fR=\fInew\fR] [\fIcommand\fR]
.fi

.LP
.nf
\fBfc\fR \fB-s\fR [\fIold\fR = \fInew\fR] [\fIcommand\fR]
.fi

.LP
.nf
\fBfc\fR [\fB-e\fR \fIename\fR] [\fB-nlr\fR] [\fIfirst\fR [\fIlast\fR]]
.fi

.SS "ksh93"
.LP
.nf
\fBhist\fR [\fB-lnprs\fR] [\fB-e\fR \fIeditor\fR][\fB-N\fR \fInum\fR][\fIfirst\fR[\fIlast\fR]]
.fi

.SH DESCRIPTION
.SS "/usr/bin/fc"
.sp
.LP
The \fBfc\fR utility lists or edits and reexecutes, commands previously entered
to an interactive
.BR sh .
.sp
.LP
The command history list references commands by number. The first number in the
list is selected arbitrarily. The relationship of a number to its command does
not change except when the user logs in and no other process is accessing the
list, at which time the system can reset the numbering to start the oldest
retained command at another number (usually 1). When the number reaches the value
in
.B HISTSIZE
or
.B 32767
(whichever is greater), the shell can wrap the
numbers, starting the next command with a lower number (usually 1). However,
despite this optional wrapping of numbers, \fBfc\fR maintains the time-ordering
sequence of the commands. For example, if four commands in sequence are given the
numbers 32 766, 32 767, 1 (wrapped), and 2 as they are executed, command 32 767
is considered the command previous to 1, even though its number is higher.
.sp
.LP
When commands are edited (when the
.B -l
option is not specified), the
resulting lines is entered at the end of the history list and then reexecuted by
.BR sh .
The \fBfc\fR command that caused the editing is not entered into the
history list. If the editor returns a non-zero exit status, this suppresses the
entry into the history list and the command reexecution. Any command-line
variable assignments or redirection operators used with \fBfc\fR affects both the
\fBfc\fR command itself as well as the command that results, for example:
.sp
.in +2
.nf
\fBfc -s -- -1 2>/dev/null\fR
.fi
.in -2
.sp

.sp
.LP
reinvokes the previous command, suppressing standard error for both \fBfc\fR and
the previous command.
.SS "csh"
.sp
.LP
Display the history list. If
.I n
is given, display only the
.I n
most
recent events.
.sp
.ne 2
.mk
.na
.B -r
.ad
.RS 6n
.rt
Reverse the order of printout to be most recent first rather than oldest
first.
.RE

.sp
.ne 2
.mk
.na
.B -h
.ad
.RS 6n
.rt
Display the history list without leading numbers. This is used to produce files
suitable for sourcing using the
.B -h
option to the
.B csh
built-in
command, \fBsource\fR(1).
.RE

.SS "History Substitution:"
.sp
.LP
History substitution allows you to use words from previous command lines in the
command line you are typing. This simplifies spelling corrections and the
repetition of complicated commands or arguments. Command lines are saved in the
history list, the size of which is controlled by the
.B history
variable. The
\fBhistory\fR shell variable can be set to the maximum number of command lines
that is saved in the history file, that is:
.sp
.in +2
.nf
set history = 200
.fi
.in -2

.sp
.LP
allows the history list to keep track of the most recent 200 command lines. If
not set, the C shell saves only the most recent command.
.sp
.LP
A history substitution begins with a
.B !
(although you can change this with
the
.B histchars
variable) and can occur anywhere on the command line; history
substitutions do not nest. The
.B !
can be escaped with \fB\e\fR to suppress
its special meaning.
.sp
.LP
Input lines containing history substitutions are echoed on the terminal after
being expanded, but before any other substitutions take place or the command gets
executed.
.SS "Event Designators:"
.sp
.LP
An event designator is a reference to a command line entry in the history
list.
.sp
.ne 2
.mk
.na
.B !
.ad
.sp .6
.RS 4n
Start a history substitution, except when followed by a space character, tab,
newline,
.B =
or
.BR ( .
.RE

.sp
.ne 2
.mk
.na
.B !!
.ad
.sp .6
.RS 4n
Refer to the previous command. By itself, this substitution repeats the previous
command.
.RE

.sp
.ne 2
.mk
.na
\fB!\fIn\fR
.ad
.sp .6
.RS 4n
Refer to command line
.IR n .
.RE

.sp
.ne 2
.mk
.na
\fB!\fB-n\fR
.ad
.sp .6
.RS 4n
Refer to the current command line minus
.IR n .
.RE

.sp
.ne 2
.mk
.na
\fB!\fIstr\fR
.ad
.sp .6
.RS 4n
Refer to the most recent command starting with
.IR str .
.RE

.sp
.ne 2
.mk
.na
\fB!?\fIstr\fB?\fR
.ad
.sp .6
.RS 4n
Refer to the most recent command containing
.IR str .
.RE

.sp
.ne 2
.mk
.na
\fB!?\fIstr\fB?\fR \fIadditional\fR
.ad
.sp .6
.RS 4n
Refer to the most recent command containing
.I str
and append
\fIadditional\fR to that referenced command.
.RE

.sp
.ne 2
.mk
.na
\fB!{\fBcommand\fB}\fR \fIadditional\fR
.ad
.sp .6
.RS 4n
Refer to the most recent command beginning with
.B command
and append
\fIadditional\fR to that referenced command.
.RE

.sp
.ne 2
.mk
.na
\fB^\fIprevious_word\fB^\fIreplacement\fB^\fR
.ad
.sp .6
.RS 4n
Repeat the previous command line replacing the string
.I previous_word
with
the string
.IR replacement .
This is equivalent to the history substitution:
.sp
Repeat the previous command line replacing the string
.I previous_word
with
the string
.IR replacement .
This is equivalent to the history substitution:
.sp
.in +2
.nf
\fB!:s/\fIprevious_word\fB/\fIreplacement\fB/\fR.
.fi
.in -2

To re-execute a specific previous command
.B and
make such a substitution,
say, re-executing command #6:
.sp
.in +2
.nf
\fB!:6s/\fIprevious_word\fB/\fIreplacement\fB/\fR.
.fi
.in -2

.RE

.SS "Word Designators:"
.sp
.LP
A `\fB:\fR' (colon) separates the event specification from the word designator.
2It can be omitted if the word designator begins with a
.BR ^ ,
.BR $ ,
.BR * ,
\fB\(mi\fR or
.BR % .
If the word is to be selected from the previous
command, the second
.B !
character can be omitted from the event
specification. For instance,
.B !!:1
and
.B !:1
both refer to the first
word of the previous command, while
.B !!$
and
.B !$
both refer to the last
word in the previous command. Word designators include:
.sp
.ne 2
.mk
.na
.B #
.ad
.RS 10n
.rt
The entire command line typed so far.
.RE

.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 10n
.rt
The first input word (command).
.RE

.sp
.ne 2
.mk
.na
.I n
.ad
.RS 10n
.rt
The
.IR n "'th argument."
.RE

.sp
.ne 2
.mk
.na
.B ^
.ad
.RS 10n
.rt
The first argument, that is, \fB1\fR.
.RE

.sp
.ne 2
.mk
.na
.B $
.ad
.RS 10n
.rt
The last argument.
.RE

.sp
.ne 2
.mk
.na
.B %
.ad
.RS 10n
.rt
The word matched by (the most recent) \fB?\fIs\fR search.
.RE

.sp
.ne 2
.mk
.na
\fIx\fB\(mi\fIy\fR
.ad
.RS 10n
.rt
A range of words; \fB\(mi\fIy\fR abbreviates \fB0\(mi\fIy\fR.
.RE

.sp
.ne 2
.mk
.na
.B *
.ad
.RS 10n
.rt
All the arguments, or a null value if there is just one word in the event.
.RE

.sp
.ne 2
.mk
.na
\fIx\fB*\fR
.ad
.RS 10n
.rt
Abbreviates \fIx\fB\(mi$\fI\&.\fR
.RE

.sp
.ne 2
.mk
.na
\fIx\fB\(mi\fR
.ad
.RS 10n
.rt
Like \fIx\fB*\fR but omitting word \fB$\fR.
.RE

.SS "Modifiers:"
.sp
.LP
After the optional word designator, you can add a sequence of one or more of the
following modifiers, each preceded by a \fB:\fR.
.sp
.ne 2
.mk
.na
.B h
.ad
.RS 28n
.rt
Remove a trailing pathname component, leaving the head.
.RE

.sp
.ne 2
.mk
.na
.B r
.ad
.RS 28n
.rt
Remove a trailing suffix of the form `\fB\&.\fIxxx\fR', leaving the
basename.
.RE

.sp
.ne 2
.mk
.na
.B e
.ad
.RS 28n
.rt
Remove all but the suffix, leaving the extension.
.RE

.sp
.ne 2
.mk
.na
\fBs/\fIoldchars\fB/\fIreplacements\fB/\fR
.ad
.RS 28n
.rt
Substitute
.I replacements
for
.IR oldchars .
\fIoldchars\fR is a string
that can contain embedded blank spaces, whereas
.I previous_word
in the event
designator can not.
.sp
.in +2
.nf
\fB^\fIoldchars\fB^\fIreplacements\fB^\fR
.fi
.in -2

.RE

.sp
.ne 2
.mk
.na
.B t
.ad
.RS 28n
.rt
Remove all leading pathname components, leaving the tail.
.RE

.sp
.ne 2
.mk
.na
.B &
.ad
.RS 28n
.rt
Repeat the previous substitution.
.RE

.sp
.ne 2
.mk
.na
.B g
.ad
.RS 28n
.rt
Apply the change to the first occurrence of a match in each word, by prefixing
the above (for example, \fBg&\fR).
.RE

.sp
.ne 2
.mk
.na
.B p
.ad
.RS 28n
.rt
Print the new command but do not execute it.
.RE

.sp
.ne 2
.mk
.na
.B q
.ad
.RS 28n
.rt
Quote the substituted words, escaping further substitutions.
.RE

.sp
.ne 2
.mk
.na
.B x
.ad
.RS 28n
.rt
Like
.BR q ,
but break into words at each space character, tab or newline.
.RE

.sp
.LP
Unless preceded by a
.BR g ,
the modification is applied only to the first
string that matches
.IR oldchars .
An error results if no string matches.
.sp
.LP
The left-hand side of substitutions are not regular expressions, but character
strings. Any character can be used as the delimiter in place of
.BR / .
A
backslash quotes the delimiter character. The character
.BR & ,
in the right
hand side, is replaced by the text from the left-hand-side. The
.B &
can be
quoted with a backslash. A null
.I oldchars
uses the previous string either
from a
.I oldchars
or from a contextual scan string
.I s
from
\fB!?\fIs\fR. You can omit the rightmost delimiter if a newline immediately
follows
.IR replacements ;
the rightmost
.B ?
in a context scan can similarly
be omitted.
.sp
.LP
Without an event specification, a history reference refers either to the
previous command, or to a previous history reference on the command line (if
any).
.SS "ksh"
.sp
.LP
Using
.BR fc ,
in the form of
.sp
.in +2
.nf
\fBfc -e \(mi [\fIold\fR=\fInew\fR] [\fIcommand\fR],\fR
.fi
.in -2
.sp

.sp
.LP
or
.sp
.in +2
.nf
\fBfc -s [\fIold\fR=\fInew\fR] [\fIcommand\fR],\fR
.fi
.in -2
.sp

.sp
.LP
the
.I command
is re-executed after the substitution
\fIold\fB=\fInew\fR is performed. If there is not a \fIcommand\fR argument,
the most recent command typed at this terminal is executed.
.sp
.LP
Using \fBfc\fR in the form of
.sp
.in +2
.nf
\fBfc [-e \fIename\fR] [-nlr ] [\fIfirst\fR [\fIlast\fR]],\fR
.fi
.in -2
.sp

.sp
.LP
a range of commands from \fIfirst\fR to \fIlast\fR is selected from the last
\fBHISTSIZE\fR commands that were typed at the terminal. The arguments
\fIfirst\fR and \fIlast\fR can be specified as a number or as a string. A string
is used to locate the most recent command starting with the given string. A
negative number is used as an offset to the current command number. If the
\fB-l\fR flag is selected, the commands are listed on standard output. Otherwise,
the editor program
.B -e
\fIname\fR is invoked on a file containing these
keyboard commands. If
.I ename
is not supplied, then the value of the variable
\fBFCEDIT\fR (default
.BR /bin/ed )
is used as the editor. When editing is
complete, the edited command(s) is executed. If
.B last
is not specified, it
is set to
.IR first .
If \fIfirst\fR is not specified, the default is the
previous command for editing and \(mi16 for listing. The flag
.B -r
reverses
the order of the commands and the flag
.B -n
suppresses command numbers when
listing. (See
.BR ksh (1)
for more about command line editing.)
.sp
.ne 2
.mk
.na
.B HISTFILE
.ad
.RS 12n
.rt
If this variable is set when the shell is invoked, then the value is the
pathname of the file that is used to store the command history.
.RE

.sp
.ne 2
.mk
.na
.B HISTSIZE
.ad
.RS 12n
.rt
If this variable is set when the shell is invoked, then the number of previously
entered commands that are accessible by this shell is greater than or equal to
this number. The default is \fB128\fR.
.RE

.SS "Command Re-entry:"
.sp
.LP
The text of the last
.B HISTSIZE
(default 128) commands entered from a
terminal device is saved in a
.B history
file. The file
\fB$HOME/.sh_history\fR is used if the \fBHISTFILE\fR variable is not set or if
the file it names is not writable. A shell can access the commands of all
\fIinteractive\fR shells which use the same named
.BR HISTFILE .
The special
command \fBfc\fR is used to list or edit a portion of this file. The portion of
the file to be edited or listed can be selected by number or by giving the first
character or characters of the command. A single command or range of commands can
be specified. If you do not specify an editor program as an argument to \fBfc\fR
then the value of the variable
.B FCEDIT
is used. If
.B FCEDIT
is not
defined then
.B /bin/ed
is used. The edited command(s) is printed and
re-executed upon leaving the editor. The editor name \fB\(mi\fR is used to skip
the editing phase and to re-execute the command. In this case a substitution
parameter of the form \fIold\fB=\fInew\fR can be used to modify the command
before execution. For example, if
.B r
is aliased to
.B "'fc \-e \(mi '
then typing \fB`r bad=good\fR \fBc'\fR re-executes the most
recent command which starts with the letter
.BR c ,
replacing the first
occurrence of the string
.B bad
with the string
.BR good .
.sp
.LP
Using the \fBfc\fR built-in command within a compound command causes the whole
command to disappear from the history file.
.SS "ksh93"
.sp
.LP
\fBhist\fR lists, edits, or re-executes commands previously entered into the
current shell environment.
.sp
.LP
The command history list references commands by number. The first number in the
list is selected arbitrarily. The relationship of a number to its command does
not change during a login session. When the number reaches
.B 32767
the number
wraps around to
.B 1
but maintains the ordering.
.sp
.LP
When the
.B l
option is not specified, and commands are edited, the resulting
lines are entered at the end of the history list and then re-executed by the
current shell. The
.B hist
command that caused the editing is not entered into
the history list. If the editor returns a
.B non-zero
exit status, this
suppresses the entry into the history list and the command re-execution. Command
line variable assignments and redirections affect both the
.B hist
command and
the commands that are re-executed.
.sp
.LP
\fIfirst\fR and \fIlast\fR define the range of commands. Specify \fIfirst\fR and
\fIlast\fR as one of the following:
.sp
.ne 2
.mk
.na
.I number
.ad
.RS 11n
.rt
A positive number representing a command number. A
.B +
sign can precede
.IR number .
.RE

.sp
.ne 2
.mk
.na
\fB-\fInumber\fR
.ad
.RS 11n
.rt
A negative number representing a command that was executed
.I number
commands
previously. For example,
.B -1
is the previous command.
.RE

.sp
.ne 2
.mk
.na
.I string
.ad
.RS 11n
.rt
\fIstring\fR indicates the most recently entered command that begins with
.IR string .
\fIstring\fR should not contain an \fB=\fR.
.RE

.sp
.LP
If \fIfirst\fR is omitted, the previous command is used, unless
.B -l
is
specified, in which case it defaults to
.B -16
and last defaults to
.BR -1 .
.sp
.LP
If \fIfirst\fR is specified and \fIlast\fR is omitted, then \fIlast\fR defaults
to \fIfirst\fR unless \fB-l\fR is specified in which case it defaults to
.BR -1 .
.sp
.LP
If no editor is specified, then the editor specified by the \fBHISTEDIT\fR
variable is used if set, or the
.B FCEDIT
variable is used if set, otherwise,
\fBed\fR is used.
.SH OPTIONS
.sp
.LP
The following options are supported:
.sp
.ne 2
.mk
.na
\fB-e\fR \fIeditor\fR
.ad
.RS 13n
.rt
Uses the editor named by
.I editor
.RI "to edit the commands. The" " editor"
string is a utility name, subject to search via the
.B PATH
variable. The
value in the
.B FCEDIT
variable is used as a default when
.B -e
is not
specified. If
.B FCEDIT
is null or unset,
.B ed
is used as the editor.
.RE

.sp
.ne 2
.mk
.na
.B -l
.ad
.RS 13n
.rt
(The letter ell.) Lists the commands rather than invoking an editor on them. The
commands is written in the sequence indicated by the \fIfirst\fR and \fIlast\fR
operands, as affected by
.BR -r ,
with each command preceded by the command
number.
.RE

.sp
.ne 2
.mk
.na
.B -n
.ad
.RS 13n
.rt
Suppresses command numbers when listing with
.BR -l .
.RE

.sp
.ne 2
.mk
.na
.B \-r
.ad
.RS 13n
.rt
Reverses the order of the commands listed (with
.BR \-l )
or edited (with
neither
.B \-l
nor
.BR \-s ).
.RE

.sp
.ne 2
.mk
.na
.B -s
.ad
.RS 13n
.rt
Re-executes the command without invoking an editor.
.RE

.SS "ksh93"
.sp
.LP
\fBksh93\fR supports the following options:
.sp
.ne 2
.mk
.na
\fB-e\fR \fIeditor\fR
.ad
.RS 13n
.rt
Specify the editor to use to edit the history command. A value of
.B -
for
\fIeditor\fR is equivalent to specifying the \fB-s\fR option.
.RE

.sp
.ne 2
.mk
.na
.B -l
.ad
.RS 13n
.rt
List the commands rather than editing and re-executing them.
.RE

.sp
.ne 2
.mk
.na
\fB-N\fR \fInum\fR
.ad
.RS 13n
.rt
Start at
.I num
commands back.
.RE

.sp
.ne 2
.mk
.na
.B -n
.ad
.RS 13n
.rt
Suppress the command numbers when the commands are listed.
.RE

.sp
.ne 2
.mk
.na
.B -p
.ad
.RS 13n
.rt
Write the result of history expansion for each operand to standard output. All
other options are ignored.
.RE

.sp
.ne 2
.mk
.na
.B -r
.ad
.RS 13n
.rt
Reverse the order of the commands.
.RE

.sp
.ne 2
.mk
.na
.B -s
.ad
.RS 13n
.rt
Re-execute the command without invoking an editor. In this case an operand of
the form
.I old=new
can be specified to change the first occurrence of the
string
.I old
in the command to
.I new
before re-executing the command.
.RE

.SH OPERANDS
.sp
.LP
The following operands are supported:
.sp
.ne 2
.mk
.na
\fIfirst\fR
.ad
.br
.na
.I last
.ad
.RS 9n
.rt
Selects the commands to list or edit. The number of previous commands that can
be accessed is determined by the value of the
.B HISTSIZE
variable. The value
of \fIfirst\fR or \fIlast\fR or both is one of the following:
.sp
.ne 2
.mk
.na
\fB[\fB+\fR]\fInumber\fR
.ad
.RS 14n
.rt
A positive number representing a command number. Command numbers can be
displayed with the
.B -l
option.
.RE

.sp
.ne 2
.mk
.na
\fB\(mi\fInumber\fR
.ad
.RS 14n
.rt
A negative decimal number representing the command that was executed
\fInumber\fR of commands previously. For example, \fB\(mi1\fR is the immediately
previous command.
.RE

.sp
.ne 2
.mk
.na
.I string
.ad
.RS 14n
.rt
A string indicating the most recently entered command that begins with that
string. If the
.I old=new
operand is not also specified with
.BR -s ,
the
string form of the \fIfirst\fR operand cannot contain an embedded equal sign.
.sp
When the synopsis form with
.B -s
is used, if \fIfirst\fR is omitted, the
previous command is used.
.sp
For the synopsis forms without
.BR "-s :"
.RS +4
.TP
.ie t \(bu
.el o
If
.I last
is omitted,
.I last
defaults to the previous command when
\fB-l\fR is specified; otherwise, it defaults to \fIfirst\fR.
.RE
.RS +4
.TP
.ie t \(bu
.el o
If \fIfirst\fR and
.I last
are both omitted, the previous 16 commands is
listed or the previous single command is edited (based on the
.B -l
option).
.RE
.RS +4
.TP
.ie t \(bu
.el o
If \fIfirst\fR and \fIlast\fR are both present, all of the commands from
\fIfirst\fR to \fIlast\fR is edited (without \fB-l )\fR or listed (with
.BR -l ).
Editing multiple commands is accomplished by presenting to the editor
all of the commands at one time, each command starting on a new line. If
\fIfirst\fR represents a newer command than
.IR last ,
the commands is listed or
edited in reverse sequence, equivalent to using
.BR -r .
For example, the
following commands on the first line are equivalent to the corresponding commands
on the second:
.sp
.in +2
.nf
fc -r 10 20     fc    30 40
fc   20 10      fc -r 40 30
.fi
.in -2

.RE
.RS +4
.TP
.ie t \(bu
.el o
When a range of commands is used, it is not be an error to specify \fIfirst\fR
or
.I last
values that are not in the history list. \fBfc\fR substitutes the
value representing the oldest or newest command in the list, as appropriate. For
example, if there are only ten commands in the history list, numbered 1 to 10:
.sp
.in +2
.nf
fc -l
fc 1 99
.fi
.in -2

lists and edits, respectively, all ten commands.
.RE
.RE

.sp
.ne 2
.mk
.na
.I old=new
.ad
.RS 14n
.rt
Replace the first occurrence of string
.I old
in the commands to be
reexecuted by the string
.IR new .
.RE

.RE

.SH OUTPUT
.sp
.LP
When the
.B -l
option is used to list commands, the format of each command in
the list is as follows:
.sp
.in +2
.nf
\fB"%d\et%s\en", <\fIline number\fB>, <\fIcommand\fB>\fR
.fi
.in -2

.sp
.LP
If both the
.B -l
and
.B -n
options are specified, the format of each
command is:
.sp
.in +2
.nf
\fB"\et%s\en", <\fIcommand\fB>\fR
.fi
.in -2

.sp
.LP
If the \fIcommand\fIcommand\fR consists of more than one line, the lines
after the first are displayed as:
.sp
.in +2
.nf
\fB"\et%s\en", <\fIcontinued-command\fB>\fR
.fi
.in -2

.SH EXAMPLES
.LP
\fBExample 1\fR Using history and fc
.sp
.in +2
.nf
             csh                                     ksh

% history                               $ fc -l
  1   cd /etc                             1   cd /etc
  2   vi passwd                           2   vi passwd
  3   date                                3   date
  4   cd                                  4   cd
  5   du .                                5   du .
  6   ls -t                               6   ls -t
  7   history                             7   fc -l

% !d                                    $ fc -e - d
  du .                                    du .
  262   ./SCCS                            262   ./SCCS
  336   .                                 336   .

% !da                                   $ fc -e - da
  Thu Jul 21 17:29:56 PDT 1994            Thu Jul 21 17:29:56 PDT 1994

%                                       $ alias \e!='fc -e -'

% !!                                    $ !
  date                                    alias ='fc -e -'
  Thu Jul 21 17:29:56 PDT 1994
.fi
.in -2

.SH ENVIRONMENT VARIABLES
.sp
.LP
See
.BR environ (5)
for descriptions of the following environment variables
that affect the execution of \fBfc\fR:
.BR LC_CTYPE ,
.BR LC_MESSAGES ,
and
.BR NLSPATH .
.sp
.ne 2
.mk
.na
.B FCEDIT
.ad
.RS 12n
.rt
This variable, when expanded by the shell, determines the default value for the
.B -e
.I editor
option's
.I editor
option-argument. If
.B FCEDIT
is
null or unset,
.BR ed (1)
is used as the editor.
.RE

.sp
.ne 2
.mk
.na
.B HISTFILE
.ad
.RS 12n
.rt
Determine a pathname naming a command history file. If the \fBHISTFILE\fR
variable is not set, the shell can attempt to access or create a file
\fB\&.sh_history\fR in the user's home directory. If the shell cannot obtain both
read and write access to, or create, the history file, it uses an unspecified
mechanism that allows the history to operate properly. (References to history
``file'' in this section are understood to mean this unspecified mechanism in
such cases.) \fBfc\fR can choose to access this variable only when initializing
the history file; this initialization occurs when \fBfc\fR or \fBsh\fR first
attempt to retrieve entries from, or add entries to, the file, as the result of
commands issued by the user, the file named by the
.B ENV
variable, or a
system startup file such as
.BR /etc/profile .
(The initialization process for
the history file can be dependent on the system startup files, in that they can
contain commands that effectively preempts the user's settings of \fBHISTFILE\fR
and
.BR HISTSIZE .
For example, function definition commands are recorded in the
history file, unless the
.B "set -o"
\fBnolog\fR option is set. If the
system administrator includes function definitions in some system startup file
called before the
.B ENV
file, the history file is initialized before the user
gets a chance to influence its characteristics.) The variable
.B HISTFILE
is
accessed initially when the shell is invoked. Any changes to
.B HISTFILE
does
not take effect until another shell is invoked.
.RE

.sp
.ne 2
.mk
.na
.B HISTSIZE
.ad
.RS 12n
.rt
Determine a decimal number representing the limit to the number of previous
commands that are accessible. If this variable is unset, an unspecified default
greater than or equal to 128 are used. The variable
.B HISTSIZE
is accessed
initially when the shell is invoked. Any changes to
.B HISTSIZE
does not take
effect until another shell is invoked.
.RE

.SH EXIT STATUS
.sp
.LP
The following exit values are returned:
.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 6n
.rt
Successful completion of the listing.
.RE

.sp
.ne 2
.mk
.na
.B >0
.ad
.RS 6n
.rt
An error occurred.
.RE

.sp
.LP
Otherwise, the exit status is that of the commands executed by \fBfc\fR or
.BR hist .
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcsu
.TE

.SH SEE ALSO
.sp
.LP
.BR csh (1),
.BR ed (1),
.BR ksh (1),
.BR ksh93 (1),
.BR set (1),
.BR set (1F),
.BR sh (1),
.BR source (1),
.BR attributes (5),
.BR environ (5)
