'\" te
.\" Copyright (c) 2007 Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" Copyright 1989 AT&T
.\" Portions Copyright (c) 1982-2007 AT&T Knowledge Ventures
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH set 1 "20 Nov 2007" "SunOS 5.11" "User Commands"
.SH NAME
set, unset, setenv, unsetenv, export \- shell built-in functions to
determine the characteristics for environmental variables of the current
shell and its descendents
.SH SYNOPSIS
.SS "sh"
.LP
.nf
\fBset\fR [\fB--aefhkntuvx\fR [\fIargument\fR]].\|.\|.
.fi

.LP
.nf
\fBunset\fR [\fIname\fR].\|.\|.
.fi

.LP
.nf
\fBexport\fR [\fIname\fR].\|.\|.
.fi

.SS "csh"
.LP
.nf
\fBset\fR [\fIvar\fR [= \fIvalue\fR]]
.fi

.LP
.nf
\fBset\fR \fIvar\fR [\fIn\fR] = \fIword\fR
.fi

.LP
.nf
\fBunset\fR \fIpattern\fR
.fi

.LP
.nf
\fBsetenv\fR [\fIVAR\fR [\fIword\fR]]
.fi

.LP
.nf
\fBunsetenv\fR \fIvariable\fR
.fi

.SS "ksh"
.LP
.nf
\fBset\fR [\(+-abCefhkmnopstuvx] [\(+-o \fIoption\fR].\|.\|. [\(+-A \fIname\fR]
     [\fIarg\fR].\|.\|.
.fi

.LP
.nf
\fBunset\fR [\fB-f\fR] \fIname\fR.\|.\|.
.fi

.LP
.nf
\fB**export\fR [\fIname\fR [=\fIvalue\fR]].\|.\|.
.fi

.LP
.nf
\fB**export\fR [\fB-p\fR]
.fi

.SS "ksh93"
.LP
.nf
\fB+set\fR [\(+-abCefGhkmnoprstuvx] [\(+-o \fIoption\fR].\|.\|. [\(+-A \fIvname\fR]
     [\fIarg\fR].\|.\|.
.fi

.LP
.nf
\fB+unset\fR [\fB-fnv\fR] \fIvname\fR.\|.\|.
.fi

.LP
.nf
\fB++export\fR [\fB-p\fR] [\fIname\fR[=\fIvalue\fR]].\|.\|.
.fi

.SH DESCRIPTION
.SS "sh"
.sp
.LP
The
.B set
built-in command has the following options:
.sp
.ne 2
.mk
.na
.B --
.ad
.RS 6n
.rt
Does not change any of the flags. This option is useful in setting
.B $1
to \fB\(mi\fR\&.
.RE

.sp
.ne 2
.mk
.na
.B -a
.ad
.RS 6n
.rt
Marks variables which are modified or created for export.
.RE

.sp
.ne 2
.mk
.na
.B -e
.ad
.RS 6n
.rt
Exits immediately if a command exits with a non-zero exit status.
.RE

.sp
.ne 2
.mk
.na
.B -f
.ad
.RS 6n
.rt
Disables file name generation.
.RE

.sp
.ne 2
.mk
.na
.B -h
.ad
.RS 6n
.rt
Locates and remembers function commands as functions are defined. Function
commands are normally located when the function is executed.
.RE

.sp
.ne 2
.mk
.na
.B -k
.ad
.RS 6n
.rt
All keyword arguments are placed in the environment for a command, not just
those that precede the command name.
.RE

.sp
.ne 2
.mk
.na
.B -n
.ad
.RS 6n
.rt
Reads commands but does not execute them.
.RE

.sp
.ne 2
.mk
.na
.B -t
.ad
.RS 6n
.rt
Exits after reading and executing one command.
.RE

.sp
.ne 2
.mk
.na
.B -u
.ad
.RS 6n
.rt
Treats unset variables as an error when substituting.
.RE

.sp
.ne 2
.mk
.na
.B -v
.ad
.RS 6n
.rt
Prints shell input lines as they are read.
.RE

.sp
.ne 2
.mk
.na
.B -x
.ad
.RS 6n
.rt
Prints commands and their arguments as they are executed.
.RE

.sp
.LP
Using
.B +
rather than
.B \(mi
causes these flags to be turned off.
These flags can also be used upon invocation of the shell. The current set
of flags can be found in \fB$\(mi\fR. The remaining \fIargument\fRs are
positional parameters and are assigned, in order, to
.BR $1 ,
.BR $2 ,
\fB\&.\|.\|.\|.\fR If no \fIargument\fRs are specified the values of all
names are printed.
.sp
.LP
For each
.IR name ,
.B unset
removes the corresponding variable or
function value. The variables
.BR PATH ,
.BR PS1 ,
.BR PS2 ,
.BR MAILCHECK ,
and
.B IF
cannot be unset.
.sp
.LP
With the
.B export
built-in, the specified
.IR name s
are marked for
automatic export to the
.I environment
of subsequently executed commands.
If no arguments are specified, variable names that have been marked for
export during the current shell's execution are listed. Function names are
.B not
exported.
.SS "csh"
.sp
.LP
With no arguments,
.B set
displays the values of all shell variables.
.RI "Multiword values are displayed as a parenthesized list. With the" " var"
argument alone,
.B set
assigns an empty (null) value to the variable
.IR var .
With arguments of the form
.I var
.B =
.I value
.B set
assigns
.I value
to
.IR var ,
where
.I value
is one of:
.sp
.ne 2
.mk
.na
.I word
.ad
.RS 14n
.rt
A single word (or quoted string).
.RE

.sp
.ne 2
.mk
.na
\fB(\fIwordlist\fB)\fR
.ad
.RS 14n
.rt
A space-separated list of words enclosed in parentheses.
.RE

.sp
.LP
Values are command and filename expanded before being assigned. The form
\fBset\fR \fIvar\fB[\fIn\fB]=\fIword\fR replaces the \fIn\fR'th
word in a multiword value with
.IR word .
.sp
.LP
.B unset
removes variables whose names match (filename substitution)
.IR pattern .
All variables are removed by
.RB ` "unset *" '.
.sp
.LP
With no arguments,
.B setenv
displays all environment variables. With
the
.I VAR
argument,
.B setenv
sets the environment variable
.I VAR
to an empty (null) value. (By convention, environment
variables are normally specified upper-case names.) With both
.I VAR
and
.I word
arguments specified,
.B setenv
sets
.I VAR
to
.IR word ,
.RB "which must be either a single word or a quoted string. The" " PATH"
variable can take multiple
.I word
arguments, separated by colons (see
EXAMPLES). The most commonly used environment variables,
.BR USER ,
.BR TERM ,
and
.BR PATH ,
are automatically imported to and exported from
the
.B csh
variables
.BR user ,
.BR term ,
and
.BR path .
Use
.B setenv
if you need to change these variables. In addition, the shell
sets the
.B PWD
environment variable from the
.B csh
variable
.B cwd
whenever the latter changes.
.sp
.LP
The environment variables
.BR LC_CTYPE ,
.BR LC_MESSAGES ,
.BR LC_TIME ,
.BR LC_COLLATE ,
.BR LC_NUMERIC ,
and
.B LC_MONETARY
take immediate
effect when changed within the C shell. See
.BR environ (5)
for
descriptions of these environment variables.
.sp
.LP
.B unsetenv
removes
.I variable
from the environment. As with
.BR unset ,
pattern matching is not performed.
.SS "ksh"
.sp
.LP
The flags for the
.B set
built-in have meaning as follows:
.sp
.ne 2
.mk
.na
.B -A
.ad
.RS 13n
.rt
Array assignment. Unsets the variable
.I name
and assigns values
sequentially from the list
.IR arg .
If
.B +A
is used, the variable
.I name
is not unset first.
.RE

.sp
.ne 2
.mk
.na
.B -a
.ad
.RS 13n
.rt
All subsequent variables that are defined are automatically exported.
.RE

.sp
.ne 2
.mk
.na
.B -b
.ad
.RS 13n
.rt
Causes the shell to notify the user asynchronously of background job
completions.
.RE

.sp
.ne 2
.mk
.na
.B -C
.ad
.RS 13n
.rt
Prevents existing files from being overwritten by the shell's
.B >
redirection operator. The
.B >|
redirection operator overrides this
noclobber option for an individual file.
.RE

.sp
.ne 2
.mk
.na
.B -e
.ad
.RS 13n
.rt
If a command has a non-zero exit status, executes the
.B ERR
trap, if
set, and exits. This mode is disabled while reading profiles.
.RE

.sp
.ne 2
.mk
.na
.B -f
.ad
.RS 13n
.rt
Disables file name generation.
.RE

.sp
.ne 2
.mk
.na
.B -h
.ad
.RS 13n
.rt
Each command becomes a tracked alias when first encountered.
.RE

.sp
.ne 2
.mk
.na
.B -k
.ad
.RS 13n
.rt
All variable assignment arguments are placed in the environment for a
command, not just those that precede the command name.
.RE

.sp
.ne 2
.mk
.na
.B -m
.ad
.RS 13n
.rt
Background jobs run in a separate process group and a line prints upon
completion. The exit status of background jobs is reported in a completion
message. On systems with job control, this flag is turned on automatically
for interactive shells.
.RE

.sp
.ne 2
.mk
.na
.B -n
.ad
.RS 13n
.rt
Reads commands and checks them for syntax errors, but does not execute
them. Ignored for interactive shells.
.RE

.sp
.ne 2
.mk
.na
.B +o
.ad
.RS 13n
.rt
Writes the current option stettings to standard output in a format that is
suitable for reinput to the shell as commands that achieve the same option
settings.
.RE

.sp
.ne 2
.mk
.na
.B -o
.I option
.ad
.RS 13n
.rt
The
.I option
argument can be one of the following option names:
.sp
.ne 2
.mk
.na
.B allexport
.ad
.RS 14n
.rt
Same as
.BR -a .
.RE

.sp
.ne 2
.mk
.na
.B errexit
.ad
.RS 14n
.rt
Same as
.BR -e .
.RE

.sp
.ne 2
.mk
.na
.B bgnice
.ad
.RS 14n
.rt
All background jobs are run at a lower priority. This is the default mode.
.B emacs
Puts you in an
.B emacs
style in-line editor for command
entry.
.RE

.sp
.ne 2
.mk
.na
.B gmacs
.ad
.RS 14n
.rt
Puts you in a
.B gmacs
style in-line editor for command entry.
.RE

.sp
.ne 2
.mk
.na
.B ignoreeof
.ad
.RS 14n
.rt
The shell does not exit on end-of-file. The command
.B exit
must be
used.
.RE

.sp
.ne 2
.mk
.na
.B keyword
.ad
.RS 14n
.rt
Same as
.BR -k .
.RE

.sp
.ne 2
.mk
.na
.B markdirs
.ad
.RS 14n
.rt
All directory names resulting from file name generation have a trailing
.B /
appended.
.RE

.sp
.ne 2
.mk
.na
.B monitor
.ad
.RS 14n
.rt
Same as
.BR -m .
.RE

.sp
.ne 2
.mk
.na
.B noclobber
.ad
.RS 14n
.rt
Prevents redirection operator
.B >
from truncating existing files.
Requires the
.B >|
operator to truncate a file when turned on. Same as
.BR -C .
.RE

.sp
.ne 2
.mk
.na
.B noexec
.ad
.RS 14n
.rt
Same as
.BR -n .
.RE

.sp
.ne 2
.mk
.na
.B noglob
.ad
.RS 14n
.rt
Same as
.BR -f .
.RE

.sp
.ne 2
.mk
.na
.B nolog
.ad
.RS 14n
.rt
Does not save function definitions in history file.
.RE

.sp
.ne 2
.mk
.na
.B notify
.ad
.RS 14n
.rt
Same as
.BR -b .
.RE

.sp
.ne 2
.mk
.na
.B nounset
.ad
.RS 14n
.rt
Same as
.BR -u .
.RE

.sp
.ne 2
.mk
.na
.B privileged
.ad
.RS 14n
.rt
Same as
.BR -p .
.RE

.sp
.ne 2
.mk
.na
.B verbose
.ad
.RS 14n
.rt
Same as
.BR -v .
.RE

.sp
.ne 2
.mk
.na
.B trackall
.ad
.RS 14n
.rt
Same as
.BR -h .
.RE

.sp
.ne 2
.mk
.na
.B vi
.ad
.RS 14n
.rt
Puts you in insert mode of a
.B vi
style in-line editor until you hit
escape character
.BR 033 .
This puts you in control mode. A return sends
the line.
.RE

.sp
.ne 2
.mk
.na
.B viraw
.ad
.RS 14n
.rt
Each character is processed as it is typed in
.B vi
mode.
.RE

.sp
.ne 2
.mk
.na
.B xtrace
.ad
.RS 14n
.rt
Same as
.BR -x .
.RE

.RE

.sp
.LP
If no option name is supplied then the current option settings are
printed.
.sp
.ne 2
.mk
.na
.B -p
.ad
.RS 8n
.rt
Disables processing of the
.B $HOME/.profile
file and uses the file
.B /etc/suid_profile
instead of the
.B ENV
file. This mode is on
whenever the effective uid is not equal to the real uid, or when the
effective gid is not equal to the real gid. Turning this off causes the
effective uid and gid to be set to the real uid and gid.
.RE

.sp
.ne 2
.mk
.na
.B -s
.ad
.RS 8n
.rt
Sorts the positional parameters lexicographically.
.RE

.sp
.ne 2
.mk
.na
.B -t
.ad
.RS 8n
.rt
Exits after reading and executing one command.
.RE

.sp
.ne 2
.mk
.na
.B -u
.ad
.RS 8n
.rt
Treats unset parameters as an error when substituting.
.RE

.sp
.ne 2
.mk
.na
.B -v
.ad
.RS 8n
.rt
Prints shell input lines as they are read.
.RE

.sp
.ne 2
.mk
.na
.B -x
.ad
.RS 8n
.rt
Prints commands and their arguments as they are executed.
.RE

.sp
.ne 2
.mk
.na
\fB\(mi\fR
.ad
.RS 8n
.rt
Turns off
.B -x
and
.B -v
flags and stops examining arguments for
flags.
.RE

.sp
.ne 2
.mk
.na
.B -
.ad
.RS 8n
.rt
Does not change any of the flags. This option is useful in setting
.B $1
to a value beginning with \fB\(mi\fR\&. If no arguments follow this flag
then the positional parameters are unset.
.RE

.sp
.LP
Using
.B +
rather than
.B \(mi
causes these flags to be turned off.
These flags can also be used upon invocation of the shell. The current set
of flags can be found in \fB$\(mi\fR. Unless
.B -A
is specified, the
remaining arguments are positional parameters and are assigned, in order, to
.B $1 $2
\&.\|.\|.. If no arguments are specified then the names and
values of all variables are printed on the standard output.
.sp
.LP
The variables specified by the list of
.IR name "s are unassigned, that is,"
their values and attributes are erased.
.B readonly
variables cannot be
.RB "unset. If the " -f " flag is set, then the names refer to " function 
names. Unsetting
.BR ERRNO ,
.BR LINENO ,
.BR MAILCHECK ,
.BR OPTARG ,
.BR OPTIND ,
.BR RANDOM ,
.BR SECONDS ,
.BR TMOUT ,
and
.B _
removes
their special meaning even if they are subsequently assigned.
.sp
.LP
When using
.BR unset ,
the variables specified by the list of
.IR name s
.RB "are unassigned, i.e., their values and attributes are erased." " readonly"
variables cannot be unset. If the
.BR -f ,
flag is set, then the names
refer to
.B function
names. Unsetting
.BR ERRNO ,
.BR LINENO ,
.BR MAILCHECK ,
.BR OPTARG ,
.BR OPTIND ,
.BR RANDOM ,
.BR SECONDS ,
.BR TMOUT ,
and
.B _
removes their special meaning even if they are
subsequently assigned.
.sp
.LP
With the
.B export
built-in, the specified
.IR name s
are marked for
automatic export to the
.B environment
of subsequently-executed
commands.
.sp
.LP
When
.B -p
is specified,
.B export
writes to the standard output the
names and values of all exported variables in the following format:
.sp
.in +2
.nf
"export %s=%s\en", \fIname\fR, \fIvalue\fR
.fi
.in -2
.sp

.sp
.LP
if
.I name
is set, and:
.sp
.in +2
.nf
"export %s\en", \fIname\fR
.fi
.in -2
.sp

.sp
.LP
if
.I name
is unset.
.sp
.LP
The shell formats the output, including the proper use of quoting, so that
it is suitable for reinput to the shell as commands that achieve the same
exporting results, except for the following:
.RS +4
.TP
1.
Read-only variables with values cannot be reset.
.RE
.RS +4
.TP
2.
Variables that were unset at the time they were output are not reset to the
unset state if a value is assigned to the variable between the time the
state was saved and the time at which the saved output is reinput to the
shell.
.RE
.sp
.LP
On this manual page,
.BR ksh (1)
commands that are preceded by one or two
.B *
(asterisks) are treated specially in the following ways:
.RS +4
.TP
1.
Variable assignment lists preceding the command remain in effect when the
command completes.
.RE
.RS +4
.TP
2.
I/O redirections are processed after variable assignments.
.RE
.RS +4
.TP
3.
Errors cause a script that contains them to abort.
.RE
.RS +4
.TP
4.
Words, following a command preceded by
.B **
that are in the format of a
variable assignment, are expanded with the same rules as a variable
assignment. This means that tilde substitution is performed after the
.B =
sign and word splitting and file name generation are not
performed.
.RE
.SS "ksh93"
.sp
.LP
.B set
sets or unsets options and positional parameters. Options that
are specified with a
.B -
cause the options to be set. Options that are
specified with a
.B +
cause the option to be unset.
.sp
.LP
.B set
without any options or arguments displays the names and values of
all shell variables in the order of the collation sequence in the current
locale. The values are quoted so that they are suitable for input again to
the shell.
.sp
.LP
If no arguments are specified, not even the end of options argument
.BR -- ,
the positional parameters are unchanged. Otherwise, unless the
.B -A
option has been specified, the positional parameters are replaced
by the list of arguments. A first argument of
.B --
is ignored when
setting positional parameters.
.sp
.LP
For backwards compatibility, a
.B set
command without any options
specified, whose first argument is
.B -
turns off the
.B -v
and
.B -x
options. If any additional arguments are specified, they replace
the positional parameters.
.sp
.LP
The options for set in
.B ksh93
are:
.sp
.ne 2
.mk
.na
.B -a
.ad
.RS 15n
.rt
Set the export attribute for each variable whose name does not contain a .
that you assign a value in the current shell environment.
.RE

.sp
.ne 2
.mk
.na
.B -A
.I name
.ad
.RS 15n
.rt
Assign the arguments sequentially to the array named by
.I name
starting
at subscript
.B 0
rather than to the positional parameters.
.RE

.sp
.ne 2
.mk
.na
.B -b
.ad
.RS 15n
.rt
The shell writes a message to standard error as soon it detects that a
background job completes rather than waiting until the next prompt.
.RE

.sp
.ne 2
.mk
.na
.B -B
.ad
.RS 15n
.rt
Enable \fB{.\|.\|.}\fR group expansion. On by default.
.RE

.sp
.ne 2
.mk
.na
.B -C
.ad
.RS 15n
.rt
Prevents existing regular files from being overwritten using the >
redirection operator. The
.B >|
redirection overrides this
.B noclobber
option.
.RE

.sp
.ne 2
.mk
.na
.B -e
.ad
.RS 15n
.rt
A simple command that has a
.B non-zero
exit status causes the shell to
exit unless the simple command is:
.RS +4
.TP
.ie t \(bu
.el o
contained in an
.B &&
or
.B ||
list
.RE
.RS +4
.TP
.ie t \(bu
.el o
the command immediately following
.BR if ,
.BR while ,
or
.BR until
.RE
.RS +4
.TP
.ie t \(bu
.el o
contained in the pipeline following
.BR !
.RE
.RE

.sp
.ne 2
.mk
.na
.B -f
.ad
.RS 15n
.rt
Pathname expansion is disabled.
.RE

.sp
.ne 2
.mk
.na
.B -G
.ad
.RS 15n
.rt
Causes
.B **
by itself to also match all sub-directories during pathname
expansion.
.RE

.sp
.ne 2
.mk
.na
.B -h
.ad
.RS 15n
.rt
Obsolete. Causes each command whose name has the syntax of an alias to
become a tracked alias when it is first encountered.
.RE

.sp
.ne 2
.mk
.na
.B -H
.ad
.RS 15n
.rt
Enable
.BR ! "-style history expansion similar to csh."
.RE

.sp
.ne 2
.mk
.na
.B -k
.ad
.RS 15n
.rt
This is obsolete. All arguments of the form \fIname\fB=\fIvalue\fR
are removed and placed in the variable assignment list for the command.
Ordinarily, variable assignments must precede command arguments.
.RE

.sp
.ne 2
.mk
.na
.B -m
.ad
.RS 15n
.rt
When enabled, the shell runs background jobs in a separate process group
and displays a line upon completion. This mode is enabled by default for
interactive shells on systems that support job control.
.RE

.sp
.ne 2
.mk
.na
.B -n
.ad
.RS 15n
.rt
The shell reads commands and checks for syntax errors, but does not execute
the command. Usually specified on command invocation.
.RE

.sp
.ne 2
.mk
.na
\fB-o\fR [\fIoption\fR]\fR
.ad
.RS 15n
.rt
If option is not specified, the list of options and their current settings
is written to standard output. When invoked with a
.B +
the options are
written in a format that can be input again to the shell to restore the
settings. This option can be repeated to enable or disable multiple options.

.sp
The value of
.I option
must be one of the following:
.sp
.ne 2
.mk
.na
.B allexport
.ad
.RS 15n
.rt
Same as
.BR -a .
.RE

.sp
.ne 2
.mk
.na
.B bgnice
.ad
.RS 15n
.rt
All background jobs are run at lower priorities.
.RE

.sp
.ne 2
.mk
.na
.B braceexpand
.ad
.RS 15n
.rt
Same as
.BR -B .
.RE

.sp
.ne 2
.mk
.na
.B emacs
.ad
.RS 15n
.rt
Enables or disables
.B emacs
editing mode.
.RE

.sp
.ne 2
.mk
.na
.B errexit
.ad
.RS 15n
.rt
Same as
.BR -e .
.RE

.sp
.ne 2
.mk
.na
.B globstar
.ad
.RS 15n
.rt
Equivalent to
.BR - G.
.RE

.sp
.ne 2
.mk
.na
.B gmacs
.ad
.RS 15n
.rt
Enables or disables
.BR gmacs .
.B gmacs
editing mode is the same as
.B emacs
editing mode, except for the handling of CTRL-T.
.RE

.sp
.ne 2
.mk
.na
.B histexpand
.ad
.RS 15n
.rt
Same as
.BR -H .
.RE

.sp
.ne 2
.mk
.na
.B ignoreeof
.ad
.RS 15n
.rt
The interactive shell does not exit on end-of-file.
.RE

.sp
.ne 2
.mk
.na
.B keyword
.ad
.RS 15n
.rt
Same as
.BR -k .
.RE

.sp
.ne 2
.mk
.na
.B markdirs
.ad
.RS 15n
.rt
All directory names resulting from file name generation have a trailing
.B /
appended.
.RE

.sp
.ne 2
.mk
.na
.B monitor
.ad
.RS 15n
.rt
Same as
.BR -m .
.RE

.sp
.ne 2
.mk
.na
.B multiline
.ad
.RS 15n
.rt
Use multiple lines when editing lines that are longer than the window
width.
.RE

.sp
.ne 2
.mk
.na
.B noclobber
.ad
.RS 15n
.rt
Same as
.BR -C .
.RE

.sp
.ne 2
.mk
.na
.B noexec
.ad
.RS 15n
.rt
Same as
.BR -n .
.RE

.sp
.ne 2
.mk
.na
.B noglob
.ad
.RS 15n
.rt
Same as
.BR -f .
.RE

.sp
.ne 2
.mk
.na
.B nolog
.ad
.RS 15n
.rt
This has no effect. It is provided for backward compatibility.
.RE

.sp
.ne 2
.mk
.na
.B notify
.ad
.RS 15n
.rt
Same as
.BR -b .
.RE

.sp
.ne 2
.mk
.na
.B nounset
.ad
.RS 15n
.rt
Same as
.BR -u .
.RE

.sp
.ne 2
.mk
.na
.B pipefail
.ad
.RS 15n
.rt
A pipeline does not complete until all components of the pipeline have
completed, and the exit status of the pipeline is the value of the last
command to exit with
.B non-zero
exit status, or is
.B zero
if all
commands return zero exit status.
.RE

.sp
.ne 2
.mk
.na
.B privileged
.ad
.RS 15n
.rt
Same as
.BR -p .
.RE

.sp
.ne 2
.mk
.na
.B showme
.ad
.RS 15n
.rt
Simple commands preceded by a ; are traced as if
.B -x
were enabled but
not executed.
.RE

.sp
.ne 2
.mk
.na
.B trackall
.ad
.RS 15n
.rt
Same as
.BR -h .
.RE

.sp
.ne 2
.mk
.na
.B verbose
.ad
.RS 15n
.rt
Same as
.BR -v .
.RE

.sp
.ne 2
.mk
.na
.B vi
.ad
.RS 15n
.rt
Enables or disables
.B vi
editing mode.
.RE

.sp
.ne 2
.mk
.na
.B viraw
.ad
.RS 15n
.rt
Does not use canonical input mode when using vi edit mode
.RE

.sp
.ne 2
.mk
.na
.B xtrace
.ad
.RS 15n
.rt
Same as
.BR -x .
.RE

.RE

.sp
.ne 2
.mk
.na
.B -p
.ad
.RS 15n
.rt
Privileged mode. Disabling
.B -p
sets the effective user id to the real
user id, and the effective group id to the real group id. Enabling
.B -p
restores the effective user and group ids to their values when the shell was
invoked. The
.B -p
option is on whenever the real and effective user id
is not equal or the real and effective group id is not equal. User profiles
are not processed when
.B -p
is enabled.
.RE

.sp
.ne 2
.mk
.na
.B -r
.ad
.RS 15n
.rt
Restricted. Enables restricted shell. This option cannot be unset once
enabled.
.RE

.sp
.ne 2
.mk
.na
.B -s
.ad
.RS 15n
.rt
Sort the positional parameters
.RE

.sp
.ne 2
.mk
.na
.B -t
.ad
.RS 15n
.rt
Obsolete. The shell reads one command and then exits.
.RE

.sp
.ne 2
.mk
.na
.B -u
.ad
.RS 15n
.rt
If enabled, the shell displays an error message when it tries to expand a
variable that is unset.
.RE

.sp
.ne 2
.mk
.na
.B -v
.ad
.RS 15n
.rt
Verbose. The shell displays its input onto standard error as it reads it.
.RE

.sp
.ne 2
.mk
.na
.B -x
.ad
.RS 15n
.rt
Execution trace. The shell displays each command after all expansion and
before execution preceded by the expanded value of the
.BR PS4
parameter.
.RE

.sp
.LP
The following exit values are returned by
.B set
in
.BR ksh93 :
.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 6n
.rt
Successful completion.
.RE

.sp
.ne 2
.mk
.na
.B >0
.ad
.RS 6n
.rt
An error occurred.
.RE

.sp
.LP
For each name specified,
.B unset
unsets the variable, or function if
.B -f
is specified, from the current shell execution environment.
Read-only variables cannot be unset.
.sp
.LP
The options for
.B unset
in
.B ksh93
are:
.sp
.ne 2
.mk
.na
.B -f
.ad
.RS 6n
.rt
Where
.I name
refers to a function name, the shell unsets the function
definition.
.RE

.sp
.ne 2
.mk
.na
.B -n
.ad
.RS 6n
.rt
If
.I name
refers to variable that is a reference, the variable
.I name
is unset rather than the variable it references. Otherwise, this
option is equivalent to the
.B -v
option.
.RE

.sp
.ne 2
.mk
.na
.B -v
.ad
.RS 6n
.rt
Where
.I name
refers to a variable name, the shell unsets it and removes
it from the environment. This is the default behavior.
.RE

.sp
.LP
The following exit values are returned by
.B unset
in
.BR ksh93 :
.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 6n
.rt
Successful completion. All names were successfully unset.
.RE

.sp
.ne 2
.mk
.na
.B >0
.ad
.RS 6n
.rt
An error occurred, or one or more
.I name
operands could not be unset
.RE

.sp
.LP
.B export
sets the export attribute on each of the variables specified
by name which causes them to be in the environment of subsequently executed
commands. If \fB=\fIvalue\fR is specified, the variable
.I name
is set
to
.IR value .
.sp
.LP
If no
.I name
is specified, the names and values of all exported
variables are written to standard output.
.sp
.LP
.B export
is built-in to the shell as a declaration command so that
field splitting and pathname expansion are not performed on the arguments.
Tilde expansion occurs on value.
.sp
.LP
The options for
.B export
in
.B ksh93
are:
.sp
.ne 2
.mk
.na
.B -p
.ad
.RS 6n
.rt
Causes the output to be in the form of
.B export
commands that can be
used as input to the shell to recreate the current exports.
.RE

.sp
.LP
The following exit values are returned by
.B export
in
.BR ksh93 :
.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 6n
.rt
Successful completion.
.RE

.sp
.ne 2
.mk
.na
.B >0
.ad
.RS 6n
.rt
An error occurred.
.RE

.sp
.LP
On this manual page,
.BR ksh93 (1)
commands that are preceded by one or
two
.B +
are treated specially in the following ways:
.RS +4
.TP
1.
Variable assignment lists preceding the command remain in effect when the
command completes.
.RE
.RS +4
.TP
2.
I/O redirections are processed after variable assignments.
.RE
.RS +4
.TP
3.
Errors cause a script that contains them to abort.
.RE
.RS +4
.TP
4.
They are not valid function names.
.RE
.RS +4
.TP
5.
Words, following a command preceded by
.B ++
that are in the format of a
variable assignment, are expanded with the same rules as a variable
assignment. This means that tilde substitution is performed after the
.B =
sign and field splitting and file name generation are not
performed.
.RE
.SH EXAMPLES
.SS "csh"
.sp
.LP
The following example sets the
.B PATH
variable to search for files in
the
.BR /bin ,
.BR /usr/bin ,
.BR /usr/sbin ,
and
.BR /usr/ucb/bin
directories, in that order:
.sp
.in +2
.nf
setenv PATH "/bin:/usr/bin:/usr/sbin:usr/ucb/bin"
.fi
.in -2
.sp

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcsu
.TE

.SH SEE ALSO
.sp
.LP
.BR csh (1),
.BR ksh (1),
.BR ksh93 (1),
.BR read (1),
.BR sh (1),
.BR typeset (1),
.BR attributes (5),
.BR environ (5)
