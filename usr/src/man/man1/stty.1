'\" te
.\" Copyright 1989 AT&T
.\" Copyright (c) 2009, Sun Microsystems, Inc. All Rights Reserved
.\" Portions Copyright (c) 1992, X/Open Company Limited All Rights Reserved
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH stty 1 "20 May 2009" "SunOS 5.11" "User Commands"
.SH NAME
stty \- set the options for a terminal
.SH SYNOPSIS
.LP
.nf
\fB/usr/bin/stty\fR [\fB-a\fR] [\fB-g\fR]
.fi

.LP
.nf
\fB/usr/bin/stty\fR [\fImodes\fR]
.fi

.LP
.nf
\fB/usr/xpg4/bin/stty\fR [\fB-a\fR | \fB-g\fR]
.fi

.LP
.nf
\fB/usr/xpg4/bin/stty\fR [\fImodes\fR]
.fi

.LP
.nf
\fB/usr/xpg6/bin/stty\fR [\fB-a\fR | \fB-g\fR]
.fi

.LP
.nf
\fB/usr/xpg6/bin/stty\fR [\fImodes\fR]
.fi

.SH DESCRIPTION
.sp
.LP
The
.B stty
utility sets certain terminal I/O options for the device
that is the current standard input. Without arguments,
.B stty
reports
the settings of certain options.
.sp
.LP
In this report, if a character is preceded by a caret
.RB ( ^ ),
then the
value of that option is the corresponding control character (for example,
\fB^h\fR is CTRL-h. In this case, recall that CTRL-h is the same as the
BACKSPACE key). The sequence
.B ^@
means that an option has a null
value.
.sp
.LP
See \fBtermio\fR(7I) for detailed information about the modes listed from
\fBControl Modes\fR through
.BR "Local Modes" .
For detailed
information about the modes listed under
.BR "Hardware Flow"
\fBControl Modes\fR and
.BR "Clock Modes" ,
see
.BR termiox (7I).
.sp
.LP
Operands described in the
.B "Combination Modes"
section are implemented
using options in the earlier sections. Notice that many combinations of
options make no sense, but no sanity checking is performed. Hardware flow
control and clock modes options might not be supported by all hardware
interfaces.
.SH OPTIONS
.sp
.LP
The following options are supported:
.sp
.ne 2
.mk
.na
.B -a
.ad
.RS 6n
.rt
Writes to standard output all of the option settings for the terminal.
.RE

.sp
.ne 2
.mk
.na
.B -g
.ad
.RS 6n
.rt
Reports current settings in a form that can be used as an argument to
another
.B stty
command. Emits termios-type output if the underlying
driver supports it. Otherwise, it emits termio-type output.
.RE

.SH OPERANDS
.sp
.LP
The following
.I mode
operands are supported:
.SS "Control Modes"
.sp
.ne 2
.mk
.na
\fBparenb\fR(\fB-parenb\fR)\fR
.ad
.RS 24n
.rt
Enable (disable) parity generation and detection.
.RE

.sp
.ne 2
.mk
.na
\fBparext\fR(\fB-parext\fR)\fR
.ad
.RS 24n
.rt
Enable (disable) extended parity generation and detection for mark and
space parity.
.RE

.sp
.ne 2
.mk
.na
\fBparodd\fR(\fB-parodd\fR)\fR
.ad
.RS 24n
.rt
Select odd (even) parity, or mark (space) parity if
.B parext
is
enabled.
.RE

.sp
.ne 2
.mk
.na
.B "cs5 cs6" cs7 cs8
.ad
.RS 24n
.rt
Select character size (see \fBtermio\fR(7I)).
.RE

.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 24n
.rt
Hang up line immediately.
.RE

.sp
.ne 2
.mk
.na
\fBhupcl\fR (\fB-hupcl\fR)\fR
.ad
.RS 24n
.rt
Hang up (do not hang up) connection on last close.
.RE

.sp
.ne 2
.mk
.na
\fBhup\fR (\fB-hup\fR)\fR
.ad
.RS 24n
.rt
Same as \fBhupcl\fR(\fB-hupcl\fR).
.RE

.sp
.ne 2
.mk
.na
\fBcstopb\fR (\fB-cstopb\fR)\fR
.ad
.RS 24n
.rt
Use two (one) stop bits per character.
.RE

.sp
.ne 2
.mk
.na
\fBcread\fR (\fB-cread\fR)\fR
.ad
.RS 24n
.rt
Enable (disable) the receiver.
.RE

.sp
.ne 2
.mk
.na
\fBcrtscts\fR (\fB-crtscts\fR)\fR
.ad
.RS 24n
.rt
Enable output hardware flow control. Raise the
.B RTS
(Request to Send)
modem control line. Suspends output until the CTS (Clear to Send) line is
raised.
.RE

.sp
.ne 2
.mk
.na
\fBcrtsxoff\fR (\fB-crtsxoff\fR)\fR
.ad
.RS 24n
.rt
Enable input hardware flow control. Raise the
.B RTS
(Request to Send)
modem control line to receive data. Suspends input when RTS is low.
.RE

.sp
.ne 2
.mk
.na
\fBclocal\fR (\fB-clocal\fR)\fR
.ad
.RS 24n
.rt
Assume a line without (with) modem control.
.RE

.sp
.ne 2
.mk
.na
\fBdefeucw\fR
.ad
.RS 24n
.rt
Set the widths of multibyte characters to the values defined in the current
locale specified by
.BR LC_CTYPE .
Internally, width is expressed in terms
of bytes per character, and screen or display columns per character.
.RE

.sp
.ne 2
.mk
.na
.B 110 300 600 1200 1800
.ad
.br
.na
.B 2400 4800 9600 19200
.ad
.br
.na
.B 38400 357600 76800 115200
.ad
.br
.na
.B 153600 230400 307200 460800
.ad
.sp .6
.RS 4n
Set terminal baud rate to the number given, if possible. (All speeds are
not supported by all hardware interfaces.)
.RE

.sp
.ne 2
.mk
.na
.B "ispeed 0 110 300 600 1200
.ad
.br
.na
.B 1800 2400 4800 9600 19200
.ad
.br
.na
.B 38400 57600 76800 115200
.ad
.br
.na
.B 153600 230400 307200 460800
.ad
.sp .6
.RS 4n
Set terminal input baud rate to the number given, if possible. (Not all
hardware supports split baud rates.) If the input baud rate is set to
.BR 0 ,
the input baud rate is specified by the value of the output baud
rate.
.RE

.sp
.ne 2
.mk
.na
.B "ospeed 0 110 300 600 1200
.ad
.br
.na
.B 1800 2400 4800 9600 19200
.ad
.br
.na
.B 38400 57600 76800 115200
.ad
.br
.na
.B 153600 230400 307200 460800
.ad
.sp .6
.RS 4n
Set terminal output baud rate to the number given, if possible. (Not all
hardware supports split baud rates.) If the output baud rate is set to
.BR 0 ,
the line is hung up immediately.
.RE

.SS "Input Modes"
.sp
.ne 2
.mk
.na
\fBignbrk\fR (\fB-ignbrk\fR)\fR
.ad
.RS 22n
.rt
Ignore (do not ignore) break on input.
.RE

.sp
.ne 2
.mk
.na
\fBbrkint\fR (\fB-brkint\fR)\fR
.ad
.RS 22n
.rt
Signal (do not signal) INTR on break.
.RE

.sp
.ne 2
.mk
.na
\fBignpar\fR (\fB-ignpar\fR)\fR
.ad
.RS 22n
.rt
Ignore (do not ignore) parity errors.
.RE

.sp
.ne 2
.mk
.na
\fBparmrk\fR (\fB-parmrk\fR)\fR
.ad
.RS 22n
.rt
Mark (do not mark) parity errors (see \fBtermio\fR(7I)).
.RE

.sp
.ne 2
.mk
.na
\fBinpck\fR (\fB-inpck\fR)\fR
.ad
.RS 22n
.rt
Enable (disable) input parity checking.
.RE

.sp
.ne 2
.mk
.na
\fBistrip\fR (\fB-istrip\fR)\fR
.ad
.RS 22n
.rt
Strip (do not strip) input characters to seven bits.
.RE

.sp
.ne 2
.mk
.na
\fBinlcr\fR (\fB-inlcr\fR)\fR
.ad
.RS 22n
.rt
Map (do not map) NL to CR on input.
.RE

.sp
.ne 2
.mk
.na
\fBigncr\fR (\fB-igncr\fR)\fR
.ad
.RS 22n
.rt
Ignore (do not ignore) CR on input.
.RE

.sp
.ne 2
.mk
.na
\fBicrnl\fR (\fB-icrnl\fR)\fR
.ad
.RS 22n
.rt
Map (do not map) CR to NL on input.
.RE

.sp
.ne 2
.mk
.na
\fBiuclc\fR (\fB-iuclc\fR)\fR
.ad
.RS 22n
.rt
Map (do not map) upper-case alphabetics to lower case on input.
.RE

.sp
.ne 2
.mk
.na
\fBixon\fR (\fB-ixon\fR)\fR
.ad
.RS 22n
.rt
Enable (disable) START/STOP output control. Output is stopped by sending
STOP control character and started by sending the START control character.
.RE

.sp
.ne 2
.mk
.na
\fBixany\fR (\fB-ixany\fR)\fR
.ad
.RS 22n
.rt
Allow any character (only DC1) to restart output.
.RE

.sp
.ne 2
.mk
.na
\fBixoff\fR (\fB-ixoff\fR)\fR
.ad
.RS 22n
.rt
Request that the system send (not send) START/STOP characters when the
input queue is nearly empty/full.
.RE

.sp
.ne 2
.mk
.na
\fBimaxbel\fR (\fB-imaxbel\fR)\fR
.ad
.RS 22n
.rt
Echo (do not echo)
.B BEL
when the input line is too long. If
\fBimaxbel\fR is set, the \fBASCII BEL\fR character (\fB07 hex\fR) is echoed
if the input stream overflows. Further input is  not stored, but any input
already present is not disturbed. If
.B -imaxbel
.RB "is set, no" " BEL"
character is echoed, and all unread input present in the input queue is
discarded if the input stream overflows.
.RE

.SS "Output Modes"
.sp
.ne 2
.mk
.na
\fBopost\fR (\fB-opost\fR)\fR
.ad
.RS 23n
.rt
Post-process output (do not post-process output; ignore all other output
modes).
.RE

.sp
.ne 2
.mk
.na
\fBolcuc\fR (\fB-olcuc\fR)\fR
.ad
.RS 23n
.rt
Map (do not map) lower-case alphabetics to upper case on output.
.RE

.sp
.ne 2
.mk
.na
\fBonlcr\fR (\fB-onlcr\fR)\fR
.ad
.RS 23n
.rt
Map (do not map) NL to CR-NL on output.
.RE

.sp
.ne 2
.mk
.na
\fBocrnl\fR (\fB-ocrnl\fR)\fR
.ad
.RS 23n
.rt
Map (do not map) CR to NL on output.
.RE

.sp
.ne 2
.mk
.na
\fBonocr\fR (\fB-onocr\fR)\fR
.ad
.RS 23n
.rt
Do not (do) output CRs at column zero.
.RE

.sp
.ne 2
.mk
.na
\fBonlret\fR (\fB-onlret\fR)\fR
.ad
.RS 23n
.rt
On the terminal NL performs (does not perform) the CR function.
.RE

.sp
.ne 2
.mk
.na
\fBofill\fR (\fB-ofill\fR)\fR
.ad
.RS 23n
.rt
Use fill characters (use timing) for delays.
.RE

.sp
.ne 2
.mk
.na
\fBofdel\fR (\fB-ofdel\fR)\fR
.ad
.RS 23n
.rt
Fill characters are DELs (NULs).
.RE

.sp
.ne 2
.mk
.na
.B cr0 cr1 cr2 cr3
.ad
.RS 23n
.rt
Select style of delay for carriage returns (see \fBtermio\fR(7I)).
.RE

.sp
.ne 2
.mk
.na
.B nl0 nl1
.ad
.RS 23n
.rt
Select style of delay for line-feeds (see \fBtermio\fR(7I)).
.RE

.sp
.ne 2
.mk
.na
.B tab0 tab1 tab2 tab3
.ad
.RS 23n
.rt
Select style of delay for horizontal tabs (see \fBtermio\fR(7I)).
.RE

.sp
.ne 2
.mk
.na
.B bs0 bs1
.ad
.RS 23n
.rt
Select style of delay for backspaces (see \fBtermio\fR(7I)).
.RE

.sp
.ne 2
.mk
.na
\fBff0 ff1\fR
.ad
.RS 23n
.rt
Select style of delay for form-feeds (see \fBtermio\fR(7I)).
.RE

.sp
.ne 2
.mk
.na
.B vt0 vt1
.ad
.RS 23n
.rt
Select style of delay for vertical tabs (see \fBtermio\fR(7I)).
.RE

.SS "Local Modes"
.sp
.ne 2
.mk
.na
\fBisig\fR(\fB-isig\fR)\fR
.ad
.RS 22n
.rt
Enable (disable) the checking of characters against the special control
characters INTR, QUIT, SWTCH, and SUSP. For information on
.BR SWTCH ,
see
.BR NOTES .
.RE

.sp
.ne 2
.mk
.na
\fBicanon\fR (\fB-icanon\fR)\fR
.ad
.RS 22n
.rt
Enable (disable) canonical input (ERASE and KILL processing). Does not set
\fBMIN\fR or \fBTIME\fR.
.RE

.sp
.ne 2
.mk
.na
\fBxcase\fR (\fB-xcase\fR)\fR
.ad
.RS 22n
.rt
Canonical (unprocessed) upper/lower-case presentation.
.RE

.sp
.ne 2
.mk
.na
\fBecho\fR (\fB-echo\fR)\fR
.ad
.RS 22n
.rt
Echo back (do not echo back) every character typed.
.RE

.sp
.ne 2
.mk
.na
\fBechoe\fR (\fB-echoe\fR)\fR
.ad
.RS 22n
.rt
Echo (do not echo) ERASE character as a backspace-space-backspace string.
This mode erases the ERASEed character on many CRT terminals; however, it
does not keep track of column position and, as a result, it might be
confusing for escaped characters, tabs, and backspaces.
.RE

.sp
.ne 2
.mk
.na
\fBechok\fR(\fB-echok\fR)\fR
.ad
.RS 22n
.rt
Echo (do not echo) NL after KILL character.
.RE

.sp
.ne 2
.mk
.na
\fBlfkc\fR (\fB-lfkc\fR)\fR
.ad
.RS 22n
.rt
The same as \fBechok\fR(\fB-echok\fR); obsolete.
.RE

.sp
.ne 2
.mk
.na
\fBechonl\fR (\fB-echonl\fR)\fR
.ad
.RS 22n
.rt
Echo (do not echo) NL.
.RE

.sp
.ne 2
.mk
.na
\fBnoflsh\fR (\fB-noflsh\fR)\fR
.ad
.RS 22n
.rt
Disable (enable) flush after INTR, QUIT, or SUSP.
.RE

.sp
.ne 2
.mk
.na
\fBstwrap\fR (\fB-stwrap\fR)\fR
.ad
.RS 22n
.rt
Disable (enable) truncation of lines longer than
.B 79
characters on a
synchronous line.
.RE

.sp
.ne 2
.mk
.na
\fBtostop\fR (\fB-tostop\fR)\fR
.ad
.RS 22n
.rt
Send (do not send)
.B SIGTTOU
when background processes write to the
terminal.
.RE

.sp
.ne 2
.mk
.na
\fBechoctl\fR \fB(\fB-echoctl\fB)\fR
.ad
.RS 22n
.rt
Echo (do not echo) control characters as \fB^\fIchar,\fR delete as
.BR ^? .
.RE

.sp
.ne 2
.mk
.na
\fBechoprt\fR \fB(\fB-echoprt\fB)\fR
.ad
.RS 22n
.rt
Echo (do not echo) erase character as character is ``erased''.
.RE

.sp
.ne 2
.mk
.na
\fBechoke\fR \fB(\fB-echoke\fB)\fR
.ad
.RS 22n
.rt
BS-SP-BS erase (do not BS-SP-BS erase) entire line on line kill.
.RE

.sp
.ne 2
.mk
.na
\fBflusho\fR \fB(\fB-flusho\fB)\fR
.ad
.RS 22n
.rt
Output is (is not) being flushed.
.RE

.sp
.ne 2
.mk
.na
\fBpendin\fR \fB(\fB-pendin\fB)\fR
.ad
.RS 22n
.rt
Retype (do not retype) pending input at next read or input character.
.RE

.sp
.ne 2
.mk
.na
\fBiexten\fR \fB(\fB-iexten\fB)\fR
.ad
.RS 22n
.rt
Enable (disable) special control characters not currently controlled by
.BR icanon ,
.BR isig ,
.BR ixon ,
or
.BR ixoff :
.BR VEOL ,
.BR VSWTCH ,
.BR VREPRINT ,
.BR VDISCARD ,
.BR VDSUSP ,
.BR VWERASE ,
.BR "and VLNEXT" .
.RE

.sp
.ne 2
.mk
.na
\fBstflush\fR \fB(\fB-stflush\fR)\fR
.ad
.RS 22n
.rt
Enable (disable) flush on a synchronous line after every
.BR write (2).
.RE

.sp
.ne 2
.mk
.na
\fBstappl\fR \fB(\fB-stappl\fR)\fR
.ad
.RS 22n
.rt
Use application mode (use line mode) on a synchronous line.
.RE

.SS "Hardware Flow Control Modes"
.sp
.ne 2
.mk
.na
\fBrtsxoff\fR (\fB-rtsxoff\fR)\fR
.ad
.RS 22n
.rt
Enable (disable) RTS hardware flow control on input.
.RE

.sp
.ne 2
.mk
.na
\fBctsxon\fR (\fB-ctsxon\fR)\fR
.ad
.RS 22n
.rt
Enable (disable) CTS hardware flow control on output.
.RE

.sp
.ne 2
.mk
.na
\fBdtrxoff\fR (\fB-dtrxoff\fR)\fR
.ad
.RS 22n
.rt
Enable (disable) DTR hardware flow control on input.
.RE

.sp
.ne 2
.mk
.na
\fBcdxon\fR (\fB-cdxon\fR)\fR
.ad
.RS 22n
.rt
Enable (disable) CD hardware flow control on output.
.RE

.sp
.ne 2
.mk
.na
\fBisxoff\fR (\fB-isxoff\fR)\fR
.ad
.RS 22n
.rt
Enable (disable) isochronous hardware flow control on input.
.RE

.SS "Clock Modes"
.sp
.ne 2
.mk
.na
.B xcibrg
.ad
.RS 13n
.rt
Get transmit clock from internal baud rate generator.
.RE

.sp
.ne 2
.mk
.na
.B xctset
.ad
.RS 13n
.rt
Get the transmit clock from transmitter signal element timing (DCE source)
lead, CCITT V.24 circuit 114, EIA-232-D pin 15.
.RE

.sp
.ne 2
.mk
.na
.B xcrset
.ad
.RS 13n
.rt
Get transmit clock from receiver signal element timing (DCE source) lead,
CCITT V.24 circuit 115, EIA-232-D pin 17.
.RE

.sp
.ne 2
.mk
.na
.B rcibrg
.ad
.RS 13n
.rt
Get receive clock from internal baud rate generator.
.RE

.sp
.ne 2
.mk
.na
.B rctset
.ad
.RS 13n
.rt
Get receive clock from transmitter signal element timing (DCE source) lead,
CCITT V.24 circuit 114, EIA-232-D pin 15.
.RE

.sp
.ne 2
.mk
.na
.B rcrset
.ad
.RS 13n
.rt
Get receive clock from receiver signal element timing (DCE source) lead,
CCITT V.24 circuit 115, EIA-232-D pin 17.
.RE

.sp
.ne 2
.mk
.na
\fBtsetcoff\fR
.ad
.RS 13n
.rt
Transmitter signal element timing clock not provided.
.RE

.sp
.ne 2
.mk
.na
.B tsetcrbrg
.ad
.RS 13n
.rt
Output receive baud rate generator on transmitter signal element timing
(DTE source) lead, CCITT V.24 circuit 113, EIA-232-D pin 24.
.RE

.sp
.ne 2
.mk
.na
.B tsetctbrg
.ad
.RS 13n
.rt
Output transmit baud rate generator on transmitter signal element timing
(DTE source) lead, CCITT V.24 circuit 113, EIA-232-D pin 24.
.RE

.sp
.ne 2
.mk
.na
.B tsetctset
.ad
.RS 13n
.rt
Output transmitter signal element timing (DCE source) on transmitter signal
element timing (DTE source) lead, CCITT V.24 circuit 113, EIA-232-D pin
24.
.RE

.sp
.ne 2
.mk
.na
.B tsetcrset
.ad
.RS 13n
.rt
Output receiver signal element timing (DCE source) on transmitter signal
element timing (DTE source) lead, CCITT V.24 circuit 113, EIA-232-D pin
24.
.RE

.sp
.ne 2
.mk
.na
\fBrsetcoff\fR
.ad
.RS 13n
.rt
Receiver signal element timing clock not provided.
.RE

.sp
.ne 2
.mk
.na
.B rsetcrbrg
.ad
.RS 13n
.rt
Output receive baud rate generator on receiver signal element timing (DTE
source) lead, CCITT V.24 circuit 128, no EIA-232-D pin.
.RE

.sp
.ne 2
.mk
.na
.B rsetctbrg
.ad
.RS 13n
.rt
Output transmit baud rate generator on receiver signal element timing (DTE
source) lead, CCITT V.24 circuit 128, no EIA-232-D pin.
.RE

.sp
.ne 2
.mk
.na
.B rsetctset
.ad
.RS 13n
.rt
Output transmitter signal element timing (DCE source) on receiver signal
element timing (DTE source) lead, CCITT V.24 circuit 128, no EIA-232-D
pin.
.RE

.sp
.ne 2
.mk
.na
.B rsetcrset
.ad
.RS 13n
.rt
Output receiver signal element timing (DCE source) on receiver signal
element timing (DTE source) lead, CCITT V.24 circuit 128, no EIA-232-D
pin.
.RE

.SS "Control Assignments"
.sp
.ne 2
.mk
.na
.I control-character c
.ad
.sp .6
.RS 4n
Set
.I control-character
to
.IR c ,
where:
.sp
.ne 2
.mk
.na
.I control-character
.ad
.RS 21n
.rt
is
.BR ctab ,
.BR discard ,
.BR dsusp ,
\fBeof\fR, \fBeol\fR,
.BR eol2 ,
.BR erase ,
.BR intr ,
.BR kill ,
.BR lnext ,
.BR quit ,
.BR reprint ,
.BR start ,
.BR stop ,
.BR susp ,
.BR swtch ,
or
\fBwerase\fR (\fBctab\fR is used with
.BR -stappl ,
see
.BR termio (7I)).
For information on
.BR swtch ,
see NOTES.
.RE

.sp
.ne 2
.mk
.na
.I c
.ad
.RS 21n
.rt
If
.I c
is a single character, the control character is set to that
character.
.sp
In the POSIX locale, if
.I c
is preceded by a caret (\fB^\fR) indicating
an escape from the shell and is one of those listed in the
.I ^c
column
of the following table, then its value used (in the Value column) is the
corresponding control character (for example, ``\fB^d\fR'' is a CTRL-d).
``\fB^?\fR'' is interpreted as DEL and ``\fB^\(mi\fR'' is interpreted as
undefined.
.RE

.RE

.sp

.sp
.TS
tab() box;
cw(.92i) cw(.92i) cw(.92i) cw(.92i) cw(.92i) cw(.92i)
lw(.92i) lw(.92i) lw(.92i) lw(.92i) lw(.92i) lw(.92i)
.
\fB^\fIc\fR\fBValue\fR\fB^\fIc\fR\fBValue\fR\fB^\fIc\fR\fBValue\fR
\fBa\fR, A<SOH>\fBl\fR, L<FF>\fBw\fR, W<ETB>
\fBb\fR, B<STX>\fBm\fR, M<CR>\fBx\fR, X<CAN>
\fBc\fR, C<ETX>\fBn\fR, N<SO>\fBy\fR, Y<EM>
\fBd\fR, D<EOT>\fBo\fR, O<SI>\fBz\fR, Z<SUB>
\fBe\fR, E<ENQ>\fBp\fR, P<DLE>\fB[\fR<ESC>
\fBf\fR, F<ACK>\fBq\fR, Q<DC1>\fB\e\fR<FS>
\fBg\fR, G<BEL>\fBr\fR, R<DC2>\fB]\fR<GS>
\fBh\fR, H<BS>\fBs\fR, S<DC3>\fB^\fR<RS>
\fBi\fR, I<HT>\fBt\fR, T<DC4>\fB_\fR<US>
\fBj\fR, J<LF>\fBu\fR, U<NAK>\fB?\fR<DEL>
\fBk\fR, K<VT>\fBv\fR, V<SYN>
.TE

.sp
.ne 2
.mk
.na
\fBmin\fR \fInumber\fR
.ad
.br
.na
\fBtime\fR \fInumber\fR
.ad
.RS 15n
.rt
Set the value of
.B min
or
.B time
to
.IR number .
\fBMIN\fR and
\fBTIME\fR are used in Non-Canonical mode input processing
(\fB-icanon\fR).
.RE

.sp
.ne 2
.mk
.na
\fBline\fR \fIi\fR
.ad
.RS 15n
.rt
Set line discipline to
.I i
( \fB0\fR< \fIi\fR <\fB127\fR).
.RE

.SS "Combination Modes"
.sp
.ne 2
.mk
.na
.I saved settings
.ad
.RS 24n
.rt
Set the current terminal characteristics to the saved settings produced by
the
.B -g
option.
.RE

.sp
.ne 2
.mk
.na
\fBevenp\fR or \fBparity\fR
.ad
.RS 24n
.rt
Enable
.B parenb
and
.BR cs7 ,
or disable
.BR parodd .
.RE

.sp
.ne 2
.mk
.na
.B oddp
.ad
.RS 24n
.rt
Enable
.BR parenb ,
.BR cs7 ,
and
.BR parodd .
.RE

.sp
.ne 2
.mk
.na
.B spacep
.ad
.RS 24n
.rt
Enable
.BR parenb ,
.BR cs7 ,
and
.BR parext .
.RE

.sp
.ne 2
.mk
.na
.B markp
.ad
.RS 24n
.rt
Enable
.BR parenb ,
.BR cs7 ,
.BR parodd ,
and
.BR parext .
.RE

.sp
.ne 2
.mk
.na
.BR -parity ,
or
.BR -evenp
.ad
.RS 24n
.rt
Disable
.BR parenb ,
and set
.BR cs8 .
.RE

.sp
.ne 2
.mk
.na
.B -oddp
.ad
.RS 24n
.rt
Disable
.B parenb
and
.BR parodd ,
and set
.BR cs8 .
.RE

.sp
.ne 2
.mk
.na
.B -spacep
.ad
.RS 24n
.rt
Disable
.B parenb
and
.BR parext ,
and set
.BR cs8 .
.RE

.sp
.ne 2
.mk
.na
.B -markp
.ad
.RS 24n
.rt
Disable
.BR parenb ,
.BR parodd ,
and
.BR parext ,
and set
.BR cs8 .
.RE

.sp
.ne 2
.mk
.na
\fBraw\fR (\fB-raw\fR or \fBcooked\fR)\fR
.ad
.RS 24n
.rt
Enable (disable) raw input and output. Raw mode is equivalent to setting:

.sp
.in +2
.nf
stty cs8 -icanon min 1 time 0 -isig -xcase \e
    -inpck -opost
.fi
.in -2

.RE

.SS "/usr/bin/stty, /usr/xpg6/bin/stty"
.sp
.ne 2
.mk
.na
\fBnl\fR (\fB-nl\fR)\fR
.ad
.RS 12n
.rt
Unset (set)
.BR icrnl ,
.BR onlcr .
In addition
.B -nl
unsets
.BR inlcr ,
.BR igncr ,
.BR ocrnl ,
and
.BR onlret .
.RE

.SS "/usr/xpg4/bin/stty"
.sp
.ne 2
.mk
.na
\fBnl\fR (\fB-nl\fR)\fR
.ad
.RS 24n
.rt
Set (unset)
.BR icrnl .
In addition,
.B -nl
unsets
.BR inlcr ,
.BR igncr ,
.BR ocrnl ,
and
.BR onlret ;
\fB-nl\fR sets
.BR onlcr ,
and
\fBnl\fR unsets \fBonlcr\fR.
.RE

.sp
.ne 2
.mk
.na
\fBlcase\fR (\fB-lcase\fR)\fR
.ad
.RS 24n
.rt
Set (unset)
.BR xcase ,
.BR iuclc ,
and
.BR olcuc .
.RE

.sp
.ne 2
.mk
.na
\fBLCASE\fR (\fB-LCASE\fR)\fR
.ad
.RS 24n
.rt
Same as
.BR lcase
.RB ( -lcase ).
.RE

.sp
.ne 2
.mk
.na
\fBtabs\fR (\fB-tabs\fR or \fBtab3\fR)\fR
.ad
.RS 24n
.rt
Preserve (expand to spaces) tabs when printing.
.RE

.sp
.ne 2
.mk
.na
.B ek
.ad
.RS 24n
.rt
Reset ERASE and KILL characters back to normal DEL and CTRL-u,
respectively.
.RE

.sp
.ne 2
.mk
.na
.B sane
.ad
.RS 24n
.rt
Reset all modes to some reasonable values.
.RE

.sp
.ne 2
.mk
.na
.I term
.ad
.RS 24n
.rt
Set all modes suitable for the terminal type
.IR term ,
where
.IR term
is one of
.BR tty33 ,
.BR tty37 ,
.BR vt05 ,
.BR tn300 ,
.BR ti700 ,
or
.BR tek .
.RE

.sp
.ne 2
.mk
.na
.B async
.ad
.RS 24n
.rt
Set normal asynchronous communications where clock settings are
.BR xcibrg ,
.BR rcibrg ,
\fBtsetcoff\fR and \fBrsetcoff\fR.
.RE

.SS "Window Size"
.sp
.ne 2
.mk
.na
\fBrows\fR \fIn\fR
.ad
.RS 13n
.rt
Set window size to
.I n
rows.
.RE

.sp
.ne 2
.mk
.na
\fBcolumns\fR \fIn\fR
.ad
.RS 13n
.rt
Set window size to
.I n
columns.
.RE

.sp
.ne 2
.mk
.na
\fBcols\fR \fIn\fR
.ad
.RS 13n
.rt
Set window size to
.I n
columns.
.B cols
is a shorthand alias for
columns.
.RE

.sp
.ne 2
.mk
.na
\fBypixels\fR \fIn\fR
.ad
.RS 13n
.rt
Set vertical window size to
.I n
pixels.
.RE

.sp
.ne 2
.mk
.na
\fBxpixels\fR \fIn\fR
.ad
.RS 13n
.rt
Set horizontal window size to
.I n
pixels.
.RE

.SH USAGE
.sp
.LP
The
.B -g
flag is designed to facilitate the saving and restoring of
terminal state from the shell level. For example, a program can:
.sp
.in +2
.nf
saveterm="$(stty -g)"      # save terminal state
stty (new settings)        # set new state
\&.\|.\|.                        # .\|.\|.
stty $saveterm             # restore terminal state
.fi
.in -2
.sp

.sp
.LP
Since the
.B -a
format is so loosely specified, scripts that save and
restore terminal settings should use the
.B -g
option.
.SH ENVIRONMENT VARIABLES
.sp
.LP
See
.BR environ (5)
for descriptions of the following environment
variables that affect the execution of
.BR stty :
.BR LANG ,
.BR LC_ALL ,
.BR LC_CTYPE ,
.BR LC_MESSAGES ,
and
.BR NLSPATH .
.SH EXIT STATUS
.sp
.LP
The following exit values are returned:
.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 6n
.rt
Successful completion.
.RE

.sp
.ne 2
.mk
.na
.B >0
.ad
.RS 6n
.rt
An error occurred.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.SS "/usr/bin/stty"
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcsu
.TE

.SS "/usr/xpg4/bin/stty"
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWxcu4
_
Interface StabilityCommitted
_
StandardSee \fBstandards\fR(5).
.TE

.SS "/usr/xpg6/bin/stty"
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWxcu6
_
Interface StabilityCommitted
_
StandardSee \fBstandards\fR(5).
.TE

.SH SEE ALSO
.sp
.LP
.BR tabs (1),
.BR ioctl (2),
.BR write (2),
.BR getwidth (3C),
.BR attributes (5),
.BR environ (5),
.BR standards (5),
.BR ldterm (7M),
.BR termio (7I),
.BR termiox (7I)
.SH NOTES
.sp
.LP
Solaris does not support any of the actions implied by
.BR swtch ,
which
was used by the
.B sxt
driver on System V release 4. Solaris allows the
\fBswtch\fR value to be set, and prints it out if set, but it does not
perform the
.B swtch
action.
.sp
.LP
The job switch functionality on Solaris is actually handled by job control.
\fBsusp\fR is the correct setting for this.
