'\" te
.\" Copyright 1989 AT&T
.\" Copyright (c) 1992, X/Open Company Limited  All Rights Reserved
.\" Portions Copyright (c) 1995, Sun Microsystems, Inc.  All Rights Reserved
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH tabs 1 "1 Feb 1995" "SunOS 5.11" "User Commands"
.SH NAME
tabs \- set tabs on a terminal
.SH SYNOPSIS
.LP
.nf
\fBtabs\fR [\fB-n\fR | \(mi\(mi\fIfile\fR
      [[\fB-code\fR] | \fB-a\fR | \fB-a2\fR | \fB-c\fR | \fB-c2\fR | \fB-c3\fR | \fB-f\fR | \fB-p\fR | \fB-s\fR | \fB-u\fR]]
      q!! [+m [\fIn\fR]] [\fB-T\fR \fItype\fR]
.fi

.LP
.nf
\fBtabs\fR [\fB-T\fR \fItype\fR] [+ \fIm\fR [\fIn\fR]] \fIn1\fR [, \fIn2\fR ,.\|.\|.]
.fi

.SH DESCRIPTION
.sp
.LP
The
.B tabs
utility sets the tab stops on the user's terminal according
to a tab specification, after clearing any previous settings. The user's
terminal must have remotely settable hardware tabs.
.SH OPTIONS
.sp
.LP
The following options are supported. If a given flag occurs more than once,
the last value given takes effect:
.sp
.ne 2
.mk
.na
.B -T
.I type
.ad
.RS 12n
.rt
.B tabs
needs to know the type of terminal in order to set tabs and
margins.
.I type
is a name listed in
.BR term (5).
If no
.B -T
flag is
supplied,
.B tabs
uses the value of the environment variable
.BR TERM .
If the value of
.B TERM
is
.I NULL
or
.B TERM
is not defined in the
environment (see
.BR environ (5)),
.B tabs
uses
.B ansi+tabs
as the
terminal type to provide a sequence that will work for many terminals.
.RE

.sp
.ne 2
.mk
.na
\fB+m[\fIn\fB]\fR
.ad
.RS 12n
.rt
The margin argument may be used for some terminals. It causes all tabs to be
moved over \fIn\fR columns by making column \fIn\fB+1\fR the left margin.
If
.B +m
is given without a value of
.IR n ,
the value assumed is
.BR 10 .
For a TermiNet, the first value in the tab list should be
.BR 1 ,
or the margin will move even further to the right. The normal (leftmost)
margin on most terminals is obtained by
.BR +m0 .
The margin for most
terminals is reset only when the
.B +m
flag is given explicitly.
.RE

.SS "Tab Specification"
.sp
.LP
Four types of tab specification are accepted.  They are described below:
canned, repetitive (\fB-\fIn\fR), arbitrary (\fIn1,n2,.\|.\|.\fR), and file
(\fB-\fIfile\fR).
.sp
.LP
If no tab specification is given, the default value is \fB\(mi8\fR, that is,
UNIX system ``standard'' tabs. The lowest column number is
.BR 1 .
Note:
For
.BR tabs ,
column 1 always refers to the leftmost column on a terminal,
even one whose column markers begin at 0, for example, the DASI 300, DASI
300s, and DASI 450.
.SS "\fICanned\fR \fB-code\fR"
.sp
.LP
Use one of the codes listed below to select a canned set of tabs. If more
than one code is specified, the last code option will be used.  The legal
codes and their meanings are as follows:
.sp
.ne 2
.mk
.na
.B -a
.ad
.RS 7n
.rt
.B 1,10,16,36,72
Assembler, IBM S/370, first format
.RE

.sp
.ne 2
.mk
.na
.B -a2
.ad
.RS 7n
.rt
.B 1,10,16,40,72
.sp
Assembler, IBM S/370, second format
.RE

.sp
.ne 2
.mk
.na
.B -c
.ad
.RS 7n
.rt
.B 1,8,12,16,20,55
.sp
COBOL, normal format
.RE

.sp
.ne 2
.mk
.na
.B -c2
.ad
.RS 7n
.rt
.B 1,6,10,14,49
.sp
COBOL compact format (columns 1-6 omitted). Using this code, the first typed
character corresponds to card column 7, one space gets you to column 8, and a
tab reaches column 12. Files using this tab setup should include a format
specification as follows (see
.BR fspec (4)):
.sp
.in +2
.nf
<:t\fB-c2\fR \|m6 \|s66 \|d:>
.fi
.in -2

.RE

.sp
.ne 2
.mk
.na
.B -c3
.ad
.RS 7n
.rt
.B 1,6,10,14,18,22,26,30,34,38,42,46,50,54,58,62,67
.sp
COBOL compact format (columns 1-6 omitted), with more tabs than
\fB-c2\&.\fR This is the recommended format for COBOL. The
appropriate format specification is (see
.BR fspec (4)):
.sp
.in +2
.nf
<:t\fB-c3\fR \|m6 \|s66 \|d:>
.fi
.in -2

.RE

.sp
.ne 2
.mk
.na
.B -f
.ad
.RS 7n
.rt
.B 1,7,11,15,19,23
.sp
FORTRAN
.RE

.sp
.ne 2
.mk
.na
.B -p
.ad
.RS 7n
.rt
.B 1,5,9,13,17,21,25,29,33,37,41,45,49,53,57,61
.sp
PL/I
.RE

.sp
.ne 2
.mk
.na
.B -s
.ad
.RS 7n
.rt
.B 1,10,55
.sp
SNOBOL
.RE

.sp
.ne 2
.mk
.na
.B -u
.ad
.RS 7n
.rt
.B 1,12,20,44
.sp
UNIVAC 1100 Assembler
.RE

.SS "\fIRepetitive\fR"
.sp
.ne 2
.mk
.na
\fB-\fIn\fR
.ad
.RS 7n
.rt
A
.I repetitive
specification requests tabs at columns 1+\fIn\fR,
1+2*\fIn\fR, etc., where \fIn\fR is a single-digit decimal number. Of
particular importance is the value
.BR 8 :
this represents the UNIX system
``standard'' tab setting, and is the most likely tab setting to be found at a
terminal. When \fB\(mi0\fR is used, the tab stops are cleared and no new ones
are set.
.RE

.SS "\fIArbitrary\fR"
.sp
.LP
See OPERANDS.
.SS "\fIFile\fR"
.sp
.ne 2
.mk
.na
\fB-\fIfile\fR
.ad
.RS 9n
.rt
If the name of a \fIfile\fR is given, \fBtabs\fR reads the first line of the
file, searching for a format specification (see
.BR fspec (4)).
If it finds
one there, it sets the tab stops according to it, otherwise it sets them as
\fB\(mi8\fR\&. This type of specification may be used to make sure that a
tabbed file is printed with correct tab settings, and would be used with the
.B pr
command:
.sp
.in +2
.nf
example% \fBtabs -\fI file\fR; pr\fI file\fR
.fi
.in -2
.sp

.RE

.sp
.LP
Tab and margin setting is performed via the standard output.
.SH OPERANDS
.sp
.LP
The following operand is supported:
.sp
.ne 2
.mk
.na
\fIn1\fR[,\fIn2\fR,\|.\|.\|.]\fR
.ad
.RS 22n
.rt
The
.I arbitrary
format consists of tab-stop values separated by commas
or spaces. The tab-stop values must be positive decimal integers in ascending
order. Up to 40 numbers are allowed. If any number (except the first one) is
preceded by a plus sign, it is taken as an increment to be added to the
previous value. Thus, the formats \fB1\fR,\fB10\fR,\fB20\fR,\fB30\fR, and
\fB1\fR,\fB10\fR,\fB+10\fR,\fB+10\fR are considered identical.
.RE

.SH EXAMPLES
.LP
.B Example 1
Using the tabs command
.sp
.LP
The following command is an example using
.B -code
.RI ( " canned"
specification) to set tabs to the settings required by the IBM assembler:
columns 1, 10, 16, 36, 72:

.sp
.in +2
.nf
example% \fBtabs -a\fR
.fi
.in -2
.sp

.sp
.LP
The next command is an example of using
.B -n
(\fIrepetitive\fR
specification), where
.I n
is
.BR 8 ,
causes tabs to be set every eighth
position: 1+(1*8), 1+(2*8), .\|.\|.\| which evaluate to columns 9, 17,
\&.\|.\|.\|:

.sp
.in +2
.nf
example% \fBtabs \(mi8\fR
.fi
.in -2
.sp

.sp
.LP
This command uses \fIn1\fR,\fIn2\fR,.\|.\|.\| (\fIarbitrary\fR
specification) to set tabs at columns 1, 8, and 36:

.sp
.in +2
.nf
example% \fBtabs 1,8,36\fR
.fi
.in -2
.sp

.sp
.LP
The last command is an example of using \fI-file\fR (\fBfile\fR
specification) to indicate that tabs should be set according to the first
line of $\fBHOME\fR/fspec.list/att4425  (see \fBfspec\fR(4)).

.sp
.in +2
.nf
example% \fBtabs -$HOME/fspec.list/att4425\fR
.fi
.in -2
.sp

.SH ENVIRONMENT VARIABLES
.sp
.LP
See
.BR environ (5)
for descriptions of the following environment variables
that affect the execution of
.BR tabs :
.BR LANG ,
.BR LC_ALL ,
.BR LC_CTYPE ,
.BR LC_MESSAGES ,
and
.BR NLSPATH .
.sp
.ne 2
.mk
.na
.B TERM
.ad
.RS 9n
.rt
Determine the terminal type. If this variable is unset or null, and if the
.B -T
option is not specified, terminal type
.B ansi+tabs
will be
used.
.RE

.SH EXIT STATUS
.sp
.LP
The following exit values are returned:
.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 7n
.rt
Successful completion.
.RE

.sp
.ne 2
.mk
.na
.B >0
.ad
.RS 7n
.rt
An error occurred.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcsu
_
CSIEnabled
_
Interface StabilityStandard
.TE

.SH SEE ALSO
.sp
.LP
.BR expand (1),
.BR newform (1),
.BR pr (1),
.BR stty (1),
.BR tput (1),
.BR fspec (4),
.BR terminfo (4),
.BR attributes (5),
.BR environ (5),
.BR term (5),
.BR standards (5)
.SH NOTES
.sp
.LP
There is no consistency among different terminals regarding ways of clearing
tabs and setting the left margin.
.sp
.LP
.B tabs
clears only
.B 20
tabs (on terminals requiring a long
sequence), but is willing to set
.BR 64 .
.sp
.LP
The
.I tabspec
used with the
.B tabs
command is different from the one
used with the \fBnewform\fR command. For example, \fBtabs\fR \fB\(mi8\fR sets
every eighth position; whereas \fBnewform\fR \fB\(mii\(mi8\fR indicates that
tabs are set every eighth position.
