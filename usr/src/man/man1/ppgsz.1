'\" te
.\" Copyright (c) 2003, Sun Microsystems, Inc. All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH ppgsz 1 "23 Jan 2003" "SunOS 5.11" "User Commands"
.SH NAME
ppgsz \- set preferred page size for stack, heap, and/or other anonymous
segments
.SH SYNOPSIS
.LP
.nf
\fB/usr/bin/ppgsz\fR [\fB-F\fR] \fB-o\fR \fIoption\fR[,\fIoption\fR] \fIcmd\fR | \fB-p\fR \fIpid\fR...
.fi

.SH DESCRIPTION
.sp
.LP
The
.B ppgsz
utility sets the preferred page size for stack, heap, and/or
other anonymous segments for the target process(es), that is, the launched
.I cmd
or the process(es) in the pid list.
.B ppgsz
stops the target
process(es) while changing the page size. See
.BR memcntl (2).
.SH OPTIONS
.sp
.LP
The following options are supported:
.sp
.ne 2
.mk
.na
.B -F
.ad
.RS 22n
.rt
Force. Sets the preferred page size options(s) for target process(es) even
if controlled by other process(es). Caution should be exercised when using
the
.B -F
flag. See
.BR proc (1).
.RE

.sp
.ne 2
.mk
.na
\fB-o\fR \fIoption\fR[,\fIoption\fR]\fR
.ad
.RS 22n
.rt
The
.IR option "s are:"
.sp
.ne 2
.mk
.na
\fBheap\fR=\fIsize\fR
.ad
.RS 14n
.rt
This option specifies the preferred page size for the heap of the target
process(es).
.B heap
is defined to be the bss (uninitialized data) and the
brk area that immediately follows the bss (see
.BR brk (2)).
The preferred
heap page size is set for the existing heap and for any additional heap
memory allocated in the future. See NOTES.
.RE

.sp
.ne 2
.mk
.na
\fBstack\fR=\fIsize\fR
.ad
.RS 14n
.rt
This option specifies the preferred page size for the stack of the target
process(es). The preferred stack page size is set for the existing stack and
newly allocated parts of the stack as it expands.
.RE

.sp
.ne 2
.mk
.na
\fBanon\fR=\fIsize\fR
.ad
.RS 14n
.rt
This option specifies the preferred page size for all existing
.B MAP_PRIVATE
anonymous segments of the target process(es),  other than
.B heap
and
.BR stack ,
which are large enough to fit at least one
aligned page of the specified size. For the segments that are large enough,
the preferred page size is set starting at the first size-aligned address in
the segment. The
.B anon
preferred pagesize is not applied to
.B MAP_PRIVATE
anonymous segments created in the future. See
.B MAP_ANON
in
.BR mmap (2).
.sp
Anonymous memory refers to
.B MAP_PRIVATE
pages that are not directly
associated with a file in some filesystem. The
.B ppgsz
command uses
.BR memcntl (2)
to set the preferred page size for anonymous segments. See
.B MC_HAT_ADVISE
in
.BR memcntl (2).
.RE

At least one of the above options must be specified.
.sp
.I size
must be a supported page size (see
.BR pagesize (1))
or
.BR 0 ,
in which case the system will select an appropriate page size. See
.BR memcntl (2).
.sp
.I size
defaults to bytes and can be specified in octal
.RB ( 0 ),
decimal, or hexadecimal
.RB ( 0x ).
The numeric value can be qualified with
.BR K ,
.BR M ,
.BR G ,
or
.B T
to specify Kilobytes, Megabytes,
Gigabytes, or Terabytes, respectively.
.BR 4194304 ,
.BR 0x400000 ,
.BR 4096K ,
.BR 0x1000K ,
and
.B 4M
are different ways to specify 4
Megabytes.
.RE

.sp
.ne 2
.mk
.na
.B -p
.I pid
.ad
.RS 22n
.rt
Sets the preferred page size option(s) for the target process(es) in the
process-id (\fIpid\fR) list following the
.B -p
option. The pid list can
also consist of names in the
.B /proc
directory. Only the process owner or
the super-user is permitted to set page size.
.sp
.I cmd
is interpreted if
.B -p
is not specified.
.B ppgsz
launches
.I cmd
and applies page size option(s) to the new process.
.sp
The heap and stack preferred page sizes are inherited. Child process(es)
created (see
.BR fork (2))
from the launched process or the target
process(es) in the pid list after
.B ppgsz
completes will inherit the
preferred heap and stack page sizes. The preferred page sizes of all segments
are set back to the default system page size on
.BR exec (2)
(see
.BR getpagesize (3C)).
The preferred page size for all other anonymous
segments is not inherited by children of the launched or target
process(es).
.RE

.SH EXAMPLES
.LP
.B Example 1
Setting the preferred heap and stack page size
.sp
.LP
The following example sets the preferred heap page size to
.B 4M
and the
preferred stack page size to
.B 512K
for all \fBora\fR\(emowned processes
running commands that begin with
.BR ora :

.sp
.in +2
.nf
example% \fBppgsz -o heap=4M,stack=512K -p `pgrep -u ora '^ora'`\fR
.fi
.in -2
.sp

.LP
.B Example 2
Setting the preferred anonymous page size
.sp
.LP
The following example sets the preferred page size of existing qualifying
anonymous segments to
.B 512k
for process ID
.BR 953 :

.sp
.in +2
.nf
example% \fBppgsz -o anon=512k -p 953\fR
.fi
.in -2
.sp

.SH EXIT STATUS
.sp
.LP
If
.I cmd
is specified and successfully invoked (see
.BR exec (2)),
the
exit status of
.B ppgsz
will be the exit status of
.IR cmd .
Otherwise,
.B ppgsz
will exit with one of the following values:
.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 7n
.rt
Successfully set preferred page size(s) for processes in the pid list.
.RE

.sp
.ne 2
.mk
.na
.B 125
.ad
.RS 7n
.rt
An error occurred in
.BR ppgsz .
Errors include: invalid argument, 	invalid
page size(s) specified, and failure to set preferred page size(s) for one or
more processes in the pid list or
.IR cmd .
.RE

.sp
.ne 2
.mk
.na
.B 126
.ad
.RS 7n
.rt
.I cmd
was found but could not be invoked.
.RE

.sp
.ne 2
.mk
.na
.B 127
.ad
.RS 7n
.rt
.I cmd
could not be found.
.RE

.SH FILES
.sp
.ne 2
.mk
.na
.B /proc/*
.ad
.RS 29n
.rt
Process files.
.RE

.sp
.ne 2
.mk
.na
.B /usr/lib/ld/map.bssalign
.ad
.RS 29n
.rt
A template link-editor
.B mapfile
for aligning bss (see NOTES).
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWesu (32-bit)
SUNWesxu (64-bit)
_
Interface StabilityEvolving
.TE

.SH SEE ALSO
.sp
.LP
.BR ld (1),
.BR mpss.so.1 (1),
.BR pagesize (1),
.BR pgrep (1),
.BR pmap (1),
.BR proc (1),
.BR brk (2),
.BR exec (2),
.BR fork (2),
.BR memcntl (2),
.BR mmap (2),
.BR sbrk (2),
.BR getpagesize (3C),
.BR proc (4),
.BR attributes (5)
.sp
.LP
.I Linker and Libraries Guide
.SH NOTES
.sp
.LP
Due to resource constraints, the setting of the preferred page size does not
necessarily guarantee that the target process(es) will get the preferred page
size. Use
.BR pmap (1)
to view the
.B actual
heap and stack page sizes of
the target process(es) (see
.B "pmap -s"
option).
.sp
.LP
Large pages are required to be mapped at addresses that are multiples of the
size of the large page. Given that the heap is typically not large page
aligned, the starting portions of the heap (below the first large page
aligned address) are mapped with the system memory page size. See
.BR getpagesize (3C).
.sp
.LP
To provide a heap that will be mapped with a large page size, an application
can be built using a link-editor (\fBld\fR(1)) \fBmapfile\fR containing the
.B bss
segment declaration directive. Refer to the section Mapfile Option
in the
.I "Linker and Libraries Guide"
for more details of this directive
and the template
.B mapfile
provided in
.BR /usr/lib/ld/map.bssalign .
Users are cautioned that an alignment specification may be machine-specific
and may lose its benefit on different hardware platforms. A more flexible
means of requesting the most optimal underlying page size may evolve in
future releases.
.sp
.LP
.BR mpss.so.1 (1),
a preloadable shared object, can also be used to set the
preferred stack and/or heap page sizes.
