'\" te
.\" Copyright (c) 2007 Sun Microsystems, Inc. - All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" Copyright 1989
.\" Portions Copyright (c) 1982-2007 AT&T Knowledge Ventures
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH trap 1 "20 Nov 2007" "SunOS 5.11" "User Commands"
.SH NAME
trap, onintr \- shell built-in functions to respond to (hardware) signals
.SH SYNOPSIS
.SS "sh"
.LP
.nf
\fBtrap\fR [\fIargument\fR \fIn\fR [\fIn2\fR].\|.\|.]
.fi

.SS "csh"
.LP
.nf
\fBonintr\fR [\fB-|\fR \fIlabel\fR]
.fi

.SS "ksh"
.LP
.nf
\fB*trap\fR [\fIarg\fR \fIsig\fR [\fIsig2\fR.\|.\|.]]
.fi

.SS "ksh93"
.LP
.nf
\fB+trap\fR [\fB-p\fR] [\fIaction\fR \fIcondition\fR.\|.\|.]
.fi

.SH DESCRIPTION
.SS "sh"
.sp
.LP
The
.B trap
command
.I argument
is to be read and executed when the
shell receives numeric or symbolic signal(s)
.RI ( n ).
(Note:
.I argument
is scanned once when the trap is set and once when the trap
is taken.) Trap commands are executed in order of signal number or
corresponding symbolic names. Any attempt to set a trap on a signal that was
ignored on entry to the current shell is ineffective. An attempt to trap on
signal 11 (memory fault) produces an error. If
.I argument
is absent all
trap(s)
.I n
are reset to their original values. If
.I argument
is the
null string this signal is ignored by the shell and by the commands it
invokes. If
.I n
is
.B 0
the command
.I argument
is executed on
exit from the shell. The
.B trap
command with no arguments prints a list
of commands associated with each signal number.
.SS "csh"
.sp
.LP
.B onintr
controls the action of the shell on interrupts. With no
arguments,
.B onintr
restores the default action of the shell on
interrupts. (The shell terminates shell scripts and returns to the terminal
command input level). With the \fB\(mi\fR argument, the shell ignores all
interrupts. With a
.I label
.RB "argument, the shell executes a" " goto"
.I label
when an interrupt is received or a child process terminates
because it was interrupted.
.SS "ksh"
.sp
.LP
.B trap
uses
.I arg
as a command to be read and executed when the
shell receives signal(s)
.IR sig .
.I arg
is scanned once when the trap
is set and once when the trap is taken. Each
.I sig
can be specified as a
number or as the name of the signal.
.B trap
commands are executed in
order of signal number. Any attempt to set a trap on a signal that was
ignored on entry to the current shell is ineffective. If
.I arg
is
omitted or is \fB\(mi\fR, then the trap(s) for each
.I sig
are reset to
their original values. If
.I arg
is the null (the empty string, for
example, \fB""\fR) string then this signal is ignored by the shell and by
the commands it invokes. If
.I sig
is
.B ERR
then
.I arg
are
executed whenever a command has a non-zero exit status. If
.I sig
is
.B DEBUG
then
.I arg
are executed after each command. If
.I sig
is
.B 0
or
.B EXIT
for a
.B trap
set outside any function then the
command
.I arg
is executed on exit from the shell. The
.B trap
command
with no arguments prints a list of commands associated with each signal
number.
.sp
.LP
On this manual page,
.BR ksh (1)
commands that are preceded by one or two
* (asterisks) are treated specially in the following ways:
.RS +4
.TP
1.
Variable assignment lists preceding the command remain in effect when the
command completes.
.RE
.RS +4
.TP
2.
I/O redirections are processed after variable assignments.
.RE
.RS +4
.TP
3.
Errors cause a script that contains them to abort.
.RE
.RS +4
.TP
4.
Words, following a command preceded by ** that are in the format of a
variable assignment, are expanded with the same rules as a variable
assignment. This means that tilde substitution is performed after the
.B =
sign and word splitting and file name generation are not
performed.
.RE
.SS "ksh93"
.sp
.LP
.B trap
is a special built-in that defines actions to be taken when
conditions such as receiving a signal occur.
.B trap
can also be used to
display the current trap settings on standard output.
.sp
.LP
If
.I action
is
.BR - ,
.B trap
resets each condition to the default
value. If
.I action
is an empty string, the shell ignores each of the
conditions if they arise. Otherwise, the argument
.I action
is read and
executed by the shell as if it were processed by
.B eval
when one of the
corresponding conditions arise. The action of the trap overrides any
previous action associated with each specified condition. The value of
.B $?
is not altered by the trap execution.
.sp
.LP
.I condition
can be the name or number of a signal, or one of the
following:
.sp
.ne 2
.mk
.na
.B EXIT
.ad
.RS 9n
.rt
Execute this trap when the shell exits. If defined within a function with
the
.B function
reserved word, executes the trap in the caller's
environment when the function returns. The trap action is restored to the
value it had when it called the function.
.RE

.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 9n
.rt
Same as
.BR EXIT .
.RE

.sp
.ne 2
.mk
.na
.B DEBUG
.ad
.RS 9n
.rt
Execute before each simple command is executed but after the arguments are
expanded.
.RE

.sp
.ne 2
.mk
.na
.B ERR
.ad
.RS 9n
.rt
Execute whenever
.B "set -e"
would cause the shell to exit.
.RE

.sp
.ne 2
.mk
.na
.B KEYBD
.ad
.RS 9n
.rt
Execute when a key is entered from a terminal device.
.RE

.sp
.LP
Signal names are case insensitive and the
.B sig
prefix is optional.
Signals that were ignored on entry to a non-interactive shell cannot trapped
or reset although doing so does not report an error. The use of signal
numbers other than 1, 2, 3, 6, 9, 14, and 15 are not portable.
.sp
.LP
Although trap is a special built-in, specifying a condition that the shell
does not know about causes trap to exit with a
.B non-zero
exit status,
but does not terminate the invoking shell.
.sp
.LP
If no action or conditions are specified then all the current trap settings
are written to standard output.
.sp
.LP
The following options are supported by the
.B trap
built-in command in
.BR ksh93 :
.sp
.ne 2
.mk
.na
.B -p
.ad
.RS 6n
.rt
Causes the current traps to be output in a format that can be processed as
input to the shell to recreate the current traps.
.RE

.sp
.LP
The trap built-in in
.B ksh93
exits with one of the following values:
.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 6n
.rt
Successful completion.
.RE

.sp
.ne 2
.mk
.na
.B >0
.ad
.RS 6n
.rt
An error occurred.
.RE

.sp
.LP
On this manual page,
.BR ksh93 (1)
commands that are preceded by one or
two
.B +
(plus signs) are treated specially in the following ways:
.RS +4
.TP
1.
Variable assignment lists preceding the command remain in effect when the
command completes.
.RE
.RS +4
.TP
2.
I/O redirections are processed after variable assignments.
.RE
.RS +4
.TP
3.
Errors cause a script that contains them to abort.
.RE
.RS +4
.TP
4.
They are not valid function names.
.RE
.RS +4
.TP
5.
Words, following a command preceded by
.B ++
that are in the format of a
variable assignment, are expanded with the same rules as a variable
assignment. This means that tilde substitution is performed after the
.B =
sign and word splitting and file name generation are not
performed.
.RE
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcsu
.TE

.SH SEE ALSO
.sp
.LP
.BR csh (1),
.BR eval (1),
.BR exit (1),
.BR ksh (1),
.BR ksh93 (1),
.BR sh (1),
.BR attributes (5)
