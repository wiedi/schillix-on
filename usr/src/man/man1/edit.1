'\" te
.\" Copyright (c) 2008, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright (c) 1989 AT&T
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH edit 1 "11 Jun 2004" "SunOS 5.11" "User Commands"
.SH NAME
edit \- text editor (variant of ex for casual users)
.SH SYNOPSIS
.LP
.nf
\fB/usr/bin/edit\fR [\fB-|\fR \fB-s\fR] [\fB-l\fR] [\fB-L\fR] [\fB-R\fR] [\fB-r\fR [\fIfilename\fR]]
     [\fB-t\fR \fItag\fR] [\fB-v\fR] [\fB-V\fR] [\fB-x\fR] [\fB-w\fIn\fR] [\fB-C\fR]
     [+\fIcommand\fR | \fB-c\fR \fIcommand\fR] \fIfilename\fR...
.fi

.LP
.nf
\fB/usr/xpg4/bin/edit\fR [\fB-|\fR \fB-s\fR] [\fB-l\fR] [\fB-L\fR] [\fB-R\fR] [\fB-r\fR [\fIfilename\fR]]
     [\fB-t\fR \fItag\fR] [\fB-v\fR] [\fB-V\fR] [\fB-x\fR] [\fB-w\fIn\fR] [\fB-C\fR]
     [+\fIcommand\fR | \fB-c\fR \fIcommand\fR] \fIfilename\fR...
.fi

.LP
.nf
\fB/usr/xpg6/bin/edit\fR [\fB-|\fR \fB-s\fR] [\fB-l\fR] [\fB-L\fR] [\fB-R\fR] [\fB-r\fR [\fIfilename\fR]]
     [\fB-t\fR \fItag\fR] [\fB-v\fR] [\fB-V\fR] [\fB-x\fR] [\fB-w\fIn\fR] [\fB-C\fR]
     [+\fIcommand\fR | \fB-c\fR \fIcommand\fR] \fIfilename\fR...
.fi

.SH DESCRIPTION
.sp
.LP
The
.B edit
utility is a variant of the text editor
.B ex
recommended
for new or casual users who wish to use a command-oriented editor. It
operates precisely as
.B ex
with the following options automatically
set:
.sp
.ne 2
.mk
.na
.B novice
.ad
.RS 12n
.rt
.B ON
.RE

.sp
.ne 2
.mk
.na
.B report
.ad
.RS 12n
.rt
.B ON
.RE

.sp
.ne 2
.mk
.na
.B showmode
.ad
.RS 12n
.rt
.B ON
.RE

.sp
.ne 2
.mk
.na
.B magic
.ad
.RS 12n
.rt
.B OFF
.RE

.sp
.LP
The following brief introduction should help you get started with
.BR edit .
If you are using a
.B CRT
terminal you might want to learn
about the display editor
.BR vi .
.sp
.LP
To edit the contents of an existing file you begin with the command \fBedit
\fIname\fR to the shell. \fBedit\fR makes a copy of the file that you can
then edit, and tells you how many lines and characters are in the file. To
create a new file, you also begin with the command
.B edit
with a
filename: \fBedit \fIname\fR; the editor tells you it is a \fB[New
File]\fR.
.sp
.LP
The
.B edit
command prompt is the colon
.RB ( : ),
which you should see
after starting the editor. If you are editing an existing file, then you
have some lines in \fBedit\fR's buffer (its name for the copy of the file
you are editing). When you start editing,
.B edit
makes the last line of
the file the current line. Most commands to
.B edit
use the current line
if you do not tell them which line to use. Thus if you say \fBprint\fR
(which can be abbreviated
.BR p )
and type carriage return (as you should
after all
.B edit
commands), the current line is printed. If you
\fBdelete\fR (\fBd\fR) the current line, \fBedit\fR prints the new current
line, which is usually the next line in the file. If you
.B delete
the
last line, then the new last line becomes the current one.
.sp
.LP
If you start with an empty file or wish to add some new lines, then the
\fBappend\fR (\fBa\fR) command can be used. After you execute this command
(typing a carriage return after the word
.BR append ),
\fBedit\fR reads
lines from your terminal until you type a line consisting of just a dot
(\fB\&.\fR); it places these lines after the current line. The last line you
type then becomes the current line. The
.B insert
(\fBi\fR) command is
like
.BR append ,
but places the lines you type before, rather than after,
the current line.
.sp
.LP
The
.B edit
utility numbers the lines in the buffer, with the first line
having number 1. If you execute the command
.BR 1 ,
then
.B edit
types
the first line of the buffer. If you then execute the command
.BR d ,
\fBedit\fR deletes the first line, line 2 becomes line 1, and \fBedit\fR
prints the current line (the new line 1) so you can see where you are. In
general, the current line is always the last line affected by a command.
.sp
.LP
You can make a change to some text within the current line by using the
\fBsubstitute\fR (\fBs\fR) command: \fBs\fR/\fIold\fR\|/\fInew\fR/ where
\fIold\fR is the string of characters you want to replace and \fInew\fR is
the string of characters you want to replace
.I old
with.
.sp
.LP
The \fBfilename\fR (\fBf\fR) command tells you how many lines there are in
the buffer you are editing and says \fB[Modified]\fR if you have changed the
buffer. After modifying a file, you can save the contents of the file by
executing a
.B write
(\fBw\fR) command. You can leave the editor by
issuing a
.B quit
(\fBq\fR) command. If you run \fBedit\fR on a file, but
do not change it, it is not necessary (but does no harm) to
.B write
the
file back. If you try to
.B quit
from
.B edit
after modifying the
buffer without writing it out, you receive the message \fBNo write since
last change (:quit! overrides)\fR, and \fBedit\fR waits for another command.
If you do not want to write the buffer out, issue the
.B quit
command
followed by an exclamation point
.RB ( q! ).
The buffer is then
irretrievably discarded and you return to the shell.
.sp
.LP
By using the
.B d
and
.B a
commands and giving line numbers to see
lines in the file, you can make any changes you want. You should learn at
least a few more things, however, if you use
.B edit
more than a few
times.
.sp
.LP
The
.B change
(\fBc\fR) command changes the current line to a sequence
of lines you supply (as in
.BR append ,
you type lines up to a line
consisting of only a dot (\fB\&.\fR). You can tell
.B change
to change
more than one line by giving the line numbers of the lines you want to
change, that is,
.BR 3,5c .
.RB "You can print lines this way too:" " 1,23p"
prints the first 23 lines of the file.
.sp
.LP
The
.B undo
(\fBu\fR) command reverses the effect of the last command
you executed that changed the buffer. Thus if you execute a \fBsubstitute\fR
command that does not do what you want, type
.B u
and the old contents of
the line are restored. You can also
.B undo
an
.B undo
command.
\fBedit\fR gives you a warning message when a command affects more than one
line of the buffer. Note that commands such as
.B write
and
.BR quit
cannot be undone.
.sp
.LP
To look at the next line in the buffer, type carriage return. To look at a
number of lines, type
.B ^D
(while holding down the control key, press
.BR d )
rather than carriage return. This shows you a half-screen of lines
on a
.B CRT
or 12 lines on a hardcopy terminal. You can look at nearby
text by executing the
.B z
command. The current line appears in the
middle of the text displayed, and the last line displayed becomes the
current line; you can get back to the line where you were before you
executed the
.B z
command by typing \fB\&''\fR. The
.B z
command has
other options: \fBz\(mi\fR prints a screen of text (or 24 lines) ending
where you are;
.B z+
prints the next screenful. If you want less than a
screenful of lines, type
.B z.11
to display five lines before and five
lines after the current line. (Typing \fBz.\fIn\fR, when \fIn\fR is an
odd number, displays a total of
.I n
lines, centered about the current
line; when \fIn\fR is an even number, it displays \fIn\fB-1\fR lines, so
that the lines displayed are centered around the current line.) You can give
counts after other commands; for example, you can delete 5 lines starting
with the current line with the command
.BR d5 .
.sp
.LP
To find things in the file, you can use line numbers if you happen to know
them; since the line numbers change when you insert and delete lines this is
somewhat unreliable. You can search backwards and forwards in the file for
strings by giving commands of the form /\fItext\fR/ to search forward for
\fItext\fR or ?\fItext\fR? to search backward for
.IR text .
If a search
reaches the end of the file without finding
.IR text ,
it wraps around and
continues to search back to the line where you are. A useful feature here is
a search of the form /^\fItext\fR/ which searches for
.I text
at the
beginning of a line. Similarly /\fItext\fR$/ searches for
.I text
at the
end of a line. You can leave off the trailing
.B /
or
.B ?
in these
commands.
.sp
.LP
The current line has the symbolic name dot (\fB\&.\fR); this is most useful
in a range of lines as in \fB\&.,$p\fR which prints the current line plus
the rest of the lines in the file. To move to the last line in the file, you
can refer to it by its symbolic name $. Thus the command
.B $d
deletes
the last line in the file, no matter what the current line is. Arithmetic
with line references is also possible. Thus the line \fB$\fB-5\fR is the
fifth before the last and \fB\&.+20\fR is 20 lines after the current line.
.sp
.LP
You can find out the current line by typing
.BR `.=' \|.
This is useful if
you wish to move or copy a section of text within a file or between files.
Find the first and last line numbers you wish to copy or move. To move lines
10 through 20, type
.B "10,20d a"
to delete these lines from the file and
place them in a buffer named
.BR a .
\fBedit\fR has 26 such buffers named
\fBa\fR through
.BR z .
To put the contents of buffer
.B a
after the
current line, type
.BR "put a" .
If you want to move or copy these lines to
another file, execute an
.B edit
(\fBe\fR) command after copying the
lines; following the
.B e
command with the name of the other file you
wish to edit, that is,
.BR "edit chapter2" .
To copy lines without deleting
them, use
.B yank
(\fBy\fR) in place of
.BR d .
If the text you wish to
move or copy is all within one file, it is not necessary to use named
buffers. For example, to move lines 10 through 20 to the end of the file,
type
.BR "10,20m $" .
.SH OPTIONS
.sp
.LP
These options can be turned on or off using the
.B set
command in
.BR ex (1).
.sp
.ne 2
.mk
.na
.B -C
.ad
.RS 26n
.rt
Encryption option; same as the
.B -x
.RB "option, except that" " vi"
simulates the
.B C
command of
.BR ex .
The
.B C
command is like the
\fBX\fR command of
.BR ex ,
except that all text read in is assumed to have
been encrypted.
.RE

.sp
.ne 2
.mk
.na
.B -l
.ad
.RS 26n
.rt
Set up for editing LISP programs.
.RE

.sp
.ne 2
.mk
.na
.B -L
.ad
.RS 26n
.rt
List the name of all files saved as the result of an editor or system
crash.
.RE

.sp
.ne 2
.mk
.na
.B -R
.ad
.RS 26n
.rt
\fBReadonly\fR mode; the \fBreadonly\fR flag is set, preventing accidental
overwriting of the file.
.RE

.sp
.ne 2
.mk
.na
\fB-r\fI filename\fR
.ad
.RS 26n
.rt
Edit \fIfilename\fR after an editor or system crash. (Recovers the version
of \fIfilename\fR that was in the buffer when the crash occurred.)
.RE

.sp
.ne 2
.mk
.na
.BI -t " tag"
.ad
.RS 26n
.rt
Edit the file containing the
.I tag
and position the editor at its
definition.
.RE

.sp
.ne 2
.mk
.na
.B -v
.ad
.RS 26n
.rt
Start up in display editing state using
.BR vi .
You can achieve the same
effect by simply typing the
.B vi
command itself.
.RE

.sp
.ne 2
.mk
.na
.B -V
.ad
.RS 26n
.rt
Verbose. When
.B ex
commands are read by means of standard input, the
input is echoed to standard error. This can be useful when processing
\fBex\fR commands within shell scripts.
.RE

.sp
.ne 2
.mk
.na
.B -x
.ad
.RS 26n
.rt
Encryption option; when used,
.B edit
simulates the
.B X
command of
\fBex\fR and prompts the user for a key. This key is used to encrypt and
decrypt text using the algorithm of the
.B crypt
.RB "command. The" " X"
command makes an educated guess to determine whether text read in is
encrypted or not. The temporary buffer file is encrypted also, using a
transformed version of the key typed in for the
.B -x
option.
.RE

.sp
.ne 2
.mk
.na
\fB-w\fIn\fR
.ad
.RS 26n
.rt
Set the default window size to
.IR n .
This is useful when using the
editor over a slow speed line.
.RE

.sp
.ne 2
.mk
.na
\fB+\fIcommand\fR | \fB-c\fI  command\fR
.ad
.RS 26n
.rt
Begin editing by executing the specified editor
.B command
(usually a
search or positioning command).
.RE

.sp
.ne 2
.mk
.na
\fB\(mi\fR | \fB-s\fR
.ad
.RS 26n
.rt
Suppress all interactive user feedback.  This is useful when processing
editor scripts.
.RE

.sp
.LP
The \fIfilename\fR argument indicates one or more files to be edited.
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.SS "/usr/bin/edit"
.sp

.sp
.TS
tab() box;
lw(2.75i) lw(2.75i)
lw(2.75i) lw(2.75i)
.
\fBATTRIBUTE TYPE\fR\fBATTRIBUTE VALUE\fR
AvailabilitySUNWcsu
CSIEnabled
.TE

.SS "/usr/xpg4/bin/edit"
.sp

.sp
.TS
tab() box;
lw(2.75i) lw(2.75i)
lw(2.75i) lw(2.75i)
.
\fBATTRIBUTE TYPE\fR\fBATTRIBUTE VALUE\fR
AvailabilitySUNWxcu4
CSIEnabled
.TE

.SS "/usr/xpg6/bin/edit"
.sp

.sp
.TS
tab() box;
lw(2.75i) lw(2.75i)
lw(2.75i) lw(2.75i)
.
\fBATTRIBUTE TYPE\fR\fBATTRIBUTE VALUE\fR
AvailabilitySUNWxcu6
CSIEnabled
.TE

.SH SEE ALSO
.sp
.LP
.BR ed (1),
.BR ex (1),
.BR vi (1),
.BR attributes (5),
.BR XPG4 (5)
.SH NOTES
.sp
.LP
The encryption options are provided with the Security Administration
Utilities package, which is available only in the United States.
