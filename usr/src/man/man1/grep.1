'\" te
.\" Copyright 1989 AT&T
.\" Copyright (c) 2008, Sun Microsystems, Inc.  All Rights Reserved
.\" Portions Copyright (c) 1992, X/Open Company Limited  All Rights Reserved
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH grep 1 "26 Feb 2008" "SunOS 5.11" "User Commands"
.SH NAME
grep \- search a file for a pattern
.SH SYNOPSIS
.LP
.nf
\fB/usr/bin/grep\fR [\fB-bchilnsvw\fR] \fIlimited-regular-expression\fR
     [\fIfilename\fR].\|.\|.
.fi

.LP
.nf
\fB/usr/xpg4/bin/grep\fR [\fB-E\fR | \fB-F\fR] [\fB-c\fR | \fB-l\fR | \fB-q\fR] [\fB-bhinsvwx\fR] \fB-e\fR \fIpattern_list\fR.\|.\|.
     [\fB-f\fR \fIpattern_file\fR].\|.\|. [\fIfile\fR].\|.\|.
.fi

.LP
.nf
\fB/usr/xpg4/bin/grep\fR [\fB-E\fR | \fB-F\fR] [\fB-c\fR | \fB-l\fR | \fB-q\fR] [\fB-bhinsvwx\fR]
     [\fB-e\fR \fIpattern_list\fR].\|.\|. \fB-f\fR \fIpattern_file\fR.\|.\|. [\fIfile\fR].\|.\|.
.fi

.LP
.nf
\fB/usr/xpg4/bin/grep\fR [\fB-E\fR | \fB-F\fR] [\fB-c\fR | \fB-l\fR | \fB-q\fR] [\fB-bhinsvwx\fR] \fIpattern\fR
     [\fIfile\fR].\|.\|.
.fi

.SH DESCRIPTION
.sp
.LP
The
.B grep
utility searches text files for a pattern and prints all
lines that contain that pattern.  It uses a compact non-deterministic
algorithm.
.sp
.LP
Be careful using the characters
.BR $ ,
.BR * ,
.BR [ ,
.BR ^ ,
.BR | ,
.BR ( ,
.BR ) ,
and \fB\e\fR in the
.I pattern_list
because
they are also meaningful to the shell. It is safest to enclose the entire
\fIpattern_list\fR in single quotes
.BR ' .\|.\|. ' .
.sp
.LP
If no files are specified,
.B grep
assumes standard input. Normally,
each line found is copied to standard output. The file name is printed
before each line found if there is more than one input file.
.SS "/usr/bin/grep"
.sp
.LP
The
.B /usr/bin/grep
utility uses limited regular expressions like those
described on the
.BR regexp (5)
manual page to match the patterns.
.SS "/usr/xpg4/bin/grep"
.sp
.LP
The options
.B -E
and
.B -F
affect the way
.BR /usr/xpg4/bin/grep
interprets
.IR pattern_list .
If
.B -E
is specified,
\fB/usr/xpg4/bin/grep\fR interprets \fIpattern_list\fR as a full regular
expression (see
.B -E
for description).  If
.B -F
is specified,
\fBgrep\fR interprets \fIpattern_list\fR as a fixed string. If neither are
specified,
.B grep
interprets
.I pattern_list
as a basic regular
expression as described on
.BR regex (5)
manual page.
.SH OPTIONS
.sp
.LP
The following options are supported for both
.B /usr/bin/grep
and
.BR /usr/xpg4/bin/grep :
.sp
.ne 2
.mk
.na
.B -b
.ad
.RS 6n
.rt
Precedes each line by the block number on which it was found. This can be
useful in locating block numbers by context (first block is 0).
.RE

.sp
.ne 2
.mk
.na
.B -c
.ad
.RS 6n
.rt
Prints only a count of the lines that contain the pattern.
.RE

.sp
.ne 2
.mk
.na
.B -h
.ad
.RS 6n
.rt
Prevents the name of the file containing the matching line from being
prepended to that line.  Used when searching multiple files.
.RE

.sp
.ne 2
.mk
.na
.B -i
.ad
.RS 6n
.rt
Ignores upper/lower case distinction during comparisons.
.RE

.sp
.ne 2
.mk
.na
.B -l
.ad
.RS 6n
.rt
Prints only the names of files with matching lines, separated by NEWLINE
characters. Does not repeat the names of files when the pattern is found
more than once.
.RE

.sp
.ne 2
.mk
.na
.B -n
.ad
.RS 6n
.rt
Precedes each line by its line number in the file (first line is 1).
.RE

.sp
.ne 2
.mk
.na
.B -s
.ad
.RS 6n
.rt
Suppresses error messages about nonexistent or unreadable files.
.RE

.sp
.ne 2
.mk
.na
.B -v
.ad
.RS 6n
.rt
Prints all lines except those that contain the pattern.
.RE

.sp
.ne 2
.mk
.na
.B -w
.ad
.RS 6n
.rt
Searches for the expression as a word as if surrounded by \fB\e<\fR and
.BR \e> \&.
.RE

.SS "/usr/xpg4/bin/grep"
.sp
.LP
The following options are supported for
.B /usr/xpg4/bin/grep
only:
.sp
.ne 2
.mk
.na
\fB-e\fR \fIpattern_list\fR
.ad
.RS 19n
.rt
Specifies one or more patterns to be used during the search for input.
Patterns in
.I pattern_list
must be separated by a NEWLINE character. A
null pattern can be specified by two adjacent newline characters in
.IR pattern_list .
Unless the
.B -E
or
.B -F
option is also
specified, each pattern is treated as a basic regular expression.  Multiple
\fB-e\fR and \fB-f\fR options are accepted by
.BR grep .
All of the
specified patterns are used when matching lines, but the order of evaluation
is unspecified.
.RE

.sp
.ne 2
.mk
.na
.B -E
.ad
.RS 19n
.rt
Matches using full regular expressions. Treats each pattern specified as a
full regular expression. If any entire full regular expression pattern
matches an input line, the line is matched. A null full regular expression
matches every line. Each pattern is interpreted as a full regular expression
as described on the
.BR regex (5)
manual page, except for \fB\e(\fR and
\fB\e)\fR, and including:
.RS +4
.TP
1.
A full regular expression followed by
.B +
that matches one or more
occurrences of the full regular expression.
.RE
.RS +4
.TP
2.
A full regular expression followed by
.B ?
that matches 0 or 1
occurrences of the full regular expression.
.RE
.RS +4
.TP
3.
Full regular expressions separated by | or by a new-line that match strings
that are matched by any of the expressions.
.RE
.RS +4
.TP
4.
A full regular expression that is enclosed in parentheses
.B ()
for
grouping.
.RE
The order of precedence of operators is \fB[\|]\fR, then
.BR *\|?\|+ ,
then concatenation, then | and new-line.
.RE

.sp
.ne 2
.mk
.na
\fB-f\fR \fIpattern_file\fR
.ad
.RS 19n
.rt
Reads one or more patterns from the file named by the path name
\fIpattern_file\fR. Patterns in \fIpattern_file\fR are terminated by a
NEWLINE character. A null pattern can be specified by an empty line in
\fIpattern_file\fR. Unless the \fB-E\fR or \fB-F\fR option is also
specified, each pattern is treated as a basic regular expression.
.RE

.sp
.ne 2
.mk
.na
.B -F
.ad
.RS 19n
.rt
Matches using fixed strings. Treats each pattern specified as a string
instead of a regular expression. If an input line contains any of the
patterns as a contiguous sequence of bytes, the line is matched. A null
string matches every line. See
.BR fgrep (1)
for more information.
.RE

.sp
.ne 2
.mk
.na
.B -q
.ad
.RS 19n
.rt
Quiet. Does not write anything to the standard output, regardless of
matching lines. Exits with zero status if an input line is selected.
.RE

.sp
.ne 2
.mk
.na
.B -x
.ad
.RS 19n
.rt
Considers only input lines that use all characters in the line to match an
entire fixed string or regular expression to be matching lines.
.RE

.SH OPERANDS
.sp
.LP
The following operands are supported:
.sp
.ne 2
.mk
.na
\fIfile\fR
.ad
.RS 8n
.rt
A path name of a file to be searched for the patterns. If no \fIfile\fR
operands are specified, the standard input is used.
.RE

.SS "/usr/bin/grep"
.sp
.ne 2
.mk
.na
.I pattern
.ad
.RS 11n
.rt
Specifies a pattern to be used during the search for input.
.RE

.SS "/usr/xpg4/bin/grep"
.sp
.ne 2
.mk
.na
.I pattern
.ad
.RS 11n
.rt
Specifies one or more patterns to be used during the search for input. This
operand is treated as if it were specified as
.B -e
.IR pattern_list .
.RE

.SH USAGE
.sp
.LP
The
.B -e
\fIpattern_list\fR option has the same effect as the
\fIpattern_list\fR operand, but is useful when \fIpattern_list\fR begins
with the hyphen delimiter. It is also useful when it is more convenient to
provide multiple patterns as separate arguments.
.sp
.LP
Multiple
.B -e
and \fB-f\fR options are accepted and
.B grep
uses all
of the patterns it is given while matching input text lines. Notice that the
order of evaluation is not specified. If an implementation finds a null
string as a pattern, it is allowed to use that pattern first, matching every
line, and effectively ignore any other patterns.
.sp
.LP
The
.B -q
option provides a means of easily determining whether or not a
pattern (or string) exists in a group of files. When searching several
files, it provides a performance improvement (because it can quit as soon as
it finds the first match) and requires less care by the user in choosing the
set of files to supply as arguments (because it exits zero if it finds a
match even if
.B grep
detected an access or read error on earlier file
operands).
.SS "Large File Behavior"
.sp
.LP
See
.BR largefile (5)
for the description of the behavior of
.BR grep
when encountering files greater than or equal to 2 Gbyte ( 2^31 bytes).
.SH EXAMPLES
.LP
\fBExample 1\fR Finding All Uses of a Word
.sp
.LP
To find all uses of the word "\fBPosix\fR" (in any case) in the file
.BR text.mm ,
and write with line numbers:

.sp
.in +2
.nf
example% \fB/usr/bin/grep -i -n posix text.mm\fR
.fi
.in -2
.sp

.LP
\fBExample 2\fR Finding All Empty Lines
.sp
.LP
To find all empty lines in the standard input:

.sp
.in +2
.nf
example% \fB/usr/bin/grep ^$\fR
.fi
.in -2
.sp

.sp
.LP
or

.sp
.in +2
.nf
example% \fB/usr/bin/grep -v .\fR
.fi
.in -2
.sp

.LP
\fBExample 3\fR Finding Lines Containing Strings
.sp
.LP
All of the following commands print all lines containing strings
.BR abc
or \fBdef\fR or both:

.sp
.in +2
.nf
example% \fB/usr/xpg4/bin/grep 'abc
def'\fR
example% \fB/usr/xpg4/bin/grep -e 'abc
def'\fR
example% \fB/usr/xpg4/bin/grep -e 'abc' -e 'def'\fR
example% \fB/usr/xpg4/bin/grep -E 'abc|def'\fR
example% \fB/usr/xpg4/bin/grep -E -e 'abc|def'\fR
example% \fB/usr/xpg4/bin/grep -E -e 'abc' -e 'def'\fR
example% \fB/usr/xpg4/bin/grep -E 'abc
def'\fR
example% \fB/usr/xpg4/bin/grep -E -e 'abc
def'\fR
example% \fB/usr/xpg4/bin/grep -F -e 'abc' -e 'def'\fR
example% \fB/usr/xpg4/bin/grep -F 'abc
def'\fR
example% \fB/usr/xpg4/bin/grep -F -e 'abc
def'\fR
.fi
.in -2
.sp

.LP
\fBExample 4\fR Finding Lines with Matching Strings
.sp
.LP
Both of the following commands print all lines matching exactly
.BR abc
or
.BR def :

.sp
.in +2
.nf
example% \fB/usr/xpg4/bin/grep -E '^abc$ ^def$'\fR
example% \fB/usr/xpg4/bin/grep -F -x 'abc def'\fR
.fi
.in -2
.sp

.SH ENVIRONMENT VARIABLES
.sp
.LP
See
.BR environ (5)
for descriptions of the following environment
variables that affect the execution of
.BR grep :
.BR LANG ,
.BR LC_ALL ,
.BR LC_COLLATE ,
.BR LC_CTYPE ,
.BR LC_MESSAGES ,
and
.BR NLSPATH .
.SH EXIT STATUS
.sp
.LP
The following exit values are returned:
.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 5n
.rt
One or more matches were found.
.RE

.sp
.ne 2
.mk
.na
.B 1
.ad
.RS 5n
.rt
No matches were found.
.RE

.sp
.ne 2
.mk
.na
.B 2
.ad
.RS 5n
.rt
Syntax errors or inaccessible files (even if matches were found).
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.SS "/usr/bin/grep"
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcsu
_
CSINot Enabled
.TE

.SS "/usr/xpg4/bin/grep"
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWxcu4
_
CSIEnabled
_
Interface StabilityCommitted
_
StandardSee \fBstandards\fR(5).
.TE

.SH SEE ALSO
.sp
.LP
.BR egrep (1),
.BR fgrep (1),
.BR sed (1),
.BR sh (1),
.BR attributes (5),
.BR environ (5),
.BR largefile (5),
.BR regex (5),
.BR regexp (5),
.BR standards (5)
.SH NOTES
.SS "/usr/bin/grep"
.sp
.LP
Lines are limited only by the size of the available virtual memory. If
there is a line with embedded nulls,
.B grep
only matches up to the first
null. If the line matches, the entire line is printed.
.SS "/usr/xpg4/bin/grep"
.sp
.LP
The results are unspecified if input files contain lines longer than
\fBLINE_MAX\fR bytes or contain binary data. \fBLINE_MAX\fR is defined in
.BR /usr/include/limits.h .
