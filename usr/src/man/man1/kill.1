'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc. All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" Copyright 1989 AT&T
.\" Portions Copyright (c) 1982-2007 AT&T Knowledge Ventures
.\" Portions Copyright (c) 1992, X/Open Company Limited All Rights Reserved
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH kill 1 "11 Aug 2009" "SunOS 5.11" "User Commands"
.SH NAME
kill \- terminate or signal processes
.SH SYNOPSIS
.LP
.nf
\fB/usr/bin/kill\fR \fB-s\fR \fIsignal_name\fR \fIpid\fR.\|.\|.
.fi

.LP
.nf
\fB/usr/bin/kill\fR \fB-l\fR [\fIexit_status\fR]
.fi

.LP
.nf
\fB/usr/bin/kill\fR [\fB-\fIsignal_name\fR] \fIpid\fR.\|.\|.
.fi

.LP
.nf
\fB/usr/bin/kill\fR [\fB-\fIsignal_number\fR] \fIpid\fR.\|.\|.
.fi

.SH DESCRIPTION
.sp
.LP
The
.B kill
utility sends a signal to the process or processes specified
by each
.I pid
operand.
.sp
.LP
For each
.I pid
operand, the
.B kill
utility performs actions
equivalent to the
.BR kill (2)
function called with the following
arguments:
.RS +4
.TP
1.
The value of the
.I pid
operand is used as the
.I pid
argument.
.RE
.RS +4
.TP
2.
The
.I sig
argument is the value specified by the
.B -s
option, the
.BI - signal_name
option, or the \fB-\fIsignal_number\fR option,
or, if none of these options is specified, by
.BR SIGTERM .
.RE
.sp
.LP
The signaled process must belong to the current user unless the user is the
super-user.
.sp
.LP
See NOTES for descriptions of the shell built-in versions of
.BR kill .
.SH OPTIONS
.sp
.LP
The following options are supported:
.sp
.ne 2
.mk
.na
.B -l
.ad
.RS 18n
.rt
(The letter ell.) Writes all values of
.I signal_name
supported by the
implementation, if no operand is specified. If an
.I exit_status
operand
is specified and it is a value of the
.B ?
shell special parameter and
.B wait
corresponding to a process that was terminated by a signal, the
.I signal_name
corresponding to the signal that terminated the process is
written. If an
.I exit_status
operand is specified and it is the unsigned
decimal integer value of a signal number, the
.I signal_name
corresponding to that signal is written. Otherwise, the results are
unspecified.
.RE

.sp
.ne 2
.mk
.na
.B -s
.I signal_name
.ad
.RS 18n
.rt
Specifies the signal to send, using one of the symbolic names defined in
the
.B <signal.h>
description. Values of
.I signal_name
is recognized
in a case-independent fashion, without the
.B SIG
prefix. In addition,
the symbolic name
.B 0
is recognized, representing the signal value zero.
The corresponding signal is sent instead of
.BR SIGTERM .
.RE

.sp
.ne 2
.mk
.na
.BI - signal_name
.ad
.RS 18n
.rt
Equivalent to
.B -s
.IR signal_name .
.RE

.sp
.ne 2
.mk
.na
.BI - signal_number
.ad
.RS 18n
.rt
Specifies a non-negative decimal integer,
.IR signal_number ,
representing
the signal to be used instead of
.BR SIGTERM ,
as the
.I sig
argument in
the effective call to
.BR kill (2).
.RE

.SH OPERANDS
.sp
.LP
The following operands are supported:
.sp
.ne 2
.mk
.na
.I pid
.ad
.RS 15n
.rt
One of the following:
.RS +4
.TP
1.
A decimal integer specifying a process or process group to be signaled. The
process or processes selected by positive, negative and zero values of the
.I pid
operand is as described for the kill function. If process number 0
is specified, all processes in the process group are signaled. If the first
.I pid
operand is negative, it should be preceded by \fB\(mi\(mi\fR to
keep it from being interpreted as an option.
.RE
.RS +4
.TP
2.
A job control job
.B ID
that identifies a background process group to be
signaled. The job control job
.B ID
notation is applicable only for
invocations of
.B kill
in the current shell execution environment.
.RE
The job control job
.B ID
type of
.I pid
is available only on systems
supporting the job control option.
.RE

.sp
.ne 2
.mk
.na
.I exit_status
.ad
.RS 15n
.rt
A decimal integer specifying a signal number or the exit status of a
process terminated by a signal.
.RE

.SH USAGE
.sp
.LP
Process numbers can be found by using
.BR ps (1).
.sp
.LP
The job control job
.B ID
notation is not required to work as expected
when
.B kill
is operating in its own utility execution environment. In
either of the following examples:
.sp
.in +2
.nf
example% \fBnohup kill %1 &\fR
example% \fBsystem( "kill %1");\fR
.fi
.in -2
.sp

.sp
.LP
.B kill
operates in a different environment and does not share the
shell's understanding of job numbers.
.SH OUTPUT
.sp
.LP
When the
.B -l
option is not specified, the standard output is not be
used.
.sp
.LP
When the
.B -l
option is specified, the symbolic name of each signal is
written in the following format:
.sp
.in +2
.nf
"%s%c", <\fIsignal_name\fR>, <\fIseparator\fR>
.fi
.in -2

.sp
.LP
where the \fB<\fIsignal_name\fB>\fR is in upper-case, without the
\fBSIG\fR prefix, and the \fB<\fIseparator\fB>\fR is either a newline
character or a space character. For the last signal written,
\fB<\fIseparator\fB>\fR is a newline character.
.sp
.LP
When both the
.B -l
option and
.I exit_status
operand are specified,
the symbolic name of the corresponding signal is written in the following
format:
.sp
.in +2
.nf
"%s\en", <\fIsignal_name\fR>
.fi
.in -2

.SH EXAMPLES
.LP
.B Example 1
Sending the kill signal
.sp
.LP
Any of the commands:

.sp
.in +2
.nf
example% \fBkill -9 100 -165\fR
example% \fBkill -s kill 100 -165\fR
example% \fBkill -s KILL 100 -165\fR
.fi
.in -2
.sp

.sp
.LP
sends the
.B SIGKILL
signal to the process whose process
.B ID
is
.B 100
and to all processes whose process group
.B ID
is
.BR 165 ,
assuming the sending process has permission to send that signal to the
specified processes, and that they exist.

.LP
.B Example 2
Avoiding ambiguity with an initial negative number
.sp
.LP
To avoid an ambiguity of an initial negative number argument specifying
either a signal number or a process group, the former is always be the case.
Therefore, to send the default signal to a process group (for example,
.BR 123 ),
an application should use a command similar to one of the
following:

.sp
.in +2
.nf
example% \fBkill -TERM -123\fR
example% \fBkill -- -123\fR
.fi
.in -2
.sp

.SH ENVIRONMENT VARIABLES
.sp
.LP
See
.BR environ (5)
for descriptions of the following environment
variables that affect the execution of
.BR kill :
.BR LANG ,
.BR LC_ALL ,
.BR LC_CTYPE ,
.BR LC_MESSAGES ,
and
.BR NLSPATH .
.SH EXIT STATUS
.sp
.LP
The following exit values are returned:
.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 6n
.rt
At least one matching process was found for each
.I pid
operand, and the
specified signal was successfully processed for at least one matching
process.
.RE

.sp
.ne 2
.mk
.na
.B >0
.ad
.RS 6n
.rt
An error occurred.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.SS "/usr/bin/kill, csh, ksh, sh"
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcsu
_
CSIEnabled
_
Interface StabilityCommitted
_
StandardSee \fBstandards\fR(5).
.TE

.SS "ksh93"
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcsu
_
CSIEnabled
_
Interface StabilityUncommitted
.TE

.SH SEE ALSO
.sp
.LP
.BR csh (1),
.BR getconf (1),
.BR jobs (1),
.BR ksh (1),
.BR ksh93 (1),
.BR ps (1),
.BR sh (1),
.BR shell_builtins (1),
.BR wait (1),
.BR kill (2),
.BR signal (3C),
.BR signal.h (3HEAD),
.BR attributes (5),
.BR environ (5),
.BR standards (5)
.SH NOTES
.SS "/usr/bin/kill"
.sp
.LP
The number of realtime signals supported is defined by the
.BR getconf (1)
value
.BR _POSIX_RTSIG_MAX .
.SS "sh"
.sp
.LP
The Bourne shell,
.BR sh ,
has a built-in version of
.B kill
to provide
the functionality of the
.B kill
command for processes identified with a
.IR jobid .
The
.B sh
syntax is:
.sp
.in +2
.nf
kill [ -sig ] [ pid ] [ %job ].\|.\|.
kill -l
.fi
.in -2
.sp

.SS "csh"
.sp
.LP
The C-shell,
.BR csh ,
also has a built-in
.B kill
command, whose
syntax is:
.sp
.in +2
.nf
kill [-sig][pid][%job].\|.\|.
kill -l
.fi
.in -2
.sp

.sp
.LP
The
.B "csh kill"
built-in sends the
.B TERM
(terminate) signal,
by default, or the signal specified, to the specified process
.BR ID ,
the
.I job
indicated, or the current
.IR job .
Signals are either specified
by number or by name. There is no default. Typing
.B kill
does not send a
signal to the current job. If the signal being sent is
.B TERM
(terminate) or
.B HUP
(hangup), then the job or process is sent a
.B CONT
(continue) signal as well.
.sp
.ne 2
.mk
.na
.B -l
.ad
.RS 6n
.rt
Lists the signal names that can be sent.
.RE

.SS "ksh"
.sp
.LP
The syntax of the
.B "ksh kill"
is:
.sp
.in +2
.nf
kill [-sig][pid][%job].\|.\|.
kill -l
.fi
.in -2
.sp

.sp
.LP
The
.B "ksh kill"
sends either the
.B TERM
(terminate) signal or
the specified signal to the specified jobs or processes. Signals are either
specified by number or by names (as specified in
.BR signal.h (3HEAD)
stripped of the
.B SIG
prefix). If the signal being sent is
.B TERM
(terminate) or
.B HUP
(hangup), then the job or process is sent a
.B CONT
(continue) signal if it is stopped. The argument
.I job
can be
the process id of a process that is not a member of one of the active jobs.
In the second form,
.BR "kill -l" ,
the signal numbers and names are
listed.
.SS "ksh93"
.sp
.LP
The syntax of the
.B "ksh93 kill"
is:
.sp
.in +2
.nf
kill [-n signum] [-s signame] job .\|.\|.
kill [-n signum] [-s signame] -l [arg .\|.\|.]
.fi
.in -2
.sp

.sp
.LP
With the first form in which
.B -l
is not specified,
.B kill
sends a
signal to one or more processes specified by
.IR job .
This normally
terminates the processes unless the signal is being caught or ignored.
.sp
.LP
Specify
.I job
as one of the following:
.sp
.ne 2
.mk
.na
.I number
.ad
.RS 12n
.rt
The process id of
.IR job .
.RE

.sp
.ne 2
.mk
.na
.BI - number
.ad
.RS 12n
.rt
The process group id of
.IR job .
.RE

.sp
.ne 2
.mk
.na
.BI % number
.ad
.RS 12n
.rt
The job number.
.RE

.sp
.ne 2
.mk
.na
.BI % string
.ad
.RS 12n
.rt
The job whose name begins with
.IR string .
.RE

.sp
.ne 2
.mk
.na
.BI %? string
.ad
.RS 12n
.rt
The job whose name contains
.IR string .
.RE

.sp
.ne 2
.mk
.na
.B %+
.ad
.br
.na
.B %%
.ad
.RS 12n
.rt
The current job.
.RE

.sp
.ne 2
.mk
.na
.B %-
.ad
.RS 12n
.rt
The previous job.
.RE

.sp
.LP
If the signal is not specified with either the
.B -n
or the
.BR -s
option, the
.B SIGTERM
signal is used.
.sp
.LP
If
.B -l
is specified, and no
.I arg
is specified, then
.B kill
writes the list of signals to standard output. Otherwise,
.I arg
can be
either a signal name, or a number representing either a signal number or
exit status for a process that was terminated due to a signal. If a name is
specified the corresponding signal number is written to standard output. If
a number is specified the corresponding signal name is written to standard
output.
.sp
.ne 2
.mk
.na
.B -l
.ad
.RS 14n
.rt
List signal names or signal numbers rather than sending signals as
described above. The
.B -n
and
.B -s
options cannot be specified.
.RE

.sp
.ne 2
.mk
.na
.B -n
.I signum
.ad
.RS 14n
.rt
Specify a signal number to send. Signal numbers are not portable across
platforms, except for the following:
.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 6n
.rt
No signal.
.RE

.sp
.ne 2
.mk
.na
.B 1
.ad
.RS 6n
.rt
.B HUP
.RE

.sp
.ne 2
.mk
.na
.B 2
.ad
.RS 6n
.rt
.B INT
.RE

.sp
.ne 2
.mk
.na
.B 3
.ad
.RS 6n
.rt
.B QUIT
.RE

.sp
.ne 2
.mk
.na
.B 6
.ad
.RS 6n
.rt
.B ABRT
.RE

.sp
.ne 2
.mk
.na
.B 9
.ad
.RS 6n
.rt
.B KILL
.RE

.sp
.ne 2
.mk
.na
.B 14
.ad
.RS 6n
.rt
.B ALRM
.RE

.sp
.ne 2
.mk
.na
.B 15
.ad
.RS 6n
.rt
.B TERM
.RE

.RE

.sp
.ne 2
.mk
.na
.B -s
.I signame
.ad
.RS 14n
.rt
Specify a signal name to send. The signal names are derived from their
names in
.B <signal.h>
without the
.B SIG
prefix and are case
insensitive.
.B "kill -l"
generates the list of signals on the
current platform.
.RE

.sp
.LP
.B kill
in
.B ksh93
exits with one of the following values:
.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 6n
.rt
At least one matching process was found for each job operand, and the
specified signal was successfully sent to at least one matching process.
.RE

.sp
.ne 2
.mk
.na
.B >0
.ad
.RS 6n
.rt
An error occurred.
.RE

