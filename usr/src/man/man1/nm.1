'\" te
.\" Copyright 1989 AT&T
.\" Copyright (c) 2007, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" Portions Copyright (c) 1992, X/Open Company Limited  All Rights Reserved
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH nm 1 "10 Oct 2007" "SunOS 5.11" "User Commands"
.SH NAME
nm \- print name list of an object file
.SH SYNOPSIS
.LP
.nf
\fB/usr/bin/nm\fR [\fB-ACDhlnPprRsTuVv\fR] [\fB-efox\fR] [\fB-g\fR | \fB-u\fR]
     [\fB-t\fR \fIformat\fR] \fIfile\fR...
.fi

.LP
.nf
\fB/usr/xpg4/bin/nm\fR [\fB-ACDhlnPprRsTuVv\fR] [\fB-efox\fR] [\fB-g\fR | \fB-u\fR]
     [\fB-t\fR \fIformat\fR] \fIfile\fR...
.fi

.SH DESCRIPTION
.sp
.LP
The
.B nm
utility displays the symbol table of each
.B ELF
object
file that is specified by
.IR file .
.sp
.LP
If no symbolic information is available for a valid input file, the
.B nm
utility reports that fact, but not consider it an error
condition.
.SH OPTIONS
.sp
.LP
The output of
.B nm
can be controlled using the following options:
.sp
.ne 2
.mk
.na
.B -A
.ad
.RS 13n
.rt
Writes the full path name or library name of an object on each line.
.RE

.sp
.ne 2
.mk
.na
.B -C
.ad
.RS 13n
.rt
Demangles C++ symbol names before printing them out.
.RE

.sp
.ne 2
.mk
.na
.B -D
.ad
.RS 13n
.rt
Displays the
.B SHT_DYNSYM
symbol information. This is the symbol table
used by
.B ld.so.1
and is present even in stripped dynamic executables.
If
.B -D
is not specified, the default behavior is to display the
.B SHT_SYMTAB
symbol information.
.RE

.sp
.ne 2
.mk
.na
.B -e
.ad
.RS 13n
.rt
See NOTES below.
.RE

.sp
.ne 2
.mk
.na
.B -f
.ad
.RS 13n
.rt
See NOTES below.
.RE

.sp
.ne 2
.mk
.na
.B -g
.ad
.RS 13n
.rt
Writes only external (global) symbol information.
.RE

.sp
.ne 2
.mk
.na
.B -h
.ad
.RS 13n
.rt
Does not display the output heading data.
.RE

.sp
.ne 2
.mk
.na
.B -L
.ad
.RS 13n
.rt
Displays the
.B SHT_SUNW_LDYNSYM
symbol information. This symbol table
contains local function symbols.
.B SHT_SUNW_LDYNSM
symbol tables are
present even in stripped dynamic executables. These symbols augment the
global symbols that are found in
.B SHT_DYNSYM
symbol table. If
.B -L
is not specified, the default behavior is to display the
.B SHT_SYMTAB
symbol information.
.RE

.sp
.ne 2
.mk
.na
.B -l
.ad
.RS 13n
.rt
Distinguishes between
.B WEAK
and
.B GLOBAL
symbols by appending a *
to the key letter for
.B WEAK
symbols.
.RE

.sp
.ne 2
.mk
.na
.B -n
.ad
.RS 13n
.rt
Sorts external symbols by name before they are printed.
.RE

.sp
.ne 2
.mk
.na
.B -o
.ad
.RS 13n
.rt
Prints the value and size of a symbol in octal instead of decimal
(equivalent to
.BR "-t o" ).
.RE

.sp
.ne 2
.mk
.na
.B -p
.ad
.RS 13n
.rt
Produces easy to parse, terse output. Each symbol name is preceded by its
value (blanks if undefined) and one of the letters:
.sp
.ne 2
.mk
.na
.B A
.ad
.RS 5n
.rt
Absolute symbol.
.RE

.sp
.ne 2
.mk
.na
.B B
.ad
.RS 5n
.rt
bss (uninitialized data space) symbol.
.RE

.sp
.ne 2
.mk
.na
.B C
.ad
.RS 5n
.rt
COMMON symbol.
.RE

.sp
.ne 2
.mk
.na
.B D
.ad
.RS 5n
.rt
Data object symbol.
.RE

.sp
.ne 2
.mk
.na
.B F
.ad
.RS 5n
.rt
File symbol.
.RE

.sp
.ne 2
.mk
.na
.B N
.ad
.RS 5n
.rt
Symbol has no type.
.RE

.sp
.ne 2
.mk
.na
.B L
.ad
.RS 5n
.rt
Thread-Local storage symbol.
.RE

.sp
.ne 2
.mk
.na
.B S
.ad
.RS 5n
.rt
Section symbol.
.RE

.sp
.ne 2
.mk
.na
.B T
.ad
.RS 5n
.rt
Text symbol.
.RE

.sp
.ne 2
.mk
.na
.B U
.ad
.RS 5n
.rt
Undefined.
.RE

If the symbol's binding attribute is:
.sp
.ne 2
.mk
.na
.B LOCAL
.ad
.RS 10n
.rt
The key letter is lower case.
.RE

.sp
.ne 2
.mk
.na
.B WEAK
.ad
.RS 10n
.rt
The key letter is upper case. If the
.B -l
modifier is specified, the
upper case key letter is followed by a
.BR *
.RE

.sp
.ne 2
.mk
.na
.B GLOBAL
.ad
.RS 10n
.rt
The key letter is upper case.
.RE

.RE

.sp
.ne 2
.mk
.na
.B -P
.ad
.RS 13n
.rt
Writes information in a portable output format, as specified in \fBStandard Output\fR.
.RE

.sp
.ne 2
.mk
.na
.B -r
.ad
.RS 13n
.rt
Prepends the name of the object file or archive to each output line.
.RE

.sp
.ne 2
.mk
.na
.B -R
.ad
.RS 13n
.rt
Prints the archive name (if present), followed by the object file and
symbol name. If the
.B -r
option is also specified, this option is
ignored.
.RE

.sp
.ne 2
.mk
.na
.B -s
.ad
.RS 13n
.rt
Prints section name instead of section index.
.RE

.sp
.ne 2
.mk
.na
.B -t
.I format
.ad
.RS 13n
.rt
Writes each numeric value in the specified format. The format is dependent
on the single character used as the
.I format
option-argument:
.sp
.ne 2
.mk
.na
.B d
.ad
.RS 5n
.rt
The offset is written in decimal (default).
.RE

.sp
.ne 2
.mk
.na
.B o
.ad
.RS 5n
.rt
The offset is written in octal.
.RE

.sp
.ne 2
.mk
.na
.B x
.ad
.RS 5n
.rt
The offset is written in hexadecimal.
.RE

.RE

.sp
.ne 2
.mk
.na
.B -T
.ad
.RS 13n
.rt
See
.BR NOTES .
.RE

.SS "/usr/bin/nm"
.sp
.ne 2
.mk
.na
.B -u
.ad
.RS 6n
.rt
Prints undefined symbols only.
.RE

.SS "/usr/xpg4/bin/nm"
.sp
.ne 2
.mk
.na
.B -u
.ad
.RS 6n
.rt
Prints long listing for each undefined symbol. See
.B OUTPUT
below.
.RE

.sp
.ne 2
.mk
.na
.B -v
.ad
.RS 6n
.rt
Sorts external symbols by value before they are printed.
.RE

.sp
.ne 2
.mk
.na
.B -V
.ad
.RS 6n
.rt
Prints the version of the
.B nm
command executing on the standard error
output.
.RE

.sp
.ne 2
.mk
.na
.B -x
.ad
.RS 6n
.rt
Prints the value and size of a symbol in hexadecimal instead of decimal
(equivalent to
.BR "-t x" ).
.RE

.sp
.LP
Options can be used in any order, either singly or in combination, and can
appear anywhere in the command line. When conflicting options are specified
(such as
.B -v
and
.BR -n ,
or
.B -o
and
.BR -x )
the first is taken
and the second ignored with a warning message to the user. (See
.B -R
for
exception.)
.SH OPERANDS
.sp
.LP
The following operand is supported:
.sp
.ne 2
.mk
.na
.I file
.ad
.RS 8n
.rt
A path name of an object file, executable file or object-file library.
.RE

.SH OUTPUT
.sp
.LP
This section describes the
.B nm
utility's output options.
.SS "Standard Output"
.sp
.LP
For each symbol, the following information is printed:
.sp
.ne 2
.mk
.na
.B Index
.ad
.RS 15n
.rt
The index of the symbol. (The index appears in brackets.)
.RE

.sp
.ne 2
.mk
.na
.B Value
.ad
.RS 15n
.rt
The value of the symbol is one of the following:
.RS +4
.TP
.ie t \(bu
.el o
A section offset for defined symbols in a relocatable file.
.RE
.RS +4
.TP
.ie t \(bu
.el o
Alignment constraints for symbols whose section index is
.BR SHN_COMMON .
.RE
.RS +4
.TP
.ie t \(bu
.el o
A virtual address in executable and dynamic library files.
.RE
.RE

.sp
.ne 2
.mk
.na
.B Size
.ad
.RS 15n
.rt
The size in bytes of the associated object.
.RE

.sp
.ne 2
.mk
.na
.B Type
.ad
.RS 15n
.rt
A symbol is of one of the following types:
.sp
.ne 2
.mk
.na
.B NOTYPE
.ad
.RS 11n
.rt
No type was specified.
.RE

.sp
.ne 2
.mk
.na
.B OBJECT
.ad
.RS 11n
.rt
A data object such as an array or variable.
.RE

.sp
.ne 2
.mk
.na
.B FUNC
.ad
.RS 11n
.rt
A function or other executable code.
.RE

.sp
.ne 2
.mk
.na
.B REGI
.ad
.RS 11n
.rt
A register symbol (\fBSPARC\fR only).
.RE

.sp
.ne 2
.mk
.na
.B SECTION
.ad
.RS 11n
.rt
A section symbol.
.RE

.sp
.ne 2
.mk
.na
.B FILE
.ad
.RS 11n
.rt
Name of the source file.
.RE

.sp
.ne 2
.mk
.na
.B COMMON
.ad
.RS 11n
.rt
An uninitialized common block.
.RE

.sp
.ne 2
.mk
.na
.B TLS
.ad
.RS 11n
.rt
A variable associated with Thread-Local storage.
.RE

.RE

.sp
.ne 2
.mk
.na
.B Bind
.ad
.RS 15n
.rt
The symbol's binding attributes.
.sp
.ne 2
.mk
.na
.B LOCAL symbols
.ad
.RS 18n
.rt
Have a scope limited to the object file containing their definition.
.RE

.sp
.ne 2
.mk
.na
.B GLOBAL symbols
.ad
.RS 18n
.rt
Are visible to all object files being combined.
.RE

.sp
.ne 2
.mk
.na
.B WEAK symbols
.ad
.RS 18n
.rt
Are essentially global symbols with a lower precedence than
.BR GLOBAL .
.RE

.RE

.sp
.ne 2
.mk
.na
.B Other
.ad
.RS 15n
.rt
A symbol's visibility.
.sp
The lower bits of the
.B st_other
member of the
.B Elf32_Sym
.RB "structure, and the " Elf64_Sym " structure, defined in " <sys/elf.h> ,
are currently used and can be one of:
.sp
.in +2
.nf
#define STV_DEFAULT     0
#define STV_INTERNAL    1
#define STV_HIDDEN      2
#define STV_PROTECTED   3
#define STV_EXPORTED    4
#define STV_SINGLETON   5
#define STV_ELIMINATE   6
.fi
.in -2
.sp

.RE

.sp
.ne 2
.mk
.na
.B Shndx
.ad
.RS 15n
.rt
Except for three special values, this is the section header table index in
relation to which the symbol is defined. The following special values
exist:
.sp
.ne 2
.mk
.na
.B ABS
.ad
.RS 10n
.rt
Indicates the symbol's value does not change through relocation.
.RE

.sp
.ne 2
.mk
.na
.B COMMON
.ad
.RS 10n
.rt
Indicates an unallocated block and the value provides alignment
constraints.
.RE

.sp
.ne 2
.mk
.na
.B UNDEF
.ad
.RS 10n
.rt
Indicates an undefined symbol.
.RE

.RE

.sp
.ne 2
.mk
.na
.B Name
.ad
.RS 15n
.rt
The name of the symbol.
.RE

.sp
.ne 2
.mk
.na
.B Object Name
.ad
.RS 15n
.rt
The name of the object or library if
.B -A
is specified.
.RE

.sp
.LP
If the
.B -P
option is specified, the previous information is displayed
using the following portable format. The three versions differ depending on
whether
.BR "-t d" ,
.BR "-t o" ,
or
.B "-t x"
was
specified, respectively:
.sp
.in +2
.nf
\fB"%s%s %s %d %d\en",\fR \fIlibrary/object name\fR, \fIname\fB, type,\fR \fIvalue\fR, \e
     \fBsize "%s%s %s %o %o\en",\fR \fIlibrary/object name\fR, \fIname\fR, \e
     \fBtype,\fR \fIvalue\fR \fB, size "%s%s %s %x %x\en",\fR \fIlibrary/object name\fR, \fIname\fR, \e
     \fBtype,\fR \fIvalue\fB, size\fR
.fi
.in -2
.sp

.sp
.LP
where
.I "library/object name"
is formatted as follows:
.RS +4
.TP
.ie t \(bu
.el o
If
.B -A
is not specified,
.I "library/object name"
is an empty
string.
.RE
.RS +4
.TP
.ie t \(bu
.el o
If
.B -A
is specified and the corresponding
.I file
operand does not
name a library:
.sp
.in +2
.nf
\fB"%s: ", \fIfile\fR
.fi
.in -2
.sp

.RE
.RS +4
.TP
.ie t \(bu
.el o
If
.B -A
is specified and the corresponding
.I file
operand names a
library. In this case,
.I "object file"
names the object file in the
library containing the symbol being described:
.sp
.in +2
.nf
\fB"%s[%s]: ", \fIfile\fR, \fIobject file\fR
.fi
.in -2
.sp

.RE
.sp
.LP
If
.B -A
is not specified, then if more than one
.I file
operand is
specified or if only one
.I file
operand is specified and it names a
library,
.B nm
writes a line identifying the object containing the
following symbols before the lines containing those symbols, in the form:
.RS +4
.TP
.ie t \(bu
.el o
If the corresponding
.I file
operand does not name a library:
.sp
.in +2
.nf
\fB"%s:\en", \fIfile\fR
.fi
.in -2
.sp

.RE
.RS +4
.TP
.ie t \(bu
.el o
If the corresponding
.I file
operand names a library; in this case,
.I object file
is the name of the file in the library containing the
following symbols:
.sp
.in +2
.nf
\fB"%s[%s]:\en", \fIfile\fR, \fIobject file\fR
.fi
.in -2
.sp

.RE
.sp
.LP
If
.B -P
is specified, but
.B -t
is not, the format is as if
.B -t
.B x
had been specified.
.SH ENVIRONMENT VARIABLES
.sp
.LP
See
.BR environ (5)
for descriptions of the following environment
variables that affect the execution of
.BR nm :
.BR LANG ,
.BR LC_ALL ,
.BR LC_COLLATE ,
.BR LC_CTYPE ,
.BR LC_MESSAGES ,
and
.BR NLSPATH .
.SH EXIT STATUS
.sp
.LP
The following exit values are returned:
.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 6n
.rt
Successful completion.
.RE

.sp
.ne 2
.mk
.na
.B >0
.ad
.RS 6n
.rt
An error occurred.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.SH /USR/BIN/NM
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWbtool
.TE

.SH /USR/XPG4/BIN/NM
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWxcu4
_
Interface StabilityCommitted
.TE

.SH SEE ALSO
.sp
.LP
.BR ar (1),
.BR as (1),
.BR dump (1),
.BR ld (1),
.BR ld.so.1 (1),
.BR ar.h (3HEAD),
.BR a.out (4),
.BR attributes (5),
.BR environ (5),
.BR standards (5)
.SH NOTES
.sp
.LP
The following options are obsolete because of changes to the object file
format and might be deleted in a future release.
.sp
.ne 2
.mk
.na
.B -e
.ad
.RS 6n
.rt
Prints only external and static symbols. The symbol table now contains only
static and external symbols. Automatic symbols no longer appear in the
symbol table. They do appear in the debugging information produced by
.BR "cc -g" ,
which can be examined using
.BR dump (1).
.RE

.sp
.ne 2
.mk
.na
.B -f
.ad
.RS 6n
.rt
Produces full output. Redundant symbols (such as
.BR \&.text ,
\fB\&.data\fR, and so forth), which existed previously, do not exist and
producing full output is identical to the default output.
.RE

.sp
.ne 2
.mk
.na
.B -T
.ad
.RS 6n
.rt
By default,
.B nm
prints the entire name of the symbols listed. Since
symbol names have been moved to the last column, the problem of overflow is
removed and it is no longer necessary to truncate the symbol name.
.RE

