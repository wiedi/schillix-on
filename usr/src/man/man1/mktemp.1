'\" te
.\" Copyright (c) 2008, Sun Microsystems, Inc. All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH mktemp 1 "10 Jan 2008" "SunOS 5.11" "User Commands"
.SH NAME
mktemp \- make temporary filename
.SH SYNOPSIS
.LP
.nf
\fBmktemp\fR [\fB-dtqu\fR] [\fB-p\fR \fIdirectory\fR] [\fItemplate\fR]
.fi

.SH DESCRIPTION
.sp
.LP
The
.B mktemp
utility makes a temporary filename. To do this, \fBmktemp\fR
takes the specified filename template and overwrites a portion of it to create
a unique filename. See
.BR OPERANDS .
.sp
.LP
The template is passed to \fBmkdtemp\fR(3C) for directories or
.BR mkstemp (3C)
for ordinary files.
.sp
.LP
If
.B mktemp
can successfully generate a unique filename, the file (or
directory) is created with file permissions such that it is only readable and
writable by its owner (unless the
.B -u
flag is given) and the filename is
printed to standard output.
.sp
.LP
\fBmktemp\fR allows shell scripts to safely use temporary files.
Traditionally, many shell scripts take the name of the program with the
\fBPID\fR as a suffix and used that as a temporary filename. This kind of
naming scheme is predictable and the race condition it creates is easy for an
attacker to win. A safer, though still inferior approach is to make a temporary
directory using the same naming scheme. While this guarantees that a temporary
file is not subverted, it still allows a simple denial of service attack. Use
\fBmktemp\fR instead.
.SH OPTIONS
.sp
.LP
The following options are supported:
.sp
.ne 2
.mk
.na
.B -d
.ad
.RS 16n
.rt
Make a directory instead of a file.
.RE

.sp
.ne 2
.mk
.na
\fB-p\fR \fIdirectory\fR
.ad
.RS 16n
.rt
Use the specified directory as a prefix when generating the temporary
filename. The directory is overridden by the user's TMPDIR environment variable
if it is set. This option implies the
.B -t
flag.
.RE

.sp
.ne 2
.mk
.na
.B -q
.ad
.RS 16n
.rt
Fail silently if an error occurs. This is useful if a script does not want
error output to go to standard error.
.RE

.sp
.ne 2
.mk
.na
.B -t
.ad
.RS 16n
.rt
Generate a path rooted in a temporary directory. This directory is chosen as
follows: If the user's TMPDIR environment variable is set, the directory
contained therein is used. Otherwise, if the
.B -p
flag was given the
specified directory is used. If none of the above apply,
.B /tmp
is used. In
this mode, the template (if specified) should be a directory component (as
opposed to a full path) and thus should not contain any forward slashes.
.RE

.sp
.ne 2
.mk
.na
.B -u
.ad
.RS 16n
.rt
Operate in unsafe mode. The temp file is unlinked before
.B mktemp
exits.
This is slightly better than
.BR mktemp "(3C), but still introduces a race"
condition. Use of this option is discouraged.
.RE

.SH OPERANDS
.sp
.LP
The following operands are supported:
.sp
.ne 2
.mk
.na
.I template
.ad
.RS 12n
.rt
\fItemplate\fR can be any filename with one or more \fBX\fRs appended to it,
for example
.BR /tmp/tfile.XXXXXX .
.sp
If
.I template
is not specified, a default of
.B tmp.XXXXXX
is used and
the
.B -t
flag is implied.
.RE

.SH EXAMPLES
.LP
\fBExample 1\fR Using \fBmktemp\fR
.sp
.LP
The following example illustrates a simple use of
.B mktemp
in a
.BR sh (1)
script. In this example, the script quits if it cannot get a safe
temporary file.

.sp
.in +2
.nf
TMPFILE=`mktemp /tmp/example.XXXXXX`
if [ -z "$TMPFILE" ]; then exit 1; fi
echo "program output" >> $TMPFILE
.fi
.in -2
.sp

.LP
\fBExample 2\fR Using \fBmktemp\fR to Support \fBTMPDIR\fR
.sp
.LP
The following example uses
.B mktemp
to support for a user's \fBTMPDIR\fR
environment variable:

.sp
.in +2
.nf
TMPFILE=`mktemp -t example.XXXXXX`
if [ -z "$TMPFILE" ]; then exit 1; fi
echo "program output" >> $TMPFILE
.fi
.in -2
.sp

.LP
\fBExample 3\fR Using \fBmktemp\fR Without Specifying the Name of the
Temporary File
.sp
.LP
The following example uses
.B mktemp
without specifying the name of the
temporary file. In this case the
.B -t
flag is implied.

.sp
.in +2
.nf
TMPFILE=`mktemp`
if [ -z "$TMPFILE" ]; then exit 1; fi
echo "program output" >> $TMPFILE
.fi
.in -2
.sp

.LP
\fBExample 4\fR Using \fBmktemp\fR with a Default Temporary Directory Other
than
.BR /tmp
.sp
.LP
The following example creates the temporary file in
.B /extra/tmp
unless
the user's
.B TMPDIR
environment variable specifies otherwise:

.sp
.in +2
.nf
TMPFILE=`mktemp -p /extra/tmp example.XXXXX`
if [ -z "$TMPFILE" ]; then exit 1; fi
echo "program output" >> $TMPFILE
.fi
.in -2
.sp

.LP
\fBExample 5\fR Using \fBmktemp\fR to Remove a File
.sp
.LP
The following example attempts to create two temporary files. If creation of
the second temporary file fails,
.B mktemp
removes the first file before
exiting:

.sp
.in +2
.nf
TMP1=`mktemp -t example.1.XXXXXX`
if [ -z "$TMP1" ]; then exit 1; fi
TMP2=`mktemp -t example.2.XXXXXX`
if [ -z "$TMP2" ]; then
        rm -f $TMP1
        exit 1
fi
.fi
.in -2
.sp

.LP
\fBExample 6\fR Using \fBmktemp\fR
.sp
.LP
The following example does not exit if
.B mktemp
is unable to create the
file. That part of the script has been protected.

.sp
.in +2
.nf
TMPFILE=`mktemp -q -t example.XXXXXX`
if [ ! -z "$TMPFILE" ]
then
        # Safe to use $TMPFILE in this block
        echo data > $TMPFILE
        ...
        rm -f $TMPFILE
fi
.fi
.in -2
.sp

.SH ENVIRONMENT VARIABLES
.sp
.LP
See
.BR environ (5)
for descriptions of the following environment variables
that affect the execution of
.B mktemp
with the
.B -t
option:
.B TMPDIR.
.SH EXIT STATUS
.sp
.LP
The following exit values are returned:
.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 5n
.rt
Successful completion.
.RE

.sp
.ne 2
.mk
.na
.B 1
.ad
.RS 5n
.rt
An error occurred.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcsu
_
Interface StabilityCommitted
.TE

.SH SEE ALSO
.sp
.LP
.BR sh (1),
.BR mkdtemp (3C),
.BR mkstemp (3C),
.BR attributes (5),
.BR environ (5)
.SH NOTES
.sp
.LP
The
.B mktemp
utility appeared in OpenBSD 2.1. The Solaris implementation
uses only as many `Xs' as are significant for
.BR mktemp (3C)
and
.BR mkstemp (3C).
