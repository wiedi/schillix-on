'\" te
.\" Copyright (c) 1996 David Sacerdote All rights reserved.
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions are
.\" met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\"
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" 3. The name of the author may not be used to endorse or promote products
.\"    derived from this software without specific prior written permission
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
.\" IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.\" Portions Copyright (c) 2009, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.TH nc 1 "Apr 9 2009" "SunOS 5.11" "User Commands"
.SH NAME
nc \- arbitrary TCP and UDP connections and listens
.SH SYNOPSIS
.LP
.nf
\fBnc\fR \fB-h\fR
.fi

.LP
.nf
\fBnc\fR [\fB-46dnrtuvz\fR] [\fB-i\fR \fIinterval\fR] [\fB-P\fR \fIproxy_username\fR] [\fB-p\fR \fIport\fR]
     [\fB-s\fR \fIsource_ip_address\fR] [\fB-T\fR \fIToS\fR] [\fB-w\fR \fItimeout\fR]
     [\fB-X\fR \fIproxy_protocol\fR] [\fB-x\fR \fIproxy_address\fR[:\fIport\fR]]
     \fIhostname\fR \fIport_list\fR
.fi

.LP
.nf
\fBnc\fR \fB-l\fR [\fB-46Ddnrtuvz\fR] [\fB-i\fR \fIinterval\fR] [\fB-T\fR \fIToS\fR] [\fIhostname\fR] \fIport\fR
.fi

.LP
.nf
\fBnc\fR \fB-l\fR [\fB-46Ddnrtuvz\fR] [\fB-i\fR \fIinterval\fR] [\fB-T\fR \fIToS\fR] \fB-p\fR \fIport\fR
.fi

.LP
.nf
\fBnc\fR \fB-U\fR [\fB-Ddtvz\fR] [\fB-i\fR \fIinterval\fR] [\fB-w\fR \fItimeout\fR] \fIpath\fR
.fi

.LP
.nf
\fBnc\fR \fB-Ul\fR [\fB-46Ddktv\fR] [\fB-i\fR \fIinterval\fR] \fIpath\fR
.fi

.SH DESCRIPTION
.sp
.LP
The
.B nc
(or
.BR netcat )
utility is used for a variety of tasks
associated with TCP or UDP.
.B nc
can open TCP connections, send UDP
packets, listen on arbitrary TCP and UDP ports, perform port scanning, and
deal with both IPv4 and IPv6. Unlike
.BR telnet (1),
.B nc
scripts
nicely, and separates error messages onto standard error instead of sending
them to standard output.
.sp
.LP
The
.B nc
command is often used for the following tasks:
.RS +4
.TP
.ie t \(bu
.el o
simple TCP proxies
.RE
.RS +4
.TP
.ie t \(bu
.el o
shell-script based HTTP clients and servers
.RE
.RS +4
.TP
.ie t \(bu
.el o
network daemon testing
.RE
.RS +4
.TP
.ie t \(bu
.el o
a SOCKS or HTTP
.B ProxyCommand
for
.BR ssh (1)
.RE
.SH OPTIONS
.sp
.LP
The following options are supported:
.sp
.ne 2
.mk
.na
.B -4
.ad
.sp .6
.RS 4n
Force
.B nc
to use IPv4 addresses only.
.RE

.sp
.ne 2
.mk
.na
.B -6
.ad
.sp .6
.RS 4n
Force
.B nc
to use IPv6 addresses only.
.RE

.sp
.ne 2
.mk
.na
.B -D
.ad
.sp .6
.RS 4n
Enable debugging on the socket.
.RE

.sp
.ne 2
.mk
.na
.B -d
.ad
.sp .6
.RS 4n
Do not attempt to read from
.BR stdin .
.RE

.sp
.ne 2
.mk
.na
.B -h
.ad
.sp .6
.RS 4n
Print
.B nc
help.
.RE

.sp
.ne 2
.mk
.na
.B -i
.I interval
.ad
.sp .6
.RS 4n
Specify a delay time of
.I interval
between lines of text sent and
received. This option also causes a delay time between connections to
multiple ports.
.RE

.sp
.ne 2
.mk
.na
.B -k
.ad
.sp .6
.RS 4n
Force
.B nc
to listen for another connection after its current connection
is closed.
.sp
It is an error to use this option without the
.B -l
option.
.RE

.sp
.ne 2
.mk
.na
.B -l
.ad
.sp .6
.RS 4n
Listen for an incoming connection rather than initiate a connection to a
remote host.
.sp
It is an error to use this option in conjunction with the
.B -s
or
.B -z
options. Additionally, any
.I timeout
specified with the
.BR -w
option is ignored.
.RE

.sp
.ne 2
.mk
.na
.B -n
.ad
.sp .6
.RS 4n
Do not do any naming or service lookups on any addresses, hostnames, or
ports.
.sp
Use of this option means that
.I hostname
and
.I port
arguments are
restricted to numeric values.
.sp
If used with
.B -v
option all addresses and ports are printed in numeric
form, in addition to the restriction imposed on the arguments. This option
does not have any effect when used in conjunction with the
.B -U
option.
.RE

.sp
.ne 2
.mk
.na
.B -P
.I proxy_username
.ad
.sp .6
.RS 4n
Specify a username
.RI ( proxy_username )
to present to a proxy server that
requires authentication. If
.I proxy_username
is not specified,
authentication is not attempted. Proxy authentication is only supported for
.B HTTP CONNECT
proxies at present.
.sp
It is an error to use this option in conjunction with the
.B -l
option.
.RE

.sp
.ne 2
.mk
.na
.B -p
.I port
.ad
.sp .6
.RS 4n
When used without
.B -l
option, specify the source port
.B nc
should
use, subject to privilege restrictions and availability. When used with the
.B -l
option, set the listen port.
.sp
This option can be used with
.B -l
option only provided global port
argument is not specified.
.RE

.sp
.ne 2
.mk
.na
.B -r
.ad
.sp .6
.RS 4n
Choose source or destination ports randomly instead of sequentially within a
range or in the order that the system assigns them.
.sp
It is an error to use this option in conjunction with the
.B -l
option.
.RE

.sp
.ne 2
.mk
.na
.B -s
.I source_ip_address
.ad
.sp .6
.RS 4n
Specify the IP of the interface which is used to send the packets.
.sp
It is an error to use this option in conjunction with the
.B -l
option.
.RE

.sp
.ne 2
.mk
.na
.B -T
.I ToS
.ad
.sp .6
.RS 4n
Specify IP Type of Service
.RB ( ToS )
for the connection. Valid values are
the tokens:
.BR lowdelay ,
.BR throughput ,
.BR reliability ,
or an 8-bit
hexadecimal value preceded by
.BR 0x .
.RE

.sp
.ne 2
.mk
.na
.B -t
.ad
.sp .6
.RS 4n
Cause
.B nc
to send
.I "RFC 854"
.B DON'T
and
.B WON'T
responses
to
.I "RFC 854"
.B DO
and
.B WILL
requests. This makes it possible to
use
.B nc
to script
.B telnet
sessions.
.RE

.sp
.ne 2
.mk
.na
.B -U
.ad
.sp .6
.RS 4n
Specify the use of Unix Domain Sockets. If you specify this option without
.BR -l ,
.BR nc ,
it becomes
.B AF_UNIX
client. If you specify this
option with the
.B -l
option, a
.B AF_UNIX
server is created.
.sp
Use of this option requires that a single argument of a valid Unix domain
path has to be provided to
.BR nc ,
not a host name or port.
.RE

.sp
.ne 2
.mk
.na
.B -u
.ad
.sp .6
.RS 4n
Use UDP instead of the default option of TCP.
.RE

.sp
.ne 2
.mk
.na
.B -v
.ad
.sp .6
.RS 4n
Specify verbose output.
.RE

.sp
.ne 2
.mk
.na
.B -w
.I timeout
.ad
.sp .6
.RS 4n
Silently close the connection if a connection and
.B stdin
are idle for
more than
.I timeout
seconds.
.sp
This option has no effect on the
.B -l
option, that is,
.B nc
listens
forever for a connection, with or without the
.B -w
flag. The default is
no timeout.
.RE

.sp
.ne 2
.mk
.na
.B -X
.I proxy_protocol
.ad
.sp .6
.RS 4n
Use the specified protocol when talking to the proxy server. Supported
protocols are
.BR 4
.RB ( "SOCKS v.4" ),
.BR "5\fR (\fBSOCKS v.5" )
and
.B connect
(\fBHTTP\fR proxy). If the protocol is not specified, \fBSOCKS v. 5\fR is used.
.sp
It is an error to use this option in conjunction with the
.B -l
option.
.RE

.sp
.ne 2
.mk
.na
\fB-x\fR \fIproxy_address\fR[:\fIport\fR]\fR
.ad
.sp .6
.RS 4n
Request connection to
.I hostname
using a proxy at
.IR proxy_address
and
.IR port .
If
.I port
is not specified, the well-known port for the
proxy protocol is used (\fB1080\fR for
.BR SOCKS ,
.B 3128
for
.BR HTTP ).
.sp
It is an error to use this option in conjunction with the
.B -l
option.
.RE

.sp
.ne 2
.mk
.na
.B -z
.ad
.sp .6
.RS 4n
Scan for listening daemons, without sending any data to them.
.sp
It is an error to use this option in conjunction with the
.B -l
option.
.RE

.SH OPERANDS
.sp
.LP
The following operands are supported:
.sp
.ne 2
.mk
.na
.I hostname
.ad
.RS 13n
.rt
Specify host name.
.sp
.I hostname
can be a numerical IP address or a symbolic hostname (unless
the
.B -n
option is specified).
.sp
In general,
.I hostname
must be specified, unless the
.B -l
option is
given or
.B -U
is used (in which case the argument is a path). If
.I hostname
argument is specified with
.B -l
option then
.IR port
argument must be given as well and
.B nc
tries to bind to that address and
port. If
.I hostname
argument is not specified with
.B -l
option then
.B nc
tries to listen on a wildcard socket for given
.IR port .
.RE

.sp
.ne 2
.mk
.na
.I path
.ad
.RS 13n
.rt
Specify pathname.
.RE

.sp
.ne 2
.mk
.na
.I port
.ad
.br
.na
.I port_list
.ad
.RS 13n
.rt
Specify port.
.sp
.I port_list
can be specified as single integers, ranges or combinations
of both. Specify ranges in the form of
.IR nn-mm .
The
.I port_list
must
have at least one member, but can have multiple ports/ranges separated by
commas.
.sp
In general, a destination port must be specified, unless the
.B -U
option
is given, in which case a Unix Domain Socket path must be specified instead
of
.IR hostname .
.RE

.SH USAGE
.SS "Client/Server Model"
.sp
.LP
It is quite simple to build a very basic client/server model using
.BR nc .
On one console, start
.B nc
listening on a specific port for a connection.
For example, the command:
.sp
.in +2
.nf
$ nc -l 1234
.fi
.in -2
.sp

.sp
.LP
listens on port
.B 1234
for a connection. On a second console (or a
second machine), connect to the machine and port to which
.B nc
is
listening:
.sp
.in +2
.nf
$ nc 127.0.0.1 1234
.fi
.in -2
.sp

.sp
.LP
There should now be a connection between the ports. Anything typed at the
second console is concatenated to the first, and vice-versa. After the
connection has been set up,
.B nc
does not really care which side is being
used as a
.B server
and which side is being used as a
.BR client .
The
connection can be terminated using an
.B EOF
(Ctrl/d).
.SS "Data Transfer"
.sp
.LP
The example in the previous section can be expanded to build a basic data
transfer model. Any information input into one end of the connection is
output to the other end, and input and output can be easily captured in order
to emulate file transfer.
.sp
.LP
Start by using
.B nc
to listen on a specific port, with output captured
into a file:
.sp
.in +2
.nf
$ nc -l 1234 > filename.out
.fi
.in -2
.sp

.sp
.LP
Using a second machine, connect to the listening
.B nc
process, feeding
it the file which is to be transferred:
.sp
.in +2
.nf
$ nc host.example.com 1234 < filename.in
.fi
.in -2
.sp

.sp
.LP
After the file has been transferred, the connection closes automatically.
.SS "Talking to Servers"
.sp
.LP
It is sometimes useful to talk to servers
.B "by hand"
rather than through
a user interface. It can aid in troubleshooting, when it might be necessary
to verify what data a server is sending in response to commands issued by the
client.
.sp
.LP
For example, to retrieve the home page of a web site:
.sp
.in +2
.nf
$ echo -n "GET / HTTP/1.0\er\en\er\en" | nc host.example.com 80
.fi
.in -2
.sp

.sp
.LP
This also displays the headers sent by the web server. They can be filtered,
if necessary, by using a tool such as
.BR sed (1).
.sp
.LP
More complicated examples can be built up when the user knows the format of
requests required by the server. As another example, an email can be
submitted to an SMTP server using:
.sp
.in +2
.nf
$ nc localhost 25 << EOF
HELO host.example.com
MAIL FROM: <user@host.example.com
RCTP TO: <user2@host.example.com
DATA
Body of email.
\&.
QUIT
EOF
.fi
.in -2
.sp

.SS "Port Scanning"
.sp
.LP
It can be useful to know which ports are open and running services on a
target machine. The
.B -z
flag can be used to tell
.B nc
to report open
ports, rather than to initiate a connection.
.sp
.LP
In this example:
.sp
.in +2
.nf
$ nc -z host.example.com 20-30
Connection to host.example.com 22 port [tcp/ssh] succeeded!
Connection to host.example.com 25 port [tcp/smtp] succeeded!
.fi
.in -2
.sp

.sp
.LP
The port range was specified to limit the search to ports 20 - 30.
.sp
.LP
Alternatively, it might be useful to know which server software is running,
and which versions. This information is often contained within the greeting
banners. In order to retrieve these, it is necessary to first make a
connection, and then break the connection when the banner has been retrieved.
This can be accomplished by specifying a small timeout with the
.BR -w
flag, or perhaps by issuing a
.B QUIT
command to the server:
.sp
.in +2
.nf
$ echo "QUIT" | nc host.example.com 20-30
SSH-2.0-Sun_SSH_1.1
Protocol mismatch.
220 host.example.com IMS SMTP Receiver Version 0.84 Ready
.fi
.in -2
.sp

.SS "\fBinetd\fR Capabilities"
.sp
.LP
One of the possible uses is to create simple services by using
.BR inetd (1M).
.sp
.LP
The following example creates a redirect from TCP port 8080 to port 80 on
host
.BR realwww :
.sp
.in +2
.nf
# cat << EOF >> /etc/services
wwwredir    8080/tcp    # WWW redirect
EOF
# cat << EOF > /tmp/wwwredir.conf
wwwredir stream tcp nowait nobody /usr/bin/nc /usr/bin/nc -w 3 realwww 80
EOF
# inetconv -i /tmp/wwwredir.conf
wwwredir -> /var/svc/manifest/network/wwwredir-tcp.xml
Importing wwwredir-tcp.xml .\|.\|.Done
# inetadm -l wwwredir/tcp
SCOPE    NAME=VALUE
name="wwwredir"
endpoint_type="stream"
proto="tcp"
isrpc=FALSE
wait=FALSE
exec="/usr/bin/nc -w 3 realwww 80"
arg0="/usr/bin/nc"
user="nobody"
default  bind_addr=""
default  bind_fail_max=-1
default  bind_fail_interval=-1
default  max_con_rate=-1
default  max_copies=-1
default  con_rate_offline=-1
default  failrate_cnt=40
default  failrate_interval=60
default  inherit_env=TRUE
default  tcp_trace=TRUE
default  tcp_wrappers=FALSE
.fi
.in -2
.sp

.SS "Privileges"
.sp
.LP
To bind to a privileged port number
.B nc
needs to be granted the
.B net_privaddr
privilege. If Solaris Trusted Extensions are configured
and the port
.B nc
should listen on is configured as a multi-level port
.B nc
also needs the
.B net_bindmlp
privilege.
.sp
.LP
Privileges can be assigned to the user or role directly, by specifying them
in the account's default privilege set in
.BR user_attr (4).
However, this
means that any application that this user or role starts have these
additional privileges. To only grant the
.BR privileges (5)
when
.B nc
is
invoked, the recommended approach is to create and assign an
.BR rbac (5)
rights profile. See
.B EXAMPLES
for additional information.
.SH EXAMPLES
.LP
.B Example 1
Using
.BR nc
.sp
.LP
Open a TCP connection to port
.B 42
of
.BR host.example.com ,
using port
.B 3141
as the source port, with a timeout of
.B 5
seconds:

.sp
.in +2
.nf
$ nc -p 3141 -w 5 host.example.com 42
.fi
.in -2
.sp

.sp
.LP
Open a UDP connection to port
.B 53
of
.BR host.example.com :

.sp
.in +2
.nf
$ nc -u host.example.com 53
.fi
.in -2
.sp

.sp
.LP
Open a TCP connection to port 42 of
.B host.example.com
using
.B 10.1.2.3
as the IP for the local end of the connection:

.sp
.in +2
.nf
$ nc -s 10.1.2.3 host.example.com 42
.fi
.in -2
.sp

.sp
.LP
Use a list of ports and port ranges for a port scan on various ports:

.sp
.in +2
.nf
$ nc -z host.example.com 21-25,53,80,110-120,443
.fi
.in -2
.sp

.sp
.LP
Create and listen on a Unix Domain Socket:

.sp
.in +2
.nf
$ nc -lU /var/tmp/dsocket
.fi
.in -2
.sp

.sp
.LP
Create and listen on a UDP socket with associated port
.BR 8888 :

.sp
.in +2
.nf
$ nc -u -l -p 8888
.fi
.in -2
.sp

.sp
.LP
which is the same as:

.sp
.in +2
.nf
$ nc -u -l 8888
.fi
.in -2
.sp

.sp
.LP
Create and listen on a TCP socket with associated port
.B 2222
and bind
to address
.B 127.0.0.1
only:

.sp
.in +2
.nf
$ nc -l 127.0.0.1 2222
.fi
.in -2
.sp

.sp
.LP
Connect to port
.B 42
of
.B host.example.com
using an HTTP proxy at
.BR 10.2.3.4 ,
port
.BR 8080 .
This example could also be used by
.BR ssh (1).
See the
.B ProxyCommand
directive in
.BR ssh_config (4)
for
more information.

.sp
.in +2
.nf
$ nc -x10.2.3.4:8080 -Xconnect host.example.com 42
.fi
.in -2
.sp

.sp
.LP
The same example again, this time enabling proxy authentication with
username
.B ruser
if the proxy requires it:

.sp
.in +2
.nf
$ nc -x10.2.3.4:8080 -Xconnect -Pruser host.example.com 42
.fi
.in -2
.sp

.sp
.LP
To run
.B nc
with the smallest possible set of privileges as a user or
role that has additional privileges (such as the default
.B root
account)
it can be invoked using
.BR ppriv (1)
as well. For example, limiting it to
only run with the privilege to bind to a privileged port:

.sp
.in +2
.nf
$ ppriv -e -sA=basic,!file_link_any,!proc_exec,!proc_fork,\e
!proc_info,!proc_session,net_privaddr nc -l 42
.fi
.in -2
.sp

.sp
.LP
To allow a user or role to use only
.B nc
with the
.BR net_privaddr
privilege, a rights profile needs to be created:

.sp
.in +2
.nf
/etc/security/exec_attr
Netcat privileged:solaris:cmd:::/usr/bin/nc:privs=net_privaddr

/etc/security/prof_attr
Netcat privileged:::Allow nc to bind to privileged ports:help=None.html
.fi
.in -2
.sp

.sp
.LP
Assigning this rights profile using
.BR user_attr (4)
permits the user or
role to run
.B nc
allowing it to listen on any port. To permit a user or
role to use
.B nc
only to listen on specific ports a wrapper script should
be specified in the rights profiles:

.sp
.in +2
.nf
/etc/security/exec_attr
Netcat restricted:solaris:cmd:::/usr/bin/nc-restricted:privs=net_privaddr

/etc/security/prof_attr
Netcat restricted:::Allow nc to bind to privileged ports:help=None.html
.fi
.in -2
.sp

.sp
.LP
and write a shell script that restricts the permissible options, for
example, one that permits one to bind only on ports between
.B 42
and
.B 64
(non-inclusive):

.sp
.in +2
.nf
/usr/bin/nc-restricted:

#!/bin/sh
[ $# -eq 1 ] && [ $1 -gt 42 -a $1 -lt 64 ] && /usr/bin/nc -l -p "$1"
.fi
.in -2
.sp

.sp
.LP
This grants the extra privileges when the user or role invokes
.BR nc
using the wrapper script from a profile shell. See
.BR pfsh (1),
.BR pfksh (1),
.BR pfcsh (1),
and
.BR pfexec (1).

.sp
.LP
Invoking
.B nc
directly does not run it with the additional privileges,
and neither does invoking the script without using
.B pfexec
or a profile
shell.

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWnetcat
_
Interface StabilitySee below.
.TE

.sp
.LP
The package name is Committed. The command line syntax is Committed for the
.BR -4 ,
.BR "-6, -l" ,
.BR -n ,
.B -p
.RB , -u ", and " -w 
options and their arguments (if any). The
.I name
and
.I port
list
arguments are Committed. The port range syntax is Uncommitted. The interface
stability level for all other command line options and their arguments is
Uncommitted.
.SH SEE ALSO
.sp
.LP
.BR cat (1),
.BR pfcsh (1),
.BR pfexec (1),
.BR pfksh (1),
.BR pfsh (1),
.BR ppriv (1),
.BR sed (1),
.BR ssh (1),
.BR telnet (1),
.BR inetadm (1M),
.BR inetconv (1M),
.BR inetd (1M),
.BR ssh_config (4),
.BR user_attr (4),
.BR attributes (5),
.BR privileges (5),
.BR rbac (5)
.SH AUTHORS
.sp
.LP
The original implementation of
.B nc
was written by Hobbit,
.BR hobbit@avian.org .
.sp
.LP
.B nc
was rewritten with IPv6 support by Eric Jackson,
.BR ericj@monkey.org .
.SH NOTES
.sp
.LP
UDP port scans always succeeds, that is, reports the port as open, rendering
the
.B -uz
combination of flags relatively useless.
