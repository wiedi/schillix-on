'\" te
.\" Copyright (c) 2007, Sun Microsystems, Inc. All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" Portions Copyright (c) 1982-2007 AT&T Knowledge Ventures
.\" Portions Copyright (c) 1992, X/Open Company Limited All Rights Reserved
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH limit 1 "2 Nov 2007" "SunOS 5.11" "User Commands"
.SH NAME
limit, ulimit, unlimit \- set or get limitations on the system resources
available to the current shell and its descendents
.SH SYNOPSIS
.LP
.nf
\fB/usr/bin/ulimit\fR [\fB-f\fR] [\fIblocks\fR]
.fi

.SS "sh"
.LP
.nf
\fBulimit\fR [\fB-\fR [HS] [a | cdfnstv]]
.fi

.LP
.nf
\fBulimit\fR [\fB-\fR [HS] [c | d | f | n | s | t | v]] \fIlimit\fR
.fi

.SS "csh"
.LP
.nf
\fBlimit\fR [\fB-h\fR] [\fIresource\fR [\fIlimit\fR]]
.fi

.LP
.nf
\fBunlimit\fR [\fB-h\fR] [\fIresource\fR]
.fi

.SS "ksh"
.LP
.nf
\fBulimit\fR [\fB-HSacdfnstv\fR] [\fIlimit\fR]
.fi

.SS "ksh93"
.LP
.nf
\fBulimit\fR [\fB-HSacdfmnpstv\fR] [\fIlimit\fR]
.fi

.SH DESCRIPTION
.SS "/usr/bin/ulimit"
.sp
.LP
The
.B ulimit
utility sets or reports the file-size writing limit
imposed on files written by the shell and its child processes (files of any
size can be read). Only a process with appropriate privileges can increase
the limit.
.SS "sh"
.sp
.LP
The Bourne shell built-in function,
.BR ulimit ,
prints or sets hard or
soft resource limits. These limits are described in
.BR getrlimit (2).
.sp
.LP
If
.I limit
is not present,
.B ulimit
prints the specified limits.
Any number of limits can be printed at one time. The
.B -a
option prints
all limits.
.sp
.LP
If
.I limit
is present,
.B ulimit
sets the specified limit
.RI to limit .
The string
.B unlimited
requests that the current limit,
if any, be removed. Any user can set a soft limit to any value less than or
equal to the hard limit. Any user can lower a hard limit. Only a user with
appropriate privileges can raise or remove a hard limit. See
.BR getrlimit (2).
.sp
.LP
The
.B -H
option specifies a hard limit. The
.B -S
option specifies a
soft limit. If neither option is specified,
.B ulimit
sets both limits
and prints the soft limit.
.sp
.LP
The following options specify the resource whose limits are to be printed
or set. If no option is specified, the file size limit is printed or set.
.sp
.ne 2
.mk
.na
.B -c
.ad
.RS 6n
.rt
Maximum core file size (in 512-byte blocks)
.RE

.sp
.ne 2
.mk
.na
.B -d
.ad
.RS 6n
.rt
Maximum size of data segment or heap (in Kbytes)
.RE

.sp
.ne 2
.mk
.na
.B -f
.ad
.RS 6n
.rt
Maximum file size (in 512-byte blocks)
.RE

.sp
.ne 2
.mk
.na
.B -n
.ad
.RS 6n
.rt
Maximum file descriptor plus 1
.RE

.sp
.ne 2
.mk
.na
.B -s
.ad
.RS 6n
.rt
Maximum size of stack segment (in Kbytes)
.RE

.sp
.ne 2
.mk
.na
.B -t
.ad
.RS 6n
.rt
Maximum CPU time (in seconds)
.RE

.sp
.ne 2
.mk
.na
.B -v
.ad
.RS 6n
.rt
Maximum size of virtual memory (in Kbytes)
.RE

.SS "csh"
.sp
.LP
The C-shell built-in function,
.BR limit ,
limits the consumption by the
current process or any process it spawns, each not to exceed
.I limit
on
the specified
.IR resource .
The string
.B unlimited
requests that the
current limit, if any, be removed. If
.I limit
is omitted, prints the
current limit. If
.I resource
is omitted, displays all limits.
.sp
.ne 2
.mk
.na
.B -h
.ad
.RS 6n
.rt
Use hard limits instead of the current limits. Hard limits impose a ceiling
on the values of the current limits. Only the privileged user can raise the
hard limits.
.RE

.sp
.LP
.I resource
is one of:
.sp
.ne 2
.mk
.na
.B cputime
.ad
.RS 16n
.rt
Maximum
.B CPU
seconds per process.
.RE

.sp
.ne 2
.mk
.na
.B filesize
.ad
.RS 16n
.rt
Largest single file allowed. Limited to the size of the filesystem (see
.BR df (1M)).
.RE

.sp
.ne 2
.mk
.na
.B datasize
.ad
.RS 16n
.rt
The maximum size of a process's heap in kilobytes.
.RE

.sp
.ne 2
.mk
.na
.B stacksize
.ad
.RS 16n
.rt
Maximum stack size for the process. The default stack size is 2^64.
.RE

.sp
.ne 2
.mk
.na
.B coredumpsize
.ad
.RS 16n
.rt
Maximum size of a core dump (file). This is limited to the size of the
filesystem.
.RE

.sp
.ne 2
.mk
.na
.B descriptors
.ad
.RS 16n
.rt
Maximum number of file descriptors. Run the
.BR sysdef (1M)
command to
obtain the maximum possible limits for your system. The values reported are
in hexadecimal, but can be translated into decimal numbers using the
.BR bc (1)
command.
.RE

.sp
.ne 2
.mk
.na
.B memorysize
.ad
.RS 16n
.rt
Maximum size of virtual memory.
.RE

.sp
.LP
.I limit
is a number, with an optional scaling factor, as follows:
.sp
.ne 2
.mk
.na
.IB n h
.ad
.RS 9n
.rt
Hours (for
.BR cputime ).
.RE

.sp
.ne 2
.mk
.na
.IB n k
.ad
.RS 9n
.rt
.I n
kilobytes. This is the default for all but
.BR cputime .
.RE

.sp
.ne 2
.mk
.na
.IB n m
.ad
.RS 9n
.rt
.I n
megabytes or minutes (for
.BR cputime ).
.RE

.sp
.ne 2
.mk
.na
\fImm\fB:\fIss\fR
.ad
.RS 9n
.rt
Minutes and seconds (for
.BR cputime ).
.RE

.sp
.LP
.B unlimit
removes a limitation on
.IR resource .
If no
.IR resource
is specified, then all resource limitations are removed. See the description
of the
.B limit
command for the list of resource names.
.sp
.ne 2
.mk
.na
.B -h
.ad
.RS 6n
.rt
Remove corresponding hard limits. Only the privileged user can do this.
.RE

.SS "ksh"
.sp
.LP
The Korn shell built-in function,
.BR ulimit ,
sets or displays a resource
limit. The available resources limits are listed below. Many systems do not
contain one or more of these limits. The limit for a specified resource is
set when
.I limit
is specified. The value of
.I limit
can be a number
in the unit specified below with each resource, or the value
.BR unlimited .
The string
.B unlimited
requests that the current limit,
if any, be removed. The
.B -H
and
.B -S
flags specify whether the hard
limit or the soft limit for the specified resource is set. A hard limit
cannot be increased once it is set. A soft limit can be increased up to the
value of the hard limit. If neither the
.B -H
or
.B -S
options is
specified, the limit applies to both. The current resource limit is printed
when
.I limit
is omitted. In this case, the soft limit is printed unless
.B -H
is specified. When more than one resource is specified, then the
limit name and unit is printed before the value.
.sp
.ne 2
.mk
.na
.B -a
.ad
.RS 6n
.rt
Lists all of the current resource limits.
.RE

.sp
.ne 2
.mk
.na
.B -c
.ad
.RS 6n
.rt
The number of 512-byte blocks on the size of core dumps.
.RE

.sp
.ne 2
.mk
.na
.B -d
.ad
.RS 6n
.rt
The number of K-bytes on the size of the data area.
.RE

.sp
.ne 2
.mk
.na
.B -f
.ad
.RS 6n
.rt
The number of 512-byte blocks on files written by child processes (files of
any size can be read).
.RE

.sp
.ne 2
.mk
.na
.B -n
.ad
.RS 6n
.rt
The number of file descriptors plus 1.
.RE

.sp
.ne 2
.mk
.na
.B -s
.ad
.RS 6n
.rt
The number of K-bytes on the size of the stack area.
.RE

.sp
.ne 2
.mk
.na
.B -t
.ad
.RS 6n
.rt
The number of seconds (CPU time) to be used by each process.
.RE

.sp
.ne 2
.mk
.na
.B -v
.ad
.RS 6n
.rt
The number of K-bytes for virtual memory.
.RE

.sp
.LP
If no option is specified,
.B -f
is assumed.
.SS "Per-Shell Memory Parameters"
.sp
.LP
The
.BR heapsize ,
.BR datasize ,
and
.B stacksize
parameters are not
system tunables. The only controls for these are hard limits, set in a shell
startup file, or system-wide soft limits, which, for the current version of
the Solaris OS, is 2^64bytes.
.SS "ksh93"
.sp
.LP
.B ulimit
sets or displays resource limits. These limits apply to the
current process and to each child process created after the resource limit
has been set. If
.I limit
is specified, the resource limit is set,
otherwise, its current value is displayed on standard output.
.sp
.LP
Increasing the limit for a resource usually requires special privileges.
Some systems allow you to lower resource limits and later increase them.
These are called soft limits. Once a hard limit is set the resource cannot
be increased.
.sp
.LP
Different systems allow you to specify different resources and some
restrict how much you can raise the limit of the resource.
.sp
.LP
The value of
.I limit
depends on the unit of the resource listed for
each resource. In addition, \fIlimit\fR can be "unlimited" to indicate no
limit for that resource.
.sp
.LP
If you do not specify
.B -H
or
.BR -S ,
.B -S
is used for listing
and both
.B -S
and
.B -H
are used for setting resources.
.sp
.LP
If you do not specify any resource, the default is
.B -f.
.sp
.LP
The following options are available for
.B ulimit
in
.BR ksh93 :
.sp
.ne 2
.mk
.na
.B -a
.ad
.RS 13n
.rt
Displays all current resource limits.
.RE

.sp
.ne 2
.mk
.na
.B -b
.ad
.br
.na
.B --sbsize
.ad
.RS 13n
.rt
Specifies the socket buffer size in bytes.
.RE

.sp
.ne 2
.mk
.na
.B -c
.ad
.br
.na
.B --core
.ad
.RS 13n
.rt
Specifies the core file size in blocks.
.RE

.sp
.ne 2
.mk
.na
.B -d
.ad
.br
.na
.B --data
.ad
.RS 13n
.rt
Specifies the data size in kbytes.
.RE

.sp
.ne 2
.mk
.na
.B -f
.ad
.br
.na
.B --fsize
.ad
.RS 13n
.rt
Specifies the file size in blocks.
.RE

.sp
.ne 2
.mk
.na
.B -H
.ad
.RS 13n
.rt
Displays or sets a hard limit.
.RE

.sp
.ne 2
.mk
.na
.B -L
.ad
.br
.na
.B --locks
.ad
.RS 13n
.rt
Specifies the number of file locks.
.RE

.sp
.ne 2
.mk
.na
.B -l
.ad
.br
.na
.B --memlock
.ad
.RS 13n
.rt
Specifies the locked address space in Kbytes.
.RE

.sp
.ne 2
.mk
.na
.B -M
.ad
.br
.na
.B --as
.ad
.RS 13n
.rt
Specifies the address space limit in Kbytes.
.RE

.sp
.ne 2
.mk
.na
.B -n
.ad
.br
.na
.B --nofile
.ad
.RS 13n
.rt
Specifies the number of open files.
.RE

.sp
.ne 2
.mk
.na
.B -p
.ad
.br
.na
.B --pipe
.ad
.RS 13n
.rt
Specifies the pipe buffer size in bytes.
.RE

.sp
.ne 2
.mk
.na
.B -m
.ad
.br
.na
.B --rss
.ad
.RS 13n
.rt
Specifies the resident set size in Kbytes
.RE

.sp
.ne 2
.mk
.na
.B -S
.ad
.RS 13n
.rt
Displays or sets a soft limit.
.RE

.sp
.ne 2
.mk
.na
.B -s
.ad
.br
.na
.B --stack
.ad
.RS 13n
.rt
Specifies the stack size in Kbytes.
.RE

.sp
.ne 2
.mk
.na
.B -T
.ad
.br
.na
.B --threads
.ad
.RS 13n
.rt
Specifies the number of threads.
.RE

.sp
.ne 2
.mk
.na
.B -t
.ad
.br
.na
.B --cpu
.ad
.RS 13n
.rt
Specifies the CPU time in seconds.
.RE

.sp
.ne 2
.mk
.na
.B -u
.ad
.br
.na
.B --nproc
.ad
.RS 13n
.rt
Specifies the number of processes.
.RE

.sp
.ne 2
.mk
.na
.B -v
.ad
.br
.na
.B --vmem
.ad
.RS 13n
.rt
Specifies the process size in Kbytes.
.RE

.SH OPTIONS
.sp
.LP
The following option is supported by
.BR /usr/bin/ulimit :
.sp
.ne 2
.mk
.na
.B -f
.ad
.RS 6n
.rt
Sets (or reports, if no
.I blocks
operand is present), the file size
limit in blocks. The
.B -f
option is also the default case.
.RE

.SH OPERANDS
.sp
.LP
The following operand is supported by
.BR /usr/bin/ulimit :
.sp
.ne 2
.mk
.na
.I blocks
.ad
.RS 10n
.rt
The number of 512-byte blocks to use as the new file size limit.
.RE

.SH EXAMPLES
.SS "/usr/bin/ulimit"
.LP
.B Example 1
Limiting the Stack Size
.sp
.LP
The following example limits the stack size to 512 kilobytes:

.sp
.in +2
.nf
example% \fBulimit -s 512\fR
example% \fBulimit -a\fR
time(seconds)         unlimited
file(blocks)            100
data(kbytes)            523256
stack(kbytes)           512
coredump(blocks)        200
nofiles(descriptors)    64
memory(kbytes)          unlimited
.fi
.in -2
.sp

.SS "sh/ksh"
.LP
.B Example 2
Limiting the Number of File Descriptors
.sp
.LP
The following command limits the number of file descriptors to 12:

.sp
.in +2
.nf
example$ \fBulimit -n 12\fR
example$ \fBulimit -a\fR
time(seconds)            unlimited
file(blocks)             41943
data(kbytes)             523256
stack(kbytes)            8192
coredump(blocks)         200
nofiles(descriptors)     12
vmemory(kbytes)          unlimited
.fi
.in -2
.sp

.SS "csh"
.LP
.B Example 3
Limiting the Core Dump File Size
.sp
.LP
The following command limits the size of a core dump file size to 0
kilobytes:

.sp
.in +2
.nf
example% \fBlimit coredumpsize 0\fR
example% \fBlimit\fR
cputime                 unlimited
filesize                unlimited
datasize                523256 kbytes
stacksize               8192 kbytes
coredumpsize            0 kbytes
descriptors             64
memorysize              unlimited
.fi
.in -2
.sp

.LP
.B Example 4
Removing the limitation for core file size
.sp
.LP
The following command removes the above limitation for the core file
size:

.sp
.in +2
.nf
example% \fBunlimit coredumpsize\fR
example% \fBlimit\fR
cputime                 unlimited
filesize                unlimited
datasize                523256 kbytes
stacksize               8192 kbytes
coredumpsize            unlimited
descriptors             64
memorysize              unlimited
.fi
.in -2
.sp

.SH ENVIRONMENT VARIABLES
.sp
.LP
See
.BR environ (5)
for descriptions of the following environment
variables that affect the execution of
.BR ulimit :
.BR LANG ,
.BR LC_ALL ,
.BR LC_CTYPE ,
.BR LC_MESSAGES ,
and
.BR NLSPATH .
.SH EXIT STATUS
.sp
.LP
The following exit values are returned by
.BR ulimit :
.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 6n
.rt
Successful completion.
.RE

.sp
.ne 2
.mk
.na
.B >0
.ad
.RS 6n
.rt
A request for a higher limit was rejected or an error occurred.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.SS "/usr/bin/ulimit, csh, ksh, sh"
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcsu
_
Interface StabilityCommitted
_
StandardSee \fBstandards\fR(5).
.TE

.SS "ksh93"
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcsu
_
Interface StabilityUncommitted
.TE

.SH SEE ALSO
.sp
.LP
.BR bc (1),
.BR csh (1),
.BR ksh (1),
.BR ksh93 (1),
.BR sh (1),
.BR df (1M),
.BR su (1M),
.BR swap (1M),
.BR sysdef (1M),
.BR getrlimit (2),
.BR attributes (5),
.BR environ (5),
.BR standards (5)
