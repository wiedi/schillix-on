'\" te
.\" Copyright (c) 2005 by Sun Microsystems, Inc. All rights reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH moe 1 "2 Feb 2005" "SunOS 5.11" "User Commands"
.SH NAME
moe \- manifest the optimal expansion of a pathname
.SH SYNOPSIS
.LP
.nf
\fBmoe\fR [\fB-c\fR] [\fB-32\fR | \fB-64\fR] [\fB-s\fR | \fB-v\fR] \fIpath\fR
.fi

.SH DESCRIPTION
.sp
.LP
The
.B moe
utility manifests the optimal expansion of a pathname
containing reserved runtime linker tokens. These tokens can be used to
define dependencies, filtees and runpaths within dynamic objects. The
expansion of these tokens at runtime, provides a flexible mechanism for
selecting objects and search paths that perform best on this machine. See
.BR ld.so.1 (1).
.sp
.LP
For example, the token
.B $HWCAP
can be employed to represent filters
and dependencies. The runtime interpretation of this token can result in a
family of objects that are analyzed to determine their applicability for
loading with a process. The objects are sorted based on the hardware
capabilities that each object requires to execute.
.B moe
returns the
name of the object optimally suited for execution on the current platform.
.sp
.LP
\fBmoe\fR analyzes a pathname by passing the supplied \fIpath\fR to
.BR dlmopen (3C),
together with the
.B RTLD_FIRST
flag. Reserved token
expansion is therefore carried out by
.B ld.so.1
as the expansion would
occur in an executing process. Although multiple objects can be analyzed as
a result of the
.B dlmopen()
call, the
.B RTLD_FIRST
flag insures only
the optimal object is processed.
.sp
.LP
By default,
.B moe
analyzes the specified
.I path
twice. The first
analysis looks for 32-bit objects. The second analysis, if applicable, looks
for 64-bit objects. Typically, 32-bit objects and 64-bit objects are
isolated to different directories. These directories are frequently named to
reflect the class of object the directory contains. The multiple passes of
\fBmoe\fR catch any instances where 32-bit objects and 64-bit objects occupy
the same directory. Multiple passes also provide flexibility when the
pathname that is specified does not convey to the user the class of object
the directory might contain.
.sp
.LP
For a complete description of the reserved token expansion carried out by
the runtime linker, refer to the
.IR "Linker and Libraries Guide" .
.SH OPTIONS
.sp
.LP
The following options are supported:
.sp
.ne 2
.mk
.na
.B -32
.ad
.RS 7n
.rt
Only analyze 32-bit objects.
.RE

.sp
.ne 2
.mk
.na
.B -64
.ad
.RS 7n
.rt
Only analyze 64-bit objects.
.RE

.sp
.ne 2
.mk
.na
.B -c
.ad
.RS 7n
.rt
Prefix each pathname with the class of the object.
.RE

.sp
.ne 2
.mk
.na
.B -s
.ad
.RS 7n
.rt
Silent. No optimal name, or error diagnostics are displayed. Only an error
return is made available. This option is only meaningful with the \fB-32\fR
and
.B -64
options. The
.B -s
option can not be used with the
.BR -v
option.
.RE

.sp
.ne 2
.mk
.na
.B -v
.ad
.RS 7n
.rt
Verbose. If no optimal expansion name can be determined, an error
diagnostic is written to standard error. The
.B -v
option can not be used
with the
.B -s
option.
.RE

.SH OPERANDS
.sp
.LP
The following operand is supported:
.sp
.ne 2
.mk
.na
.I path
.ad
.RS 8n
.rt
The pathname to be expanded.
.RE

.SH EXAMPLES
.sp
.LP
The following example uses
.B moe
to display the optimal expansion of
objects in the directory
.BR /usr/lib/libc .
This directory contains a
family of Intel objects that are built to use various hardware
capabilities.
.sp
.in +2
.nf
% \fBmoe '/usr/lib/libc/$HWCAP'\fR
/usr/lib/libc/libc_hwcap.so.1
.fi
.in -2
.sp

.sp
.LP
The
.B -c
option can be used to clarify the class of the optimal
object.
.sp
.in +2
.nf
% \fBmoe -c '/usr/lib/libc/$HWCAP'\fR
32-bit: /usr/lib/libc/libc_hwcap.so.1
.fi
.in -2
.sp

.sp
.LP
The following example uses
.B moe
to display the optimal expansion of
objects under the
.B /opt/ISV/cpu
directory hierarchy. These directories
contain a family of SPARC objects that are built for various platforms.
.sp
.in +2
.nf
% \fBmoe -c -64 '/opt/ISV/$ISALIST/isa.so.1'\fR
64-bit: /opt/ISV/sparcv9/isa.so.1
.fi
.in -2
.sp

.sp
.LP
The
.B -v
can be used to diagnose the instance where an optimal name is
not returned. An attempt to inspect the previous pathname as a 32-bit
object, would result in the following diagnostic being produced.
.sp
.in +2
.nf
% \fBmoe -c -v -32 '/opt/ISV/$ISALIST/isa.so.1'\fR
32-bit: /opt/ISV/sparcv9/isa.so.1: wrong ELF class: ELFCLASS64
.fi
.in -2
.sp

.SH EXIT STATUS
.sp
.LP
When the
.B -32
or
.B -64
options are in effect, a successful optimal
expansion returns
.BR 0 ,
otherwise non-zero. Without the
.B -32
or
\fB-64\fR options in effect, the return value is always
.BR 0 .
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcsu
_
Interface StabilityStable
.TE

.SH SEE ALSO
.sp
.LP
.BR ld.so.1 (1),
.BR optisa (1),
.BR isalist (1),
.BR dlmopen (3C),
.BR attributes (5)
.sp
.LP
.I Linker and Libraries Guide
