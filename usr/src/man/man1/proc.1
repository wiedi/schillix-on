'\" te
.\" Copyright (c) 2008, Sun Microsystems, Inc. All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" Portions Copyright 2008 Chad Mynhier
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH proc 1 "10 Dec 2008" "SunOS 5.11" "User Commands"
.SH NAME
proc, pflags, pcred, pldd, psig, pstack, pfiles, pwdx, pstop, prun, pwait,
ptime \- proc tools
.SH SYNOPSIS
.LP
.nf
\fB/usr/bin/pflags\fR [\fB-r\fR] \fIpid\fR | \fIcore\fR [/\fIlwp\fR] ...
.fi

.LP
.nf
\fB/usr/bin/pcred\fR [\fIpid\fR | \fIcore\fR]...
.fi

.LP
.nf
\fB/usr/bin/pcred\fR [\fB-u\fR \fIuser/uid\fR] [\fB-g\fR \fIgroup/gid\fR] [\fB-G\fR \fIgrouplist\fR] pid...
.fi

.LP
.nf
\fB/usr/bin/pcred\fR \fB-l\fR \fIlogin\fR \fIpid\fR...
.fi

.LP
.nf
\fB/usr/bin/pldd\fR [\fB-Fl\fR] [\fIpid\fR | \fIcore\fR]...
.fi

.LP
.nf
\fB/usr/bin/psig\fR [\fB-n\fR] \fIpid\fR...
.fi

.LP
.nf
\fB/usr/bin/pstack\fR [\fB-F\fR] \fIpid\fR | \fIcore\fR [/\fIlwp\fR] ...
.fi

.LP
.nf
\fB/usr/bin/pfiles\fR [\fB-Fn\fR] \fIpid\fR...
.fi

.LP
.nf
\fB/usr/bin/pwdx\fR \fIpid\fR...
.fi

.LP
.nf
\fB/usr/bin/pstop\fR \fIpid\fR[/\fIlwp\fR] ...
.fi

.LP
.nf
\fB/usr/bin/prun\fR \fIpid\fR[/\fIlwp\fR] ...
.fi

.LP
.nf
\fB/usr/bin/pwait\fR [\fB-v\fR] \fIpid\fR...
.fi

.LP
.nf
\fB/usr/bin/ptime\fR [\fB-Fm\fR] [\fB-p\fR] \fIpid\fR...
.fi

.LP
.nf
\fB/usr/bin/ptime\fR [\fB-m\fR]\fIcommand\fR [\fIarg\fR]...
.fi

.SH DESCRIPTION
.sp
.LP
The proc tools are utilities that exercise features of
.B /proc
(see
.BR proc (4)).
Most of them take a list of process-ids
.RI ( pid ).
The
tools that do take process-ids also accept
.BI /proc/ nnn
as a
process-id, so the shell expansion
.B /proc/*
can be used to specify all
processes in the system.
.sp
.LP
Some of the proc tools can also be applied to core files (see
.BR core (4)).
The tools that apply to core files accept a list of either
process
.BR ID s
or names of core files or both.
.sp
.LP
Some of the
.B proc
tools can operate on individual threads. Users can
examine only selected threads by appending
.I /thread-id
to the
process-id or core. Multiple threads can be selected using the
.B -
and
.B ,
delimiters. For example
.B /1,2,7-9
examines threads
.BR 1 ,
.BR 2 ,
.BR 7 ,
.BR 8 ,
and
.BR 9 .
.sp
.LP
See
.BR WARNINGS .
.sp
.ne 2
.mk
.na
.B pflags
.ad
.RS 10n
.rt
Print the
.B /proc
tracing flags, the pending and held signals, and
other
.B /proc
status information for each process or specified lwps in
each process.
.RE

.sp
.ne 2
.mk
.na
.B pcred
.ad
.RS 10n
.rt
Print or set the credentials (effective, real, saved
.BR UID s
and
\fBGID\fRs) of each process.
.RE

.sp
.ne 2
.mk
.na
.B pldd
.ad
.RS 10n
.rt
List the dynamic libraries linked into each process, including shared
objects explicitly attached using
.BR dlopen "(3C). See also"
.BR ldd (1).
.RE

.sp
.ne 2
.mk
.na
.B psig
.ad
.RS 10n
.rt
List the signal actions and handlers of each process. See
.BR signal.h (3HEAD).
.RE

.sp
.ne 2
.mk
.na
.B pstack
.ad
.RS 10n
.rt
Print a hex+symbolic stack trace for each process or specified lwps in each
process.
.RE

.sp
.ne 2
.mk
.na
.B pfiles
.ad
.RS 10n
.rt
Report
.BR fstat (2)
and
.BR fcntl (2)
information for all open files in
each process. For network endpoints, the local (and peer if connected)
address information is also provided. For sockets, the socket type, socket
options and send and receive buffer sizes are also provided. In addition, a
path to the file is reported if the information is available from
.BR /proc/pid/path .
This is not necessarily the same name used to open the
file. See
.BR proc (4)
for more information.
.RE

.sp
.ne 2
.mk
.na
.B pwdx
.ad
.RS 10n
.rt
Print the current working directory of each process.
.RE

.sp
.ne 2
.mk
.na
.B pstop
.ad
.RS 10n
.rt
Stop each process or the specified lwps (\fBPR_REQUESTED\fR stop).
.RE

.sp
.ne 2
.mk
.na
.B prun
.ad
.RS 10n
.rt
Set running each process or the specified lwps (the inverse of
.BR pstop ).
.RE

.sp
.ne 2
.mk
.na
.B pwait
.ad
.RS 10n
.rt
Wait for all of the specified processes to terminate.
.RE

.sp
.ne 2
.mk
.na
.B ptime
.ad
.RS 10n
.rt
Time the
.IR command ,
like
.BR time (1),
but using microstate accounting
for reproducible precision. Unlike
.BR time (1),
children of the command
are not timed.
.sp
If the
.B -p
.I pid
version is used, display a snapshot of timing
statistics for the specified
.IR pid .
.RE

.SH OPTIONS
.sp
.LP
The following general options are supported:
.sp
.ne 2
.mk
.na
.B -F
.ad
.RS 6n
.rt
Force. Grabs the target process even if another process has control.
.RE

.sp
.ne 2
.mk
.na
.B -n
.ad
.RS 6n
.rt
(\fBpsig\fR and
.B pfiles
only) Sets non-verbose mode. \fBpsig\fR
displays signal handler addresses rather than names.
.B pfiles
does not
display verbose information for each file descriptor. Instead,
.B pfiles
limits its output to the information that would be retrieved if the process
applied
.BR fstat (2)
to each of its file descriptors.
.RE

.sp
.ne 2
.mk
.na
.B -r
.ad
.RS 6n
.rt
(\fBpflags\fR only) If the process is stopped, displays its machine
registers.
.RE

.sp
.ne 2
.mk
.na
.B -v
.ad
.RS 6n
.rt
(\fBpwait\fR only) Verbose. Reports terminations to standard output.
.RE

.sp
.LP
In addition to the general options,
.B pcred
supports the following
options:
.sp
.ne 2
.mk
.na
.B -g
.I group/gid
.ad
.RS 16n
.rt
Sets the real, effective, and saved group ids
.RB ( GID s)
of the target
processes to the specified value.
.RE

.sp
.ne 2
.mk
.na
.B -G
.I grouplist
.ad
.RS 16n
.rt
Sets the supplementary
.BR GID s
of the target process to the specified
list of groups. The supplementary groups should be specified as a
comma-separated list of group names ids. An empty list clears the
supplementary group list of the target processes.
.RE

.sp
.ne 2
.mk
.na
.B -l
.I login
.ad
.RS 16n
.rt
Sets the real, effective, and saved
.BR UID s
of the target processes to
the
.B UID
of the specified login. Sets the real, effective, and saved
\fBGID\fRs of the target processes to the
.B GID
of the specified login.
Sets the supplementary group list to the supplementary groups list of the
specified login.
.RE

.sp
.ne 2
.mk
.na
.B -u
.I user/uid
.ad
.RS 16n
.rt
Sets the real, effective, and saved user ids
.RB ( UID s)
of the target
processes to the specified value.
.RE

.sp
.LP
In addition to the general options,
.B pldd
supports the following
option:
.sp
.ne 2
.mk
.na
.B -l
.ad
.RS 6n
.rt
Shows unresolved dynamic linker map names.
.RE

.sp
.LP
In addition to the general options,
.B ptime
supports the following
options:
.sp
.ne 2
.mk
.na
.B -m
.ad
.RS 10n
.rt
Display the full set of microstate accounting statistics.
.sp
The displayed fields are as follows:
.sp
.ne 2
.mk
.na
.B real
.ad
.RS 8n
.rt
Wall clock time.
.RE

.sp
.ne 2
.mk
.na
.B user
.ad
.RS 8n
.rt
User level CPU time.
.RE

.sp
.ne 2
.mk
.na
.B sys
.ad
.RS 8n
.rt
System call CPU time.
.RE

.sp
.ne 2
.mk
.na
.B trap
.ad
.RS 8n
.rt
Other system trap CPU time.
.RE

.sp
.ne 2
.mk
.na
.B tflt
.ad
.RS 8n
.rt
Text page fault sleep time.
.RE

.sp
.ne 2
.mk
.na
.B dflt
.ad
.RS 8n
.rt
Data page fault sleep time.
.RE

.sp
.ne 2
.mk
.na
.B kflt
.ad
.RS 8n
.rt
Kernel page fault sleep time.
.RE

.sp
.ne 2
.mk
.na
.B lock
.ad
.RS 8n
.rt
User lock wait sleep time.
.RE

.sp
.ne 2
.mk
.na
.B slp
.ad
.RS 8n
.rt
All other sleep time.
.RE

.sp
.ne 2
.mk
.na
.B lat
.ad
.RS 8n
.rt
CPU latency (wait) time.
.RE

.sp
.ne 2
.mk
.na
.B stop
.ad
.RS 8n
.rt
Stopped time.
.RE

.RE

.sp
.ne 2
.mk
.na
.B -p
.I pid
.ad
.RS 10n
.rt
Displays a snapshot of timing statistics for the specified
.IR pid .
.RE

.sp
.LP
To set the credentials of another process, a process must have sufficient
privilege to change its user and group ids to those specified according to
the rules laid out in
.BR setuid (2)
and it must have sufficient privilege
to control the target process.
.SH USAGE
.sp
.LP
These proc tools stop their target processes while inspecting them and
reporting the results:
.BR pfiles ,
.BR pldd ,
and
.BR pstack .
A process
can do nothing while it is stopped. Thus, for example, if the X server is
inspected by one of these proc tools running in a window under the X
server's control, the whole window system can become deadlocked because the
proc tool would be attempting to print its results to a window that cannot
be refreshed. Logging in from from another system using
.BR rlogin (1)
and
killing the offending proc tool would clear up the deadlock in this case.
.sp
.LP
See
.BR WARNINGS .
.sp
.LP
Caution should be exercised when using the
.B -F
flag. Imposing two
controlling processes on one victim process can lead to chaos. Safety is
assured only if the primary controlling process, typically a debugger, has
stopped the victim process and the primary controlling process is doing
nothing at the moment of application of the
.B proc
tool in question.
.sp
.LP
Some of the proc tools can also be applied to core files, as shown by the
synopsis above. A core file is a snapshot of a process's state and is
produced by the kernel prior to terminating a process with a signal or by
the
.BR gcore (1)
utility. Some of the proc tools can need to derive the
name of the executable corresponding to the process which dumped core or the
names of shared libraries associated with the process. These files are
needed, for example, to provide symbol table information for
.BR pstack (1).
If the proc tool in question is unable to locate the needed
executable or shared library, some symbol information is unavailable for
display. Similarly, if a core file from one operating system release is
examined on a different operating system release, the run-time link-editor
debugging interface
.RB ( librtld_db )
cannot be able to initialize. In this
case, symbol information for shared libraries is not available.
.SH EXIT STATUS
.sp
.LP
The following exit values are returned:
.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 12n
.rt
Successful operation.
.RE

.sp
.ne 2
.mk
.na
.B non-zero
.ad
.RS 12n
.rt
An error has occurred.
.RE

.SH FILES
.sp
.ne 2
.mk
.na
.B /proc/*
.ad
.RS 11n
.rt
process files
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWesu
_
Interface StabilitySee below.
.TE

.sp
.LP
The human readable output is Uncommitted. The options are Committed.
.SH SEE ALSO
.sp
.LP
.BR gcore (1),
.BR ldd (1),
.BR pargs (1),
.BR pgrep (1),
.BR pkill (1),
.BR plimit (1),
.BR pmap (1),
.BR preap (1),
.BR ps (1),
.BR ptree (1),
.BR ppgsz (1),
.BR pwd (1),
.BR rlogin (1),
.BR time (1),
.BR truss (1),
.BR wait (1),
.BR fcntl (2),
.BR fstat (2),
.BR setuid (2),
.BR dlopen (3C),
.BR signal.h (3HEAD),
.BR core (4),
.BR proc (4),
.BR process (4),
.BR attributes (5),
.BR zones (5)
.SH WARNINGS
.sp
.LP
The following
.B proc
tools stop their target processes while inspecting
them and reporting the results:
.BR pfiles ,
.BR pldd ,
and
.BR pstack .
However, even if
.B pstack
operates on an individual thread, it stops the
whole process.
.sp
.LP
A process or thread can do nothing while it is stopped. Stopping a heavily
used process or thread in a production environment, even for a short amount
of time, can cause severe bottlenecks and even hangs of these processes or
threads, causing them to be unavailable to users. Some databases could also
terminate abnormally. Thus, for example, a database server under heavy load
could hang when one of the database processes or threads is traced using the
above mentioned
.B proc
tools. Because of this, stopping a UNIX process
or thread in a production environment should be avoided.
.sp
.LP
A process or thread being stopped by these tools can be identified by
issuing \fB/usr/bin/ps -eflL\fR and looking for "\fBT\fR" in the first
column. Notice that certain processes, for example "\fBsched\fR", can show
the "\fBT\fR" status by default most of the time.
.sp
.LP
The process ID returned for locked files on network file systems might not
be meaningful.
