'\" te
.\" Copyright 1989 AT&T
.\" Copyright (c) 1980 Regents of the University of California.
.\" Copyright (c) 2001, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" Portions Copyright (c) 1992, X/Open Company Limited  All Rights Reserved
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH ctags 1 "18 Mar 1997" "SunOS 5.11" "User Commands"
.SH NAME
ctags \- create a tags file for use with ex and vi
.SH SYNOPSIS
.LP
.nf
\fB/usr/bin/ctags\fR [\fB-aBFtuvwx\fR] [\fB-f\fR \fItagsfile\fR] \fIfile\fR...
.fi

.LP
.nf
\fB/usr/xpg4/bin/ctags\fR [\fB-aBFuvwx\fR] [\fB-f\fR \fItagsfile\fR] \fIfile\fR...
.fi

.SH DESCRIPTION
.sp
.LP
The
.B ctags
utility makes a tags file for
.BR ex (1)
from the
specified C, C++, Pascal, FORTRAN,
.BR yacc (1),
and
.BR lex (1)
sources.
A tags file gives the locations of specified objects (in this case functions
and typedefs) in a group of files.  Each line of the tags file contains the
object name, the file in which it is defined, and an address specification
for the object definition. Functions are searched with a pattern, typedefs
with a line number. Specifiers are given in separate fields on the line,
separated by SPACE or TAB characters. Using the tags file,
.B ex
can
quickly find these objects' definitions.
.sp
.LP
Normally,
.B ctags
places the tag descriptions in a file called
.BR tags ;
this may be overridden with the
.B -f
option.
.sp
.LP
Files with names ending in  \fB\&.c\fR or \fB\&.h\fR are assumed to be
either C or C++ source files and are searched for C/C++  routine and macro
definitions. Files with names ending in \fB\&.cc\fR, \fB\&.C\fR, or
\fB\&.cxx\fR, are assumed to be C++ source files. Files with names ending in
\fB\&.y\fR are assumed to be  \fByacc\fR source files. Files with names
ending in \fB\&.l\fR are assumed to be  \fBlex\fR files.  Others are first
examined to see if they contain any Pascal or
.B FORTRAN
routine
definitions; if not, they are processed again looking for C  definitions.
.sp
.LP
The tag
.B main
is treated specially in C or C++ programs.  The tag
formed is created by prepending
.B M
to
.IR file ,
with a trailing
\fB\&.c\fR , \fB\&.cc\fR \fB\&.C\fR, or \fB\&.cxx\fR removed, if any, and
leading path name components also removed.   This makes use of \fBctags\fR
practical in directories with more than one program.
.SH OPTIONS
.sp
.LP
The precedence of the options that pertain to printing is
.BR -x ,
.BR -v ,
then the remaining options. The following options are supported:
.sp
.ne 2
.mk
.na
.B -a
.ad
.RS 15n
.rt
Appends output to an existing
.B tags
file.
.RE

.sp
.ne 2
.mk
.na
.B -B
.ad
.RS 15n
.rt
Uses backward searching patterns (\fB?\fR.\|.\|.\|\fB?\fR).
.RE

.sp
.ne 2
.mk
.na
.B -f
.I tagsfile
.ad
.RS 15n
.rt
Places the tag descriptions in a file called
.I tagsfile
instead of
.BR tags .
.RE

.sp
.ne 2
.mk
.na
.B -F
.ad
.RS 15n
.rt
Uses forward searching patterns (\fB/\fR.\|.\|.\|\fB/\fR) (default).
.RE

.sp
.ne 2
.mk
.na
.B -t
.ad
.RS 15n
.rt
Creates tags for typedefs.
.B /usr/xpg4/bin/ctags
creates tags for
typedefs by default.
.RE

.sp
.ne 2
.mk
.na
.B -u
.ad
.RS 15n
.rt
Updates the specified files in tags, that is, all references to them are
deleted, and the new values are appended to the file. Beware: this option is
implemented in a way that is rather slow; it is usually faster to simply
rebuild the
.B tags
file.
.RE

.sp
.ne 2
.mk
.na
.B -v
.ad
.RS 15n
.rt
Produces on the standard output an index listing the function name, file
name, and page number (assuming 64 line pages). Since the output will be
sorted into lexicographic order, it may be desired to run the output through
.BR "sort -f" .
.RE

.sp
.ne 2
.mk
.na
.B -w
.ad
.RS 15n
.rt
Suppresses warning diagnostics.
.RE

.sp
.ne 2
.mk
.na
.B -x
.ad
.RS 15n
.rt
Produces a list of object names, the line number and file name on which
each is defined, as well as the text of that line and prints this on the
standard output. This is a simple index which can be printed out as an
off-line readable function index.
.RE

.SH OPERANDS
.sp
.LP
The following
.I file
operands are supported:
.sp
.ne 2
.mk
.na
\fIfile\fB\&.c\fR
.ad
.RS 12n
.rt
Files with basenames ending with the \fB\&.c\fR suffix are treated as
C-language source code.
.RE

.sp
.ne 2
.mk
.na
\fIfile\fB\&.h\fR
.ad
.RS 12n
.rt
Files with basenames ending with the \fB\&.h\fR suffix are treated as
C-language source code.
.RE

.sp
.ne 2
.mk
.na
\fIfile\fB\&.f\fR
.ad
.RS 12n
.rt
Files with basenames ending with the \fB\&.f\fR suffix are treated as
FORTRAN-language source code.
.RE

.SH USAGE
.sp
.LP
The
.B -v
option is mainly used with
.B vgrind
which will be part of
the optional
.B BSD
Compatibility Package.
.SH EXAMPLES
.LP
.B Example 1
Producing entries in alphabetical order
.sp
.LP
Using
.B ctags
with the
.B -v
option produces entries in an order
which may not always be appropriate for
.BR vgrind .
To produce results in
.RB "alphabetical order, you may want to run the output through" " sort"
.BR -f .

.sp
.in +2
.nf
example% \fBctags -v filename.c filename.h | sort -f \|>\| index\fR
example% \fBvgrind -x index\fR
.fi
.in -2
.sp

.LP
.B Example 2
Building a tags file
.sp
.LP
To build a tags file for C sources in a directory hierarchy rooted at
.IR sourcedir ,
first create an empty tags file, and then run
.BR find (1)

.sp
.in +2
.nf
example% \fBcd \fIsourcedir \fR ; rm -f tags ; touch tags\fR
example% \fBfind . \e( -name SCCS -prune -name \e\e
       '*.c' -o -name '*.h' \e) -exec ctags -u {} \e;\fR
.fi
.in -2
.sp

.sp
.LP
Notice that spaces must be entered exactly as shown.

.SH ENVIRONMENT VARIABLES
.sp
.LP
See
.BR environ (5)
for descriptions of the following environment
variables that affect the execution of
.BR ctags :
.BR LANG ,
.BR LC_ALL ,
.BR LC_COLLATE ,
.BR LC_CTYPE ,
.BR LC_MESSAGES ,
and
.BR NLSPATH .
.SH EXIT STATUS
.sp
.LP
The following exit values are returned:
.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 6n
.rt
Successful completion.
.RE

.sp
.ne 2
.mk
.na
.B >0
.ad
.RS 6n
.rt
An error occurred.
.RE

.SH FILES
.sp
.ne 2
.mk
.na
.B tags
.ad
.RS 8n
.rt
output tags file
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.SS "/usr/bin/ctags"
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWtoo
.TE

.SS "/usr/xpg4/bin/ctags"
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWxcu4
_
Interface StabilityStandard
.TE

.SH SEE ALSO
.sp
.LP
.BR ex (1),
.BR lex (1),
.BR vgrind (1),
.BR vi (1),
.BR yacc (1),
.BR attributes (5),
.BR environ (5),
.BR standards (5)
.SH NOTES
.sp
.LP
Recognition of
.BR functions ,
.BR subroutines ,
and
.B procedures
for
.B FORTRAN
and Pascal is done in a very simpleminded way. No attempt is
made to deal with block structure; if you have two Pascal procedures in
different blocks with the same name, you lose.
.sp
.LP
The method of deciding whether to look for C or Pascal and
.BR FORTRAN
functions is a hack.
.sp
.LP
The
.B ctags
utility does not know about
.BR #ifdefs .
.sp
.LP
The
.B ctags
utility should know about Pascal types. Relies on the input
being well formed to detect typedefs. Use of
.B -tx
shows only the last
line of typedefs.
