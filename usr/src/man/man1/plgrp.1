'\" te
.\" Copyright (c) 2006, Sun Microsystems, Inc. All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH plgrp 1 "8 Sep 2006" "SunOS 5.11" "User Commands"
.SH NAME
plgrp \- observe and affect home lgroup and lgroup affinities of threads
.SH SYNOPSIS
.LP
.nf
\fBplgrp\fR [\fB-F\fR] [\fB-h\fR] \fIpid\fR |\fI core\fR [/\fIlwps\fR] .\|.\|.
.fi

.LP
.nf
\fBplgrp\fR [\fB-F\fR] \fB-a\fR \fIlgroup_list\fR \fIpid\fR[/\fIlwps\fR] .\|.\|.
.fi

.LP
.nf
\fBplgrp\fR [\fB-F\fR] \fB-H\fR \fIlgroup_list\fR \fIpid\fR[/\fIlwps\fR] .\|.\|.
.fi

.LP
.nf
\fBplgrp\fR [\fB-F\fR] \fB-A\fR \fIlgroup_list\fR/\fInone\fR | \fIweak\fR |\fIstrong\fR [,.\|.\|.] \fIpid\fR
     [/\fIlwps\fR] .\|.\|.
.fi

.SH DESCRIPTION
.sp
.LP
.B plgrp
displays or sets the home
.B lgroup
and
.BR lgroup
affinities for one or more processes, threads, or LWPs.
.sp
.LP
An
.B lgroup
represents the set of CPU and memory-like hardware devices
that are at most some distance (latency) apart from each other. Each
.B lgroup
in the system is identified by a unique
.B lgroup
ID. The
.B lgroups
are organized into a hierarchy to facilitate finding the
nearest resources (see lgrpinfo(1) for more about
.B lgroups
and the
.B lgroup
hierarchy).
.sp
.LP
By default, each thread is assigned a home
.B lgroup
upon creation. When
the system needs to allocate a CPU or memory resource for a thread, it
searches the lgroup hierarchy from the thread's home
.B lgroup
for the
nearest available resources to the thread's home.
.sp
.LP
Typically, the home
.B lgroup
for a thread is the lgroup for which the
thread has the most affinity. Initially, the system chooses a home
.B lgroup
for each thread, but leaves the thread's affinity for that
.B lgroup
set to
.BR none .
If a thread sets a stronger affinity for an
lgroup in its processor set other than its home, the thread is rehomed to
that lgroup as long as the thread is not bound to a CPU. The thread can be
re-homed to the
.B lgroup
in its processor set with the next highest
affinity when the affinity (if any) for its home
.B lgroup
is removed
(set to
.BR none ).
.sp
.LP
The different levels of lgroup affinities and their semantics are fully
described in
.BR lgrp_affinity_set (3LGRP).
.SH USAGE
.SS "Specifying lgroups"
.sp
.LP
.I lgroup_list
is a comma separated list of one or more of the
following:
.sp
.in +2
.nf
- \fIlgroup_ID\fR
- Range of \fIlgroup_ID\fRs specified as
 <start \fIlgroup_ID\fR>-<end \fIlgroup_ID\fR>
- all
- root
- leaves
.fi
.in -2
.sp

.sp
.LP
The
.B all
keyword represents all lgroup IDs in the system. The
.B root
keyword represents the ID of the root
.BR lgroup .
The
.B leaves
keyword represents the IDs of all
.BR "leaf lgroups" ,
that is, lgroups which do not have any children.
.SS "Specifying Processes and Threads"
.sp
.LP
.B plgrp
takes one or more space separated processes or threads as
arguments. Processes and threads can be specified in a manner similiar to
the
.BR proc (1)
tools. A process ID may be specified as an integer
.I
pid \c
or
.BI /proc/ pid\c
\&.
Shell expansions can be used to specify
processes when
.BI /proc/ pid
is used. For example,
.B /proc/*
can
be used to specify all the processes in the system. If a process ID is given
alone, then all the threads of the process are included as arguments to
.BR plgrp .
.sp
.LP
A thread can be explicitly specified with its process ID and thread ID
given together as \fIpid\fB/\fIlwpid\fR. Multiple threads of a process
.RB "can be selected at once by using the hyphen (" - ") and comma(" , ).
For example,
.IB pid /1,2,7-9
specifies threads 1, 2, 7, 8, and 9 of
the process with
.I pid
as its process ID.
.SH OPTIONS
.sp
.LP
The following options are supported:
.sp
.ne 2
.mk
.na
.B -a
.I lgroup_list
.ad
.sp .6
.RS 4n
Display
.B lgroup
affinities of specified processes or threads for the
specified
.IR lgroup_list .
.RE

.sp
.ne 2
.mk
.na
.B -A
\fIlgroup_list\fB/\fInone\fB|\fIweak\fB|\fIstrong\fB[,.\|.\|.]\fR
.ad
.sp .6
.RS 4n
Set affinity of specified processes or threads for the specified
.IR lgroup_list .
.sp
A comma separated list of \fIlgroups\fB/\fIaffinity\fR assignments
can be given to set several affinities at once.
.RE

.sp
.ne 2
.mk
.na
.B -F
.ad
.sp .6
.RS 4n
Force by grabbing the target process even if another process has control.
Caution should be exercised when using the
.B -F
flag. Imposing two
controlling processes on one victim process can lead to chaos. Safety is
assured only when the primary controlling process (typically a debugger) has
stopped the victim process, but isn't doing anything during the application
of this proc tool. See
.B WARNINGS
for more details.
.RE

.sp
.ne 2
.mk
.na
.B -h
.ad
.sp .6
.RS 4n
Get home
.B lgroup
of specified processes and/or threads. If no options
are specified, this is the default.
.RE

.sp
.ne 2
.mk
.na
.B -H
.I lgroup_list
.ad
.sp .6
.RS 4n
Set home
.B lgroup
of specified processes and threads.
.sp
This sets a strong affinity for the desired lgroup to rehome the threads.
If more than one
.B lgroup
is specified,
.B plgrp
tries to home the
threads to the
.B lgroups
in a round robin fashion.
.RE

.SH OPERANDS
.sp
.LP
The following operands are supported:
.sp
.ne 2
.mk
.na
.I lwps
.ad
.RS 8n
.rt
Specifies thread. See
.BR USAGE .
.RE

.sp
.ne 2
.mk
.na
.I pid
.ad
.RS 8n
.rt
Specifies process ID. See
.BR USAGE .
.RE

.SH EXAMPLES
.LP
.B Example 1
Getting the Home
.B lgroup
for the Shell
.sp
.LP
The following example gets the home
.B lgroup
for the shell:

.sp
.in +2
.nf
% plgrp $$
PID/LWPID    HOME
3401/1        1
.fi
.in -2
.sp

.LP
.B Example 2
Setting the Home
.B lgroup
of Multiple Threads to the
Root
.BR lgroup
.sp
.LP
The following example sets the home
.B lgroup
of multiple threads to the
root
.BR lgroup :

.sp
.in +2
.nf
% plgrp -H root `pgrep firefox`
     PID/LWPID    HOME
     918/1        1 => 0
     934/1        2 => 0
     934/2        1 => 0
     934/3        2 => 0
     934/625      1 => 0
     934/626      2 => 0
     934/624      2 => 0
     934/623      2 => 0
     934/630      1 => 0
.fi
.in -2
.sp

.LP
.B Example 3
Getting Two Threads' Affinities for
.B "lgroups 0-2"
.sp
.LP
The following example gets two threads' affinities for
.BR "lgroups 1-2" :

.sp
.in +2
.nf
% plgrp -a 0-2 101398/1 101337/1
PID/LWPID    HOME  AFFINITY
101398/1        1     0-2/none
101337/1        1     0-2/none
.fi
.in -2
.sp

.LP
.B Example 4
Setting
.B lgroup
Affinities
.sp
.LP
The following example sets lgroup affinities:

.sp
.in +2
.nf
% plgrp -A 0/weak,1/none,2/strong 101398
PID/LWPID    HOME       AFFINITY
101398/1        1 => 2     0,2/none => 2/strong,0/weak
.fi
.in -2
.sp

.SH EXIT STATUS
.sp
.LP
The following exit values are returned:
.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 5n
.rt
Successful completion.
.RE

.sp
.ne 2
.mk
.na
.B 1
.ad
.RS 5n
.rt
Syntax error. Nothing was changed.
.RE

.sp
.ne 2
.mk
.na
.B 2
.ad
.RS 5n
.rt
Non-fatal error or interrupt. Something might have changed.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWesu
_
Interface StabilitySee below.
.TE

.sp
.LP
The command syntax is Unstable. The output formats are Unstable.
.SH SEE ALSO
.sp
.LP
.BR lgrpinfo (1),
.BR madv.so.1 (1),
.BR pmadvise (1),
.BR pmap (1),
.BR proc (1),
.BR ps (1),
.BR prstat (1M),
.BR lgrp_affinity_get (3LGRP),
.BR lgrp_affinity_set (3LGRP),
.BR lgrp_home (3LGRP),
.BR liblgrp (3LIB),
.BR proc (4),
.BR attributes (5)
.SH WARNINGS
.sp
.LP
Like the
.BR proc (1)
tools, the
.B plgrp
utility stops its target
processes while inspecting them and reports the results when invoked with
any option.
.sp
.LP
There are conditions under which processes can deadlock. A process can do
nothing while it is stopped. Stopping a heavily used process in a production
environment (even for a short amount of time) can cause severe bottlenecks
and even hangs of these processes, making them to be unavailable to users.
Thus, stopping a UNIX process in a production environment should be avoided.
See
.BR proc (1).
.sp
.LP
A process that is stopped by this tool might be identified by issuing the
following command:
.sp
.in +2
.nf
/usr/bin/ps -eflL
.fi
.in -2
.sp

.sp
.LP
and looking for a
.B T
in the first column of the output. Certain
processes, for example,
.BR sched ,
can show the
.B T
status by default
most of the time.
