'\" te
.\" Copyright 1989 AT&T
.\" Copyright (c) 2000, Sun Microsystems, Inc.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\"  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH getoptcvt 1 "7 Jan 2000" "SunOS 5.11" "User Commands"
.SH NAME
getoptcvt \- convert to getopts to parse command options
.SH SYNOPSIS
.LP
.nf
\fB/usr/lib/getoptcvt\fR [\fB-b\fR] \fIfilename\fR
.fi

.LP
.nf
\fB/usr/lib/getoptcvt\fR
.fi

.SH DESCRIPTION
.sp
.LP
.B /usr/lib/getoptcvt
reads the shell script in
.IR filename ,
converts
it to use
.B getopts
instead of
.BR getopt ,
and writes the results on
the standard output.
.sp
.LP
.B getopts
is a built-in Bourne shell command used to parse positional
parameters and to check for valid options. See
.BR sh (1).
It supports all
applicable rules of the command syntax standard (see Rules 3-10,
.BR Intro (1)).
It should be used in place of the
.B getopt
command.
(See the NOTES section below.) The syntax for the shell's built-in
.B getopts
command is:
.sp
.LP
.B getopts
.I optstring name
[
.IR argument \|.\|.\|.\|]
.sp
.LP
.I optstring
must contain the option letters the command using
.B getopts
will recognize; if a letter is followed by a colon
.RB ( : ),
the option is expected to have an argument, or group of arguments, which
must be separated from it by white space.
.sp
.LP
Each time it is invoked,
.B getopts
places the next option in the shell
variable
.I name
and the index of the next argument to be processed in
the shell variable
.BR OPTIND .
Whenever the shell or a shell script is
invoked,
.B OPTIND
is initialized to
.BR 1 .
.sp
.LP
When an option requires an option-argument,
.B getopts
places it in the
shell variable
.BR OPTARG .
.sp
.LP
If an illegal option is encountered,
.B ?
will be placed in
.IR name .
.sp
.LP
When the end of options is encountered,
.B getopts
exits with a non-zero
exit status. The special option \fB \(mi\(mi\fR may be used to delimit the
end of the options.
.sp
.LP
By default,
.B getopts
parses the positional parameters. If extra
arguments (\fIargument\fR .\|.\|.) are given on the
.B getopts
command
line,
.B getopts
parses them instead.
.sp
.LP
So that all new commands will adhere to the command syntax standard
described in
.BR Intro (1),
they should use
.B getopts
or
.BR getopt
to parse positional parameters and check for options that are valid for that
command (see the NOTES section below).
.SH OPTIONS
.sp
.LP
The following option is supported:
.sp
.ne 2
.mk
.na
.B -b
.ad
.RS 6n
.rt
Makes the converted script portable to earlier releases of the UNIX system.
.B /usr/lib/getoptcvt
modifies the shell script in
.I filename
so that
when the resulting shell script is executed, it determines at run time
whether to invoke
.B getopts
or
.BR getopt .
.RE

.SH EXAMPLES
.LP
.B Example 1
Processing the arguments for a command
.sp
.LP
The following fragment of a shell program shows how one might process the
arguments for a command that can take the options
.B -a
or
.BR -b ,
as
well as the option
.BR -o ,
which requires an option-argument:

.sp
.in +2
.nf
while getopts abo: c
do
      case $c in
      a | b)     FLAG=$c;;
      o)         OARG=$OPTARG;;
      \e?)        echo $USAGE
                 exit 2;;
      esac
done
shift `expr $OPTIND \(mi 1`
.fi
.in -2

.LP
.B Example 2
Equivalent code expressions
.sp
.LP
This code accepts any of the following as equivalent:

.sp
.in +2
.nf
\fBcmd -a -b -o "xxx z yy" filename
cmd -a -b -o "xxx z yy" -filename
cmd -ab -o xxx,z,yy filename
cmd -ab -o "xxx z yy" filename
cmd -o xxx,z,yy b a filename\fR
.fi
.in -2
.sp

.SH ENVIRONMENT VARIABLES
.sp
.LP
See
.BR environ (5)
for descriptions of the following environment
variables that affect the execution of
.BR getopts :
.BR LC_CTYPE ,
.BR LC_MESSAGES ,
and
.BR NLSPATH .
.sp
.ne 2
.mk
.na
.B OPTIND
.ad
.RS 11n
.rt
This variable is used by
.B getoptcvt
as the index of the next argument
to be processed.
.RE

.sp
.ne 2
.mk
.na
.B OPTARG
.ad
.RS 11n
.rt
This variable is used by
.B getoptcvt
to store the argument if an option
is using arguments.
.RE

.SH EXIT STATUS
.sp
.LP
The following exit values are returned:
.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 7n
.rt
An option, specified or unspecified by
.IR optstring ,
was found.
.RE

.sp
.ne 2
.mk
.na
.B >0
.ad
.RS 7n
.rt
The end of options was encountered or an error occurred.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcsu
CSIenabled
.TE

.SH SEE ALSO
.sp
.LP
.BR Intro (1),
.BR getopts (1),
.BR sh (1),
.BR shell_builtins (1),
.BR getopt (3C),
.BR attributes (5)
.SH DIAGNOSTICS
.sp
.LP
.B getopts
prints an error message on the standard error when it
encounters an option letter not included in
.IR optstring .
.SH NOTES
.sp
.LP
Although the following command syntax rule (see
.BR Intro (1))
relaxations
are permitted under the current implementation, they should not be used
because they may not be supported in future releases of the system. As in
the EXAMPLES section above,
.B -a
and
.B -b
are options, and the
option
.B -o
requires an option-argument. The following example violates
Rule 5:  options with option-arguments must not be grouped with other
options:
.sp
.in +2
.nf
example% \fBcmd -aboxxx filename\fR
.fi
.in -2
.sp

.sp
.LP
The following example violates Rule 6: there must be white space after an
option that takes an option-argument:
.sp
.in +2
.nf
example% \fBcmd -ab oxxx filename\fR
.fi
.in -2
.sp

.sp
.LP
Changing the value of the shell variable
.B OPTIND
or parsing different
sets of arguments may lead to unexpected results.
