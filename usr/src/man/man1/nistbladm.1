'\" te
.\" Copyright (C) 2005, Sun Microsystems, Inc. All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH nistbladm 1 "2 Dec 2005" "SunOS 5.11" "User Commands"
.SH NAME
nistbladm \- NIS+ table administration command
.SH SYNOPSIS
.LP
.nf
\fBnistbladm\fR \fB-a\fR | \fB-A\fR [\fB-D\fR \fIdefaults\fR] \fIcolname\fR = \fIvalue\fR.\|.\|. \fItablename\fR
.fi

.LP
.nf
\fBnistbladm\fR \fB-a\fR | \fB-A\fR [\fB-D\fR \fIdefaults\fR] \fIindexedname\fR
.fi

.LP
.nf
\fBnistbladm\fR \fB-c\fR [\fB-D\fR \fIdefaults\fR] [\fB-p\fR \fIpath\fR] [\fB-s\fR \fIsep\fR] \fItype\fR \fIcolname\fR =
     [\fIflags\fR] [, \fIaccess\fR].\|.\|. \fItablename\fR
.fi

.LP
.nf
\fBnistbladm\fR \fB-d\fR \fItablename\fR
.fi

.LP
.nf
\fBnistbladm\fR \fB-e\fR | \fB-E\fR \fIcolname\fR = \fIvalue\fR.\|.\|. \fIindexedname\fR
.fi

.LP
.nf
\fBnistbladm\fR \fB-m\fR \fIcolname\fR = \fIvalue\fR.\|.\|. \fIindexedname\fR
.fi

.LP
.nf
\fBnistbladm\fR \fB-r\fR | \fB-R\fR [\fIcolname\fR = \fIvalue\fR.\|.\|.] \fItablename\fR
.fi

.LP
.nf
\fBnistbladm\fR \fB-r\fR | \fB-R\fR \fIindexedname\fR
.fi

.LP
.nf
\fBnistbladm\fR \fB-u\fR [\fB-p\fR \fIpath\fR] [\fB-s\fR \fIsep\fR] [\fB-t\fR \fItype\fR]
     [\fIcolname\fR = \fIaccess\fR.\|.\|.] \fItablename\fR
.fi

.SH DESCRIPTION
.sp
.LP
The
.B nistbladm
command is used to administer  NIS+ tables. There are
five primary operations that it performs: creating and deleting tables,
adding entries to, modifying entries within, and removing entries from
tables.
.sp
.LP
Though NIS+ does not place restrictions on the size of tables or entries,
the size of data has an impact on the performance and the disk space
requirements of the NIS+ server. NIS+ is not designed to store huge pieces
of data, such as files; instead, pointers to files should be stored in
NIS+.
.sp
.LP
NIS+ design is optimized to support 10,000 objects with a total size of 10M
bytes. If the requirements exceed the above, it is suggested that the domain
hierarchy be created, or the data stored in the tables be pointers to the
actual data, instead of the data itself.
.sp
.LP
When creating tables, a table type,
.BR type ,
and a list of column
definitions must be provided.
.sp
.LP
.B type
is a string that is stored in the table and later used by the
service to verify that entries being added to it are of the correct type.
.sp
.LP
Syntax for column definitions is:
.sp
.LP
.IR colname\fB= [ flags ][, access ]
.sp
.LP
.I flags
is a combination of:
.sp
.ne 2
.mk
.na
.B S
.ad
.RS 5n
.rt
Searchable. Specifies that searches can be done on the column's values (see
.BR nismatch (1)).
.RE

.sp
.ne 2
.mk
.na
.B I
.ad
.RS 5n
.rt
Case-insensitive (only makes sense in combination with
.BR S ).
Specifies
that searches should ignore case.
.RE

.sp
.ne 2
.mk
.na
.B C
.ad
.RS 5n
.rt
Crypt. Specifies that the column's values should be encrypted.
.RE

.sp
.ne 2
.mk
.na
.B B
.ad
.RS 5n
.rt
Binary data (does not make sense in combination with
.BR S ).
If not set,
the column's values are expected to be null terminated ASCII strings.
.RE

.sp
.ne 2
.mk
.na
.B X
.ad
.RS 5n
.rt
XDR encoded data  (only makes sense in combination with
.BR B ).
.RE

.sp
.LP
.I access
is specified in the format as defined by the
.BR nischmod (1)
command.
.sp
.LP
When manipulating entries, this command takes two forms of entry name.  The
.RI "first uses a series of space separated  " colname = value " pairs that"
specify column values in the entry. The second is a NIS+ indexed name,
.IR indexedname ,
of the form:
.sp
.in +2
.nf
\fB[ \fIcolname\fB=\fIvalue\fB, .\|.\|. ],\fItablename\fR
.fi
.in -2

.SH OPTIONS
.sp
.LP
The following options are supported:
.sp
.ne 2
.mk
.na
.B -a
\fB\|| A\fR
.ad
.RS 16n
.rt
Adds entries to a NIS+ table. The difference between the lowercase `a' and
the uppercase `A' is in the treatment of preexisting entries. The entry's
.RI "contents are specified by the  " column = value " pairs on the command"
line. Values for all columns must be specified when adding entries to a
table.
.sp
Normally, NIS+ reports an error if an attempt is made to add an entry to a
table that would overwrite an entry that already exists. This prevents
multiple parties from adding duplicate entries and having one of them get
overwritten. If you wish to force the add, the uppercase `A' specifies that
the entry is to be added, even if it already exists. This is analogous to a
modify operation on the entry.
.RE

.sp
.ne 2
.mk
.na
.B -c
.ad
.RS 16n
.rt
Creates a table named
.I tablename
in the namespace. The table that is
created must have at least one column and at least one column must be
searchable.
.RE

.sp
.ne 2
.mk
.na
.B -d
.I tablename
.ad
.RS 16n
.rt
Destroys the table named
.IR tablename .
The table that is being destroyed
must be empty. The table's contents can be deleted with the
.B -R
option
below.
.RE

.sp
.ne 2
.mk
.na
\fB-e\||E\fR
.ad
.RS 16n
.rt
Edits the entry in the table that is specified by
.IR indexdname .
.I indexdname
must uniquely identify a single entry. It is possible to
edit the value in a column that would change the indexed name of an entry.
.sp
The change
.RI ( colname =\fIvalue\fR)
may affect other entries in the
table if the change results in an entry whose indexed name is different from
.I indexedname
and which matches that of another existing entry. In this
case, the
.B -e
option will fail and an error will be reported. The
.B -E
option will force the replacement of the existing entry by the new
entry (effectively removing two old entries and adding a new one).
.RE

.sp
.ne 2
.mk
.na
.B -m
.ad
.RS 16n
.rt
A synonym for
.BR -E .
This option has been superseded by the
.BR -E
option.
.RE

.sp
.ne 2
.mk
.na
\fB-r\||R\fR
.ad
.RS 16n
.rt
Removes entries from a table. The xentry is specified by either a series of
\fIcolumn\fR=\fIvalue\fR pairs on the command line, or an indexed name that
is specified as
.IR entryname .
The difference between the interpretation
of the lowercase `r' versus the uppercase `R' is in the treatment of
non-unique entry specifications. Normally the NIS+ server will disallow an
attempt to remove an entry when the search criterion specified for that
entry resolves to more than one entry in  the table. However, it is
sometimes desirable to remove more than one entry, as when you are
attempting to remove all of the entries from a table. In this case, using
the uppercase `R' will force the NIS+ server to remove all entries matching
the passed search criterion. If that criterion is null and no column values
specified, then all entries in the table will be removed.
.RE

.sp
.ne 2
.mk
.na
.B -u
.ad
.RS 16n
.rt
Updates attributes of a table. This allows the concatenation path
.RB ( -p "), separation character (specified with the (" -s )),
column
access rights, and table type string
.RB ( -t )
of a table to be changed.
Neither the number of columns, nor the columns that are searchable may be
changed.
.RE

.sp
.ne 2
.mk
.na
.B -D
.I defaults
.ad
.RS 16n
.rt
When creating objects, this option specifies a different set of defaults to
be used during this operation. The
.I defaults
string is a series of
tokens separated by colons. These tokens represent the default values to be
used for the generic object properties. All of the legal tokens are
described below.
.sp
.ne 2
.mk
.na
.B ttl=time
.ad
.RS 19n
.rt
This token sets the default time to live for objects that are created by
this command. The value
.B time
is specified in the format as defined by
the
.BR nischttl (1)
command. The default value is 12 hours.
.RE

.sp
.ne 2
.mk
.na
.BI owner= ownername
.ad
.RS 19n
.rt
This token specifies that the
.B NIS+
principal
.I ownername
should
own the created object. Normally this value is the same as the principal who
is executing the command.
.RE

.sp
.ne 2
.mk
.na
.BI group= groupname
.ad
.RS 19n
.rt
This token specifies that the group
.I groupname
should be the group
owner for the object that is created.  The default value is
.IR NULL .
.RE

.sp
.ne 2
.mk
.na
.BI access= rights
.ad
.RS 19n
.rt
This token specifies the set of access rights that are to be granted for
the given object. The value
.I rights
is specified in the format as
defined by the
.BR nischmod (1)
command. The default value is
.BR \(mi\|\(mi\|\(mi\|\(mirmcdr\(mi\|\(mi\|\(mir\(mi\|\(mi\|\(mi \&.
.RE

.RE

.sp
.ne 2
.mk
.na
.B -p
.I path
.ad
.RS 16n
.rt
When creating or updating a table, this option specifies the table's search
path. When a
.B nis_list()
function is invoked, the user can specify the
flag
.B FOLLOW_PATH
to tell the client library to continue searching
tables in the table's path if the search criteria used does not yield any
entries. The path consists of an ordered list of table names, separated by
colons. The names in the path must be fully qualified.
.RE

.sp
.ne 2
.mk
.na
.B -s
.I  sep
.ad
.RS 16n
.rt
When creating or updating a table, this option specifies the table's
separator character. The separator character is used by
.BR niscat (1)
when displaying tables on the standard output. Its purpose is to separate
column data when the table is in
.B ASCII
form. The default value is a
space.
.RE

.sp
.ne 2
.mk
.na
.B -t
.I type
.ad
.RS 16n
.rt
When updating a table, this option specifies the table's type string.
.RE

.SH EXAMPLES
.LP
.B Example 1
Creating an Unmodifiable Table
.sp
.LP
This example creates a table named
.B hobbies
in the directory
.B foo.com.
of the type
.B hobby_tbl
with two searchable columns,
.B name
and
.BR hobby .

.sp
.in +2
.nf
example% \fBnistbladm -c hobby_tbl name=S,\e
      a+r,o+m hobby=S,a+r hobbies.foo.com.\fR
.fi
.in -2
.sp

.sp
.LP
The column
.B name
has read access for all (that is,
.BR owner ,
.BR group ,
and
.BR world )
and modify access for only the owner. The
column
.B hobby
is readable by all, but not modifiable by anyone.

.sp
.LP
In this example, if the access rights had not been specified, the table's
access rights would have come from either the standard defaults or the
.B NIS_DEFAULTS
variable (see below).

.LP
.B Example 2
Adding Entries to the Table
.sp
.LP
To add entries to this table:

.sp
.in +2
.nf
example% \fBnistbladm -a name=bob hobby=skiing hobbies.foo.com.\fR
example% \fBnistbladm -a name=sue hobby=skiing hobbies.foo.com.\fR
example% \fBnistbladm -a name=ted hobby=swimming hobbies.foo.com.\fR

.fi
.in -2
.sp

.LP
.B Example 3
Adding the Concatenation Path
.sp
.LP
In the following example, the common root domain is
.B foo.com
(NIS+
requires at least two components to define the root domain) and the
concatenation path for the subdomains
.B bar
and
.B baz
are added:

.sp
.in +2
.nf
example% \fBnistbladm -u -p hobbies.bar.foo.com.:hobbies.baz.foo.com. \e
            hobbies\fR
.fi
.in -2
.sp

.LP
.B Example 4
Deleting Skiers from the List
.sp
.LP
To delete the skiers from our list:

.sp
.in +2
.nf
example% \fBnistbladm -R hobby=skiing hobbies.foo.com.\fR
.fi
.in -2
.sp

.sp
.LP
Note:  The use of the
.B -r
option would fail because there are two
entries with the value of
.BR skiing .

.LP
.B Example 5
Naming a Column with no Flags Set
.sp
.LP
To create a table with a column that is named with no flags set, you supply
only the name and the equals (=) sign as follows:

.sp
.in +2
.nf
example% \fBnistbladm -c notes_tbl name=S,a+r,o+m note=  notes.foo.com.\fR
.fi
.in -2
.sp

.sp
.LP
This example created a table, named
.IR notes.foo.com. ,
of type
.I notes_tbl
with two columns
.B name
and
.BR note .
The
.BR note
column is not searchable.

.LP
.B Example 6
Protecting Terminal Characters
.sp
.LP
When entering data for columns in the form of a
.I value
string, it is
essential that terminal characters be protected by single or double quotes.
These are the characters equals (=), comma (,), left bracket ([), right
bracket (]), and space ( ). These characters are parsed by NIS+ within an
indexed name. These characters are protected by enclosing the entire value
in double quote (") characters as follows:

.sp
.in +2
.nf
example% \fBnistbladm -a fullname="Joe User" nickname=Joe nicknames\fR
.fi
.in -2
.sp

.sp
.LP
If there is any doubt about how the string will be parsed, it is better to
enclose it in quotes.

.SH ENVIRONMENT VARIABLES
.sp
.ne 2
.mk
.na
.B NIS_DEFAULTS
.ad
.RS 16n
.rt
This variable contains a defaults string that will be override the NIS+
standard defaults. If the
.B -D
switch is used those values will then
override both the
.B NIS_DEFAULTS
variable and the standard defaults.
.RE

.sp
.ne 2
.mk
.na
.B NIS_PATH
.ad
.RS 16n
.rt
If this variable is set, and the NIS+ table name is not fully qualified,
each directory specified will be searched until the table is found. See
.BR nisdefaults (1).
.RE

.SH EXIT STATUS
.sp
.LP
The following exit values are returned:
.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 5n
.rt
Successful operation.
.RE

.sp
.ne 2
.mk
.na
.B 1
.ad
.RS 5n
.rt
Operation failed.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWnisu
.TE

.SH SEE ALSO
.sp
.LP
.BR NIS+ (1),
.BR niscat (1),
.BR nischmod (1),
.BR nischown (1),
.BR nischttl (1),
.BR nisdefaults (1),
.BR nismatch (1),
.BR nissetup (1M),
.BR attributes (5)
.SH NOTES
.sp
.LP
NIS+ might not be supported in future releases of the Solaris operating
system. Tools to aid the migration from NIS+ to LDAP are available in the
current Solaris release. For more information, visit
http://www.sun.com/directory/nisplus/transition.html.
.SH WARNINGS
.sp
.LP
To modify one of the entries, say, for example, from "bob" to "robert":
.sp
.in +2
.nf
example% \fBnistbladm -m name=robert [name=bob],hobbies\fR
.fi
.in -2
.sp

.sp
.LP
Notice that "\fB[name=bob],hobbies\fR" is an indexed name, and that the
characters `[' (open bracket) and `]' (close bracket) are interpreted by the
shell. When typing entry names in the form of  NIS+ indexed names, the name
must be protected by using single quotes.
.sp
.LP
It is possible to specify a set of defaults such that you cannot read or
modify the table object later.
