'\" te
.\" Copyright (c) 1992, X/Open Company Limited All Rights Reserved
.\" Copyright 1989 AT&T
.\" Portions Copyright (c) 2007, Sun Microsystems, Inc. All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" Portions Copyright (c) 1982-2007 AT&T Knowledge Ventures
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH read 1 "18 Dec 2007" "SunOS 5.11" "User Commands"
.SH NAME
read \- read a line from standard input
.SH SYNOPSIS
.LP
.nf
\fB/usr/bin/read\fR [\fB-r\fR] \fIvar\fR.\|.\|.
.fi

.SS "sh"
.LP
.nf
\fBread\fR \fIname\fR.\|.\|.
.fi

.SS "csh"
.LP
.nf
\fBset\fR \fIvariable\fR= $<
.fi

.SS "ksh"
.LP
.nf
\fBread\fR [\fB-prsu\fR [\fIn\fR]] [\fIname\fR ? \fIprompt\fR] [\fIname\fR].\|.\|.
.fi

.SS "ksh93"
.LP
.nf
\fBread\fR [\fB-Aprs\fR] [\fB-d\fR \fIdelim\fR] [\fB-n\fR \fInsize\fR] [\fB-N\fR \fInsize\fR] [\fB-t\fR \fItimeout\fR][\fB-u\fR \fIunit\fR] [\fIvname\fB?\fIprompt\fR] [\fIvname\fR.\|.\|. ]
.fi

.SH DESCRIPTION
.SS "/usr/bin/read"
.sp
.LP
The
.B read
utility reads a single line from standard input.
.sp
.LP
By default, unless the
.B -r
option is specified, backslash
.RB ( \e )
acts as an escape character. If standard input is a terminal device and the
invoking shell is interactive,
.B read
prompts for a continuation line
when:
.RS +4
.TP
.ie t \(bu
.el o
.RB "The shell reads an input line ending with a backslash, unless the" " -r"
option is specified.
.RE
.RS +4
.TP
.ie t \(bu
.el o
A here-document is not terminated after a
.B NEWLINE
character is
entered.
.RE
.sp
.LP
The line is split into fields as in the shell. The first field is assigned
to the first variable
.IR var ,
the second field to the second variable
.IR var ,
and so forth. If there are fewer
.I var
operands specified
than there are fields, the leftover fields and their intervening separators
is assigned to the last
.IR var .
If there are fewer fields than
.IR var s,
the remaining
.IR var s
is set to empty strings.
.sp
.LP
The setting of variables specified by the
.I var
operands affects the
current shell execution environment. If it is called in a sub-shell or
separate utility execution environment, such as one of the following:
.sp
.in +2
.nf
\fB(read foo)
nohup read .\|.\|.
find . -exec read .\|.\|. \e;\fR
.fi
.in -2
.sp

.sp
.LP
it does not affect the shell variables in the caller's environment.
.sp
.LP
The standard input must be a text file.
.SS "sh"
.sp
.LP
One line is read from the standard input and, using the internal field
separator,
.B IFS
(normally space or tab), to delimit word boundaries,
the first word is assigned to the first
.IR name ,
the second word to the
second
.IR name ,
and so on, with leftover words assigned to the last
.IR name .
.RB "Lines can be continued using " \enewline \&.
Characters other
than
.B NEWLINE
can be quoted by preceding them with a backslash. These
backslashes are removed before words are assigned to
.IR names ,
and no
interpretation is done on the character that follows the backslash. The
return code is
.BR 0 ,
unless an end-of-file is encountered.
.SS "csh"
.sp
.LP
The notation:
.sp
.in +2
.nf
set \fIvariable\fR \fB= $<\fR
.fi
.in -2
.sp

.sp
.LP
loads one line of standard input as the value for
.IR variable .
(See
.BR csh (1)).
.SS "ksh"
.sp
.LP
The shell input mechanism. One line is read and is broken up into fields
using the characters in
.B IFS
as separators. The escape character,
.BR (\e) ,
is used to remove any special meaning for the next character and
for line continuation. In raw mode, the
.BR -r ,
the
.B ,
and the
.B
\e \c
character are not treated specially. The first field is assigned to
the first
.IR name ,
the second field to the second
.IR name ,
and so on,
with leftover fields assigned to the last
.IR name .
The
.B -p
option
causes the input line to be taken from the input pipe of a process spawned
by the shell using
.BR |& .
If the
.B -s
flag is present, the input is
saved as a command in the history file. The flag
.B -u
can be used to
specify a one digit file descriptor unit
.I n
to read from. The file
descriptor can be opened with the
.B exec
special command. The default
value of
.I n
is
.BR 0 .
If
.I name
is omitted,
.B REPLY
is used
as the default
.IR name .
The exit status is
.B 0
unless the input file
is not open for reading or an end-of-file is encountered. An end-of-file
with the
.B -p
option causes cleanup for this process so that another can
be spawned. If the first argument contains a
.BR ? ,
the remainder of this
word is used as a
.I prompt
on standard error when the shell is
interactive. The exit status is
.B 0
unless an end-of-file is
encountered.
.SS "ksh93"
.sp
.LP
.B read
reads a line from standard input and breaks it into fields using
the characters in the value of the
.B IFS
variable as separators. The
escape character,
.BR \e ,
is used to remove any special meaning for the
next character and for line continuation unless the
.B -r
option is
specified.
.sp
.LP
If there are more variables than fields, the remaining variables are set to
empty strings. If there are fewer variables than fields, the leftover fields
and their intervening separators are assigned to the last variable. If no
.I var
is specified, the variable
.B REPLY
is used.
.sp
.LP
When
.I var
has the binary attribute and
.B -n
or
.B -N
is
specified, the bytes that are read are stored directly into
.IR var .
.sp
.LP
If you specify
.BI ? prompt
after the first
.IR var ,
.B read
displays a prompt on standard error when standard input is a terminal or
pipe.
.SH OPTIONS
.SS "/usr/bin/read, ksh"
.sp
.LP
The following option is supported by
.B /usr/bin/read
and
.BR ksh :
.sp
.ne 2
.mk
.na
.B -r
.ad
.RS 6n
.rt
Do not treat a backslash character in any special way. Considers each
backslash to be part of the input line.
.RE

.SS "ksh93"
.sp
.LP
The following options are supported by
.BR ksh93 :
.sp
.ne 2
.mk
.na
.B -A
.ad
.RS 14n
.rt
Unset
.IR var ,
and create an indexed array containing each field in the
line starting at index
.BR 0 .
.RE

.sp
.ne 2
.mk
.na
.B -d
.I delim
.ad
.RS 14n
.rt
Read until delimiter
.I delim
instead of to the end of line.
.RE

.sp
.ne 2
.mk
.na
.B -n
.I nsize
.ad
.RS 14n
.rt
Read at most
.I nsize
bytes. Binary field size is in bytes.
.RE

.sp
.ne 2
.mk
.na
.B -N
.I nsize
.ad
.RS 14n
.rt
Read exactly
.I nsize
bytes. Binary field size is in bytes.
.RE

.sp
.ne 2
.mk
.na
.B -p
.ad
.RS 14n
.rt
Read from the current co-process instead of standard input. An end of file
causes
.B read
to disconnect the co-process so that another can be
created.
.RE

.sp
.ne 2
.mk
.na
.B -r
.ad
.RS 14n
.rt
Do not treat \fB\e\fR specially when processing the input line.
.RE

.sp
.ne 2
.mk
.na
.B -s
.ad
.RS 14n
.rt
Save a copy of the input as an entry in the shell history file.
.RE

.sp
.ne 2
.mk
.na
.B -t
.I timeout
.ad
.RS 14n
.rt
Specify a
.I timeout
in seconds when reading from a terminal or pipe.
.RE

.sp
.ne 2
.mk
.na
.B -u
.I fd
.ad
.RS 14n
.rt
Read from file descriptor number
.I fd
instead of standard input. The
default value is
.BR 0 .
.RE

.sp
.ne 2
.mk
.na
.B -v
.ad
.RS 14n
.rt
When reading from a terminal, display the value of the first variable and
use it as a default value.
.RE

.SH OPERANDS
.sp
.LP
The following operand is supported:
.sp
.ne 2
.mk
.na
.I var
.ad
.RS 7n
.rt
The name of an existing or non-existing shell variable.
.RE

.SH EXAMPLES
.LP
.B Example 1
Using the
.B read
Command
.sp
.LP
The following example for
.B /usr/bin/read
prints a file with the first
field of each line moved to the end of the line:

.sp
.in +2
.nf
example% \fBwhile read -r xx yy
do
        printf "%s %s\en" "$yy" "$xx"
done < input_file\fR
.fi
.in -2
.sp

.SH ENVIRONMENT VARIABLES
.sp
.LP
See
.BR environ (5)
for descriptions of the following environment
variables that affect the execution of
.BR read :
.BR LANG ,
.BR LC_ALL ,
.BR LC_CTYPE ,
.BR LC_MESSAGES ,
and
.BR NLSPATH .
.sp
.ne 2
.mk
.na
.B IFS
.ad
.RS 7n
.rt
Determines the internal field separators used to delimit fields.
.RE

.sp
.ne 2
.mk
.na
.B PS2
.ad
.RS 7n
.rt
Provides the prompt string that an interactive shell writes to standard
error when a line ending with a backslash is read and the
.B -r
option
was not specified, or if a here-document is not terminated after a NEWLINE
character is entered.
.RE

.SH EXIT STATUS
.sp
.LP
The following exit values are returned:
.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 6n
.rt
Successful completion.
.RE

.sp
.ne 2
.mk
.na
.B >0
.ad
.RS 6n
.rt
End-of-file was detected or an error occurred.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.SS "/usr/bin/read, csh, ksh, sh"
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcsu
_
Interface StabilityCommitted
_
StandardSee \fBstandards\fR(5).
.TE

.SS "ksh93"
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcsu
_
Interface StabilityUncommitted
.TE

.SH SEE ALSO
.sp
.LP
.BR csh (1),
.BR ksh (1),
.BR ksh93 (1),
.BR line (1),
.BR set (1),
.BR sh (1),
.BR attributes (5),
.BR environ (5),
.BR standards (5)
