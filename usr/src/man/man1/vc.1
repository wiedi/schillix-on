'\" te
.\" Copyright 1989 AT&T  Copyright (c) 1990, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH vc 1 "5 Jul 1990" "SunOS 5.11" "User Commands"
.SH NAME
vc \- version control
.SH SYNOPSIS
.LP
.nf
\fBvc\fR [\fB-a\fR] [\fB-t\fR] [\fB-c\fR \fIchar\fR] [\fB-s\fR]
     [\fIkeyword=value\fR.\|.\|. \fIkeyword=value\fR]
.fi

.SH DESCRIPTION
.sp
.LP
This command is obsolete and will be removed in the next release.
.sp
.LP
The
.B vc
command copies lines from the standard input to the standard
output under control of its  arguments and of ``control statements''
encountered in the standard input. In the process of performing the copy
operation, user-declared
.IR keyword s
may be replaced by their string
.I value
when they appear in plain text and/or control statements.
.sp
.LP
The copying of lines from the standard input to the standard output is
conditional, based on tests (in control statements) of keyword values
specified in control statements or as
.B vc
command arguments.
.sp
.LP
A control statement is a single line beginning with a control character,
except as modified by the
.B -t
keyletter (see below). The default
control character is colon
.RB ( : ),
except as modified by the
.BR -c
keyletter (see below). Input lines beginning with a backslash
.RB ( \e )
followed by a control character are not control lines and are copied to the
standard output with the backslash removed. Lines beginning with a backslash
followed by a non-control character are copied in their entirety.
.sp
.LP
A keyword is composed of 9 or less alphanumerics; the first must be
alphabetic. A value is any
.B ASCII
string that can be created with
.BR ed ;
a numeric value is an unsigned string of digits. Keyword values
may not contain blanks or tabs.
.sp
.LP
Replacement of keywords by values is done whenever a keyword surrounded by
control characters is encountered on a version control statement. The
.B -a
keyletter (see below) forces replacement of keywords in all lines
of text. An uninterpreted control character may be included in a value by
.RB "preceding it with " \e "\&. If a literal " \e
is desired, then it too
must be preceded by \fB\e\fR\&.
.SH OPTIONS
.sp
.LP
The following options are supported:
.sp
.ne 2
.mk
.na
.B -a
.ad
.RS 10n
.rt
Forces replacement of keywords surrounded by control characters with their
assigned value in all text lines and not just in
.B vc
statements.
.RE

.sp
.ne 2
.mk
.na
.B -t
.ad
.RS 10n
.rt
All characters from the beginning of a line up to and including the first
tab character are ignored for the purpose of detecting a control statement.
If a control statement is found, all characters up to and including the tab
are discarded.
.RE

.sp
.ne 2
.mk
.na
.BI -c char
.ad
.RS 10n
.rt
Specifies a control character to be used in place of the
.RB `` : ''
default.
.RE

.sp
.ne 2
.mk
.na
.B -s
.ad
.RS 10n
.rt
Silences warning messages (not error) that are normally printed on the
diagnostic output.
.RE

.sp
.LP
.B vc
recognizes the following version control statements:
.sp
.ne 2
.mk
.na
\fB:dcl \fIkeyword\fR[\fB,\fR .\|.\|.\fB, \fIkeyword\fR]\fR
.ad
.sp .6
.RS 4n
Declare keywords.  All keywords must be declared.
.RE

.sp
.ne 2
.mk
.na
\fB:asg \fIkeyword\fB=\fIvalue\fR
.ad
.sp .6
.RS 4n
Assign values to keywords. An
.B asg
statement overrides the assignment
for the corresponding keyword on the
.B vc
command line and all previous
.B asg
statements for that keyword. Keywords that are declared but are
not assigned values have null values.
.RE

.sp
.ne 2
.mk
.na
.BI :if " condition"
.ad
.br
.na
\fB\&.\|.\|.\fR
.ad
.br
.na
.B :end
.ad
.sp .6
.RS 4n
Skip lines of the standard input. If the condition is true, all lines
between the
.B if
statement and the matching
.B end
statement are
copied to the standard output. If the condition is false, all intervening
lines are discarded, including control statements. Note:  Intervening
.B if
statements and matching
.B end
statements are recognized solely
for the purpose of maintaining the proper
.B if-end
matching.
.sp
The syntax of a condition is:
.sp
.ne 2
.mk
.na
.B <cond>
.ad
.RS 11n
.rt
::=  [ ``\fBnot\fR'' ] \fI<or>\fR
.RE

.sp
.ne 2
.mk
.na
.B <or>
.ad
.RS 11n
.rt
::=
.I "<and> | <and>"
``\fB|\fR'' \fI<or>\fR
.RE

.sp
.ne 2
.mk
.na
.B <and>
.ad
.RS 11n
.rt
::=
.I "<exp> | <exp>"
``\fB&\fR\&'' \fI<and>\fR
.RE

.sp
.ne 2
.mk
.na
.B <exp>
.ad
.RS 11n
.rt
::=  ``\fB(\fR''
.I <or>
``\fB)\fR'' \fI| <value> <op> <value>\fR
.RE

.sp
.ne 2
.mk
.na
.B <op>
.ad
.RS 11n
.rt
::=  ``\fB=\fR''
.I |
``\fB!=\fR'' \fI| ``\fB<\fR\&'' |
``\fB>\fR''\fR
.RE

.sp
.ne 2
.mk
.na
.B <value>
.ad
.RS 11n
.rt
.RI "::= " " <arbitrary ASCII string> | <numeric string>"
.RE

The available operators and their meanings are:
.sp
.ne 2
.mk
.na
.B =
.ad
.RS 7n
.rt
equal
.RE

.sp
.ne 2
.mk
.na
.B !=
.ad
.RS 7n
.rt
not equal
.RE

.sp
.ne 2
.mk
.na
.B &
.ad
.RS 7n
.rt
and
.RE

.sp
.ne 2
.mk
.na
.B |
.ad
.RS 7n
.rt
or
.RE

.sp
.ne 2
.mk
.na
.B >
.ad
.RS 7n
.rt
greater than
.RE

.sp
.ne 2
.mk
.na
.B <
.ad
.RS 7n
.rt
less than
.RE

.sp
.ne 2
.mk
.na
.B ()
.ad
.RS 7n
.rt
used for logical groupings
.RE

.sp
.ne 2
.mk
.na
.B not
.ad
.RS 7n
.rt
may only occur immediately after the
.BR if ,
and when present, inverts
the value of the entire condition
.RE

The
.B >
and
.B <
operate only on unsigned integer values (for
example,
.B ": 012 > 12"
is false). All other operators take strings as
arguments (for example,
.B ": 012 != 12"
is true).
.sp
The precedence of the operators (from highest to lowest) is:
.sp
.ne 2
.mk
.na
.B = != > <
.ad
.RS 12n
.rt
all of equal precedence
.RE

.sp
.ne 2
.mk
.na
.B &
.ad
.RS 12n
.rt

.RE

.sp
.ne 2
.mk
.na
.B |
.ad
.RS 12n
.rt

.RE

Parentheses may be used to alter the order of precedence.
.sp
Values must be separated from operators or parentheses by at least one
blank or tab.
.RE

.sp
.ne 2
.mk
.na
.BI :: text
.ad
.sp .6
.RS 4n
Replace keywords on lines that are copied to the standard output. The two
leading control characters are removed, and keywords surrounded by control
characters in text are replaced by their value before the line is copied to
the output file. This action is independent of the
.B -a
keyletter.
.RE

.sp
.ne 2
.mk
.na
.B :on
.ad
.br
.na
.B :off
.ad
.sp .6
.RS 4n
Turn on or off keyword replacement on all lines.
.RE

.sp
.ne 2
.mk
.na
.BI :ctl " char"
.ad
.sp .6
.RS 4n
Change the control character to
.IR char .
.RE

.sp
.ne 2
.mk
.na
.BI :msg " message"
.ad
.sp .6
.RS 4n
Print
.I message
on the diagnostic output.
.RE

.sp
.ne 2
.mk
.na
.BI :err " message"
.ad
.sp .6
.RS 4n
Print
.I message
followed by:
.sp
\fB      ERROR: err statement on line .\|.\|. (915)\fR
.sp
on the diagnostic output.
.B vc
halts execution, and returns an exit
code of
.BR 1 .
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWsprot
.TE

.SH SEE ALSO
.sp
.LP
.BR ed (1),
.BR attributes (5)
