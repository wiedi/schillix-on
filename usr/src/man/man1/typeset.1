'\" te
.\" Copyright (c) 2009, Sun Microsystems, Inc. All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" Copyright 1989 AT&T Copyright
.\" Portions Copyright (c) 1982-2007 AT&T Knowledge Ventures
.TH typeset 1 "11 Aug 2009" "SunOS 5.11" "User Commands"
.SH NAME
typeset, whence \- shell built-in functions to set/get attributes and values
for shell variables and functions
.SH SYNOPSIS
.LP
.nf
\fBtypeset\fR [\(+- HLRZfilrtux [\fIn\fR]] [\fIname\fR[=\fIvalue\fR]]...
.fi

.LP
.nf
\fBwhence\fR [\fB-pv\fR] \fIname\fR...
.fi

.SS "ksh93"
.LP
.nf
\fB++typeset\fR [\(+-AHflbnprtux] [\(+-EFLRZi[\fIn\fR]] [\fIvname\fR[=\fIvalue\fR]]
.fi

.LP
.nf
\fBwhence\fR [\fB-afpv\fR] \fIname\fR...
.fi

.SH DESCRIPTION
.SS "ksh"
.sp
.LP
.B typeset
sets attributes and values for shell variables and functions.
When
.B typeset
is invoked inside a function, a new instance of the
variables
.I name
is created. The variables
.I value
and
.B type
are
restored when the function completes. The following list of attributes can be
specified:
.sp
.ne 2
.mk
.na
.B -f
.ad
.RS 6n
.rt
The names refer to function names rather than variable names. No assignments
can be made and the only other valid flags are
.BR -t ,
.B -u
and
.BR -x .
The flag
.B -t
turns on execution tracing for this function. The
flag
.B -u
causes this function to be marked undefined. The
.B FPATH
variable is searched to find the function definition when
the function is referenced. The flag
.B -x
allows the function definition
to remain in effect across shell procedures invoked by name.
.RE

.sp
.ne 2
.mk
.na
.B -H
.ad
.RS 6n
.rt
This flag provides UNIX to hostname file mapping on non-UNIX machines.
.RE

.sp
.ne 2
.mk
.na
.B -i
.ad
.RS 6n
.rt
Parameter is an integer. This makes arithmetic faster. If
.I n
is
.B non-zero
it defines the output arithmetic base; otherwise, the first
assignment determines the output base.
.RE

.sp
.ne 2
.mk
.na
.B -l
.ad
.RS 6n
.rt
All uppercase characters are converted to lowercase. The uppercase flag,
.B -u
is turned off.
.RE

.sp
.ne 2
.mk
.na
.B -L
.ad
.RS 6n
.rt
Left justify and remove leading blanks from
.IR value .
If
.I n
is
.B non-zero
it defines the width of the field; otherwise, it is determined
by the width of the value of first assignment. When the variable is assigned
to, it is filled on the right with blanks or truncated, if necessary, to fit
into the field. Leading zeros are removed if the
.B -Z
flag is also set.
The
.B -R
flag is turned off.
.RE

.sp
.ne 2
.mk
.na
.B -r
.ad
.RS 6n
.rt
The specified
.IR name "s are marked"
.B readonly
and these names cannot
be changed by subsequent assignment.
.RE

.sp
.ne 2
.mk
.na
.B -R
.ad
.RS 6n
.rt
Right justify and fill with leading blanks. If
.I n
is
.B non-zero
it
defines the width of the field, otherwise it is determined by the width of
the value of first assignment. The field is left filled with blanks or
truncated from the end if the variable is reassigned. The
.B -L
flag is
turned off.
.RE

.sp
.ne 2
.mk
.na
.B -t
.ad
.RS 6n
.rt
Tags the variables. Tags are user definable and have no special meaning to
the shell.
.RE

.sp
.ne 2
.mk
.na
.B -u
.ad
.RS 6n
.rt
All lowercase characters are converted to uppercase characters. The
lowercase flag,
.B -l
is turned off.
.RE

.sp
.ne 2
.mk
.na
.B -x
.ad
.RS 6n
.rt
The specified
.IR name s
are marked for automatic export to the
.B environment
of subsequently-executed commands.
.RE

.sp
.ne 2
.mk
.na
.B -Z
.ad
.RS 6n
.rt
Right justify and fill with leading zeros if the first non-blank character
is a digit and the
.B -L
flag has not been set. If
.I n
is
.B non-zero
it defines the width of the field. Otherwise, it is determined
by the width of the value of first assignment.
.RE

.sp
.LP
The
.B -i
attribute can not be specified along with
.BR -R ,
.BR -L ,
.BR -Z ,
or
.BR -f .
.sp
.LP
Using
.B +
rather than
.B \(mi
causes these flags to be turned off. If
no
.I name
arguments are specified but flags are specified, a list of
.I names
(and optionally the
.IR values )
of the
.I variables
which
have these flags set is printed. (Using
.B +
rather than
.B \(mi
keeps
the values from being printed.) If no
.IR name s
and flags are specified,
the
.I names
and
.I attributes
of all
.I variables
are printed.
.sp
.LP
For each
.IR name ,
.B whence
indicates how it would be interpreted if
used as a command name.
.sp
.LP
The
.B -v
flag produces a more verbose report.
.sp
.LP
The
.B -p
flag does a path search for
.I name
even if name is an
alias, a function, or a reserved word.
.sp
.LP
On this manual page,
.BR ksh (1)
commands that are preceded by one or two *
(asterisks) are treated specially in the following ways:
.RS +4
.TP
1.
Variable assignment lists preceding the command remain in effect when the
command completes.
.RE
.RS +4
.TP
2.
I/O redirections are processed after variable assignments.
.RE
.RS +4
.TP
3.
Errors cause a script that contains them to abort.
.RE
.RS +4
.TP
4.
Words, following a command preceded by
.B **
that are in the format of a
variable assignment, are expanded with the same rules as a variable
assignment. This means that tilde substitution is performed after the
.B =
sign and word splitting and file name generation are not performed.
.RE
.SS "ksh93"
.sp
.LP
If the
.B -f
option is not specified,
.B typeset
sets, unsets, or
displays attributes of variables as specified with the options. If the first
option is specified with a
.B -
then the attributes are set for each of
the specified names. If the first option is specified with a
.BR + ,
then
the specified attributes are unset. If
.BI = value
is specified,
.I value
is assigned before the attributes are set.
.sp
.LP
When
.B typeset
is called inside a function that is defined with the
.B function
reserved word, and
.I name
does not contain a \fB\&.\fR, a
local variable statically scoped to that function is created.
.sp
.LP
Not all option combinations are possible. For example, the numeric options
.BR -i ,
.BR -E ,
and
.B -F
cannot be specified with the justification
options
.BR -L ,
.BR -R ,
and
.BR -Z .
.sp
.LP
The following preset aliases are set by the shell:
.sp
.ne 2
.mk
.na
.B float
.ad
.RS 13n
.rt
.B typeset -E
.RE

.sp
.ne 2
.mk
.na
.B functions
.ad
.RS 13n
.rt
.B typeset -f
.RE

.sp
.ne 2
.mk
.na
.B integer
.ad
.RS 13n
.rt
.B typeset -i
.RE

.sp
.ne 2
.mk
.na
.B nameref
.ad
.RS 13n
.rt
.B typeset -n
.RE

.sp
.LP
If no
.I names
are specified, variables that have the specified options
are displayed. If the first option is specified with a leading
.B -
then
the name and value of each variable is written to standard output. Otherwise,
only the names are written. If no options or only the
.B -p
option are
specified, the names and attributes of all variables that have attributes are
written to standard output. When
.B -f
is specified, the names displayed
are function names.
.sp
.LP
If
.B -f
is specified, then each name refers to a function and the only
valid options are \fB-u\fR and
.BR -t .
In this case no \fB=\fIvalue\fR
can be specified.
.sp
.LP
.B typeset
is built-in to the shell as a declaration command so that
field splitting and pathname expansion are not performed on the arguments.
Tilde expansion occurs on
.IR value .
.sp
.LP
The following options are supported by the
.B typeset
built-in command in
.BR ksh93 :
.sp
.ne 2
.mk
.na
.B -a
.ad
.RS 13n
.rt
Indexed array. This is the default.
.RE

.sp
.ne 2
.mk
.na
.B -A
.ad
.RS 13n
.rt
Associative array. Each
.I name
is converted to an associative array. If
a variable already exists, the current value becomes index
.BR 0 .
.RE

.sp
.ne 2
.mk
.na
.B -b
.ad
.RS 13n
.rt
.RB "Each name can contain binary data. Its value is the mime" " base64"
encoding of the data. This option can be used with
.BR -Z ,
to specify fixed
sized fields.
.RE

.sp
.ne 2
.mk
.na
.B -C
.ad
.RS 13n
.rt
Reserved for future use.
.RE

.sp
.ne 2
.mk
.na
\fB-E\fR [\fIn\fR]\fR
.ad
.RS 13n
.rt
Floating point number represented in scientific notation.
.I n
specifies
the number of significant figures when the value is expanded. The default
value is
.BR 10 .
.RE

.sp
.ne 2
.mk
.na
.B -f
.ad
.RS 13n
.rt
Each of the options and names refers to a function.
.RE

.sp
.ne 2
.mk
.na
\fB-F\fR [\fIn\fR]\fR
.ad
.RS 13n
.rt
Floating point.
.I n
is the number of places after the decimal point when
the value is expanded. The default value is
.BR 10 .
.RE

.sp
.ne 2
.mk
.na
.B -h
.ad
.RS 13n
.rt
Reserved for future use.
.RE

.sp
.ne 2
.mk
.na
.B -H
.ad
.RS 13n
.rt
Hostname mapping. Each name holds a native pathname. Assigning a UNIX format
pathname causes it to be converted to a pathname suitable for the current
host. This has no effect when the native system is UNIX.
.RE

.sp
.ne 2
.mk
.na
\fB-i\fR [\fIbase\fR]\fR
.ad
.RS 13n
.rt
An integer.
.I base
represents the arithmetic base from
.B 2
to
.BR 64 .
The option value can be omitted. The default value is
.BR 10 .
.RE

.sp
.ne 2
.mk
.na
.B -l
.ad
.RS 13n
.rt
.RB "Convert uppercase characters to lowercase characters. Unsets the" " -u"
option. When used with
.BR -i ,
.BR -E ,
or
.B -F
indicates long
variant.
.RE

.sp
.ne 2
.mk
.na
\fB-L\fR [\fIn\fR]\fR
.ad
.RS 13n
.rt
Left justify. If
.I n
is specified, it represents the field width. If the
.B -Z
attribute is also specified, then leading zeros are stripped. The
option value can be omitted.
.RE

.sp
.ne 2
.mk
.na
.B -n
.ad
.RS 13n
.rt
Name reference. The value is the name of a variable that
.I name
references.
.I name
cannot contain a
.BR \&. .
.RE

.sp
.ne 2
.mk
.na
.B -p
.ad
.RS 13n
.rt
Causes the output to be in a format that can be used as input to the shell
to recreate the attributes for variables.
.RE

.sp
.ne 2
.mk
.na
.B -r
.ad
.RS 13n
.rt
Enables read-only. Once this option is enabled, it cannot be disabled. See
.BR readonly (1).
.RE

.sp
.ne 2
.mk
.na
\fB-R\fR [\fIn\fR]\fR
.ad
.RS 13n
.rt
Right justify. If
.I n
is specified it represents the field width. If the
.B -Z
option is also specified, zeros are used as the fill character.
Otherwise, SPACEs are used.
.RE

.sp
.ne 2
.mk
.na
.B -s
.ad
.RS 13n
.rt
Restricts integer size to short when used with
.BR -i .
.RE

.sp
.ne 2
.mk
.na
.B -S
.ad
.RS 13n
.rt
When used inside a function defined with the function reserved word, the
specified variables will have function static scope.
.RE

.sp
.ne 2
.mk
.na
.B -t
.ad
.RS 13n
.rt
When used with
.BR -f ,
enables tracing for each of the specified
functions. Otherwise,
.B -t
is a user defined attribute and has no meaning
to the shell.
.RE

.sp
.ne 2
.mk
.na
.B -T
.I tname
.ad
.RS 13n
.rt
.I tname
is the name of a type name given to each name.
.RE

.sp
.ne 2
.mk
.na
.B -u
.ad
.RS 13n
.rt
Without
.B -f
or
.BR -i ,
converts lowercase characters to uppercase and
unsets
.BR -l .
When used with
.BR -f ,
specifies that
.I name
is a
function that has not yet been loaded. When used with
.B -i
specifies that
the value is displayed as an unsigned integer.
.RE

.sp
.ne 2
.mk
.na
.B -x
.ad
.RS 13n
.rt
Puts each name on the export list. See
.BR export (1).
.I name
cannot
contain a
.BR \&. .
.RE

.sp
.ne 2
.mk
.na
\fB-X\fR [\fIn\fR]\fR
.ad
.RS 13n
.rt
Floating point number represented in hexadecimal notation.
.I n
specifies
the number of significant figures when the value is expanded. The option
value may be omitted. The default value is 10.
.RE

.sp
.ne 2
.mk
.na
\fB-Z\fR [\fIn\fR]\fR
.ad
.RS 13n
.rt
Zero fill. If
.I n
is specified it represents the field width. The option
value can be omitted.
.RE

.sp
.LP
The following exit values are returned by
.B typeset
in
.BR ksh93 :
.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 6n
.rt
Successful completion.
.RE

.sp
.ne 2
.mk
.na
.B >0
.ad
.RS 6n
.rt
An error occurred.
.RE

.sp
.LP
If the
.B -v
is not specified,
.B whence
writes on standard output an
absolute pathname, if any, corresponding to
.I name
based on the complete
search order that the shell uses. If
.I name
is not found, no output is
produced.
.sp
.LP
If the
.B -v
is specified, the output from
.B whence
also contains
information that indicates how the specified name would be interpreted by the
shell in the current execution environment.
.sp
.LP
The following options are supported by the
.B whence
built-in command in
.BR ksh93 :
.sp
.ne 2
.mk
.na
.B -a
.ad
.RS 6n
.rt
Display all uses for each name rather than the first.
.RE

.sp
.ne 2
.mk
.na
.B -f
.ad
.RS 6n
.rt
Do not check for functions.
.RE

.sp
.ne 2
.mk
.na
.B -p
.ad
.RS 6n
.rt
Do not check to see if name is a reserved word, a built-in, an alias, or a
function.
.RE

.sp
.ne 2
.mk
.na
.B -v
.ad
.RS 6n
.rt
For each name specified, the shell displays a line that indicates if that
name is one of the following:
.RS +4
.TP
.ie t \(bu
.el o
Reserved word
.RE
.RS +4
.TP
.ie t \(bu
.el o
Alias
.RE
.RS +4
.TP
.ie t \(bu
.el o
Built-in
.RE
.RS +4
.TP
.ie t \(bu
.el o
Undefined function
.RE
.RS +4
.TP
.ie t \(bu
.el o
Function
.RE
.RS +4
.TP
.ie t \(bu
.el o
Tracked alias
.RE
.RS +4
.TP
.ie t \(bu
.el o
Program
.RE
.RS +4
.TP
.ie t \(bu
.el o
Not found
.RE
.RE

.sp
.LP
The following exit values are returned by
.B whence
in
.BR ksh93 :
.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 6n
.rt
Successful completion. Each name was found by the shell.
.RE

.sp
.ne 2
.mk
.na
.B 1
.ad
.RS 6n
.rt
One or more names were not found by the shell.
.RE

.sp
.ne 2
.mk
.na
.B >1
.ad
.RS 6n
.rt
An error occurred.
.RE

.sp
.LP
On this manual page,
.BR ksh93 (1)
commands that are preceded by one or two
.B +
(plus signs) are treated specially in the following ways:
.RS +4
.TP
1.
Variable assignment lists preceding the command remain in effect when the
command completes.
.RE
.RS +4
.TP
2.
I/O redirections are processed after variable assignments.
.RE
.RS +4
.TP
3.
Errors cause a script that contains them to abort.
.RE
.RS +4
.TP
4.
They are not valid function names.
.RE
.RS +4
.TP
5.
Words, following a command preceded by
.B ++
that are in the format of a
variable assignment, are expanded with the same rules as a variable
assignment. This means that tilde substitution is performed after the
.B =
sign and word splitting and file name generation are not performed.
.RE
.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
\fBATTRIBUTE TYPE\fR\fBATTRIBUTE VALUE\fR
_
AvailabilitySUNWcsu
.TE

.SH SEE ALSO
.sp
.LP
.BR ksh (1),
.BR ksh93 (1),
.BR readonly (1),
.BR set (1),
.BR sh (1),
.BR attributes (5)
