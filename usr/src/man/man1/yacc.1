'\" te
.\" Copyright 1989 AT&T
.\" Copyright (c) 2009, Sun Microsystems, Inc.  All Rights Reserved
.\" Portions Copyright (c) 1992, X/Open Company Limited  All Rights Reserved
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH yacc 1 "24 Aug 2009" "SunOS 5.11" "User Commands"
.SH NAME
yacc \- yet another compiler-compiler
.SH SYNOPSIS
.LP
.nf
\fByacc\fR [\fB-dltVv\fR] [\fB-b\fR \fIfile_prefix\fR] [\fB-Q\fR [y | n]]
      [\fB-P\fR \fIparser\fR] [\fB-p\fR \fIsym_prefix\fR] \fIfile\fR
.fi

.SH DESCRIPTION
.sp
.LP
The
.B yacc
command converts a context-free grammar into a set of tables
for a simple automaton that executes an LALR(1) parsing algorithm. The
grammar can be ambiguous. Specified precedence rules are used to break
ambiguities.
.sp
.LP
The output file,
.BR y.tab.c ,
must be compiled by the C compiler to
produce a function
.BR yyparse() .
This program must be loaded with the
lexical analyzer program,
.BR yylex() ,
as well as
.B main()
and
.BR yyerror() ,
an error handling routine. These routines must be supplied
by the user. The
.BR lex (1)
command is useful for creating lexical
analyzers usable by
.BR yacc .
.SH OPTIONS
.sp
.LP
The following options are supported:
.sp
.ne 2
.mk
.na
.B -b
.I file_prefix
.ad
.RS 18n
.rt
Uses \fIfile_prefix\fR instead of \fBy\fR as the prefix for all output
files. The code file
.BR y.tab.c ,
the header file
.B y.tab.h
(created
when
.B -d
is specified), and the description file \fBy.output\fR
(created when
.B -v
is specified), is changed to
\fIfile_prefix\fB\&.tab.c\fR, \fIfile_prefix\fB\&.tab.h\fR, and
\fIfile_prefix\fB\&.output\fR, respectively.
.RE

.sp
.ne 2
.mk
.na
.B -d
.ad
.RS 18n
.rt
Generates the file
.B y.tab.h
with the
.B #define
statements that
associate the \fByacc\fR user-assigned "token codes" with the user-declared
"token names". This association allows source files other than \fBy.tab.c\fR
to access the token codes.
.RE

.sp
.ne 2
.mk
.na
.B -l
.ad
.RS 18n
.rt
Specifies that the code produced in
.B y.tab.c
does not contain any
.B #line
constructs. This option should only be used after the grammar
and the associated actions are fully debugged.
.RE

.sp
.ne 2
.mk
.na
.B -p
.I sym_prefix
.ad
.RS 18n
.rt
Uses \fIsym_prefix\fR instead of \fByy\fR as the prefix for all external
names produced by
.BR yacc .
The names affected include the functions
.BR yyparse() ,
.B yylex()
and
.BR yyerror() ,
and the variables
.IR yylval ,
.I yychar
and
.IR yydebug .
(In the remainder of this
section, the six symbols cited are referenced using their default names only
as a notational convenience.) Local names can also be affected by the
.B -p
option. However, the
.B -p
option does not affect \fB#define\fR
symbols generated by
.BR yacc .
.RE

.sp
.ne 2
.mk
.na
.B -P
.I parser
.ad
.RS 18n
.rt
Allows you to specify the parser of your choice instead of
.BR /usr/share/lib/ccs/yaccpar .
For example, you can specify:
.sp
.in +2
.nf
example% \fByacc -P ~/myparser parser.y\fR
.fi
.in -2
.sp

.RE

.sp
.ne 2
.mk
.na
\fB-Q\fR[\fBy\fR|\fBn\fR]\fR
.ad
.RS 18n
.rt
The
.B -Qy
option puts the version stamping information in
.BR y.tab.c .
This allows you to know what version of
.B yacc
built the
file. The
.B -Qn
option (the default) writes no version information.
.RE

.sp
.ne 2
.mk
.na
.B -t
.ad
.RS 18n
.rt
Compiles runtime debugging code by default. Runtime debugging code is
always generated in
.B y.tab.c
under conditional compilation control. By
default, this code is not included when
.B y.tab.c
is compiled. Whether
or not the
.B -t
option is used, the runtime debugging code is under the
control of
.B YYDEBUG
, a preprocessor symbol. If
.B YYDEBUG
has a
non-zero value, then the debugging code is included. If its value is
.BR 0 ,
then the code is not included. The size and execution time of a
program produced without the runtime debugging code is smaller and slightly
faster.
.RE

.sp
.ne 2
.mk
.na
.B -v
.ad
.RS 18n
.rt
Prepares the file
.BR y.output ,
which contains a description of the
parsing tables and a report on conflicts generated by ambiguities in the
grammar.
.RE

.sp
.ne 2
.mk
.na
.B -V
.ad
.RS 18n
.rt
Prints on the standard error output the version information for
.BR yacc .
.RE

.SH OPERANDS
.sp
.LP
The following operand is required:
.sp
.ne 2
.mk
.na
.I file
.ad
.RS 8n
.rt
A path name of a file containing instructions for which a parser is to be
created.
.RE

.SH EXAMPLES
.LP
.B Example 1
Accessing the yacc Library
.sp
.LP
Access to the
.B yacc
library is obtained with library search operands
to
.BR cc .
To use the
.B yacc
library
.BR main :

.sp
.in +2
.nf
example% \fBcc y.tab.c -ly\fR
.fi
.in -2
.sp

.sp
.LP
Both the
.B lex
library and the
.B yacc
library contain
.BR main .
To access the
.BR "yacc main" :

.sp
.in +2
.nf
example% \fBcc y.tab.c lex.yy.c -ly -ll\fR
.fi
.in -2
.sp

.sp
.LP
This ensures that the
.B yacc
library is searched first, so that its
.B main
is used.

.sp
.LP
The historical
.B yacc
libraries have contained two simple functions
that are normally coded by the application programmer. These library
functions are similar to the following code:

.sp
.in +2
.nf
#include <locale.h>
int main(void)
{
        extern int yyparse();

        setlocale(LC_ALL, "");

        /* If the following parser is one created by lex, the
           application must be careful to ensure that LC_CTYPE
           and LC_COLLATE are set to the POSIX locale.  */
        (void) yyparse();
        return (0);
}

#include <stdio.h>

int yyerror(const char *msg)
{
        (void) fprintf(stderr, "%s\en", msg);
        return (0);
}
.fi
.in -2

.SH ENVIRONMENT VARIABLES
.sp
.LP
See
.BR environ (5)
for descriptions of the following environment
variables that affect the execution of
.BR yacc :
.BR LANG ,
.BR LC_ALL ,
.BR LC_CTYPE ,
.BR LC_MESSAGES ,
and
.BR NLSPATH .
.sp
.LP
.B yacc
can handle characters from
.B EUC
primary and supplementary
codesets as one-token symbols.
.B EUC
codes can only be single character
quoted terminal symbols.
.B yacc
expects
.B yylex()
to return a wide
character (\fBwchar_t\fR) value for these one-token symbols.
.SH EXIT STATUS
.sp
.LP
The following exit values are returned:
.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 6n
.rt
Successful completion.
.RE

.sp
.ne 2
.mk
.na
.B >0
.ad
.RS 6n
.rt
An error occurred.
.RE

.SH FILES
.sp
.ne 2
.mk
.na
.B y.output
.ad
.RS 14n
.rt
state transitions of the generated parser
.RE

.sp
.ne 2
.mk
.na
.B y.tab.c
.ad
.RS 14n
.rt
source code of the generated parser
.RE

.sp
.ne 2
.mk
.na
.B y.tab.h
.ad
.RS 14n
.rt
header file for the generated parser
.RE

.sp
.ne 2
.mk
.na
.B yacc.acts
.ad
.RS 14n
.rt
temporary file
.RE

.sp
.ne 2
.mk
.na
.B yacc.debug
.ad
.RS 14n
.rt
temporary file
.RE

.sp
.ne 2
.mk
.na
.B yacc.tmp
.ad
.RS 14n
.rt
temporary file
.RE

.sp
.ne 2
.mk
.na
.B yaccpar
.ad
.RS 14n
.rt
parser prototype for C programs
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWbtool
_
Interface StabilityCommitted
_
StandardSee \fBstandards\fR(5).
.TE

.SH SEE ALSO
.sp
.LP
.BR lex (1),
.BR attributes (5),
.BR environ (5),
.BR standards (5)
.SH DIAGNOSTICS
.sp
.LP
The number of reduce-reduce and shift-reduce conflicts is reported on the
standard error output. A more detailed report is found in the \fBy.output\fR
file. Similarly, if some rules are not reachable from the start symbol, this
instance is also reported.
.SH NOTES
.sp
.LP
Because file names are fixed, at most one
.B yacc
process can be active
in a given directory at a given time.
.sp
.LP
Users are encouraged to avoid using
.B $
as part of any identifier
name.
