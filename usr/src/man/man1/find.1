'\" te
.\" Copyright 1989 AT&T
.\" Copyright (c) 2008, Sun Microsystems, Inc. All Rights Reserved
.\" Portions Copyright (c) 1992, X/Open Company Limited All Rights Reserved
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH find 1 "15 Aug 2008" "SunOS 5.11" "User Commands"
.SH NAME
find \- find files
.SH SYNOPSIS
.LP
.nf
\fB/usr/bin/find\fR [\fB-H\fR | \fB-L\fR] \fIpath\fR.\|.\|. \fIexpression\fR
.fi

.LP
.nf
\fB/usr/xpg4/bin/find\fR [\fB-H\fR | \fB-L\fR] \fIpath\fR.\|.\|. \fIexpression\fR
.fi

.SH DESCRIPTION
.sp
.LP
The
.B find
utility recursively descends the directory hierarchy for each
.I path
seeking files that match a Boolean
.I expression
written in the
primaries specified below.
.sp
.LP
.B find
is able to descend to arbitrary depths in a file hierarchy and does
not fail due to path length limitations (unless a
.I path
operand specified by
the application exceeds
.I PATH_MAX
requirements).
.sp
.LP
.B find
detects infinite loops; that is, entering a previously visited
directory that is an ancestor of the last file encountered.
.SH OPTIONS
.sp
.LP
The following options are supported:
.sp
.ne 2
.mk
.na
.B -H
.ad
.RS 6n
.rt
Causes the file information and file type evaluated for each symbolic link
encountered on the command line to be those of the file referenced by the link,
and not the link itself. If the referenced file does not exist, the file
information and type is for the link itself. File information for all symbolic
links not on the command line is that of the link itself.
.RE

.sp
.ne 2
.mk
.na
.B -L
.ad
.RS 6n
.rt
Causes the file information and file type evaluated for each symbolic link to be
those of the file referenced by the link, and not the link itself. See
.BR NOTES .
.RE

.sp
.LP
Specifying more than one of the mutually-exclusive options
.B -H
and
\fB-L\fRis not considered an error. The last option specified determines the
behavior of the utility.
.SH OPERANDS
.sp
.LP
The following operands are supported:
.sp
.ne 2
.mk
.na
.I path
.ad
.RS 14n
.rt
A pathname of a starting point in the directory hierarchy.
.RE

.sp
.ne 2
.mk
.na
.I expression
.ad
.RS 14n
.rt
The first argument that starts with a \fB\(mi\fR, or is a
.B !
or a
.BR ( ,
and all subsequent arguments are interpreted as an
.I expression
made up of
the following primaries and operators. In the descriptions, wherever
.I n
is
used as a primary argument, it is interpreted as a decimal integer optionally
preceded by a plus (\fB+\fR) or minus (\fB\(mi\fR) sign, as follows:
.sp
.ne 2
.mk
.na
\fB+\fIn\fR
.ad
.RS 6n
.rt
more than
.IR n
.RE

.sp
.ne 2
.mk
.na
.I n
.ad
.RS 6n
.rt
exactly
.IR n
.RE

.sp
.ne 2
.mk
.na
\fB-\fIn\fR
.ad
.RS 6n
.rt
less than
.IR n
.RE

.RE

.SS "Expressions"
.sp
.LP
Valid expressions are:
.sp
.ne 2
.mk
.na
.B -acl
.ad
.RS 17n
.rt
True if the file have additional ACLs defined.
.RE

.sp
.ne 2
.mk
.na
.B -amin
.I n
.ad
.RS 17n
.rt
File was last accessed
.I n
minutes ago.
.RE

.sp
.ne 2
.mk
.na
.B -atime
.I n
.ad
.RS 17n
.rt
True if the file was accessed
.I n
days ago. The access time of directories
in
.I path
is changed by
.B find
itself.
.RE

.sp
.ne 2
.mk
.na
.B -cmin
.I n
.ad
.RS 17n
.rt
File's status was last changed
.I n
minutes ago.
.RE

.sp
.ne 2
.mk
.na
.B -cpio
.I device
.ad
.RS 17n
.rt
Always true. Writes the current file on
.I device
in
.B cpio
format
(5120-byte records).
.RE

.sp
.ne 2
.mk
.na
.B -ctime
.I n
.ad
.RS 17n
.rt
True if the file's status was changed
.I n
days ago.
.RE

.sp
.ne 2
.mk
.na
.B -depth
.ad
.RS 17n
.rt
Always true. Causes descent of the directory hierarchy to be done so that all
entries in a directory are acted on before the directory itself. This can be
useful when
.B find
is used with
.BR cpio (1)
to transfer files that are
contained in directories without write permission.
.RE

.sp
.ne 2
.mk
.na
.B -exec
.I command
.ad
.RS 17n
.rt
True if the executed command returns a zero value as exit status. The end of
command must be punctuated by an escaped semicolon
.RB ( ; ).
A command argument
.B {}
is replaced by the current pathname. If the last argument to \fB-exec\fR
is
.B {}
and you specify
.B +
rather than the semicolon
.RB ( ; ),
the
command is invoked fewer times, with
.B {}
replaced by groups of pathnames. If
any invocation of the command returns a non-zero value as exit status, find
returns a non-zero exit status.
.RE

.sp
.ne 2
.mk
.na
.B -follow
.ad
.RS 17n
.rt
Always true and always evaluated no matter where it appears in
.IR expression .
The behavior is unspecified if \fB-follow\fR is used when the \fBfind\fR command
is invoked with either the
.B -H
or the
.B -L
option. Causes symbolic links
to be followed. When following symbolic links,
.B find
keeps track of the
directories visited so that it can detect infinite loops. For example, such a
loop would occur if a symbolic link pointed to an ancestor. This expression
should not be used with the find-type
.B l
expression. See
.BR NOTES .
.RE

.sp
.ne 2
.mk
.na
.B -fstype
.I type
.ad
.RS 17n
.rt
True if the filesystem to which the file belongs is of type
.IR type .
.RE

.sp
.ne 2
.mk
.na
.B -group
.I gname
.ad
.RS 17n
.rt
True if the file belongs to the group
.IR gname .
If
.I gname
is numeric and
does not appear in the \fB/etc/group\fR file, or in the \fBNIS\fR/\fBNIS+\fR
tables, it is taken as a group
.BR ID .
.RE

.sp
.ne 2
.mk
.na
.B -inum
.I n
.ad
.RS 17n
.rt
True if the file has inode number
.IR n .
.RE

.sp
.ne 2
.mk
.na
.B -links
.I n
.ad
.RS 17n
.rt
True if the file has
.I n
links.
.RE

.sp
.ne 2
.mk
.na
.B -local
.ad
.RS 17n
.rt
True if the file system type is not a remote file system type as defined in the
.B /etc/dfs/fstypes
file.
.B nfs
is used as the default remote filesystem
type if the
.B /etc/dfs/fstypes
file is not present. The
.B -local
option
descends the hierarchy of non-local directories. See
.B EXAMPLES
for an
example of how to search for local files without descending.
.RE

.sp
.ne 2
.mk
.na
.B -ls
.ad
.RS 17n
.rt
Always true. Prints current pathname together with its associated statistics.
These include (respectively):
.RS +4
.TP
.ie t \(bu
.el o
inode number
.RE
.RS +4
.TP
.ie t \(bu
.el o
size in kilobytes (1024 bytes)
.RE
.RS +4
.TP
.ie t \(bu
.el o
protection mode
.RE
.RS +4
.TP
.ie t \(bu
.el o
number of hard links
.RE
.RS +4
.TP
.ie t \(bu
.el o
user
.RE
.RS +4
.TP
.ie t \(bu
.el o
group
.RE
.RS +4
.TP
.ie t \(bu
.el o
size in bytes
.RE
.RS +4
.TP
.ie t \(bu
.el o
modification time.
.RE
If the file is a special file, the size field instead contains the major and
minor device numbers.
.sp
If the file is a symbolic link, the pathname of the linked-to file is printed
preceded by `\fB\(->\fR\&'. The format is identical to that of \fBls\fR
.B -gilds
(see
.BR ls (1B)).
.sp
Formatting is done internally, without executing the
.B ls
program.
.RE

.sp
.ne 2
.mk
.na
.B -mmin
.I n
.ad
.RS 17n
.rt
File's data was last modified
.I n
minutes ago.
.RE

.sp
.ne 2
.mk
.na
.B -mount
.ad
.RS 17n
.rt
Always true. Restricts the search to the file system containing the directory
specified. Does not list mount points to other file systems.
.RE

.sp
.ne 2
.mk
.na
.B -mtime
.I n
.ad
.RS 17n
.rt
True if the file's data was modified
.I n
days ago.
.RE

.sp
.ne 2
.mk
.na
.B -name
.I pattern
.ad
.RS 17n
.rt
True if
.I pattern
matches the basename of the current file name. Normal
shell file name generation characters (see
.BR sh (1))
can be used. A backslash
(\fB\|\e\|\fR) is used as an escape character within the pattern. The pattern
should be escaped or quoted when
.B find
is invoked from the shell.
.sp
Unless the character '\fB\&.\fR' is explicitly specified in the beginning of
.IR pattern ,
a current file name beginning with '\fB\&.\fR' does not match
.I pattern
when using
.BR /usr/bin/find .
.B /usr/xpg4/bin/find
does not
make this distinction; wildcard file name generation characters can match file
names beginning with '\fB\&.\fR'.
.RE

.sp
.ne 2
.mk
.na
.B -ncpio
.I device
.ad
.RS 17n
.rt
Always true. Writes the current file on
.I device
in
.BR "cpio -c"
format (5120 byte records).
.RE

.sp
.ne 2
.mk
.na
.B -newer
.I file
.ad
.RS 17n
.rt
True if the current file has been modified more recently than the argument
.IR file .
.RE

.sp
.ne 2
.mk
.na
.B -nogroup
.ad
.RS 17n
.rt
True if the file belongs to a group not in the
.B /etc/group
file, or in the
\fBNIS\fR/\fBNIS+\fR tables.
.RE

.sp
.ne 2
.mk
.na
.B -nouser
.ad
.RS 17n
.rt
True if the file belongs to a user not in the
.B /etc/passwd
file, or in the
\fBNIS\fR/\fBNIS+\fR tables.
.RE

.sp
.ne 2
.mk
.na
.B -ok
.I command
.ad
.RS 17n
.rt
Like
.BR -exec ,
except that the generated command line is printed with a
question mark first, and is executed only if the response is affirmative.
.RE

.sp
.ne 2
.mk
.na
\fB-perm\fR [\fB-\fR]\fImode\fR
.ad
.RS 17n
.rt
The
.I mode
argument is used to represent file mode bits. It is identical in
format to the symbolic mode operand,
.IR symbolic_mode_list ,
described in
.BR chmod (1),
and is interpreted as follows. To start, a template is assumed
with all file mode bits cleared. An
.I op
symbol of:
.sp
.ne 2
.mk
.na
.B +
.ad
.RS 8n
.rt
Set the appropriate mode bits in the template
.RE

.sp
.ne 2
.mk
.na
\fB\(mi\fR
.ad
.RS 8n
.rt
Clear the appropriate bits
.RE

.sp
.ne 2
.mk
.na
.B =
.ad
.RS 8n
.rt
Set the appropriate mode bits, without regard to the contents of the file mode
creation mask of the process
.RE

The
.I op
symbol of \fB\(mi\fR cannot be the first character of
.IR mode ,
to avoid ambiguity with the optional leading hyphen. Since the initial mode is
all bits off, there are no symbolic modes that need to use \fB\(mi\fR as the
first character.
.sp
If the hyphen is omitted, the primary evaluates as true when the file permission
bits exactly match the value of the resulting template.
.sp
Otherwise, if
.I mode
is prefixed by a hyphen, the primary evaluates as true
if at least all the bits in the resulting template are set in the file permission
bits.
.RE

.sp
.ne 2
.mk
.na
\fB-perm\fR [\fB-\fR]\fIonum\fR
.ad
.RS 17n
.rt
True if the file permission flags exactly match the octal number
.I onum
(see
.BR chmod (1)).
If
.I onum
is prefixed by a minus sign (\fB\(mi\fR), only the
bits that are set in
.I onum
are compared with the file permission flags, and
the expression evaluates true if they match.
.RE

.sp
.ne 2
.mk
.na
.B -print
.ad
.RS 17n
.rt
Always true. Causes the current pathname to be printed.
.RE

.sp
.ne 2
.mk
.na
.B -prune
.ad
.RS 17n
.rt
Always yields true. Does not examine any directories or files in the directory
structure below the
.I pattern
just matched. (See EXAMPLES). If \fB-depth\fR
is specified,
.B -prune
has no effect.
.RE

.sp
.ne 2
.mk
.na
\fB-size\fR \fIn\fR[\fBc\fR]\fR
.ad
.RS 17n
.rt
True if the file is
.I n
blocks long (512 bytes per block). If
.I n
is
followed by a
.BR c ,
the size is in bytes.
.RE

.sp
.ne 2
.mk
.na
.B -type
.I c
.ad
.RS 17n
.rt
True if the type of the file is
.IR c ,
where
.I c
is
.BR b ,
.BR c ,
.BR d ,
.BR D ,
.BR f ,
.BR l ,
.BR p ,
or
.B s
for block special file,
character special file, directory, door, plain file, symbolic link, fifo (named
pipe), or socket, respectively.
.RE

.sp
.ne 2
.mk
.na
.B -user
.I uname
.ad
.RS 17n
.rt
True if the file belongs to the user
.IR uname .
If
.I uname
is numeric and
does not appear as a login name in the
.B /etc/passwd
file, or in the
\fBNIS\fR/\fBNIS+\fR tables, it is taken as a user \fBID\fR.
.RE

.sp
.ne 2
.mk
.na
.B -xdev
.ad
.RS 17n
.rt
Same as the
.B -mount
primary.
.RE

.sp
.ne 2
.mk
.na
.B -xattr
.ad
.RS 17n
.rt
True if the file has extended attributes.
.RE

.SS "Complex Expressions"
.sp
.LP
The primaries can be combined using the following operators (in order of
decreasing precedence):
.sp
.ne 2
.mk
.na
\fB1)(\fIexpression\fB)\fR
.ad
.sp .6
.RS 4n
True if the parenthesized expression is true (parentheses are special to the
shell and must be escaped).
.RE

.sp
.ne 2
.mk
.na
\fB2)!\fIexpression\fR
.ad
.sp .6
.RS 4n
The negation of a primary (\fB!\fR is the unary
.I not
operator).
.RE

.sp
.ne 2
.mk
.na
\fB3) \fIexpression\fB[-a]\fR \fIexpression\fR
.ad
.sp .6
.RS 4n
Concatenation of primaries (the
.I and
operation is implied by the
juxtaposition of two primaries).
.RE

.sp
.ne 2
.mk
.na
\fB4) \fIexpression\fB-o\fIexpression\fR
.ad
.sp .6
.RS 4n
Alternation of primaries (\fB-o\fR is the
.I or
operator).
.RE

.sp
.LP
When you use
.B find
in conjunction with
.BR cpio ,
if you use the
.BR -L
option with
.BR cpio ,
you must use the
.B -L
option or the \fB-follow\fR
primitive with
.B find
and vice versa. Otherwise the results are
unspecified.
.sp
.LP
If no
.I expression
is present,
.B -print
is used as the expression.
Otherwise, if the specified expression does not contain any of the primaries
.BR -exec ,
.BR -ok ,
.BR -ls ,
or
.BR -print ,
the specified expression is
effectively replaced by:
.sp
.LP
(\fIspecified\fR) \fB-print\fR
.sp
.LP
The
.BR -user ,
.BR -group ,
and
.B -newer
primaries each evaluate their
respective arguments only once. Invocation of
.I command
specified by
.B -exec
or
.B -ok
does not affect subsequent primaries on the same file.
.SH USAGE
.sp
.LP
See
.BR largefile (5)
for the description of the behavior of
.B find
when
encountering files greater than or equal to 2 Gbyte (2^31 bytes).
.SH EXAMPLES
.LP
.B Example 1
Writing Out the Hierarchy Directory
.sp
.LP
The following commands are equivalent:

.sp
.in +2
.nf
example% \fBfind .\fR
example% \fBfind . -print\fR
.fi
.in -2
.sp

.sp
.LP
They both write out the entire directory hierarchy from the current directory.

.LP
.B Example 2
Removing Files
.sp
.LP
The following comand removes all files in your home directory named
.BR a.out
or
.B *.o
that have not been accessed for a week:

.sp
.in +2
.nf
example% \fBfind $HOME \e( -name a.out -o -name '*.o' \e) \e
       -atime +7 -exec rm {} \e;\fR
.fi
.in -2
.sp

.LP
.B Example 3
Printing All File Names But Skipping SCCS Directories
.sp
.LP
The following command recursively print all file names in the current directory
and below, but skipping
.B SCCS
directories:

.sp
.in +2
.nf
example% \fBfind . -name SCCS -prune -o -print\fR
.fi
.in -2
.sp

.LP
.B Example 4
Printing all file names and the SCCS directory name
.sp
.LP
Recursively print all file names in the current directory and below, skipping
the contents of
.B SCCS
directories, but printing out the
.B SCCS
directory
name:

.sp
.in +2
.nf
example% \fBfind . -print -name SCCS -prune\fR
.fi
.in -2
.sp

.LP
.B Example 5
Testing for the Newer File
.sp
.LP
The following command is basically equivalent to the
.B -nt
extension to
.BR test (1):

.sp
.in +2
.nf
example$ \fBif [ -n "$(find
file1 -prune -newer file2)" ]; then

printf %s\e\en "file1 is newer than file2"\fR
.fi
.in -2
.sp

.LP
.B Example 6
Selecting a File Using 24-hour Mode
.sp
.LP
The descriptions of
.BR -atime ,
.BR -ctime ,
and
.B -mtime
use the
terminology
.I n
``24-hour periods''. For example, a file accessed at 23:59 is
selected by:

.sp
.in +2
.nf
example% \fBfind . -atime -1 -print\fR
.fi
.in -2
.sp

.sp
.LP
at 00:01 the next day (less than 24 hours later, not more than one day ago). The
midnight boundary between days has no effect on the 24-hour calculation.

.LP
.B Example 7
Printing Files Matching a User's Permission Mode
.sp
.LP
The following command recursively print all file names whose permission mode
exactly matches read, write, and execute access for user, and read and execute
access for group and other:

.sp
.in +2
.nf
example% \fBfind . -perm u=rwx,g=rx,o=rx\fR
.fi
.in -2
.sp

.sp
.LP
The above could alternatively be specified as follows:

.sp
.in +2
.nf
example% \fBfind . -perm a=rwx,g-w,o-w\fR
.fi
.in -2
.sp

.LP
.B Example 8
Printing Files with Write Access for
.BR other
.sp
.LP
The following command recursively print all file names whose permission
includes, but is not limited to, write access for other:

.sp
.in +2
.nf
example% \fBfind . -perm -o+w\fR
.fi
.in -2
.sp

.LP
.B Example 9
Printing Local Files without Descending Non-local Directories
.sp
.in +2
.nf
example% \fBfind . ! -local -prune -o -print\fR
.fi
.in -2
.sp

.LP
.B Example 10
Printing the Files in the Name Space Possessing Extended
Attributes
.sp
.in +2
.nf
example% \fBfind . -xattr\fR
.fi
.in -2
.sp

.SH ENVIRONMENT VARIABLES
.sp
.LP
See
.BR environ (5)
for descriptions of the following environment variables
that affect the execution of
.BR find :
.BR LANG ,
.BR LC_ALL ,
.BR LC_COLLATE ,
.BR LC_CTYPE ,
.BR LC_MESSAGES ,
and
.BR NLSPATH .
.sp
.ne 2
.mk
.na
.B PATH
.ad
.RS 8n
.rt
Determine the location of the
.I utility_name
for the
.B -exec
and
.B -ok
primaries.
.RE

.sp
.LP
Affirmative responses are processed using the extended regular expression
defined for the
.B yesexpr
keyword in the
.B LC_MESSAGES
category of the
user's locale. The locale specified in the
.B LC_COLLATE
category defines the
behavior of ranges, equivalence classes, and multi-character collating elements
used in the expression defined for
.BR yesexpr .
The locale specified in
.B LC_CTYPE
determines the locale for interpretation of sequences of bytes of
text data a characters, the behavior of character classes used in the expression
defined for the
.BR yesexpr .
See
.BR locale (5).
.SH EXIT STATUS
.sp
.LP
The following exit values are returned:
.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 6n
.rt
All
.I path
operands were traversed successfully.
.RE

.sp
.ne 2
.mk
.na
.B >0
.ad
.RS 6n
.rt
An error occurred.
.RE

.SH FILES
.sp
.ne 2
.mk
.na
.B /etc/passwd
.ad
.RS 20n
.rt
Password file
.RE

.sp
.ne 2
.mk
.na
.B /etc/group
.ad
.RS 20n
.rt
Group file
.RE

.sp
.ne 2
.mk
.na
.B /etc/dfs/fstypes
.ad
.RS 20n
.rt
File that registers distributed file system packages
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcsu
_
CSIEnabled
_
Interface StabilityCommitted
_
StandardSee \fBstandards\fR(5).
.TE

.SH SEE ALSO
.sp
.LP
.BR chmod (1),
.BR cpio (1),
.BR sh (1),
.BR test (1),
.BR ls (1B),
.BR acl (2),
.BR stat (2),
.BR umask (2),
.BR attributes (5),
.BR environ (5),
.BR fsattr (5),
.BR largefile (5),
.BR locale (5),
.BR standards (5)
.SH WARNINGS
.sp
.LP
The following options are obsolete and will not be supported in future
releases:
.sp
.ne 2
.mk
.na
.B -cpio
.I device
.ad
.RS 17n
.rt
Always true. Writes the current file on
.I device
in
.B cpio
format
(5120-byte records).
.RE

.sp
.ne 2
.mk
.na
.B -ncpio
.I device
.ad
.RS 17n
.rt
Always true. Writes the current file on
.I device
in
.BR "cpio -c"
format (5120-byte records).
.RE

.SH NOTES
.sp
.LP
When using
.B find
to determine files modified within a range of time, use
the
.B -mtime
argument
.B before
the
.B -print
argument. Otherwise,
.B find
gives all files.
.sp
.LP
Some files that might be under the Solaris root file system are actually mount
points for virtual file systems, such as
.B mntfs
or
.BR namefs .
When
comparing against a
.B ufs
file system, such files are not selected if
.B -mount
or
.B -xdev
is specified in the
.B find
expression.
.sp
.LP
Using the
.B -L
or
.B -follow
option is not recommended when descending a
file-system hierarchy that is under the control of other users. In particular,
when using
.BR -exec ,
symbolic links can lead the
.B find
command out of the
hierarchy in which it started. Using
.B -type
is not sufficient to restrict
the type of files on which the
.B -exec
command operates, because there is an
inherent race condition between the type-check performed by the \fBfind\fR
command and the time the executed command operates on the file argument.
