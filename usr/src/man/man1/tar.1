'\" te
.\" Copyright 1989 AT&T
.\" Copyright (c) 2006, Sun Microsystems, Inc. All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" Portions Copyright (c) 1992, X/Open Company Limited All Rights Reserved
.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online
.\" at http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open Group,
.\" have given us permission to reprint portions of their documentation.
.\"
.\" In the following statement, the phrase "this text" refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form in
.\" the Sun OS Reference Manual, from IEEE Std 1003.1, 2004 Edition, Standard
.\" for Information Technology -- Portable Operating System Interface (POSIX),
.\" The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the
.\" Institute of Electrical and Electronics Engineers, Inc and The Open Group.
.\" In the event of any discrepancy between these versions and the original
.\" IEEE and The Open Group Standard, the original IEEE and The Open Group
.\" Standard is the referee document.
.\"
.\" The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH tar 1 "26 Oct 2007" "SunOS 5.11" "User Commands"
.SH NAME
tar \- create tape archives and add or extract files
.SH SYNOPSIS
.LP
.nf
\fBtar\fR c[BDeEFhilnopPqTvw@/[0-7]][bfk][X.\|.\|.] [\fIblocksize\fR]
     [\fItarfile\fR] [\fIsize\fR] [\fIexclude-file\fR].\|.\|.
     {\fIfile\fR | \(miI \fIinclude-file\fR | \(miC \fIdirectory\fR \fIfile\fR}.\|.\|.
.fi

.LP
.nf
\fBtar\fR r[BDeEFhilnqTvw@/[0-7]][bfk] [\fIblocksize\fR] [\fItarfile\fR]
     [\fIsize\fR]
     {\fIfile\fR | \(miI \fIinclude-file\fR | \(miC \fIdirectory\fR \fIfile\fR}.\|.\|.
.fi

.LP
.nf
\fBtar\fR t[BeFhilnqTv[0-7]][fk][X.\|.\|.] [\fItarfile\fR] [\fIsize\fR]
     [\fIexclude-file\fR].\|.\|. {\fIfile\fR | \(miI \fIinclude-file\fR}.\|.\|.
.fi

.LP
.nf
\fBtar\fR u[BDeEFhilnqTvw@/[0-7]][bfk] [\fIblocksize\fR] [\fItarfile\fR]
     [\fIsize\fR] \fIfile\fR.\|.\|.
.fi

.LP
.nf
\fBtar\fR x[BeFhilmnopqTvw@/[0-7]][fk][X.\|.\|.] [\fItarfile\fR] [\fIsize\fR]
     [\fIexclude-file\fR].\|.\|. [\fIfile\fR].\|.\|.
.fi

.SH DESCRIPTION
.sp
.LP
The
.B tar
command archives and extracts files to and from a single file
called a
.IR tarfile .
A tarfile is usually a magnetic tape, but it can be any
file.
.BR tar 's
actions are controlled by the
.I key
argument. The
.I key
is a string of characters containing exactly one function letter
.RB ( c ,
.BR r ,
.B t
,
.BR u ,
or
.BR x )
and zero or more function
modifiers (letters or digits), depending on the function letter used. The
.I key
string contains no SPACE characters. Function modifier arguments are
listed on the command line in the same order as their corresponding function
modifiers appear in the
.I key
string.
.sp
.LP
The
.B \(miI
.IR include-file ,
.B \(miC
.IR "directory file" ,
and
.I file
arguments specify which files or directories are to be archived or
extracted. In all cases, appearance of a directory name refers to the files and
(recursively) subdirectories of that directory. Arguments appearing within
braces
.RB ( "{ }" )
indicate that one of the arguments must be specified.
.SH OPERANDS
.sp
.LP
The following operands are supported:
.sp
.ne 2
.mk
.na
\fB\(miC\fR \fIdirectory file\fR
.ad
.sp .6
.RS 4n
Performs a
.B chdir
(see
.BR cd (1))
operation on
.I directory
and
performs the
.B c
(create) or
.B r
(replace) operation on
.IR file .
Use
short relative path names for \fIfile\fR. If \fIfile\fR is "\fB\&.\fR", archive
all files in
.IR directory .
This operand enables archiving files from
multiple directories not related by a close common parent.
.RE

.sp
.ne 2
.mk
.na
\fB\(miI\fR \fIinclude-file\fR
.ad
.sp .6
.RS 4n
Opens
.I include-file
containing a list of files, one per line, and treats
it as if each file appeared separately on the command line. Be careful of
trailing white spaces. Also beware of leading white spaces, since, for each
line in the included file, the entire line (apart from the newline) is used to
match against the initial string of files to include. In the case where
excluded files (see
.B X
function modifier) are also specified, they take
precedence over all included files. If a file is specified in both the
.I exclude-file
and the
.I include-file
(or on the command line), it is
excluded.
.RE

.sp
.ne 2
.mk
.na
.I file
.ad
.sp .6
.RS 4n
A path name of a regular file or directory to be archived (when the
.BR c ,
.B r
or
.B u
functions are specified), extracted
.RB ( x )
or listed
(\fBt\fR). When
.I file
is the path name of a directory, the action applies
to all of the files and (recursively) subdirectories of that directory.
.sp
When a file is archived, and the
.B E
flag (see
.BR "Function Modifiers" )
is not specified, the filename cannot exceed 256 characters. In addition, it
must be possible to split the name between parent directory names so that the
prefix is no longer than 155 characters and the name is no longer than 100
characters. If
.B E
is specified, a name of up to
.I PATH_MAX
characters
can be specified.
.sp
For example, a file whose basename is longer than 100 characters could not be
archived without using the
.B E
flag. A file whose directory portion is 200
characters and whose basename is 50 characters could be archived (without using
.BR E )
if a slash appears in the directory name somewhere in character
positions 151-156.
.RE

.SS "Function Letters"
.sp
.LP
The function portion of the key is specified by one of the following
letters:
.sp
.ne 2
.mk
.na
.B c
.ad
.sp .6
.RS 4n
Create. Writing begins at the beginning of the tarfile, instead of at the
end.
.RE

.sp
.ne 2
.mk
.na
.B r
.ad
.sp .6
.RS 4n
Replace. The named
.IR file s
are written at the end of the tarfile. A file
created with extended headers must be updated with extended headers (see
.B E
flag under
.BR "Function Modifiers" ).
A file created without extended
headers cannot be modified with extended headers.
.RE

.sp
.ne 2
.mk
.na
.B t
.ad
.sp .6
.RS 4n
Table of Contents. The names of the specified files are listed each time they
occur in the tarfile. If no
.I file
argument is specified, the names of all
files and any associated extended attributes in the tarfile are listed. With
the
.B v
function modifier, additional information for the specified files
is displayed.
.RE

.sp
.ne 2
.mk
.na
.B u
.ad
.sp .6
.RS 4n
Update. The named
.IR file s
are written at the end of the tarfile if they
are not already in the tarfile, or if they have been modified since last
written to that tarfile. An update can be rather slow. A tarfile created on a
5.x system cannot be updated on a 4.x system. A file created with extended
headers must be updated with extended headers (see
.B E
flag under
.BR "Function Modifiers" ).
A file created without extended headers cannot be
modified with extended headers.
.RE

.sp
.ne 2
.mk
.na
.B x
.ad
.sp .6
.RS 4n
Extract or restore. The named
.IR file s
are extracted from the tarfile and
written to the directory specified in the tarfile, relative to the current
directory. Use the relative path names of files and directories to be
extracted.
.sp
Absolute path names contained in the tar archive are unpacked using the
.RB "absolute path names, that is, the leading forward slash (" / ") is " not 
stripped off.
.sp
If a named file matches a directory whose contents has been written to the
tarfile, this directory is recursively extracted. The owner, modification time,
and mode are restored (if possible); otherwise, to restore owner, you must be
the super-user. Character-special and block-special devices (created by
.BR mknod (1M))
can only be extracted by the super-user. If no
.I file
argument is specified, the entire content of the tarfile is extracted. If the
tarfile contains several files with the same name, each file is written to the
appropriate directory, overwriting the previous one. Filename substitution
wildcards cannot be used for extracting files from the archive. Rather, use a
command of the form:
.sp
.in +2
.nf
\fBtar xvf .\|.\|. /dev/rmt/0 \(gatar tf .\|.\|. /dev/rmt/0 | \e
     grep '\fIpattern\fR' \(ga\fR
.fi
.in -2
.sp

.RE

.sp
.LP
When extracting tapes created with the
.B r
or
.B u
functions, directory
modification times can not be set correctly. These same functions cannot be
used with many tape drives due to tape drive limitations such as the absence of
backspace or append capabilities.
.sp
.LP
When using the
.BR r ,
.BR u ,
or
.B x
functions or the
.B X
function
modifier, the named files must match exactly the corresponding files in the
.IR tarfile .
For example, to extract \fB\&./\fIthisfile\fR, you must
specify \fB\&./\fIthisfile,\fR and not
.IR thisfile .
The
.B t
function
displays how each file was archived.
.SS "Function Modifiers"
.sp
.LP
The characters below can be used in conjunction with the letter that selects
the desired function.
.sp
.ne 2
.mk
.na
.B b
.I blocksize
.ad
.sp .6
.RS 4n
Blocking Factor. Use when reading or writing to raw magnetic archives (see
.B f
below). The
.I blocksize
argument specifies the number of 512-byte
tape blocks to be included in each read or write operation performed on the
tarfile. The minimum is
.BR 1 ,
the default is
.BR 20 .
The maximum value is
a function of the amount of memory available and the blocking requirements of
the specific tape device involved (see
.BR mtio (7I)
for details.) The maximum
cannot exceed
.BR INT_MAX /512
.RB ( 4194303 ).
.sp
When a tape archive is being read, its actual blocking factor is automatically
detected, provided that it is less than or equal to the nominal blocking factor
(the value of the
.I blocksize
argument, or the default value if the
.B b
modifier is not specified). If the actual blocking factor is greater than the
nominal blocking factor, a read error results. See Example 5 in EXAMPLES.
.RE

.sp
.ne 2
.mk
.na
.B B
.ad
.sp .6
.RS 4n
Block. Force
.B tar
to perform multiple reads (if necessary) to read
exactly enough bytes to fill a block. This function modifier enables
.B tar
to work across the Ethernet, since pipes and sockets return partial blocks even
when more data is coming. When reading from standard input, "\fB\(mi\fR", this
function modifier is selected by default to ensure that
.B tar
can recover
from short reads.
.RE

.sp
.ne 2
.mk
.na
.B D
.ad
.sp .6
.RS 4n
Data change warnings. Used with
.BR c ,
.BR r ,
or
.B u
function letters.
Ignored with
.B t
or
.B x
function letters. If the size of a file changes
while the file is being archived, treat this condition as a warning instead of
as an error. A warning message is still written, but the exit status is not
affected.
.RE

.sp
.ne 2
.mk
.na
.B e
.ad
.sp .6
.RS 4n
Error. Exit immediately with a positive exit status if any unexpected errors
occur. The
.B SYSV3
environment variable overrides the default behavior.
(See ENVIRONMENT VARIABLES section below.)
.RE

.sp
.ne 2
.mk
.na
.B E
.ad
.sp .6
.RS 4n
Write a tarfile with extended headers. (Used with
.BR c ,
.BR r ,
or
.BR u
function letters. Ignored with
.B t
or
.B x
function letters.) When a
tarfile is written with extended headers, the modification time is maintained
with a granularity of microseconds rather than seconds. In addition, filenames
no longer than
.B PATH_MAX
characters that could not be archived without
.BR E ,
and file sizes greater than
.BR 8GB ,
are supported. The
.B E
flag
is required whenever the larger files and/or files with longer names, or whose
.B UID/GID
exceed
.BR 2097151 ,
are to be archived, or if time granularity
of microseconds is desired.
.RE

.sp
.ne 2
.mk
.na
.B f
.ad
.sp .6
.RS 4n
File. Use the \fItarfile\fR argument as the name of the tarfile. If
.B f
is
.RB "specified, " /etc/default/tar " is not searched. If " f " is omitted,"
.B tar
uses the device indicated by the
.B TAPE
environment variable, if
set. Otherwise,
.B tar
uses the default values defined in
.BR /etc/default/tar .
The number matching the \fBarchive\fIN\fR string is
used as the output device with the blocking and size specifications from the
file. For example,
.sp
.in +2
.nf
\fBtar -c 2/tmp/*\fR
.fi
.in -2
.sp

writes the output to the device specified as
.B archive2
in
.BR /etc/default/tar .
.sp
If the name of the tarfile is "\fB\(mi\fR", \fBtar\fR writes to the standard
output or reads from the standard input, whichever is appropriate.
.B tar
can be used as the head or tail of a pipeline.
.B tar
can also be used to
move hierarchies with the command:
.sp
.in +2
.nf
example% \fBcd fromdir; tar cf \(mi .| (cd todir; tar xfBp \(mi)\fR
.fi
.in -2
.sp

.RE

.sp
.ne 2
.mk
.na
.B F
.ad
.sp .6
.RS 4n
With one
.B F
argument,
.B tar
excludes all directories named
.BR SCCS
and
.B RCS
from the tarfile. With two arguments,
.BR FF ,
.B tar
excludes all directories named SCCS and RCS, all files with \fB\&.o\fR as their
suffix, and all files named
.BR errs ,
.BR core ,
and
.BR a.out .
The
.B SYSV3
environment variable overrides the default behavior. (See
ENVIRONMENT VARIABLES section below.)
.RE

.sp
.ne 2
.mk
.na
.B h
.ad
.sp .6
.RS 4n
Follow symbolic links as if they were normal files or directories. Normally,
.B tar
does not follow symbolic links.
.RE

.sp
.ne 2
.mk
.na
.B i
.ad
.sp .6
.RS 4n
Ignore directory checksum errors.
.RE

.sp
.ne 2
.mk
.na
.B k
.I size
.ad
.sp .6
.RS 4n
Requires
.B tar
to use the size argument as the size of an archive in
kilobytes. This is useful when the archive is intended for a fixed size device
such as floppy disks. Large files are then split across volumes if they do not
fit in the specified size.
.RE

.sp
.ne 2
.mk
.na
.B l
.ad
.sp .6
.RS 4n
Link. Output error message if unable to resolve all links to the files being
archived. If
.B l
is not specified, no error messages are printed.
.RE

.sp
.ne 2
.mk
.na
.B m
.ad
.sp .6
.RS 4n
Modify. The modification time of the file is the time of extraction. This
function modifier is valid only with the
.B x
function.
.RE

.sp
.ne 2
.mk
.na
.B n
.ad
.sp .6
.RS 4n
The file being read is a non-tape device. Reading of the archive is faster
since
.B tar
can randomly seek around the archive.
.RE

.sp
.ne 2
.mk
.na
.B o
.ad
.sp .6
.RS 4n
Ownership. Assign to extracted files the user and group identifiers of the
user running the program, rather than those on tarfile. This is the default
behavior for users other than root. If the
.B o
function modifier is not set
and the user is root, the extracted files takes on the group and user
identifiers of the files on tarfile (see
.BR chown (1)
for more information).
The
.B o
function modifier is only valid with the
.B x
function.
.RE

.sp
.ne 2
.mk
.na
.B p
.ad
.sp .6
.RS 4n
Restore the named files to their original modes, and
.BR ACL s
if applicable,
ignoring the present
.BR umask (1).
This is the default behavior if invoked as
super-user with the
.B x
function letter specified. If super-user,
.BR SETUID ,
and sticky information are also extracted, and files are restored
with their original owners and permissions, rather than owned by root. When
this function modifier is used with the
.B c
function,
.BR ACL s
are
created in the tarfile along with other information. Errors occur when a
tarfile with
.BR ACL s
is extracted by previous versions of
.BR tar .
.RE

.sp
.ne 2
.mk
.na
.B P
.ad
.sp .6
.RS 4n
Suppress the addition of a trailing "\fB/\fR" on directory entries in the
archive.
.RE

.sp
.ne 2
.mk
.na
.B q
.ad
.sp .6
.RS 4n
Stop after extracting the first occurrence of the named file.
.B tar
normally continues reading the archive after finding an occurrence of a file.
.RE

.sp
.ne 2
.mk
.na
.B T
.ad
.sp .6
.RS 4n
This modifier is only available if the system is configured with Trusted
Extensions.
.sp
When this modifier is used with the function letter
.BR c ,
.B r,
or
.B u
for creating, replacing or updating a tarfile, the sensitivity label
associated with each archived file and directory is stored in the tarfile.
.sp
Specifying
.B T
implies the function modifier
.BR p .
.sp
When used with the function letter
.B x
for extracting a tarfile, the tar
program verifies that the file's sensitivity label specified in the archive
equals the sensitivity label of the destination directory. If not, the file is
not restored. This operation must be invoked from the global zone. If the
archived file has a relative pathname, it is restored to the corresponding
directory with the same label, if available. This is done by prepending to the
current destination directory the root pathname of the zone whose label equals
the file. If no such zone exists, the file is not restored.
.sp
Limited support is provided for extracting labeled archives from Trusted
Solaris 8. Only sensitivity labels, and multi-level directory specifications
are interpreted. Privilege specifications and audit attribute flags are
silently ignored. Multilevel directory specifications including symbolic links
to single level directories are are mapped into zone-relative pathnames if a
zone with the same label is available. This support is intended to facilitate
migration of home directories. Architectural differences preclude the
extraction of arbitrarily labeled files from Trusted Solaris 8 into identical
pathnames in Trusted Extensions. Files cannot be extracted unless their
archived label matches the destination label.
.RE

.sp
.ne 2
.mk
.na
.B v
.ad
.sp .6
.RS 4n
Verbose. Output the name of each file preceded by the function letter. With
the
.B t
function,
.B v
provides additional information about the tarfile
entries. The listing is similar to the format produced by the
.B -l
option
of the
.BR ls (1)
command.
.RE

.sp
.ne 2
.mk
.na
.B w
.ad
.sp .6
.RS 4n
What. Output the action to be taken and the name of the file, then await the
user's confirmation. If the response is affirmative, the action is performed;
otherwise, the action is not performed. This function modifier cannot be used
with the
.B t
function.
.RE

.sp
.ne 2
.mk
.na
.B X
.ad
.sp .6
.RS 4n
Exclude. Use the
.I exclude-file
argument as a file containing a list of
relative path names for files (or directories) to be excluded from the tarfile
when using the functions
.BR c ,
.BR x ,
or
.BR t .
Be careful of trailing
white spaces. Also beware of leading white spaces, since, for each line in the
excluded file, the entire line (apart from the newline) is used to match
against the initial string of files to exclude. Lines in the exclude file are
matched exactly, so an entry like "\fB/var\fR" does \fBnot\fR exclude the
.B /var
directory if
.B tar
is backing up relative pathnames. The entry
should read "\fB\&./var\fR" under these circumstances. The \fBtar\fR command
does not expand shell metacharacters in the exclude file, so specifying entries
like "\fB*.o\fR" does not have the effect of excluding all files with names
suffixed with "\fB\&.o\fR". If a complex list of files is to be excluded, the
exclude file should be generated by some means such as the
.BR find (1)
command with appropriate conditions.
.sp
Multiple
.B X
arguments can be used, with one
.I exclude-file
per
argument. In the case where included files (see \fB\(miI\fR \fIinclude-file\fR
operand) are also specified, the excluded files take precedence over all
included files. If a file is specified in both the
.I exclude-file
and the
.I include-file
(or on the command line), it is excluded.
.RE

.sp
.ne 2
.mk
.na
.B @
.ad
.sp .6
.RS 4n
Include extended attributes in archive. By default,
.B tar
does not place
extended attributes in the archive. With this flag,
.B tar
looks for
extended attributes on the files to be placed in the archive and add them to
the archive. Extended attributes go in the archive as special files with a
special type label. When this modifier is used with the
.B x
function,
extended attributes are extracted from the tape along with the normal file
data. Extended attribute files can only be extracted from an archive as part of
a normal file extract. Attempts to explicitly extract attribute records are
ignored.
.RE

.sp
.ne 2
.mk
.na
.B /
.ad
.sp .6
.RS 4n
Include extended system attributes in archive. By default,
.B tar
does not
place extended system attributes in the archive. With this flag,
.B tar
looks for extended system attributes on the files to be placed in the archive
and adds them to the archive. Extended system attributes go in the archive as
special files with a special type label. When this modifier is used with the
.B x
function, extended system attributes are extracted from the tape along
with the normal file data. Extended system attribute files can only be
extracted from an archive as part of a normal file extract. Attempts to
explicitly extract attribute records are ignored.
.RE

.sp
.ne 2
.mk
.na
.B [0-7]
.ad
.sp .6
.RS 4n
Select an alternative drive on which the tape is mounted. The default entries
are specified in
.BR /etc/default/tar .
If no digit or
.B f
function
modifier is specified, the entry in \fB/etc/default/tar\fR with digit "\fB0\fR"
is the default.
.RE

.SH USAGE
.sp
.LP
See
.BR largefile (5)
for the description of the behavior of
.B tar
when
encountering files greater than or equal to 2 Gbyte ( 2^31 bytes).
.sp
.LP
The automatic determination of the actual blocking factor can be fooled when
reading from a pipe or a socket (see the
.B B
function modifier below).
.sp
.LP
1/4" streaming tape has an inherent blocking factor of one 512-byte block. It
can be read or written using any blocking factor.
.sp
.LP
This function modifier works for archives on disk files and block special
devices, among others, but is intended principally for tape devices.
.sp
.LP
For information on
.B tar
header format, see
.BR archives.h (3HEAD).
.SH EXAMPLES
.LP
.B Example 1
Creating an archive of your home directory
.sp
.LP
The following is an example using
.B tar
to create an archive of your home
directory on a tape mounted on drive
.BR /dev/rmt/0 :

.sp
.in +2
.nf
example% \fBcd\fR
example% \fBtar cvf /dev/rmt/0\fR .
\fImessages from\fR tar
.fi
.in -2
.sp

.sp
.LP
The
.B c
function letter means create the archive. The
.B v
function
modifier outputs messages explaining what
.B tar
is doing. The
.B f
function modifier indicates that the tarfile is being specified
(\fB/dev/rmt/0\fR in this example). The dot (\fB\&.\fR) at the end of the
command line indicates the current directory and is the argument of the
.B f
function modifier.

.sp
.LP
Display the table of contents of the tarfile with the following command:

.sp
.in +2
.nf
example% \fBtar tvf /dev/rmt/0\fR
.fi
.in -2
.sp

.sp
.LP
The output is similar to the following for the POSIX locale:

.sp
.in +2
.nf
rw\(mir\(mi\(mir\(mi\(mi   1677/40    2123    Nov  7 18:15 1985    ./test.c
\&.\|.\|.
example%
.fi
.in -2
.sp

.sp
.LP
The columns have the following meanings:

.RS +4
.TP
.ie t \(bu
.el o
column 1 is the access permissions to \fB\&./test.c\fR
.RE
.RS +4
.TP
.ie t \(bu
.el o
column 2 is the \fIuser-id\fR/\fIgroup-id\fR of \fB\&./test.c\fR
.RE
.RS +4
.TP
.ie t \(bu
.el o
column 3 is the size of \fB\&./test.c\fR in bytes
.RE
.RS +4
.TP
.ie t \(bu
.el o
column 4 is the modification date of \fB\&./test.c\fR. When the \fBLC_TIME\fR
category is not set to the POSIX locale, a different format and date order
field can be used.
.RE
.RS +4
.TP
.ie t \(bu
.el o
column 5 is the name of \fB\&./test.c\fR
.RE
.sp
.LP
To extract files from the archive:

.sp
.in +2
.nf
example% \fBtar xvf /dev/rmt/0\fR
\fImessages from\fR tar
example%
.fi
.in -2
.sp

.sp
.LP
If there are multiple archive files on a tape, each is separated from the
following one by an EOF marker. To have
.B tar
read the first and second
archives from a tape with multiple archives on it, the
.I non-rewinding
version of the tape device name must be used with the
.B f
function
modifier, as follows:

.sp
.in +2
.nf
example% \fBtar xvfp /dev/rmt/0n \fIread first archive from tape\fR
\fImessages from\fR tar
example% \fBtar xvfp /dev/rmt/0n \fIread second archive from tape\fR
\fImessages from\fR tar
example%
.fi
.in -2
.sp

.sp
.LP
Notice that in some earlier releases, the above scenario did not work
correctly, and intervention with
.BR mt (1)
between
.B tar
invocations was
necessary. To emulate the old behavior, use the non-rewind device name
containing the letter
.B b
for BSD behavior. See the
.B "Close Operations"
section of the
.BR mtio "(7I) manual page."

.LP
.B Example 2
Archiving files from /usr/include and from /etc to default
tape drive 0
.sp
.LP
To archive files from
.B /usr/include
and from
.B /etc
to default tape
drive
.BR 0 :

.sp
.in +2
.nf
example% \fBtar c -C /usr include -C /etc .\fR
.fi
.in -2
.sp

.sp
.LP
The table of contents from the resulting tarfile would produce output like the
following:

.sp
.in +2
.nf
include/
include/a.out.h
\fIand all the other files in\fR \fB/usr/include .\|.\|.\fR
\&./chown \fIand all the other files in\fR /etc
.fi
.in -2
.sp

.sp
.LP
To extract all files in the
.B include
directory:

.sp
.in +2
.nf
example% \fBtar xv include
x include/, 0 bytes, 0 tape blocks \e
    \fIand all files under\fR include .\|.\|.\fR
.fi
.in -2
.sp

.LP
.B Example 3
Transferring files across the network
.sp
.LP
The following is an example using
.B tar
to transfer files across the
network. First, here is how to archive files from the local machine
.RB ( example )
to a tape on a remote system
.RB ( host ):

.sp
.in +2
.nf
example% \fBtar cvfb \(mi 20 \fIfiles\fR| \e
    rsh \fIhost\fR dd of=/dev/rmt/0 obs=20b\fR
\fImessages from\fR tar
example%
.fi
.in -2
.sp

.sp
.LP
In the example above, we are
.I creating
a
.I tarfile
with the \fBc\fR
key letter, asking for
.I verbose
output from
.B tar
with the
.BR v
function modifier, specifying the name of the output
.I tarfile
using the
.B f
function modifier (the standard output is where the
.I tarfile
appears, as indicated by the `\fB\(mi\fR\&' sign), and specifying the blocksize
.RB ( 20 ") with the " b " function modifier. If you want to change the"
.RB "blocksize, you must change the blocksize arguments both on the" " tar"
command
.I and
on the
.B dd
command.

.LP
.B Example 4
Retrieving files from a tape on the remote system back to the
local system
.sp
.LP
The following is an example that uses
.B tar
to retrieve files from a tape
on the remote system back to the local system:

.sp
.in +2
.nf
example% \fBrsh -n host dd if=/dev/rmt/0 bs=20b | \e
    tar xvBfb \(mi 20 \fIfiles\fR
\fImessages from\fR tar
example%
.fi
.in -2
.sp

.sp
.LP
In the example above, we are
.I extracting
from the
.I tarfile
with the
.B x
key letter, asking for
.I "verbose output"
.I from
.B tar
with the
.B v
function modifier, telling
.B tar
it is reading from a pipe
with the
.B B
function modifier, specifying the name of the input
.I tarfile
using the
.B f
function modifier (the standard input is where
the \fItarfile\fR appears, as indicated by the "\fB\(mi\fR" sign), and
.RB "specifying the blocksize (" 20 ") with the " b " function modifier."

.LP
.B Example 5
Creating an archive of the home directory
.sp
.LP
The following example creates an archive of the home directory on
.B /dev/rmt/0
with an actual blocking factor of
.BR 19 :

.sp
.in +2
.nf
example% \fBtar cvfb /dev/rmt/0 19 $HOME\fR
.fi
.in -2
.sp

.sp
.LP
To recognize this archive's actual blocking factor without using the
.B b
function modifier:

.sp
.in +2
.nf
example% \fBtar tvf /dev/rmt/0\fR
tar: blocksize = 19
\&.\|.\|.
.fi
.in -2
.sp

.sp
.LP
To recognize this archive's actual blocking factor using a larger nominal
blocking factor:

.sp
.in +2
.nf
example% \fBtar tvf /dev/rmt/0 30\fR
tar: blocksize = 19
\&.\|.\|.
.fi
.in -2
.sp

.sp
.LP
Attempt to recognize this archive's actual blocking factor using a nominal
blocking factor that is too small:

.sp
.in +2
.nf
example% \fBtar tvf /dev/rmt/0 10\fR
tar: tape read error
.fi
.in -2
.sp

.SH ENVIRONMENT VARIABLES
.sp
.ne 2
.mk
.na
.B SYSV3
.ad
.sp .6
.RS 4n
This variable is used to override the default behavior of
.BR tar ,
provide
compatibility with INTERACTIVE UNIX Systems and SCO UNIX installation scripts,
and should not be used in new scripts. (It is intended for compatibility
purposes only.) When set, the following function modifiers behave differently:

.sp
.ne 2
.mk
.na
.B F
.I filename
.ad
.sp .6
.RS 4n
Uses
.I filename
to obtain a list of command line switches and files on
which to operate.
.RE

.sp
.ne 2
.mk
.na
.B e
.ad
.sp .6
.RS 4n
Prevents files from being split across volumes. If there is insufficient room
on one volume,
.B tar
prompts for a new volume. If the file does not fit on
the new volume,
.B tar
exits with an error.
.RE

.RE

.sp
.LP
See
.BR environ (5)
for descriptions of the following environment variables
that affect the execution of
.BR tar :
.BR LC_COLLATE ,
.BR LC_CTYPE ,
.BR LC_MESSAGES ,
.BR LC_TIME ,
.BR TZ ,
and
.BR NLSPATH .
.sp
.LP
Affirmative responses are processed using the extended regular expression
defined for the
.B yesexpr
keyword in the
.B LC_MESSAGES
category of the
user's locale. The locale specified in the
.B LC_COLLATE
category defines
the behavior of ranges, equivalence classes, and multi-character collating
elements used in the expression defined for
.BR yesexpr .
The locale specified
in
.B LC_CTYPE
determines the locale for interpretation of sequences of
bytes of text data a characters, the behavior of character classes used in the
expression defined for the
.BR yesexpr .
See
.BR locale (5).
.SH EXIT STATUS
.sp
.LP
The following exit values are returned:
.sp
.ne 2
.mk
.na
.B 0
.ad
.sp .6
.RS 4n
Successful completion.
.RE

.sp
.ne 2
.mk
.na
.B >0
.ad
.sp .6
.RS 4n
An error occurred.
.RE

.SH FILES
.sp
.ne 2
.mk
.na
.B /dev/rmt/[0-7][b][n]
.ad
.sp .6
.RS 4n

.RE

.sp
.ne 2
.mk
.na
.B /dev/rmt/[0-7]l[b][n]
.ad
.sp .6
.RS 4n

.RE

.sp
.ne 2
.mk
.na
.B /dev/rmt/[0-7]m[b][n]
.ad
.sp .6
.RS 4n

.RE

.sp
.ne 2
.mk
.na
.B /dev/rmt/[0-7]h[b][n]
.ad
.sp .6
.RS 4n

.RE

.sp
.ne 2
.mk
.na
.B /dev/rmt/[0-7]u[b][n]
.ad
.sp .6
.RS 4n

.RE

.sp
.ne 2
.mk
.na
.B /dev/rmt/[0-7]c[b][n]
.ad
.sp .6
.RS 4n

.RE

.sp
.ne 2
.mk
.na
.B /etc/default/tar
.ad
.sp .6
.RS 4n
Settings might look like this:
.br
.in +2
.B archive0=/dev/rmt/0
.in -2
.br
.in +2
.B archive1=/dev/rmt/0n
.in -2
.br
.in +2
.B archive2=/dev/rmt/1
.in -2
.br
.in +2
.B archive3=/dev/rmt/1n
.in -2
.br
.in +2
.B archive4=/dev/rmt/0
.in -2
.br
.in +2
.B archive5=/dev/rmt/0n
.in -2
.br
.in +2
.B archive6=/dev/rmt/1
.in -2
.br
.in +2
.B archive7=/dev/rmt/1n
.in -2
.RE

.sp
.ne 2
.mk
.na
.B /tmp/tar*
.ad
.sp .6
.RS 4n

.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
AvailabilitySUNWcsu
_
CSIEnabled
_
Interface StabilityCommitted
.TE

.SH SEE ALSO
.sp
.LP
.BR ar (1),
.BR basename (1),
.BR cd (1),
.BR chown (1),
.BR cpio (1),
.BR csh (1),
.BR dirname (1),
.BR find (1),
.BR ls (1),
.BR mt (1),
.BR pax (1),
.BR setfacl (1),
.BR umask (1),
.BR mknod (1M),
.BR archives.h (3HEAD),
.BR attributes (5),
.BR environ (5),
.BR fsattr (5),
.BR largefile (5),
.BR mtio (7I)
.SH DIAGNOSTICS
.sp
.LP
Diagnostic messages are output for bad key characters and tape read/write
errors, and for insufficient memory to hold the link tables.
.SH NOTES
.sp
.LP
There is no way to access the
.IR n -th
occurrence of a file.
.sp
.LP
Tape errors are handled ungracefully.
.sp
.LP
The
.B tar
archive format allows
.BR UID s
and \fBGID\fRs up to
.B 2097151
to be stored in the archive header. Files with
.BR UID s
and
\fBGID\fRs greater than this value is archived with the
.B UID
and \fBGID\fR
of
.BR 60001 .
.sp
.LP
If an archive is created that contains files whose names were created by
processes running in multiple locales, a single locale that uses a full 8-bit
codeset (for example, the
.B en_US
locale) should be used both to create the
archive and to extract files from the archive.
.sp
.LP
Neither the
.B r
function letter nor the
.B u
function letter can be
used with quarter-inch archive tapes, since these tape drives cannot
backspace.
.sp
.LP
Since \fBtar\fR has no options, the standard "\fB\(mi\(mi\fR" argument that is
normally used in other utilities to terminate recognition of options is not
needed. If used, it is recognized only as the first argument and is ignored.
.sp
.LP
Since \fB\(miC\fR
.I directory file
and \fB\(miI\fR
.I include-file
are multi-argument operands, any of the following methods
can be used to archive or extract a file named \fB\(miC\fR or \fB\(miI\fR:
.RS +4
.TP
1.
Specify them using file operands containing a
.B /
character on the command
line (such as \fB/home/joe/\(miC\fR or \fB\&./\(miI\fR).
.RE
.RS +4
.TP
2.
Include them in an include file with \fB\(miI\fR \fIinclude-file\fR.
.RE
.RS +4
.TP
3.
Specify the directory in which the file resides:
.sp
.in +2
.nf
\fB-C \fIdirectory\fR -C\fR
.fi
.in -2
.sp

or
.sp
.in +2
.nf
\fB-C \fIdirectory\fR -I\fR
.fi
.in -2
.sp

.RE
.RS +4
.TP
4.
Specify the entire directory in which the file resides:
.sp
.in +2
.nf
\fB-C \fIdirectory\fR .\fR
.fi
.in -2
.sp

.RE
