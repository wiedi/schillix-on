'\" te
.\" Copyright 1989 AT&T  Copyright (c) 1997, Sun Microsystems, Inc.  All Rights Reserved
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH newform 1 "21 Jul 1997" "SunOS 5.11" "User Commands"
.SH NAME
newform \- change the format of a text file
.SH SYNOPSIS
.LP
.nf
\fBnewform\fR [\fB-s\fR] [\fB-i\fItabspec\fR] [\fB-o\fItabspec\fR] [\fB-b\fIn\fR] [\fB-e\fIn\fR] [\fB-p\fIn\fR]
     [\fB-a\fIn\fR] [\fB-f\fR] [\fB-c\fIchar\fR] [\fB-l\fIn\fR] [\fIfilename\fR]...
.fi

.SH DESCRIPTION
.sp
.LP
.B newform
reads lines from the named \fIfilename\fRs, or the standard
input if no input file is named, and reproduces the lines on the standard
output. Lines are reformatted in accordance with command line options in
effect.
.sp
.LP
Except for
.BR -s ,
command line options may appear in any order, may be
repeated, and may be intermingled with the optional \fIfilename\fRs. Command
line options are processed in the order specified. This means that option
sequences like ``\fB-e\fR15 \fB-l\fR60'' will yield results different from
``\fB-l\fR60 \fB-e\fR15''. Options are applied to all \fIfilename\fRs on the
command line.
.SH OPTIONS
.sp
.LP
The following options are supported:
.sp
.ne 2
.mk
.na
.B -s
.ad
.RS 14n
.rt
Shears off leading characters on each line up to the first tab and places
up to 8 of the sheared characters at the end of the line. If more than 8
characters (not counting the first tab) are sheared, the eighth character is
replaced by a
.B *
and any characters to the right of it are discarded.
The first tab is always discarded.
.sp
An error message and program exit will occur if this option is used on a
file without a tab on each line. The characters sheared off are saved
internally until all other options specified are applied to that line. The
characters are then added at the end of the processed line.
.sp
For example, to convert a file with leading digits, one or more tabs, and
text on each line, to a file beginning with the text, all tabs after the
first expanded to spaces, padded with spaces out to column 72 (or truncated
to column 72), and the leading digits placed starting at column 73, the
command would be:
.sp
\fBnewform \|\fB-s \|\fB-i \|\fB-l
\|\fB-a \|\fB-e \|\fIfilename\fR
.RE

.sp
.ne 2
.mk
.na
\fB-i\fItabspec\fR
.ad
.RS 14n
.rt
Input tab specification: expands tabs to spaces, according to the tab
specifications given.
.I Tabspec
recognizes all tab specification forms
described in
.BR tabs (1).
In addition,
.I tabspec
may be
.BR - ,
in
which
.B newform
assumes that the tab specification is to be found in the
first line read from the standard input (see
.BR fspec (4)).
If no
.I tabspec
is given,
.I tabspec
defaults to \fB\(mi8\fR\&. A
.I tabspec
of \fB\(mi0\fR expects no tabs; if any are found, they are
treated as \fB\(mi1\fR\&.
.RE

.sp
.ne 2
.mk
.na
\fB-o\fItabspec\fR
.ad
.RS 14n
.rt
Output tab specification: replaces spaces by tabs, according to the tab
specifications given. The tab specifications are the same as for
\fB-i\fItabspec\fR. If no \fItabspec\fR is given, \fItabspec\fR defaults
to \fB\(mi8\fR\&. A \fItabspec\fR of \fB\(mi0\fR means that no spaces will
be converted to tabs on output.
.RE

.sp
.ne 2
.mk
.na
\fB-b\fIn\fR
.ad
.RS 14n
.rt
Truncate
.I n
characters from the beginning of the line when the line
length is greater than the effective line length (see \fB\(mil\fIn\fR).
Default is to truncate the number of characters necessary to obtain the
effective line length. The default value is used when
.B -b
with no
.I n
is used. This option can be used to delete the sequence numbers from
a
.B COBOL
program as follows:
.sp
\fBnewform \|\fB-l1 \|\fB-b7 \|\fIfilename\fR
.RE

.sp
.ne 2
.mk
.na
\fB-e\fIn\fR
.ad
.RS 14n
.rt
Same as \fB-b\fIn\fR except that characters are truncated from the end
of the line.
.RE

.sp
.ne 2
.mk
.na
\fB-p\fIn\fR
.ad
.RS 14n
.rt
Prefix \fIn\fR characters (see \fB-c\fIchar\fR) to the beginning of a
line when the line length is less than the effective line length. Default is
to prefix the number of characters necessary to obtain the effective line
length.
.RE

.sp
.ne 2
.mk
.na
\fB-a\fIn\fR
.ad
.RS 14n
.rt
Same as \fB-p\fIn\fR except characters are appended to the end of a
line.
.RE

.sp
.ne 2
.mk
.na
.B -f
.ad
.RS 14n
.rt
Write the tab specification format line on the standard output before any
other lines are output. The tab specification format line which is printed
will correspond to the format specified in the
.B "last -o"
option.
If no
.B -o
option is specified, the line which is printed will contain
the default specification of \fB\(mi8\fR\&.
.RE

.sp
.ne 2
.mk
.na
\fB-c\fIchar\fR
.ad
.RS 14n
.rt
Change the prefix/append character to
.IR char .
Default character for
.I char
is a space.
.RE

.sp
.ne 2
.mk
.na
\fB-l\fIn\fR
.ad
.RS 14n
.rt
Set the effective line length to
.I n
characters. If
.I n
is not
entered,
.B -l
defaults to 72. The default line length without the
.B -l
option is 80 characters. Note:  Tabs and backspaces are considered
to be one character (use
.B -i
to expand tabs to spaces).
.sp
The \fB\(mil1\fR must be used to set the effective line length shorter than
any existing line in the file so that the
.B -b
option is activated.
.RE

.SH OPERANDS
.sp
.LP
The following operand is supported:
.sp
.ne 2
.mk
.na
.I filename
.ad
.RS 13n
.rt
Input file
.RE

.SH EXIT STATUS
.sp
.LP
The following exit values are returned:
.sp
.ne 2
.mk
.na
.B 0
.ad
.RS 6n
.rt
Successful operation.
.RE

.sp
.ne 2
.mk
.na
.B 1
.ad
.RS 6n
.rt
Operation failed.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
lw(2.75i) lw(2.75i)
lw(2.75i) lw(2.75i)
.
\fBATTRIBUTE TYPE\fR\fBATTRIBUTE VALUE\fR
AvailabilitySUNWesu
.TE

.SH SEE ALSO
.sp
.LP
.BR csplit (1),
.BR tabs (1),
.BR fspec (4),
.BR attributes (5)
.SH DIAGNOSTICS
.sp
.LP
All diagnostics are fatal.
.sp
.ne 2
.mk
.na
.B usage: \|.\|.\|.
.ad
.sp .6
.RS 4n
.B newform
was called with a bad option.
.RE

.sp
.ne 2
.mk
.na
\fB"not \fB-s\fB format"\fR
.ad
.sp .6
.RS 4n
There was no tab on one line.
.RE

.sp
.ne 2
.mk
.na
\fB"can't open file"\fR
.ad
.sp .6
.RS 4n
Self-explanatory.
.RE

.sp
.ne 2
.mk
.na
\fB"internal line too long"\fR
.ad
.sp .6
.RS 4n
A line exceeds 512 characters after being expanded in the internal work
buffer.
.RE

.sp
.ne 2
.mk
.na
\fB"tabspec in error"\fR 
.ad
.sp .6
.RS 4n
A tab specification is incorrectly formatted, or specified tab stops are
not ascending.
.RE

.sp
.ne 2
.mk
.na
\fB"tabspec indirection illegal"\fR 
.ad
.sp .6
.RS 4n
A
.I tabspec
read from a file (or standard input) may not contain a
.I tabspec
referencing another file (or standard input).
.RE

.SH NOTES
.sp
.LP
.B newform
normally only keeps track of physical characters; however,
for the
.B -i
and
.B -o
options,
.B newform
will keep track of
backspaces in order to line up tabs in the appropriate logical columns.
.sp
.LP
.B newform
will not prompt the user if a
.I tabspec
is to be read
from the standard input (by use of
.B -i-
or
.BR -o- ).
.sp
.LP
If the \fB-f\fR option is used, and the last \fB-o\fR option specified was
.BR -o- ,
and was preceded by either a
.B -o-
or
a
.BR -i- ,
the tab specification format line will be
incorrect.
