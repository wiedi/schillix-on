'\" te
.\" Copyright (c) 1998 Sun Microsystems, Inc.  All Rights Reserved
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH td_ta_new 3C_DB "20 Oct 1998" "SunOS 5.11" "Threads Debugging Library Functions"
.SH NAME
td_ta_new, td_ta_delete, td_ta_get_ph \- allocate and deallocate process
handles for libc_db
.SH SYNOPSIS
.LP
.nf
cc [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. -lc_db [ \fIlibrary\fR.\|.\|. ]
#include <proc_service.h>
#include <thread_db.h>

\fBtd_err_e\fR \fBtd_ta_new\fR(\fBconst struct ps_prochandle *\fIph_p\fR, \fBtd_thragent_t **\fIta_pp\fR);
.fi

.LP
.nf
\fBtd_err_e\fR \fBtd_ta_delete\fR(\fBconst td_thragent_t *\fIta_p\fR);
.fi

.LP
.nf
\fBtd_err_e\fR \fBtd_ta_get_ph\fR(\fBconst td_thragent_t *\fIta_p\fR, \fBstruct ps_prochandle **\fIph_pp\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B td_ta_new()
function registers a target process with
.BR libc_db (3LIB)
and allocates an internal process handle of type
\fBtd_thragent_t\fR for this target process.  Subsequent calls to
\fBlibc_db\fR can use this handle to refer to this target process.
.sp
.LP
There are actually two process handles,  an internal process handle
assigned by
.B libc_db
and an external process handle assigned by the
\fBlibc_db\fR client. There is a one-to-one correspondence between the two
handles. When the client calls a
.B libc_db
function, it uses the
internal process handle.  When
.B libc_db
calls one of the
client-provided routines listed in
.BR proc_service (3PROC),
it uses the
external process handle.
.sp
.LP
The
.I ph
argument is the external process handle that
.BR libc_db
should use to identify this target process to the controlling process when
it calls routines in the imported interface.
.sp
.LP
If this call is successful, the value of the newly allocated
\fBtd_thragent_t\fR handle is returned in  *\fIta_pp\fR. The
\fBtd_ta_delete()\fR function deregisters a target process with
.BR libc_db ,
which deallocates its internal process handle and frees any
other resources
.B libc_db
has acquired with respect to the target
process. The
.I ta_p
argument specifies the target process to be
deregistered.
.sp
.LP
The
.B td_ta_get_ph()
function returns in *\fIph_pp\fR the external
process handle that corresponds to the internal process handle
.IR ta_p .
This is useful for checking internal consistency.
.SH RETURN VALUES
.sp
.ne 2
.mk
.na
.B TD_OK
.ad
.RS 18n
.rt
The call completed successfully.
.RE

.sp
.ne 2
.mk
.na
.B TD_BADPH
.ad
.RS 18n
.rt
A
.I NULL
external process handle was passed to
.BR td_ta_new() .
.RE

.sp
.ne 2
.mk
.na
.B TD_ERR
.ad
.RS 18n
.rt
The
.I ta_pp
argument is
.I NULL
or an internal error occurred.
.RE

.sp
.ne 2
.mk
.na
.B TD_DBERR
.ad
.RS 18n
.rt
A call to one of the imported interface routines failed.
.RE

.sp
.ne 2
.mk
.na
.B TD_MALLOC
.ad
.RS 18n
.rt
Memory allocation failure.
.RE

.sp
.ne 2
.mk
.na
.B TD_NOLIBTHREAD
.ad
.RS 18n
.rt
The target process does not appear to be multithreaded.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for description of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
MT-LevelSafe
.TE

.SH SEE ALSO
.sp
.LP
.BR libc_db (3LIB),
.BR proc_service (3PROC),
.BR attributes (5)
