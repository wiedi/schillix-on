'\" te
.\" Copyright (c) 2005, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright (c) 2012-2013, J. Schilling
.\" Copyright (c) 2013, Andreas Roehler
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License ("CDDL"), version 1.0.
.\" You may only use this file in accordance with the terms of version
.\" 1.0 of the CDDL.
.\"
.\" A full copy of the text of the CDDL should have accompanied this
.\" source.  A copy of the CDDL is also available via the Internet at
.\" http://www.opensource.org/licenses/cddl1.txt
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH au_preselect 3BSM "31 Mar 2005" "SunOS 5.11" "Security and Auditing Library Functions"
.SH NAME
au_preselect \- preselect an audit event
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lbsm\fR \fB -lsocket \fR \fB -lnsl \fR  [ \fIlibrary\fR.\|.\|. ]
#include <bsm/libbsm.h>

\fBint\fR \fBau_preselect\fR(\fBau_event_t\fR \fIevent\fR, \fBau_mask_t *\fImask_p\fR, \fBint\fR \fIsorf\fR, \fBint\fR \fIflag\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B au_preselect()
function determines whether the audit event
.I event
is preselected  against the binary preselection mask pointed to
by
.I mask_p
(usually obtained by a call to
.BR getaudit (2)).
The
.B au_preselect()
function looks up the classes associated with
.I event
in
.BR audit_event (4)
and compares them with the classes in
.IR mask_p .
If the classes associated with
.I event
match the classes
in the specified portions of the binary preselection mask  pointed to by
.IR mask_p ,
the event is said to be preselected.
.sp
.LP
The
.I sorf
argument indicates whether the comparison is made with the
success portion, the failure portion, or both portions of the mask pointed
to by
.IR mask_p .
.sp
.LP
The following are the valid values of
.IR sorf :
.sp
.ne 2
.mk
.na
.B AU_PRS_SUCCESS
.ad
.RS 18n
.rt
Compare the event class with the success portion of the preselection
mask.
.RE

.sp
.ne 2
.mk
.na
.B AU_PRS_FAILURE
.ad
.RS 18n
.rt
Compare the event class with the failure portion of the preselection
mask.
.RE

.sp
.ne 2
.mk
.na
.B AU_PRS_BOTH
.ad
.RS 18n
.rt
Compare the event class with both the success and failure portions of the
preselection mask.
.RE

.sp
.LP
The
.I flag
argument tells
.B au_preselect()
how to read the
.BR audit_event (4)
.RB "database. Upon initial invocation," " au_preselect()"
reads the
.BR audit_event (4)
database and allocates space in an internal
cache for each entry with
.BR malloc "(3C). In subsequent invocations, the"
value of
.I flag
determines where
.B au_preselect()
obtains audit
event information. The following are the valid values of
.IR flag :
.sp
.ne 2
.mk
.na
.B AU_PRS_REREAD
.ad
.RS 19n
.rt
Get audit event information by searching the
.BR audit_event (4)
database.
.RE

.sp
.ne 2
.mk
.na
.B AU_PRS_USECACHE
.ad
.RS 19n
.rt
Get audit event information from internal cache created upon the initial
invocation. This option is much faster.
.RE

.SH RETURN VALUES
.sp
.LP
Upon successful completion,\fBau_preselect()\fR returns 0 if
.I event
is
not preselected or 1 if
.I event
is preselected. If
.B au_preselect()
could not allocate memory or could not find
.I event
in the
.BR audit_event (4)
database, \(mi1 is returned.
.SH FILES
.sp
.ne 2
.mk
.na
.B /etc/security/audit_class
.ad
.RS 29n
.rt
file mapping audit class number to audit class names and descriptions
.RE

.sp
.ne 2
.mk
.na
.B /etc/security/audit_event
.ad
.RS 29n
.rt
file mappint audit even number to audit event names and associates
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for a description of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStable
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR bsmconv (1M),
.BR getaudit (2),
.BR au_open (3BSM),
.BR getauclassent (3BSM),
.BR getauevent (3BSM),
.BR malloc (3C),
.BR audit_class (4),
.BR audit_event (4),
.BR attributes (5)
.SH NOTES
.sp
.LP
The
.B au_preselect()
function is normally called prior to constructing
and writing an audit record. If the event is not preselected, the overhead
of constructing and writing the  record can be saved.
.sp
.LP
The functionality described on this manual page is available only if the
Solaris Auditing has been enabled.  See
.BR bsmconv (1M)
for more
information.
