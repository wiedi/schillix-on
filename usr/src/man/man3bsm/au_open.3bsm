'\" te
.\" Copyright (c) 2005, Sun Microsystems, Inc.  All Rights Reserved.
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.TH au_open 3BSM "31 Mar 2005" "SunOS 5.11" "Security and Auditing Library Functions"
.SH NAME
au_open, au_close, au_write \- construct and write audit records
.SH SYNOPSIS
.LP
.nf
\fBcc\fR [ \fIflag\fR.\|.\|. ] \fIfile\fR.\|.\|. \fB-lbsm\fR \fB -lsocket \fR \fB -lnsl \fR  [ \fIlibrary\fR.\|.\|. ]
#include <bsm/libbsm.h>

\fBint\fR \fBau_close\fR(\fBint\fR \fId\fR, \fBint\fR \fIkeep\fR, \fBshort\fR \fIevent\fR);
.fi

.LP
.nf
\fBint\fR \fBau_open\fR(\fIvoid\fR);
.fi

.LP
.nf
\fBint\fR \fBau_write\fR(\fBint\fR \fId\fR, \fBtoken_t *\fIm\fR);
.fi

.SH DESCRIPTION
.sp
.LP
The
.B au_open()
function returns an audit record descriptor to which
audit tokens can be written using
.BR au_write() .
The audit record
descriptor is an integer value that identifies a storage area where audit
records are accumulated.
.sp
.LP
The
.B au_close()
function terminates the life of an audit record
\fId\fR of type \fIevent\fR started by
.BR au_open() .
If the
.IR keep
parameter is
.BR AU_TO_NO_WRITE ,
the data contained therein is discarded.
If the
.I keep
parameter is
.BR AU_TO_WRITE ,
the additional parameters
are used to create a header token.  Depending on the audit policy
information obtained by
.BR auditon (2),
additional tokens such as
\fIsequence\fR and \fItrailer\fR tokens can be added to the record. The
\fBau_close()\fR function then writes the record to the audit trail by
calling
.BR audit (2).
Any memory used is freed by calling
\fBfree\fR(3C).
.sp
.LP
The
.B au_write()
function adds the audit token pointed to by
.I m
to
the audit record identified by the descriptor
.IR d .
After this call is
made the audit token is no longer available to the caller.
.SH RETURN VALUES
.sp
.LP
Upon successful completion,
.B au_open()
returns an audit record
descriptor. If a descriptor could not be allocated,
.B au_open()
returns
\fB\(mi1\fR and sets \fBerrno\fR to indicate the error.
.sp
.LP
Upon successful completion,
.B au_close()
returns
.BR 0 .
If
.IR d
is an invalid or corrupted descriptor or if
.B audit()
fails,
\fBau_close()\fR returns \(mi1 without setting
.BR errno .
If
.BR audit()
fails,
.B errno
is set to one of the error values described on the
.BR audit (2)
manual page.
.sp
.LP
Upon successful completion,
.B au_write()
returns
.BR 0 .
If
.IR d
is an invalid descriptor or
.I m
is an invalid token, or if \fBaudit()\fR
fails,
.B au_write()
returns \(mi1 without setting
.BR errno .
If
\fBaudit()\fR fails, \fBerrno\fR is set to one of the error values described
on the
.BR audit (2)
manual page.
.SH ERRORS
.sp
.LP
The
.B au_open()
function will fail if:
.sp
.ne 2
.mk
.na
.B ENOMEM
.ad
.RS 10n
.rt
The physical limits of the system have been exceeded such that sufficient
memory cannot be allocated.
.RE

.sp
.ne 2
.mk
.na
.B EAGAIN
.ad
.RS 10n
.rt
There is currently insufficient memory available. The application can try
again later.
.RE

.SH ATTRIBUTES
.sp
.LP
See
.BR attributes (5)
for descriptions of the following attributes:
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i)
lw(2.75i) |lw(2.75i)
.
ATTRIBUTE TYPEATTRIBUTE VALUE
_
Interface StabilityStable
_
MT-LevelMT-Safe
.TE

.SH SEE ALSO
.sp
.LP
.BR bsmconv (1M),
.BR audit (2),
.BR auditon (2),
.BR au_preselect (3BSM),
.BR au_to (3BSM),
\fBfree\fR(3C),
.BR attributes (5)
.SH NOTES
.sp
.LP
The functionality described on this manual page is available only if the
Solaris Auditing has been enabled.  See \fBbsmconv\fR(1M) for more
information.
